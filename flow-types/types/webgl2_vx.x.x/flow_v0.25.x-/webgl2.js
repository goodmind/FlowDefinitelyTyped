declare module "webgl2" {
  declare type HTMLCanvasElement = {
    getContext(
      contextId: "webgl2" | "experimental-webgl2",
      contextAttributes?: WebGLContextAttributes
    ): WebGL2RenderingContext | null
  } & HTMLElement;

  declare interface ImageBitmap {
    +width: number;
    +height: number;
    close(): void;
  }
  declare type WebGL2RenderingContext = {
    +READ_BUFFER: number,
    +UNPACK_ROW_LENGTH: number,
    +UNPACK_SKIP_ROWS: number,
    +UNPACK_SKIP_PIXELS: number,
    +PACK_ROW_LENGTH: number,
    +PACK_SKIP_ROWS: number,
    +PACK_SKIP_PIXELS: number,
    +COLOR: number,
    +DEPTH: number,
    +STENCIL: number,
    +RED: number,
    +RGB8: number,
    +RGBA8: number,
    +RGB10_A2: number,
    +TEXTURE_BINDING_3D: number,
    +UNPACK_SKIP_IMAGES: number,
    +UNPACK_IMAGE_HEIGHT: number,
    +TEXTURE_3D: number,
    +TEXTURE_WRAP_R: number,
    +MAX_3D_TEXTURE_SIZE: number,
    +UNSIGNED_INT_2_10_10_10_REV: number,
    +MAX_ELEMENTS_VERTICES: number,
    +MAX_ELEMENTS_INDICES: number,
    +TEXTURE_MIN_LOD: number,
    +TEXTURE_MAX_LOD: number,
    +TEXTURE_BASE_LEVEL: number,
    +TEXTURE_MAX_LEVEL: number,
    +MIN: number,
    +MAX: number,
    +DEPTH_COMPONENT24: number,
    +MAX_TEXTURE_LOD_BIAS: number,
    +TEXTURE_COMPARE_MODE: number,
    +TEXTURE_COMPARE_FUNC: number,
    +CURRENT_QUERY: number,
    +QUERY_RESULT: number,
    +QUERY_RESULT_AVAILABLE: number,
    +STREAM_READ: number,
    +STREAM_COPY: number,
    +STATIC_READ: number,
    +STATIC_COPY: number,
    +DYNAMIC_READ: number,
    +DYNAMIC_COPY: number,
    +MAX_DRAW_BUFFERS: number,
    +DRAW_BUFFER0: number,
    +DRAW_BUFFER1: number,
    +DRAW_BUFFER2: number,
    +DRAW_BUFFER3: number,
    +DRAW_BUFFER4: number,
    +DRAW_BUFFER5: number,
    +DRAW_BUFFER6: number,
    +DRAW_BUFFER7: number,
    +DRAW_BUFFER8: number,
    +DRAW_BUFFER9: number,
    +DRAW_BUFFER10: number,
    +DRAW_BUFFER11: number,
    +DRAW_BUFFER12: number,
    +DRAW_BUFFER13: number,
    +DRAW_BUFFER14: number,
    +DRAW_BUFFER15: number,
    +MAX_FRAGMENT_UNIFORM_COMPONENTS: number,
    +MAX_VERTEX_UNIFORM_COMPONENTS: number,
    +SAMPLER_3D: number,
    +SAMPLER_2D_SHADOW: number,
    +FRAGMENT_SHADER_DERIVATIVE_HINT: number,
    +PIXEL_PACK_BUFFER: number,
    +PIXEL_UNPACK_BUFFER: number,
    +PIXEL_PACK_BUFFER_BINDING: number,
    +PIXEL_UNPACK_BUFFER_BINDING: number,
    +FLOAT_MAT2x3: number,
    +FLOAT_MAT2x4: number,
    +FLOAT_MAT3x2: number,
    +FLOAT_MAT3x4: number,
    +FLOAT_MAT4x2: number,
    +FLOAT_MAT4x3: number,
    +SRGB: number,
    +SRGB8: number,
    +SRGB8_ALPHA8: number,
    +COMPARE_REF_TO_TEXTURE: number,
    +RGBA32F: number,
    +RGB32F: number,
    +RGBA16F: number,
    +RGB16F: number,
    +VERTEX_ATTRIB_ARRAY_INTEGER: number,
    +MAX_ARRAY_TEXTURE_LAYERS: number,
    +MIN_PROGRAM_TEXEL_OFFSET: number,
    +MAX_PROGRAM_TEXEL_OFFSET: number,
    +MAX_VARYING_COMPONENTS: number,
    +TEXTURE_2D_ARRAY: number,
    +TEXTURE_BINDING_2D_ARRAY: number,
    +R11F_G11F_B10F: number,
    +UNSIGNED_INT_10F_11F_11F_REV: number,
    +RGB9_E5: number,
    +UNSIGNED_INT_5_9_9_9_REV: number,
    +TRANSFORM_FEEDBACK_BUFFER_MODE: number,
    +MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: number,
    +TRANSFORM_FEEDBACK_VARYINGS: number,
    +TRANSFORM_FEEDBACK_BUFFER_START: number,
    +TRANSFORM_FEEDBACK_BUFFER_SIZE: number,
    +TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: number,
    +RASTERIZER_DISCARD: number,
    +MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: number,
    +MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: number,
    +INTERLEAVED_ATTRIBS: number,
    +SEPARATE_ATTRIBS: number,
    +TRANSFORM_FEEDBACK_BUFFER: number,
    +TRANSFORM_FEEDBACK_BUFFER_BINDING: number,
    +RGBA32UI: number,
    +RGB32UI: number,
    +RGBA16UI: number,
    +RGB16UI: number,
    +RGBA8UI: number,
    +RGB8UI: number,
    +RGBA32I: number,
    +RGB32I: number,
    +RGBA16I: number,
    +RGB16I: number,
    +RGBA8I: number,
    +RGB8I: number,
    +RED_INTEGER: number,
    +RGB_INTEGER: number,
    +RGBA_INTEGER: number,
    +SAMPLER_2D_ARRAY: number,
    +SAMPLER_2D_ARRAY_SHADOW: number,
    +SAMPLER_CUBE_SHADOW: number,
    +UNSIGNED_INT_VEC2: number,
    +UNSIGNED_INT_VEC3: number,
    +UNSIGNED_INT_VEC4: number,
    +INT_SAMPLER_2D: number,
    +INT_SAMPLER_3D: number,
    +INT_SAMPLER_CUBE: number,
    +INT_SAMPLER_2D_ARRAY: number,
    +UNSIGNED_INT_SAMPLER_2D: number,
    +UNSIGNED_INT_SAMPLER_3D: number,
    +UNSIGNED_INT_SAMPLER_CUBE: number,
    +UNSIGNED_INT_SAMPLER_2D_ARRAY: number,
    +DEPTH_COMPONENT32F: number,
    +DEPTH32F_STENCIL8: number,
    +FLOAT_32_UNSIGNED_INT_24_8_REV: number,
    +FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: number,
    +FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: number,
    +FRAMEBUFFER_ATTACHMENT_RED_SIZE: number,
    +FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: number,
    +FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: number,
    +FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: number,
    +FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: number,
    +FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: number,
    +FRAMEBUFFER_DEFAULT: number,
    +UNSIGNED_INT_24_8: number,
    +DEPTH24_STENCIL8: number,
    +UNSIGNED_NORMALIZED: number,
    +DRAW_FRAMEBUFFER_BINDING: number,
    +READ_FRAMEBUFFER: number,
    +DRAW_FRAMEBUFFER: number,
    +READ_FRAMEBUFFER_BINDING: number,
    +RENDERBUFFER_SAMPLES: number,
    +FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: number,
    +MAX_COLOR_ATTACHMENTS: number,
    +COLOR_ATTACHMENT1: number,
    +COLOR_ATTACHMENT2: number,
    +COLOR_ATTACHMENT3: number,
    +COLOR_ATTACHMENT4: number,
    +COLOR_ATTACHMENT5: number,
    +COLOR_ATTACHMENT6: number,
    +COLOR_ATTACHMENT7: number,
    +COLOR_ATTACHMENT8: number,
    +COLOR_ATTACHMENT9: number,
    +COLOR_ATTACHMENT10: number,
    +COLOR_ATTACHMENT11: number,
    +COLOR_ATTACHMENT12: number,
    +COLOR_ATTACHMENT13: number,
    +COLOR_ATTACHMENT14: number,
    +COLOR_ATTACHMENT15: number,
    +FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: number,
    +MAX_SAMPLES: number,
    +HALF_FLOAT: number,
    +RG: number,
    +RG_INTEGER: number,
    +R8: number,
    +RG8: number,
    +R16F: number,
    +R32F: number,
    +RG16F: number,
    +RG32F: number,
    +R8I: number,
    +R8UI: number,
    +R16I: number,
    +R16UI: number,
    +R32I: number,
    +R32UI: number,
    +RG8I: number,
    +RG8UI: number,
    +RG16I: number,
    +RG16UI: number,
    +RG32I: number,
    +RG32UI: number,
    +VERTEX_ARRAY_BINDING: number,
    +R8_SNORM: number,
    +RG8_SNORM: number,
    +RGB8_SNORM: number,
    +RGBA8_SNORM: number,
    +SIGNED_NORMALIZED: number,
    +COPY_READ_BUFFER: number,
    +COPY_WRITE_BUFFER: number,
    +COPY_READ_BUFFER_BINDING: number,
    +COPY_WRITE_BUFFER_BINDING: number,
    +UNIFORM_BUFFER: number,
    +UNIFORM_BUFFER_BINDING: number,
    +UNIFORM_BUFFER_START: number,
    +UNIFORM_BUFFER_SIZE: number,
    +MAX_VERTEX_UNIFORM_BLOCKS: number,
    +MAX_FRAGMENT_UNIFORM_BLOCKS: number,
    +MAX_COMBINED_UNIFORM_BLOCKS: number,
    +MAX_UNIFORM_BUFFER_BINDINGS: number,
    +MAX_UNIFORM_BLOCK_SIZE: number,
    +MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: number,
    +MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: number,
    +UNIFORM_BUFFER_OFFSET_ALIGNMENT: number,
    +ACTIVE_UNIFORM_BLOCKS: number,
    +UNIFORM_TYPE: number,
    +UNIFORM_SIZE: number,
    +UNIFORM_BLOCK_INDEX: number,
    +UNIFORM_OFFSET: number,
    +UNIFORM_ARRAY_STRIDE: number,
    +UNIFORM_MATRIX_STRIDE: number,
    +UNIFORM_IS_ROW_MAJOR: number,
    +UNIFORM_BLOCK_BINDING: number,
    +UNIFORM_BLOCK_DATA_SIZE: number,
    +UNIFORM_BLOCK_ACTIVE_UNIFORMS: number,
    +UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: number,
    +UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: number,
    +UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: number,
    +INVALID_INDEX: number,
    +MAX_VERTEX_OUTPUT_COMPONENTS: number,
    +MAX_FRAGMENT_INPUT_COMPONENTS: number,
    +MAX_SERVER_WAIT_TIMEOUT: number,
    +OBJECT_TYPE: number,
    +SYNC_CONDITION: number,
    +SYNC_STATUS: number,
    +SYNC_FLAGS: number,
    +SYNC_FENCE: number,
    +SYNC_GPU_COMMANDS_COMPLETE: number,
    +UNSIGNALED: number,
    +SIGNALED: number,
    +ALREADY_SIGNALED: number,
    +TIMEOUT_EXPIRED: number,
    +CONDITION_SATISFIED: number,
    +WAIT_FAILED: number,
    +SYNC_FLUSH_COMMANDS_BIT: number,
    +VERTEX_ATTRIB_ARRAY_DIVISOR: number,
    +ANY_SAMPLES_PASSED: number,
    +ANY_SAMPLES_PASSED_CONSERVATIVE: number,
    +SAMPLER_BINDING: number,
    +RGB10_A2UI: number,
    +INT_2_10_10_10_REV: number,
    +TRANSFORM_FEEDBACK: number,
    +TRANSFORM_FEEDBACK_PAUSED: number,
    +TRANSFORM_FEEDBACK_ACTIVE: number,
    +TRANSFORM_FEEDBACK_BINDING: number,
    +TEXTURE_IMMUTABLE_FORMAT: number,
    +MAX_ELEMENT_INDEX: number,
    +TEXTURE_IMMUTABLE_LEVELS: number,
    +TIMEOUT_IGNORED: number,
    +MAX_CLIENT_WAIT_TIMEOUT_WEBGL: number,
    bufferData(
      target: number,
      sizeOrData:
        | number
        | Int8Array
        | Int16Array
        | Int32Array
        | Uint8Array
        | Uint16Array
        | Uint32Array
        | Uint8ClampedArray
        | Float32Array
        | Float64Array
        | DataView
        | ArrayBuffer
        | null,
      usage: number
    ): void,
    bufferSubData(
      target: number,
      dstByteOffset: number,
      srcData:
        | Int8Array
        | Int16Array
        | Int32Array
        | Uint8Array
        | Uint16Array
        | Uint32Array
        | Uint8ClampedArray
        | Float32Array
        | Float64Array
        | DataView
        | ArrayBuffer
        | null
    ): void,
    bufferData(target: number, data: ArrayBufferView, usage: number): void,
    bufferSubData(
      target: number,
      dstByteOffset: number,
      srcData: ArrayBufferView
    ): void,
    bufferData(
      target: number,
      srcData:
        | Int8Array
        | Int16Array
        | Int32Array
        | Uint8Array
        | Uint16Array
        | Uint32Array
        | Uint8ClampedArray
        | Float32Array
        | Float64Array
        | DataView
        | ArrayBuffer
        | null,
      usage: number,
      srcOffset: number,
      length?: number
    ): void,
    bufferSubData(
      target: number,
      dstByteOffset: number,
      srcData: ArrayBufferView,
      srcOffset: number,
      length?: number
    ): void,
    copyBufferSubData(
      readTarget: number,
      writeTarget: number,
      readOffset: number,
      writeOffset: number,
      size: number
    ): void,
    getBufferSubData(
      target: number,
      srcByteOffset: number,
      dstBuffer: ArrayBufferView,
      dstOffset?: number,
      length?: number
    ): void,
    blitFramebuffer(
      srcX0: number,
      srcY0: number,
      srcX1: number,
      srcY1: number,
      dstX0: number,
      dstY0: number,
      dstX1: number,
      dstY1: number,
      mask: number,
      filter: number
    ): void,
    framebufferTextureLayer(
      target: number,
      attachment: number,
      texture: WebGLTexture | null,
      level: number,
      layer: number
    ): void,
    invalidateFramebuffer(target: number, attachments: number[]): void,
    invalidateSubFramebuffer(
      target: number,
      attachments: number[],
      x: number,
      y: number,
      width: number,
      height: number
    ): void,
    readBuffer(src: number): void,
    getInternalformatParameter(
      target: number,
      internalformat: number,
      pname: number
    ): any,
    renderbufferStorageMultisample(
      target: number,
      samples: number,
      internalformat: number,
      width: number,
      height: number
    ): void,
    texStorage2D(
      target: number,
      levels: number,
      internalformat: number,
      width: number,
      height: number
    ): void,
    texStorage3D(
      target: number,
      levels: number,
      internalformat: number,
      width: number,
      height: number,
      depth: number
    ): void,
    texImage2D(
      target: number,
      level: number,
      internalformat: number,
      width: number,
      height: number,
      border: number,
      format: number,
      type: number,
      pixels?: ArrayBufferView | null
    ): void,
    texImage2D(
      target: number,
      level: number,
      internalformat: number,
      format: number,
      type: number,
      source:
        | ImageData
        | HTMLImageElement
        | HTMLCanvasElement
        | HTMLVideoElement
    ): void,
    texImage2D(
      target: number,
      level: number,
      internalformat: number,
      format: number,
      type: number,
      source:
        | ImageBitmap
        | ImageData
        | HTMLImageElement
        | HTMLCanvasElement
        | HTMLVideoElement
    ): void,
    texSubImage2D(
      target: number,
      level: number,
      xoffset: number,
      yoffset: number,
      width: number,
      height: number,
      format: number,
      type: number,
      pixels?: ArrayBufferView | null
    ): void,
    texSubImage2D(
      target: number,
      level: number,
      xoffset: number,
      yoffset: number,
      format: number,
      type: number,
      source:
        | ImageData
        | HTMLImageElement
        | HTMLCanvasElement
        | HTMLVideoElement
    ): void,
    texSubImage2D(
      target: number,
      level: number,
      xoffset: number,
      yoffset: number,
      format: number,
      type: number,
      source:
        | ImageBitmap
        | ImageData
        | HTMLImageElement
        | HTMLCanvasElement
        | HTMLVideoElement
    ): void,
    texImage2D(
      target: number,
      level: number,
      internalformat: number,
      width: number,
      height: number,
      border: number,
      format: number,
      type: number,
      pboOffset: number
    ): void,
    texImage2D(
      target: number,
      level: number,
      internalformat: number,
      width: number,
      height: number,
      border: number,
      format: number,
      type: number,
      source:
        | ImageBitmap
        | ImageData
        | HTMLImageElement
        | HTMLCanvasElement
        | HTMLVideoElement
    ): void,
    texImage2D(
      target: number,
      level: number,
      internalformat: number,
      width: number,
      height: number,
      border: number,
      format: number,
      type: number,
      srcData: ArrayBufferView,
      srcOffset: number
    ): void,
    texImage3D(
      target: number,
      level: number,
      internalformat: number,
      width: number,
      height: number,
      depth: number,
      border: number,
      format: number,
      type: number,
      pboOffset: number
    ): void,
    texImage3D(
      target: number,
      level: number,
      internalformat: number,
      width: number,
      height: number,
      depth: number,
      border: number,
      format: number,
      type: number,
      source:
        | ImageBitmap
        | ImageData
        | HTMLImageElement
        | HTMLCanvasElement
        | HTMLVideoElement
    ): void,
    texImage3D(
      target: number,
      level: number,
      internalformat: number,
      width: number,
      height: number,
      depth: number,
      border: number,
      format: number,
      type: number,
      srcData: ArrayBufferView | null
    ): void,
    texImage3D(
      target: number,
      level: number,
      internalformat: number,
      width: number,
      height: number,
      depth: number,
      border: number,
      format: number,
      type: number,
      srcData: ArrayBufferView,
      srcOffset: number
    ): void,
    texSubImage2D(
      target: number,
      level: number,
      xoffset: number,
      yoffset: number,
      width: number,
      height: number,
      format: number,
      type: number,
      pboOffset: number
    ): void,
    texSubImage2D(
      target: number,
      level: number,
      xoffset: number,
      yoffset: number,
      width: number,
      height: number,
      format: number,
      type: number,
      source:
        | ImageBitmap
        | ImageData
        | HTMLImageElement
        | HTMLCanvasElement
        | HTMLVideoElement
    ): void,
    texSubImage2D(
      target: number,
      level: number,
      xoffset: number,
      yoffset: number,
      width: number,
      height: number,
      format: number,
      type: number,
      srcData: ArrayBufferView,
      srcOffset: number
    ): void,
    texSubImage3D(
      target: number,
      level: number,
      xoffset: number,
      yoffset: number,
      zoffset: number,
      width: number,
      height: number,
      depth: number,
      format: number,
      type: number,
      pboOffset: number
    ): void,
    texSubImage3D(
      target: number,
      level: number,
      xoffset: number,
      yoffset: number,
      zoffset: number,
      width: number,
      height: number,
      depth: number,
      format: number,
      type: number,
      source:
        | ImageBitmap
        | ImageData
        | HTMLImageElement
        | HTMLCanvasElement
        | HTMLVideoElement
    ): void,
    texSubImage3D(
      target: number,
      level: number,
      xoffset: number,
      yoffset: number,
      zoffset: number,
      width: number,
      height: number,
      depth: number,
      format: number,
      type: number,
      srcData: ArrayBufferView | null,
      srcOffset?: number
    ): void,
    copyTexSubImage3D(
      target: number,
      level: number,
      xoffset: number,
      yoffset: number,
      zoffset: number,
      x: number,
      y: number,
      width: number,
      height: number
    ): void,
    compressedTexImage2D(
      target: number,
      level: number,
      internalformat: number,
      width: number,
      height: number,
      border: number,
      imageSize: number,
      offset: number
    ): void,
    compressedTexImage2D(
      target: number,
      level: number,
      internalformat: number,
      width: number,
      height: number,
      border: number,
      srcData:
        | Int8Array
        | Int16Array
        | Int32Array
        | Uint8Array
        | Uint16Array
        | Uint32Array
        | Uint8ClampedArray
        | Float32Array
        | Float64Array
        | DataView
        | null,
      srcOffset?: number,
      srcLengthOverride?: number
    ): void,
    compressedTexImage2D(
      target: number,
      level: number,
      internalformat: number,
      width: number,
      height: number,
      border: number,
      srcData: ArrayBufferView,
      srcOffset?: number,
      srcLengthOverride?: number
    ): void,
    compressedTexImage3D(
      target: number,
      level: number,
      internalformat: number,
      width: number,
      height: number,
      depth: number,
      border: number,
      imageSize: number,
      offset: number
    ): void,
    compressedTexImage3D(
      target: number,
      level: number,
      internalformat: number,
      width: number,
      height: number,
      depth: number,
      border: number,
      srcData: ArrayBufferView,
      srcOffset?: number,
      srcLengthOverride?: number
    ): void,
    compressedTexSubImage2D(
      target: number,
      level: number,
      xoffset: number,
      yoffset: number,
      width: number,
      height: number,
      format: number,
      imageSize: number,
      offset: number
    ): void,
    compressedTexSubImage2D(
      target: number,
      level: number,
      xoffset: number,
      yoffset: number,
      width: number,
      height: number,
      format: number,
      srcData:
        | Int8Array
        | Int16Array
        | Int32Array
        | Uint8Array
        | Uint16Array
        | Uint32Array
        | Uint8ClampedArray
        | Float32Array
        | Float64Array
        | DataView
        | null,
      srcOffset?: number,
      srcLengthOverride?: number
    ): void,
    compressedTexSubImage2D(
      target: number,
      level: number,
      xoffset: number,
      yoffset: number,
      width: number,
      height: number,
      format: number,
      srcData: ArrayBufferView | null,
      srcOffset?: number,
      srcLengthOverride?: number
    ): void,
    compressedTexSubImage3D(
      target: number,
      level: number,
      xoffset: number,
      yoffset: number,
      zoffset: number,
      width: number,
      height: number,
      depth: number,
      format: number,
      imageSize: number,
      offset: number
    ): void,
    compressedTexSubImage3D(
      target: number,
      level: number,
      xoffset: number,
      yoffset: number,
      zoffset: number,
      width: number,
      height: number,
      depth: number,
      format: number,
      srcData: ArrayBufferView,
      srcOffset?: number,
      srcLengthOverride?: number
    ): void,
    getFragDataLocation(program: WebGLProgram, name: string): number,
    uniform1ui(location: WebGLUniformLocation | null, v0: number): void,
    uniform2ui(
      location: WebGLUniformLocation | null,
      v0: number,
      v1: number
    ): void,
    uniform3ui(
      location: WebGLUniformLocation | null,
      v0: number,
      v1: number,
      v2: number
    ): void,
    uniform4ui(
      location: WebGLUniformLocation | null,
      v0: number,
      v1: number,
      v2: number,
      v3: number
    ): void,
    uniform1fv(
      location: WebGLUniformLocation | null,
      data: Float32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniform2fv(
      location: WebGLUniformLocation | null,
      data: Float32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniform3fv(
      location: WebGLUniformLocation | null,
      data: Float32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniform4fv(
      location: WebGLUniformLocation | null,
      data: Float32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniform1iv(
      location: WebGLUniformLocation | null,
      data: Int32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniform2iv(
      location: WebGLUniformLocation | null,
      data: Int32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniform3iv(
      location: WebGLUniformLocation | null,
      data: Int32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniform4iv(
      location: WebGLUniformLocation | null,
      data: Int32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniform1uiv(
      location: WebGLUniformLocation | null,
      data: Uint32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniform2uiv(
      location: WebGLUniformLocation | null,
      data: Uint32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniform3uiv(
      location: WebGLUniformLocation | null,
      data: Uint32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniform4uiv(
      location: WebGLUniformLocation | null,
      data: Uint32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniformMatrix2fv(
      location: WebGLUniformLocation | null,
      transpose: boolean,
      data: Float32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniformMatrix3x2fv(
      location: WebGLUniformLocation | null,
      transpose: boolean,
      data: Float32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniformMatrix4x2fv(
      location: WebGLUniformLocation | null,
      transpose: boolean,
      data: Float32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniformMatrix2x3fv(
      location: WebGLUniformLocation | null,
      transpose: boolean,
      data: Float32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniformMatrix3fv(
      location: WebGLUniformLocation | null,
      transpose: boolean,
      data: Float32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniformMatrix4x3fv(
      location: WebGLUniformLocation | null,
      transpose: boolean,
      data: Float32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniformMatrix2x4fv(
      location: WebGLUniformLocation | null,
      transpose: boolean,
      data: Float32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniformMatrix3x4fv(
      location: WebGLUniformLocation | null,
      transpose: boolean,
      data: Float32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    uniformMatrix4fv(
      location: WebGLUniformLocation | null,
      transpose: boolean,
      data: Float32Array | ArrayLike<number>,
      srcOffset?: number,
      srcLength?: number
    ): void,
    vertexAttribI4i(
      index: number,
      x: number,
      y: number,
      z: number,
      w: number
    ): void,
    vertexAttribI4iv(
      index: number,
      values: Int32Array | ArrayLike<number>
    ): void,
    vertexAttribI4ui(
      index: number,
      x: number,
      y: number,
      z: number,
      w: number
    ): void,
    vertexAttribI4uiv(
      index: number,
      values: Uint32Array | ArrayLike<number>
    ): void,
    vertexAttribIPointer(
      index: number,
      size: number,
      type: number,
      stride: number,
      offset: number
    ): void,
    vertexAttribDivisor(index: number, divisor: number): void,
    drawArraysInstanced(
      mode: number,
      first: number,
      count: number,
      instanceCount: number
    ): void,
    drawElementsInstanced(
      mode: number,
      count: number,
      type: number,
      offset: number,
      instanceCount: number
    ): void,
    drawRangeElements(
      mode: number,
      start: number,
      end: number,
      count: number,
      type: number,
      offset: number
    ): void,
    readPixels(
      x: number,
      y: number,
      width: number,
      height: number,
      format: number,
      type: number,
      dstData:
        | Int8Array
        | Int16Array
        | Int32Array
        | Uint8Array
        | Uint16Array
        | Uint32Array
        | Uint8ClampedArray
        | Float32Array
        | Float64Array
        | DataView
        | null
    ): void,
    readPixels(
      x: number,
      y: number,
      width: number,
      height: number,
      format: number,
      type: number,
      dstData: ArrayBufferView | null
    ): void,
    readPixels(
      x: number,
      y: number,
      width: number,
      height: number,
      format: number,
      type: number,
      offset: number
    ): void,
    readPixels(
      x: number,
      y: number,
      width: number,
      height: number,
      format: number,
      type: number,
      dstData: ArrayBufferView,
      dstOffset: number
    ): void,
    drawBuffers(buffers: number[]): void,
    clearBufferfv(
      buffer: number,
      drawbuffer: number,
      values: Float32Array | ArrayLike<number>,
      srcOffset?: number
    ): void,
    clearBufferiv(
      buffer: number,
      drawbuffer: number,
      values: Int32Array | ArrayLike<number>,
      srcOffset?: number
    ): void,
    clearBufferuiv(
      buffer: number,
      drawbuffer: number,
      values: Uint32Array | ArrayLike<number>,
      srcOffset?: number
    ): void,
    clearBufferfi(
      buffer: number,
      drawbuffer: number,
      depth: number,
      stencil: number
    ): void,
    createQuery(): WebGLQuery | null,
    deleteQuery(query: WebGLQuery | null): void,
    isQuery(query: WebGLQuery | null): boolean,
    beginQuery(target: number, query: WebGLQuery): void,
    endQuery(target: number): void,
    getQuery(target: number, pname: number): WebGLQuery | null,
    getQueryParameter(query: WebGLQuery, pname: number): any,
    createSampler(): WebGLSampler | null,
    deleteSampler(sampler: WebGLSampler | null): void,
    isSampler(sampler: WebGLSampler | null): boolean,
    bindSampler(unit: number, sampler: WebGLSampler | null): void,
    samplerParameteri(
      sampler: WebGLSampler,
      pname: number,
      param: number
    ): void,
    samplerParameterf(
      sampler: WebGLSampler,
      pname: number,
      param: number
    ): void,
    getSamplerParameter(sampler: WebGLSampler, pname: number): any,
    fenceSync(condition: number, flags: number): WebGLSync | null,
    isSync(sync: WebGLSync | null): boolean,
    deleteSync(sync: WebGLSync | null): void,
    clientWaitSync(sync: WebGLSync, flags: number, timeout: number): number,
    waitSync(sync: WebGLSync, flags: number, timeout: number): void,
    getSyncParameter(sync: WebGLSync, pname: number): any,
    createTransformFeedback(): WebGLTransformFeedback | null,
    deleteTransformFeedback(tf: WebGLTransformFeedback | null): void,
    isTransformFeedback(tf: WebGLTransformFeedback | null): boolean,
    bindTransformFeedback(
      target: number,
      tf: WebGLTransformFeedback | null
    ): void,
    beginTransformFeedback(primitiveMode: number): void,
    endTransformFeedback(): void,
    transformFeedbackVaryings(
      program: WebGLProgram,
      varyings: string[],
      bufferMode: number
    ): void,
    getTransformFeedbackVarying(
      program: WebGLProgram,
      index: number
    ): WebGLActiveInfo | null,
    pauseTransformFeedback(): void,
    resumeTransformFeedback(): void,
    bindBufferBase(
      target: number,
      index: number,
      buffer: WebGLBuffer | null
    ): void,
    bindBufferRange(
      target: number,
      index: number,
      buffer: WebGLBuffer | null,
      offset: number,
      size: number
    ): void,
    getIndexedParameter(target: number, index: number): any,
    getUniformIndices(
      program: WebGLProgram,
      uniformNames: string[]
    ): number[] | null,
    getActiveUniforms(
      program: WebGLProgram,
      uniformIndices: number[],
      pname: number
    ): any,
    getUniformBlockIndex(
      program: WebGLProgram,
      uniformBlockName: string
    ): number,
    getActiveUniformBlockParameter(
      program: WebGLProgram,
      uniformBlockIndex: number,
      pname: number
    ): any,
    getActiveUniformBlockName(
      program: WebGLProgram,
      uniformBlockIndex: number
    ): string | null,
    uniformBlockBinding(
      program: WebGLProgram,
      uniformBlockIndex: number,
      uniformBlockBinding: number
    ): void,
    createVertexArray(): WebGLVertexArrayObject | null,
    deleteVertexArray(vertexArray: WebGLVertexArrayObject | null): void,
    isVertexArray(vertexArray: WebGLVertexArrayObject | null): boolean,
    bindVertexArray(array: WebGLVertexArrayObject | null): void
  } & WebGLRenderingContext;

  declare var WebGL2RenderingContext: {
    prototype: WebGL2RenderingContext,
    new(): WebGL2RenderingContext,
    +ACTIVE_ATTRIBUTES: number,
    +ACTIVE_TEXTURE: number,
    +ACTIVE_UNIFORMS: number,
    +ALIASED_LINE_WIDTH_RANGE: number,
    +ALIASED_POINT_SIZE_RANGE: number,
    +ALPHA: number,
    +ALPHA_BITS: number,
    +ALWAYS: number,
    +ARRAY_BUFFER: number,
    +ARRAY_BUFFER_BINDING: number,
    +ATTACHED_SHADERS: number,
    +BACK: number,
    +BLEND: number,
    +BLEND_COLOR: number,
    +BLEND_DST_ALPHA: number,
    +BLEND_DST_RGB: number,
    +BLEND_EQUATION: number,
    +BLEND_EQUATION_ALPHA: number,
    +BLEND_EQUATION_RGB: number,
    +BLEND_SRC_ALPHA: number,
    +BLEND_SRC_RGB: number,
    +BLUE_BITS: number,
    +BOOL: number,
    +BOOL_VEC2: number,
    +BOOL_VEC3: number,
    +BOOL_VEC4: number,
    +BROWSER_DEFAULT_WEBGL: number,
    +BUFFER_SIZE: number,
    +BUFFER_USAGE: number,
    +BYTE: number,
    +CCW: number,
    +CLAMP_TO_EDGE: number,
    +COLOR_ATTACHMENT0: number,
    +COLOR_BUFFER_BIT: number,
    +COLOR_CLEAR_VALUE: number,
    +COLOR_WRITEMASK: number,
    +COMPILE_STATUS: number,
    +COMPRESSED_TEXTURE_FORMATS: number,
    +CONSTANT_ALPHA: number,
    +CONSTANT_COLOR: number,
    +CONTEXT_LOST_WEBGL: number,
    +CULL_FACE: number,
    +CULL_FACE_MODE: number,
    +CURRENT_PROGRAM: number,
    +CURRENT_VERTEX_ATTRIB: number,
    +CW: number,
    +DECR: number,
    +DECR_WRAP: number,
    +DELETE_STATUS: number,
    +DEPTH_ATTACHMENT: number,
    +DEPTH_BITS: number,
    +DEPTH_BUFFER_BIT: number,
    +DEPTH_CLEAR_VALUE: number,
    +DEPTH_COMPONENT: number,
    +DEPTH_COMPONENT16: number,
    +DEPTH_FUNC: number,
    +DEPTH_RANGE: number,
    +DEPTH_STENCIL: number,
    +DEPTH_STENCIL_ATTACHMENT: number,
    +DEPTH_TEST: number,
    +DEPTH_WRITEMASK: number,
    +DITHER: number,
    +DONT_CARE: number,
    +DST_ALPHA: number,
    +DST_COLOR: number,
    +DYNAMIC_DRAW: number,
    +ELEMENT_ARRAY_BUFFER: number,
    +ELEMENT_ARRAY_BUFFER_BINDING: number,
    +EQUAL: number,
    +FASTEST: number,
    +FLOAT: number,
    +FLOAT_MAT2: number,
    +FLOAT_MAT3: number,
    +FLOAT_MAT4: number,
    +FLOAT_VEC2: number,
    +FLOAT_VEC3: number,
    +FLOAT_VEC4: number,
    +FRAGMENT_SHADER: number,
    +FRAMEBUFFER: number,
    +FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: number,
    +FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: number,
    +FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: number,
    +FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: number,
    +FRAMEBUFFER_BINDING: number,
    +FRAMEBUFFER_COMPLETE: number,
    +FRAMEBUFFER_INCOMPLETE_ATTACHMENT: number,
    +FRAMEBUFFER_INCOMPLETE_DIMENSIONS: number,
    +FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: number,
    +FRAMEBUFFER_UNSUPPORTED: number,
    +FRONT: number,
    +FRONT_AND_BACK: number,
    +FRONT_FACE: number,
    +FUNC_ADD: number,
    +FUNC_REVERSE_SUBTRACT: number,
    +FUNC_SUBTRACT: number,
    +GENERATE_MIPMAP_HINT: number,
    +GEQUAL: number,
    +GREATER: number,
    +GREEN_BITS: number,
    +HIGH_FLOAT: number,
    +HIGH_INT: number,
    +IMPLEMENTATION_COLOR_READ_FORMAT: number,
    +IMPLEMENTATION_COLOR_READ_TYPE: number,
    +INCR: number,
    +INCR_WRAP: number,
    +INT: number,
    +INT_VEC2: number,
    +INT_VEC3: number,
    +INT_VEC4: number,
    +INVALID_ENUM: number,
    +INVALID_FRAMEBUFFER_OPERATION: number,
    +INVALID_OPERATION: number,
    +INVALID_VALUE: number,
    +INVERT: number,
    +KEEP: number,
    +LEQUAL: number,
    +LESS: number,
    +LINEAR: number,
    +LINEAR_MIPMAP_LINEAR: number,
    +LINEAR_MIPMAP_NEAREST: number,
    +LINES: number,
    +LINE_LOOP: number,
    +LINE_STRIP: number,
    +LINE_WIDTH: number,
    +LINK_STATUS: number,
    +LOW_FLOAT: number,
    +LOW_INT: number,
    +LUMINANCE: number,
    +LUMINANCE_ALPHA: number,
    +MAX_COMBINED_TEXTURE_IMAGE_UNITS: number,
    +MAX_CUBE_MAP_TEXTURE_SIZE: number,
    +MAX_FRAGMENT_UNIFORM_VECTORS: number,
    +MAX_RENDERBUFFER_SIZE: number,
    +MAX_TEXTURE_IMAGE_UNITS: number,
    +MAX_TEXTURE_SIZE: number,
    +MAX_VARYING_VECTORS: number,
    +MAX_VERTEX_ATTRIBS: number,
    +MAX_VERTEX_TEXTURE_IMAGE_UNITS: number,
    +MAX_VERTEX_UNIFORM_VECTORS: number,
    +MAX_VIEWPORT_DIMS: number,
    +MEDIUM_FLOAT: number,
    +MEDIUM_INT: number,
    +MIRRORED_REPEAT: number,
    +NEAREST: number,
    +NEAREST_MIPMAP_LINEAR: number,
    +NEAREST_MIPMAP_NEAREST: number,
    +NEVER: number,
    +NICEST: number,
    +NONE: number,
    +NOTEQUAL: number,
    +NO_ERROR: number,
    +ONE: number,
    +ONE_MINUS_CONSTANT_ALPHA: number,
    +ONE_MINUS_CONSTANT_COLOR: number,
    +ONE_MINUS_DST_ALPHA: number,
    +ONE_MINUS_DST_COLOR: number,
    +ONE_MINUS_SRC_ALPHA: number,
    +ONE_MINUS_SRC_COLOR: number,
    +OUT_OF_MEMORY: number,
    +PACK_ALIGNMENT: number,
    +POINTS: number,
    +POLYGON_OFFSET_FACTOR: number,
    +POLYGON_OFFSET_FILL: number,
    +POLYGON_OFFSET_UNITS: number,
    +RED_BITS: number,
    +RENDERBUFFER: number,
    +RENDERBUFFER_ALPHA_SIZE: number,
    +RENDERBUFFER_BINDING: number,
    +RENDERBUFFER_BLUE_SIZE: number,
    +RENDERBUFFER_DEPTH_SIZE: number,
    +RENDERBUFFER_GREEN_SIZE: number,
    +RENDERBUFFER_HEIGHT: number,
    +RENDERBUFFER_INTERNAL_FORMAT: number,
    +RENDERBUFFER_RED_SIZE: number,
    +RENDERBUFFER_STENCIL_SIZE: number,
    +RENDERBUFFER_WIDTH: number,
    +RENDERER: number,
    +REPEAT: number,
    +REPLACE: number,
    +RGB: number,
    +RGB565: number,
    +RGB5_A1: number,
    +RGBA: number,
    +RGBA4: number,
    +SAMPLER_2D: number,
    +SAMPLER_CUBE: number,
    +SAMPLES: number,
    +SAMPLE_ALPHA_TO_COVERAGE: number,
    +SAMPLE_BUFFERS: number,
    +SAMPLE_COVERAGE: number,
    +SAMPLE_COVERAGE_INVERT: number,
    +SAMPLE_COVERAGE_VALUE: number,
    +SCISSOR_BOX: number,
    +SCISSOR_TEST: number,
    +SHADER_TYPE: number,
    +SHADING_LANGUAGE_VERSION: number,
    +SHORT: number,
    +SRC_ALPHA: number,
    +SRC_ALPHA_SATURATE: number,
    +SRC_COLOR: number,
    +STATIC_DRAW: number,
    +STENCIL_ATTACHMENT: number,
    +STENCIL_BACK_FAIL: number,
    +STENCIL_BACK_FUNC: number,
    +STENCIL_BACK_PASS_DEPTH_FAIL: number,
    +STENCIL_BACK_PASS_DEPTH_PASS: number,
    +STENCIL_BACK_REF: number,
    +STENCIL_BACK_VALUE_MASK: number,
    +STENCIL_BACK_WRITEMASK: number,
    +STENCIL_BITS: number,
    +STENCIL_BUFFER_BIT: number,
    +STENCIL_CLEAR_VALUE: number,
    +STENCIL_FAIL: number,
    +STENCIL_FUNC: number,
    +STENCIL_INDEX: number,
    +STENCIL_INDEX8: number,
    +STENCIL_PASS_DEPTH_FAIL: number,
    +STENCIL_PASS_DEPTH_PASS: number,
    +STENCIL_REF: number,
    +STENCIL_TEST: number,
    +STENCIL_VALUE_MASK: number,
    +STENCIL_WRITEMASK: number,
    +STREAM_DRAW: number,
    +SUBPIXEL_BITS: number,
    +TEXTURE: number,
    +TEXTURE0: number,
    +TEXTURE1: number,
    +TEXTURE10: number,
    +TEXTURE11: number,
    +TEXTURE12: number,
    +TEXTURE13: number,
    +TEXTURE14: number,
    +TEXTURE15: number,
    +TEXTURE16: number,
    +TEXTURE17: number,
    +TEXTURE18: number,
    +TEXTURE19: number,
    +TEXTURE2: number,
    +TEXTURE20: number,
    +TEXTURE21: number,
    +TEXTURE22: number,
    +TEXTURE23: number,
    +TEXTURE24: number,
    +TEXTURE25: number,
    +TEXTURE26: number,
    +TEXTURE27: number,
    +TEXTURE28: number,
    +TEXTURE29: number,
    +TEXTURE3: number,
    +TEXTURE30: number,
    +TEXTURE31: number,
    +TEXTURE4: number,
    +TEXTURE5: number,
    +TEXTURE6: number,
    +TEXTURE7: number,
    +TEXTURE8: number,
    +TEXTURE9: number,
    +TEXTURE_2D: number,
    +TEXTURE_BINDING_2D: number,
    +TEXTURE_BINDING_CUBE_MAP: number,
    +TEXTURE_CUBE_MAP: number,
    +TEXTURE_CUBE_MAP_NEGATIVE_X: number,
    +TEXTURE_CUBE_MAP_NEGATIVE_Y: number,
    +TEXTURE_CUBE_MAP_NEGATIVE_Z: number,
    +TEXTURE_CUBE_MAP_POSITIVE_X: number,
    +TEXTURE_CUBE_MAP_POSITIVE_Y: number,
    +TEXTURE_CUBE_MAP_POSITIVE_Z: number,
    +TEXTURE_MAG_FILTER: number,
    +TEXTURE_MIN_FILTER: number,
    +TEXTURE_WRAP_S: number,
    +TEXTURE_WRAP_T: number,
    +TRIANGLES: number,
    +TRIANGLE_FAN: number,
    +TRIANGLE_STRIP: number,
    +UNPACK_ALIGNMENT: number,
    +UNPACK_COLORSPACE_CONVERSION_WEBGL: number,
    +UNPACK_FLIP_Y_WEBGL: number,
    +UNPACK_PREMULTIPLY_ALPHA_WEBGL: number,
    +UNSIGNED_BYTE: number,
    +UNSIGNED_INT: number,
    +UNSIGNED_SHORT: number,
    +UNSIGNED_SHORT_4_4_4_4: number,
    +UNSIGNED_SHORT_5_5_5_1: number,
    +UNSIGNED_SHORT_5_6_5: number,
    +VALIDATE_STATUS: number,
    +VENDOR: number,
    +VERSION: number,
    +VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: number,
    +VERTEX_ATTRIB_ARRAY_ENABLED: number,
    +VERTEX_ATTRIB_ARRAY_NORMALIZED: number,
    +VERTEX_ATTRIB_ARRAY_POINTER: number,
    +VERTEX_ATTRIB_ARRAY_SIZE: number,
    +VERTEX_ATTRIB_ARRAY_STRIDE: number,
    +VERTEX_ATTRIB_ARRAY_TYPE: number,
    +VERTEX_SHADER: number,
    +VIEWPORT: number,
    +ZERO: number,
    +READ_BUFFER: number,
    +UNPACK_ROW_LENGTH: number,
    +UNPACK_SKIP_ROWS: number,
    +UNPACK_SKIP_PIXELS: number,
    +PACK_ROW_LENGTH: number,
    +PACK_SKIP_ROWS: number,
    +PACK_SKIP_PIXELS: number,
    +COLOR: number,
    +DEPTH: number,
    +STENCIL: number,
    +RED: number,
    +RGB8: number,
    +RGBA8: number,
    +RGB10_A2: number,
    +TEXTURE_BINDING_3D: number,
    +UNPACK_SKIP_IMAGES: number,
    +UNPACK_IMAGE_HEIGHT: number,
    +TEXTURE_3D: number,
    +TEXTURE_WRAP_R: number,
    +MAX_3D_TEXTURE_SIZE: number,
    +UNSIGNED_INT_2_10_10_10_REV: number,
    +MAX_ELEMENTS_VERTICES: number,
    +MAX_ELEMENTS_INDICES: number,
    +TEXTURE_MIN_LOD: number,
    +TEXTURE_MAX_LOD: number,
    +TEXTURE_BASE_LEVEL: number,
    +TEXTURE_MAX_LEVEL: number,
    +MIN: number,
    +MAX: number,
    +DEPTH_COMPONENT24: number,
    +MAX_TEXTURE_LOD_BIAS: number,
    +TEXTURE_COMPARE_MODE: number,
    +TEXTURE_COMPARE_FUNC: number,
    +CURRENT_QUERY: number,
    +QUERY_RESULT: number,
    +QUERY_RESULT_AVAILABLE: number,
    +STREAM_READ: number,
    +STREAM_COPY: number,
    +STATIC_READ: number,
    +STATIC_COPY: number,
    +DYNAMIC_READ: number,
    +DYNAMIC_COPY: number,
    +MAX_DRAW_BUFFERS: number,
    +DRAW_BUFFER0: number,
    +DRAW_BUFFER1: number,
    +DRAW_BUFFER2: number,
    +DRAW_BUFFER3: number,
    +DRAW_BUFFER4: number,
    +DRAW_BUFFER5: number,
    +DRAW_BUFFER6: number,
    +DRAW_BUFFER7: number,
    +DRAW_BUFFER8: number,
    +DRAW_BUFFER9: number,
    +DRAW_BUFFER10: number,
    +DRAW_BUFFER11: number,
    +DRAW_BUFFER12: number,
    +DRAW_BUFFER13: number,
    +DRAW_BUFFER14: number,
    +DRAW_BUFFER15: number,
    +MAX_FRAGMENT_UNIFORM_COMPONENTS: number,
    +MAX_VERTEX_UNIFORM_COMPONENTS: number,
    +SAMPLER_3D: number,
    +SAMPLER_2D_SHADOW: number,
    +FRAGMENT_SHADER_DERIVATIVE_HINT: number,
    +PIXEL_PACK_BUFFER: number,
    +PIXEL_UNPACK_BUFFER: number,
    +PIXEL_PACK_BUFFER_BINDING: number,
    +PIXEL_UNPACK_BUFFER_BINDING: number,
    +FLOAT_MAT2x3: number,
    +FLOAT_MAT2x4: number,
    +FLOAT_MAT3x2: number,
    +FLOAT_MAT3x4: number,
    +FLOAT_MAT4x2: number,
    +FLOAT_MAT4x3: number,
    +SRGB: number,
    +SRGB8: number,
    +SRGB8_ALPHA8: number,
    +COMPARE_REF_TO_TEXTURE: number,
    +RGBA32F: number,
    +RGB32F: number,
    +RGBA16F: number,
    +RGB16F: number,
    +VERTEX_ATTRIB_ARRAY_INTEGER: number,
    +MAX_ARRAY_TEXTURE_LAYERS: number,
    +MIN_PROGRAM_TEXEL_OFFSET: number,
    +MAX_PROGRAM_TEXEL_OFFSET: number,
    +MAX_VARYING_COMPONENTS: number,
    +TEXTURE_2D_ARRAY: number,
    +TEXTURE_BINDING_2D_ARRAY: number,
    +R11F_G11F_B10F: number,
    +UNSIGNED_INT_10F_11F_11F_REV: number,
    +RGB9_E5: number,
    +UNSIGNED_INT_5_9_9_9_REV: number,
    +TRANSFORM_FEEDBACK_BUFFER_MODE: number,
    +MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: number,
    +TRANSFORM_FEEDBACK_VARYINGS: number,
    +TRANSFORM_FEEDBACK_BUFFER_START: number,
    +TRANSFORM_FEEDBACK_BUFFER_SIZE: number,
    +TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: number,
    +RASTERIZER_DISCARD: number,
    +MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: number,
    +MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: number,
    +INTERLEAVED_ATTRIBS: number,
    +SEPARATE_ATTRIBS: number,
    +TRANSFORM_FEEDBACK_BUFFER: number,
    +TRANSFORM_FEEDBACK_BUFFER_BINDING: number,
    +RGBA32UI: number,
    +RGB32UI: number,
    +RGBA16UI: number,
    +RGB16UI: number,
    +RGBA8UI: number,
    +RGB8UI: number,
    +RGBA32I: number,
    +RGB32I: number,
    +RGBA16I: number,
    +RGB16I: number,
    +RGBA8I: number,
    +RGB8I: number,
    +RED_INTEGER: number,
    +RGB_INTEGER: number,
    +RGBA_INTEGER: number,
    +SAMPLER_2D_ARRAY: number,
    +SAMPLER_2D_ARRAY_SHADOW: number,
    +SAMPLER_CUBE_SHADOW: number,
    +UNSIGNED_INT_VEC2: number,
    +UNSIGNED_INT_VEC3: number,
    +UNSIGNED_INT_VEC4: number,
    +INT_SAMPLER_2D: number,
    +INT_SAMPLER_3D: number,
    +INT_SAMPLER_CUBE: number,
    +INT_SAMPLER_2D_ARRAY: number,
    +UNSIGNED_INT_SAMPLER_2D: number,
    +UNSIGNED_INT_SAMPLER_3D: number,
    +UNSIGNED_INT_SAMPLER_CUBE: number,
    +UNSIGNED_INT_SAMPLER_2D_ARRAY: number,
    +DEPTH_COMPONENT32F: number,
    +DEPTH32F_STENCIL8: number,
    +FLOAT_32_UNSIGNED_INT_24_8_REV: number,
    +FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: number,
    +FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: number,
    +FRAMEBUFFER_ATTACHMENT_RED_SIZE: number,
    +FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: number,
    +FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: number,
    +FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: number,
    +FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: number,
    +FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: number,
    +FRAMEBUFFER_DEFAULT: number,
    +UNSIGNED_INT_24_8: number,
    +DEPTH24_STENCIL8: number,
    +UNSIGNED_NORMALIZED: number,
    +DRAW_FRAMEBUFFER_BINDING: number,
    +READ_FRAMEBUFFER: number,
    +DRAW_FRAMEBUFFER: number,
    +READ_FRAMEBUFFER_BINDING: number,
    +RENDERBUFFER_SAMPLES: number,
    +FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: number,
    +MAX_COLOR_ATTACHMENTS: number,
    +COLOR_ATTACHMENT1: number,
    +COLOR_ATTACHMENT2: number,
    +COLOR_ATTACHMENT3: number,
    +COLOR_ATTACHMENT4: number,
    +COLOR_ATTACHMENT5: number,
    +COLOR_ATTACHMENT6: number,
    +COLOR_ATTACHMENT7: number,
    +COLOR_ATTACHMENT8: number,
    +COLOR_ATTACHMENT9: number,
    +COLOR_ATTACHMENT10: number,
    +COLOR_ATTACHMENT11: number,
    +COLOR_ATTACHMENT12: number,
    +COLOR_ATTACHMENT13: number,
    +COLOR_ATTACHMENT14: number,
    +COLOR_ATTACHMENT15: number,
    +FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: number,
    +MAX_SAMPLES: number,
    +HALF_FLOAT: number,
    +RG: number,
    +RG_INTEGER: number,
    +R8: number,
    +RG8: number,
    +R16F: number,
    +R32F: number,
    +RG16F: number,
    +RG32F: number,
    +R8I: number,
    +R8UI: number,
    +R16I: number,
    +R16UI: number,
    +R32I: number,
    +R32UI: number,
    +RG8I: number,
    +RG8UI: number,
    +RG16I: number,
    +RG16UI: number,
    +RG32I: number,
    +RG32UI: number,
    +VERTEX_ARRAY_BINDING: number,
    +R8_SNORM: number,
    +RG8_SNORM: number,
    +RGB8_SNORM: number,
    +RGBA8_SNORM: number,
    +SIGNED_NORMALIZED: number,
    +COPY_READ_BUFFER: number,
    +COPY_WRITE_BUFFER: number,
    +COPY_READ_BUFFER_BINDING: number,
    +COPY_WRITE_BUFFER_BINDING: number,
    +UNIFORM_BUFFER: number,
    +UNIFORM_BUFFER_BINDING: number,
    +UNIFORM_BUFFER_START: number,
    +UNIFORM_BUFFER_SIZE: number,
    +MAX_VERTEX_UNIFORM_BLOCKS: number,
    +MAX_FRAGMENT_UNIFORM_BLOCKS: number,
    +MAX_COMBINED_UNIFORM_BLOCKS: number,
    +MAX_UNIFORM_BUFFER_BINDINGS: number,
    +MAX_UNIFORM_BLOCK_SIZE: number,
    +MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: number,
    +MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: number,
    +UNIFORM_BUFFER_OFFSET_ALIGNMENT: number,
    +ACTIVE_UNIFORM_BLOCKS: number,
    +UNIFORM_TYPE: number,
    +UNIFORM_SIZE: number,
    +UNIFORM_BLOCK_INDEX: number,
    +UNIFORM_OFFSET: number,
    +UNIFORM_ARRAY_STRIDE: number,
    +UNIFORM_MATRIX_STRIDE: number,
    +UNIFORM_IS_ROW_MAJOR: number,
    +UNIFORM_BLOCK_BINDING: number,
    +UNIFORM_BLOCK_DATA_SIZE: number,
    +UNIFORM_BLOCK_ACTIVE_UNIFORMS: number,
    +UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: number,
    +UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: number,
    +UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: number,
    +INVALID_INDEX: number,
    +MAX_VERTEX_OUTPUT_COMPONENTS: number,
    +MAX_FRAGMENT_INPUT_COMPONENTS: number,
    +MAX_SERVER_WAIT_TIMEOUT: number,
    +OBJECT_TYPE: number,
    +SYNC_CONDITION: number,
    +SYNC_STATUS: number,
    +SYNC_FLAGS: number,
    +SYNC_FENCE: number,
    +SYNC_GPU_COMMANDS_COMPLETE: number,
    +UNSIGNALED: number,
    +SIGNALED: number,
    +ALREADY_SIGNALED: number,
    +TIMEOUT_EXPIRED: number,
    +CONDITION_SATISFIED: number,
    +WAIT_FAILED: number,
    +SYNC_FLUSH_COMMANDS_BIT: number,
    +VERTEX_ATTRIB_ARRAY_DIVISOR: number,
    +ANY_SAMPLES_PASSED: number,
    +ANY_SAMPLES_PASSED_CONSERVATIVE: number,
    +SAMPLER_BINDING: number,
    +RGB10_A2UI: number,
    +INT_2_10_10_10_REV: number,
    +TRANSFORM_FEEDBACK: number,
    +TRANSFORM_FEEDBACK_PAUSED: number,
    +TRANSFORM_FEEDBACK_ACTIVE: number,
    +TRANSFORM_FEEDBACK_BINDING: number,
    +TEXTURE_IMMUTABLE_FORMAT: number,
    +MAX_ELEMENT_INDEX: number,
    +TEXTURE_IMMUTABLE_LEVELS: number,
    +TIMEOUT_IGNORED: number,
    +MAX_CLIENT_WAIT_TIMEOUT_WEBGL: number
  };
  declare type WebGLQuery = {} & WebGLObject;

  declare var WebGLQuery: {
    prototype: WebGLQuery,
    new(): WebGLQuery
  };
  declare type WebGLSampler = {} & WebGLObject;

  declare var WebGLSampler: {
    prototype: WebGLSampler,
    new(): WebGLSampler
  };
  declare type WebGLSync = {} & WebGLObject;

  declare var WebGLSync: {
    prototype: WebGLSync,
    new(): WebGLSync
  };
  declare type WebGLTransformFeedback = {} & WebGLObject;

  declare var WebGLTransformFeedback: {
    prototype: WebGLTransformFeedback,
    new(): WebGLTransformFeedback
  };
  declare type WebGLVertexArrayObject = {} & WebGLObject;

  declare var WebGLVertexArrayObject: {
    prototype: WebGLVertexArrayObject,
    new(): WebGLVertexArrayObject
  };
}
