declare module 'html-minifier' {
        import typeof * as UglifyJS from 'uglify-js';

	import typeof * as CleanCSS from 'clean-css';

	import typeof * as RelateUrl from 'relateurl';

	declare export function minify(text: string, options?: Options): string

	declare export interface Options {
caseSensitive?: boolean,
collapseBooleanAttributes?: boolean,
collapseInlineTagWhitespace?: boolean,

/**
 * Collapse white space that contributes to text nodes in a document tree
 * @see http://perfectionkills.com/experimenting-with-html-minifier/#collapse_whitespace
 */
collapseWhitespace?: boolean,
conservativeCollapse?: boolean,
customAttrAssign?: RegExp[],
customAttrCollapse?: RegExp,
customAttrSurround?: RegExp[],
customEventAttributes?: RegExp[],
decodeEntities?: boolean,
html5?: boolean,
ignoreCustomComments?: RegExp[],
ignoreCustomFragments?: RegExp[],
includeAutoGeneratedTags?: boolean,
keepClosingSlash?: boolean,
maxLineLength?: number,
minifyCSS?: boolean | CleanCSS.Options | ((text: string) => string),
minifyJS?: boolean | UglifyJS.MinifyOptions | ((text: string, inline: boolean) => string),
minifyURLs?: boolean | RelateUrl.Options | ((text: string) => string),
preserveLineBreaks?: boolean,
preventAttributesEscaping?: boolean,
processConditionalComments?: boolean,
processScripts?: string[],
quoteCharacter?: string,

/**
 * Remove quotes around attributes when possible
 * @see http://perfectionkills.com/experimenting-with-html-minifier/#remove_attribute_quotes
 */
removeAttributeQuotes?: boolean,

/**
 * Strip HTML comments
 * @see http://perfectionkills.com/experimenting-with-html-minifier/#remove_comments
 */
removeComments?: boolean,

/**
 * Remove all attributes with whitespace-only values
 * @see http://perfectionkills.com/experimenting-with-html-minifier/#remove_empty_or_blank_attributes
 */
removeEmptyAttributes?: boolean | ((attrName: string, tag: string) => boolean),

/**
 * Remove all elements with empty contents
 * @see http://perfectionkills.com/experimenting-with-html-minifier/#remove_empty_elements
 */
removeEmptyElements?: boolean,

/**
 * Remove optional tags
 * @see http://perfectionkills.com/experimenting-with-html-minifier/#remove_optional_tags
 */
removeOptionalTags?: boolean,

/**
 * Remove attributes when value matches default.
 * @see http://perfectionkills.com/experimenting-with-html-minifier/#remove_redundant_attributes
 */
removeRedundantAttributes?: boolean,
removeScriptTypeAttributes?: boolean,
removeStyleLinkTypeAttributes?: boolean,
removeTagWhitespace?: boolean,

/**
 * Sort attributes by frequency
 * 
 * Minifier options like sortAttributes and sortClassName won't impact the plain-text size
 * of the output. However, they form long repetitive chains of characters that should improve
 * compression ratio of gzip used in HTTP compression.
 * @see https://github.com/kangax/html-minifier#sorting-attributes--style-classes
 */
sortAttributes?: boolean,

/**
 * Sort style classes by frequency
 * 
 * Minifier options like sortAttributes and sortClassName won't impact the plain-text size
 * of the output. However, they form long repetitive chains of characters that should improve
 * compression ratio of gzip used in HTTP compression.
 * @see https://github.com/kangax/html-minifier#sorting-attributes--style-classes
 */
sortClassName?: boolean,
trimCustomFragments?: boolean,

/**
 * Replaces the doctype with the short (HTML5) doctype
 * @see http://perfectionkills.com/experimenting-with-html-minifier/#use_short_doctype
 */
useShortDoctype?: boolean
} 
    }
