declare module "activex-word" {
  declare class Word$WdAlertLevel {
    constructor(...args: empty): mixed;
    static +wdAlertsAll: Class<Word$WdAlertLevel__wdAlertsAll> &
      Word$WdAlertLevel__wdAlertsAll &
      -1; // -1
    static +wdAlertsMessageBox: Class<Word$WdAlertLevel__wdAlertsMessageBox> &
      Word$WdAlertLevel__wdAlertsMessageBox &
      -2; // -2
    static +wdAlertsNone: Class<Word$WdAlertLevel__wdAlertsNone> &
      Word$WdAlertLevel__wdAlertsNone &
      0; // 0
  }

  declare class Word$WdAlertLevel__wdAlertsAll mixins Word$WdAlertLevel {}
  declare class Word$WdAlertLevel__wdAlertsMessageBox
    mixins Word$WdAlertLevel {}
  declare class Word$WdAlertLevel__wdAlertsNone mixins Word$WdAlertLevel {}

  declare class Word$WdAlignmentTabAlignment {
    constructor(...args: empty): mixed;
    static +wdCenter: Class<Word$WdAlignmentTabAlignment__wdCenter> &
      Word$WdAlignmentTabAlignment__wdCenter &
      1; // 1
    static +wdLeft: Class<Word$WdAlignmentTabAlignment__wdLeft> &
      Word$WdAlignmentTabAlignment__wdLeft &
      0; // 0
    static +wdRight: Class<Word$WdAlignmentTabAlignment__wdRight> &
      Word$WdAlignmentTabAlignment__wdRight &
      2; // 2
  }

  declare class Word$WdAlignmentTabAlignment__wdCenter
    mixins Word$WdAlignmentTabAlignment {}
  declare class Word$WdAlignmentTabAlignment__wdLeft
    mixins Word$WdAlignmentTabAlignment {}
  declare class Word$WdAlignmentTabAlignment__wdRight
    mixins Word$WdAlignmentTabAlignment {}

  declare class Word$WdAlignmentTabRelative {
    constructor(...args: empty): mixed;
    static +wdIndent: Class<Word$WdAlignmentTabRelative__wdIndent> &
      Word$WdAlignmentTabRelative__wdIndent &
      1; // 1
    static +wdMargin: Class<Word$WdAlignmentTabRelative__wdMargin> &
      Word$WdAlignmentTabRelative__wdMargin &
      0; // 0
  }

  declare class Word$WdAlignmentTabRelative__wdIndent
    mixins Word$WdAlignmentTabRelative {}
  declare class Word$WdAlignmentTabRelative__wdMargin
    mixins Word$WdAlignmentTabRelative {}

  declare class Word$WdAnimation {
    constructor(...args: empty): mixed;
    static +wdAnimationBlinkingBackground: Class<Word$WdAnimation__wdAnimationBlinkingBackground> &
      Word$WdAnimation__wdAnimationBlinkingBackground &
      2; // 2
    static +wdAnimationLasVegasLights: Class<Word$WdAnimation__wdAnimationLasVegasLights> &
      Word$WdAnimation__wdAnimationLasVegasLights &
      1; // 1
    static +wdAnimationMarchingBlackAnts: Class<Word$WdAnimation__wdAnimationMarchingBlackAnts> &
      Word$WdAnimation__wdAnimationMarchingBlackAnts &
      4; // 4
    static +wdAnimationMarchingRedAnts: Class<Word$WdAnimation__wdAnimationMarchingRedAnts> &
      Word$WdAnimation__wdAnimationMarchingRedAnts &
      5; // 5
    static +wdAnimationNone: Class<Word$WdAnimation__wdAnimationNone> &
      Word$WdAnimation__wdAnimationNone &
      0; // 0
    static +wdAnimationShimmer: Class<Word$WdAnimation__wdAnimationShimmer> &
      Word$WdAnimation__wdAnimationShimmer &
      6; // 6
    static +wdAnimationSparkleText: Class<Word$WdAnimation__wdAnimationSparkleText> &
      Word$WdAnimation__wdAnimationSparkleText &
      3; // 3
  }

  declare class Word$WdAnimation__wdAnimationBlinkingBackground
    mixins Word$WdAnimation {}
  declare class Word$WdAnimation__wdAnimationLasVegasLights
    mixins Word$WdAnimation {}
  declare class Word$WdAnimation__wdAnimationMarchingBlackAnts
    mixins Word$WdAnimation {}
  declare class Word$WdAnimation__wdAnimationMarchingRedAnts
    mixins Word$WdAnimation {}
  declare class Word$WdAnimation__wdAnimationNone mixins Word$WdAnimation {}
  declare class Word$WdAnimation__wdAnimationShimmer mixins Word$WdAnimation {}
  declare class Word$WdAnimation__wdAnimationSparkleText
    mixins Word$WdAnimation {}

  declare class Word$WdApplyQuickStyleSets {
    constructor(...args: empty): mixed;
    static +wdSessionStartSet: Class<Word$WdApplyQuickStyleSets__wdSessionStartSet> &
      Word$WdApplyQuickStyleSets__wdSessionStartSet &
      1; // 1
    static +wdTemplateSet: Class<Word$WdApplyQuickStyleSets__wdTemplateSet> &
      Word$WdApplyQuickStyleSets__wdTemplateSet &
      2; // 2
  }

  declare class Word$WdApplyQuickStyleSets__wdSessionStartSet
    mixins Word$WdApplyQuickStyleSets {}
  declare class Word$WdApplyQuickStyleSets__wdTemplateSet
    mixins Word$WdApplyQuickStyleSets {}

  declare class Word$WdArabicNumeral {
    constructor(...args: empty): mixed;
    static +wdNumeralArabic: Class<Word$WdArabicNumeral__wdNumeralArabic> &
      Word$WdArabicNumeral__wdNumeralArabic &
      0; // 0
    static +wdNumeralContext: Class<Word$WdArabicNumeral__wdNumeralContext> &
      Word$WdArabicNumeral__wdNumeralContext &
      2; // 2
    static +wdNumeralHindi: Class<Word$WdArabicNumeral__wdNumeralHindi> &
      Word$WdArabicNumeral__wdNumeralHindi &
      1; // 1
    static +wdNumeralSystem: Class<Word$WdArabicNumeral__wdNumeralSystem> &
      Word$WdArabicNumeral__wdNumeralSystem &
      3; // 3
  }

  declare class Word$WdArabicNumeral__wdNumeralArabic
    mixins Word$WdArabicNumeral {}
  declare class Word$WdArabicNumeral__wdNumeralContext
    mixins Word$WdArabicNumeral {}
  declare class Word$WdArabicNumeral__wdNumeralHindi
    mixins Word$WdArabicNumeral {}
  declare class Word$WdArabicNumeral__wdNumeralSystem
    mixins Word$WdArabicNumeral {}

  declare class Word$WdAraSpeller {
    constructor(...args: empty): mixed;
    static +wdBoth: Class<Word$WdAraSpeller__wdBoth> &
      Word$WdAraSpeller__wdBoth &
      3; // 3
    static +wdFinalYaa: Class<Word$WdAraSpeller__wdFinalYaa> &
      Word$WdAraSpeller__wdFinalYaa &
      2; // 2
    static +wdInitialAlef: Class<Word$WdAraSpeller__wdInitialAlef> &
      Word$WdAraSpeller__wdInitialAlef &
      1; // 1
    static +wdNone: Class<Word$WdAraSpeller__wdNone> &
      Word$WdAraSpeller__wdNone &
      0; // 0
  }

  declare class Word$WdAraSpeller__wdBoth mixins Word$WdAraSpeller {}
  declare class Word$WdAraSpeller__wdFinalYaa mixins Word$WdAraSpeller {}
  declare class Word$WdAraSpeller__wdInitialAlef mixins Word$WdAraSpeller {}
  declare class Word$WdAraSpeller__wdNone mixins Word$WdAraSpeller {}

  declare class Word$WdArrangeStyle {
    constructor(...args: empty): mixed;
    static +wdIcons: Class<Word$WdArrangeStyle__wdIcons> &
      Word$WdArrangeStyle__wdIcons &
      1; // 1
    static +wdTiled: Class<Word$WdArrangeStyle__wdTiled> &
      Word$WdArrangeStyle__wdTiled &
      0; // 0
  }

  declare class Word$WdArrangeStyle__wdIcons mixins Word$WdArrangeStyle {}
  declare class Word$WdArrangeStyle__wdTiled mixins Word$WdArrangeStyle {}

  declare class Word$WdAutoFitBehavior {
    constructor(...args: empty): mixed;
    static +wdAutoFitContent: Class<Word$WdAutoFitBehavior__wdAutoFitContent> &
      Word$WdAutoFitBehavior__wdAutoFitContent &
      1; // 1
    static +wdAutoFitFixed: Class<Word$WdAutoFitBehavior__wdAutoFitFixed> &
      Word$WdAutoFitBehavior__wdAutoFitFixed &
      0; // 0
    static +wdAutoFitWindow: Class<Word$WdAutoFitBehavior__wdAutoFitWindow> &
      Word$WdAutoFitBehavior__wdAutoFitWindow &
      2; // 2
  }

  declare class Word$WdAutoFitBehavior__wdAutoFitContent
    mixins Word$WdAutoFitBehavior {}
  declare class Word$WdAutoFitBehavior__wdAutoFitFixed
    mixins Word$WdAutoFitBehavior {}
  declare class Word$WdAutoFitBehavior__wdAutoFitWindow
    mixins Word$WdAutoFitBehavior {}

  declare class Word$WdAutoMacros {
    constructor(...args: empty): mixed;
    static +wdAutoClose: Class<Word$WdAutoMacros__wdAutoClose> &
      Word$WdAutoMacros__wdAutoClose &
      3; // 3
    static +wdAutoExec: Class<Word$WdAutoMacros__wdAutoExec> &
      Word$WdAutoMacros__wdAutoExec &
      0; // 0
    static +wdAutoExit: Class<Word$WdAutoMacros__wdAutoExit> &
      Word$WdAutoMacros__wdAutoExit &
      4; // 4
    static +wdAutoNew: Class<Word$WdAutoMacros__wdAutoNew> &
      Word$WdAutoMacros__wdAutoNew &
      1; // 1
    static +wdAutoOpen: Class<Word$WdAutoMacros__wdAutoOpen> &
      Word$WdAutoMacros__wdAutoOpen &
      2; // 2
    static +wdAutoSync: Class<Word$WdAutoMacros__wdAutoSync> &
      Word$WdAutoMacros__wdAutoSync &
      5; // 5
  }

  declare class Word$WdAutoMacros__wdAutoClose mixins Word$WdAutoMacros {}
  declare class Word$WdAutoMacros__wdAutoExec mixins Word$WdAutoMacros {}
  declare class Word$WdAutoMacros__wdAutoExit mixins Word$WdAutoMacros {}
  declare class Word$WdAutoMacros__wdAutoNew mixins Word$WdAutoMacros {}
  declare class Word$WdAutoMacros__wdAutoOpen mixins Word$WdAutoMacros {}
  declare class Word$WdAutoMacros__wdAutoSync mixins Word$WdAutoMacros {}

  declare class Word$WdAutoVersions {
    constructor(...args: empty): mixed;
    static +wdAutoVersionOff: Class<Word$WdAutoVersions__wdAutoVersionOff> &
      Word$WdAutoVersions__wdAutoVersionOff &
      0; // 0
    static +wdAutoVersionOnClose: Class<Word$WdAutoVersions__wdAutoVersionOnClose> &
      Word$WdAutoVersions__wdAutoVersionOnClose &
      1; // 1
  }

  declare class Word$WdAutoVersions__wdAutoVersionOff
    mixins Word$WdAutoVersions {}
  declare class Word$WdAutoVersions__wdAutoVersionOnClose
    mixins Word$WdAutoVersions {}

  declare class Word$WdBaselineAlignment {
    constructor(...args: empty): mixed;
    static +wdBaselineAlignAuto: Class<Word$WdBaselineAlignment__wdBaselineAlignAuto> &
      Word$WdBaselineAlignment__wdBaselineAlignAuto &
      4; // 4
    static +wdBaselineAlignBaseline: Class<Word$WdBaselineAlignment__wdBaselineAlignBaseline> &
      Word$WdBaselineAlignment__wdBaselineAlignBaseline &
      2; // 2
    static +wdBaselineAlignCenter: Class<Word$WdBaselineAlignment__wdBaselineAlignCenter> &
      Word$WdBaselineAlignment__wdBaselineAlignCenter &
      1; // 1
    static +wdBaselineAlignFarEast50: Class<Word$WdBaselineAlignment__wdBaselineAlignFarEast50> &
      Word$WdBaselineAlignment__wdBaselineAlignFarEast50 &
      3; // 3
    static +wdBaselineAlignTop: Class<Word$WdBaselineAlignment__wdBaselineAlignTop> &
      Word$WdBaselineAlignment__wdBaselineAlignTop &
      0; // 0
  }

  declare class Word$WdBaselineAlignment__wdBaselineAlignAuto
    mixins Word$WdBaselineAlignment {}
  declare class Word$WdBaselineAlignment__wdBaselineAlignBaseline
    mixins Word$WdBaselineAlignment {}
  declare class Word$WdBaselineAlignment__wdBaselineAlignCenter
    mixins Word$WdBaselineAlignment {}
  declare class Word$WdBaselineAlignment__wdBaselineAlignFarEast50
    mixins Word$WdBaselineAlignment {}
  declare class Word$WdBaselineAlignment__wdBaselineAlignTop
    mixins Word$WdBaselineAlignment {}

  declare class Word$WdBookmarkSortBy {
    constructor(...args: empty): mixed;
    static +wdSortByLocation: Class<Word$WdBookmarkSortBy__wdSortByLocation> &
      Word$WdBookmarkSortBy__wdSortByLocation &
      1; // 1
    static +wdSortByName: Class<Word$WdBookmarkSortBy__wdSortByName> &
      Word$WdBookmarkSortBy__wdSortByName &
      0; // 0
  }

  declare class Word$WdBookmarkSortBy__wdSortByLocation
    mixins Word$WdBookmarkSortBy {}
  declare class Word$WdBookmarkSortBy__wdSortByName
    mixins Word$WdBookmarkSortBy {}

  declare class Word$WdBorderDistanceFrom {
    constructor(...args: empty): mixed;
    static +wdBorderDistanceFromPageEdge: Class<Word$WdBorderDistanceFrom__wdBorderDistanceFromPageEdge> &
      Word$WdBorderDistanceFrom__wdBorderDistanceFromPageEdge &
      1; // 1
    static +wdBorderDistanceFromText: Class<Word$WdBorderDistanceFrom__wdBorderDistanceFromText> &
      Word$WdBorderDistanceFrom__wdBorderDistanceFromText &
      0; // 0
  }

  declare class Word$WdBorderDistanceFrom__wdBorderDistanceFromPageEdge
    mixins Word$WdBorderDistanceFrom {}
  declare class Word$WdBorderDistanceFrom__wdBorderDistanceFromText
    mixins Word$WdBorderDistanceFrom {}

  declare class Word$WdBorderType {
    constructor(...args: empty): mixed;
    static +wdBorderBottom: Class<Word$WdBorderType__wdBorderBottom> &
      Word$WdBorderType__wdBorderBottom &
      -3; // -3
    static +wdBorderDiagonalDown: Class<Word$WdBorderType__wdBorderDiagonalDown> &
      Word$WdBorderType__wdBorderDiagonalDown &
      -7; // -7
    static +wdBorderDiagonalUp: Class<Word$WdBorderType__wdBorderDiagonalUp> &
      Word$WdBorderType__wdBorderDiagonalUp &
      -8; // -8
    static +wdBorderHorizontal: Class<Word$WdBorderType__wdBorderHorizontal> &
      Word$WdBorderType__wdBorderHorizontal &
      -5; // -5
    static +wdBorderLeft: Class<Word$WdBorderType__wdBorderLeft> &
      Word$WdBorderType__wdBorderLeft &
      -2; // -2
    static +wdBorderRight: Class<Word$WdBorderType__wdBorderRight> &
      Word$WdBorderType__wdBorderRight &
      -4; // -4
    static +wdBorderTop: Class<Word$WdBorderType__wdBorderTop> &
      Word$WdBorderType__wdBorderTop &
      -1; // -1
    static +wdBorderVertical: Class<Word$WdBorderType__wdBorderVertical> &
      Word$WdBorderType__wdBorderVertical &
      -6; // -6
  }

  declare class Word$WdBorderType__wdBorderBottom mixins Word$WdBorderType {}
  declare class Word$WdBorderType__wdBorderDiagonalDown
    mixins Word$WdBorderType {}
  declare class Word$WdBorderType__wdBorderDiagonalUp
    mixins Word$WdBorderType {}
  declare class Word$WdBorderType__wdBorderHorizontal
    mixins Word$WdBorderType {}
  declare class Word$WdBorderType__wdBorderLeft mixins Word$WdBorderType {}
  declare class Word$WdBorderType__wdBorderRight mixins Word$WdBorderType {}
  declare class Word$WdBorderType__wdBorderTop mixins Word$WdBorderType {}
  declare class Word$WdBorderType__wdBorderVertical mixins Word$WdBorderType {}

  declare class Word$WdBorderTypeHID {
    constructor(...args: empty): mixed;
    static +emptyenum: Class<Word$WdBorderTypeHID__emptyenum> &
      Word$WdBorderTypeHID__emptyenum &
      0; // 0
  }

  declare class Word$WdBorderTypeHID__emptyenum mixins Word$WdBorderTypeHID {}

  declare class Word$WdBreakType {
    constructor(...args: empty): mixed;
    static +wdColumnBreak: Class<Word$WdBreakType__wdColumnBreak> &
      Word$WdBreakType__wdColumnBreak &
      8; // 8
    static +wdLineBreak: Class<Word$WdBreakType__wdLineBreak> &
      Word$WdBreakType__wdLineBreak &
      6; // 6
    static +wdLineBreakClearLeft: Class<Word$WdBreakType__wdLineBreakClearLeft> &
      Word$WdBreakType__wdLineBreakClearLeft &
      9; // 9
    static +wdLineBreakClearRight: Class<Word$WdBreakType__wdLineBreakClearRight> &
      Word$WdBreakType__wdLineBreakClearRight &
      10; // 10
    static +wdPageBreak: Class<Word$WdBreakType__wdPageBreak> &
      Word$WdBreakType__wdPageBreak &
      7; // 7
    static +wdSectionBreakContinuous: Class<Word$WdBreakType__wdSectionBreakContinuous> &
      Word$WdBreakType__wdSectionBreakContinuous &
      3; // 3
    static +wdSectionBreakEvenPage: Class<Word$WdBreakType__wdSectionBreakEvenPage> &
      Word$WdBreakType__wdSectionBreakEvenPage &
      4; // 4
    static +wdSectionBreakNextPage: Class<Word$WdBreakType__wdSectionBreakNextPage> &
      Word$WdBreakType__wdSectionBreakNextPage &
      2; // 2
    static +wdSectionBreakOddPage: Class<Word$WdBreakType__wdSectionBreakOddPage> &
      Word$WdBreakType__wdSectionBreakOddPage &
      5; // 5
    static +wdTextWrappingBreak: Class<Word$WdBreakType__wdTextWrappingBreak> &
      Word$WdBreakType__wdTextWrappingBreak &
      11; // 11
  }

  declare class Word$WdBreakType__wdColumnBreak mixins Word$WdBreakType {}
  declare class Word$WdBreakType__wdLineBreak mixins Word$WdBreakType {}
  declare class Word$WdBreakType__wdLineBreakClearLeft
    mixins Word$WdBreakType {}
  declare class Word$WdBreakType__wdLineBreakClearRight
    mixins Word$WdBreakType {}
  declare class Word$WdBreakType__wdPageBreak mixins Word$WdBreakType {}
  declare class Word$WdBreakType__wdSectionBreakContinuous
    mixins Word$WdBreakType {}
  declare class Word$WdBreakType__wdSectionBreakEvenPage
    mixins Word$WdBreakType {}
  declare class Word$WdBreakType__wdSectionBreakNextPage
    mixins Word$WdBreakType {}
  declare class Word$WdBreakType__wdSectionBreakOddPage
    mixins Word$WdBreakType {}
  declare class Word$WdBreakType__wdTextWrappingBreak mixins Word$WdBreakType {}

  declare class Word$WdBrowserLevel {
    constructor(...args: empty): mixed;
    static +wdBrowserLevelMicrosoftInternetExplorer5: Class<Word$WdBrowserLevel__wdBrowserLevelMicrosoftInternetExplorer5> &
      Word$WdBrowserLevel__wdBrowserLevelMicrosoftInternetExplorer5 &
      1; // 1
    static +wdBrowserLevelMicrosoftInternetExplorer6: Class<Word$WdBrowserLevel__wdBrowserLevelMicrosoftInternetExplorer6> &
      Word$WdBrowserLevel__wdBrowserLevelMicrosoftInternetExplorer6 &
      2; // 2
    static +wdBrowserLevelV4: Class<Word$WdBrowserLevel__wdBrowserLevelV4> &
      Word$WdBrowserLevel__wdBrowserLevelV4 &
      0; // 0
  }

  declare class Word$WdBrowserLevel__wdBrowserLevelMicrosoftInternetExplorer5
    mixins Word$WdBrowserLevel {}
  declare class Word$WdBrowserLevel__wdBrowserLevelMicrosoftInternetExplorer6
    mixins Word$WdBrowserLevel {}
  declare class Word$WdBrowserLevel__wdBrowserLevelV4
    mixins Word$WdBrowserLevel {}

  declare class Word$WdBrowseTarget {
    constructor(...args: empty): mixed;
    static +wdBrowseComment: Class<Word$WdBrowseTarget__wdBrowseComment> &
      Word$WdBrowseTarget__wdBrowseComment &
      3; // 3
    static +wdBrowseEdit: Class<Word$WdBrowseTarget__wdBrowseEdit> &
      Word$WdBrowseTarget__wdBrowseEdit &
      10; // 10
    static +wdBrowseEndnote: Class<Word$WdBrowseTarget__wdBrowseEndnote> &
      Word$WdBrowseTarget__wdBrowseEndnote &
      5; // 5
    static +wdBrowseField: Class<Word$WdBrowseTarget__wdBrowseField> &
      Word$WdBrowseTarget__wdBrowseField &
      6; // 6
    static +wdBrowseFind: Class<Word$WdBrowseTarget__wdBrowseFind> &
      Word$WdBrowseTarget__wdBrowseFind &
      11; // 11
    static +wdBrowseFootnote: Class<Word$WdBrowseTarget__wdBrowseFootnote> &
      Word$WdBrowseTarget__wdBrowseFootnote &
      4; // 4
    static +wdBrowseGoTo: Class<Word$WdBrowseTarget__wdBrowseGoTo> &
      Word$WdBrowseTarget__wdBrowseGoTo &
      12; // 12
    static +wdBrowseGraphic: Class<Word$WdBrowseTarget__wdBrowseGraphic> &
      Word$WdBrowseTarget__wdBrowseGraphic &
      8; // 8
    static +wdBrowseHeading: Class<Word$WdBrowseTarget__wdBrowseHeading> &
      Word$WdBrowseTarget__wdBrowseHeading &
      9; // 9
    static +wdBrowsePage: Class<Word$WdBrowseTarget__wdBrowsePage> &
      Word$WdBrowseTarget__wdBrowsePage &
      1; // 1
    static +wdBrowseSection: Class<Word$WdBrowseTarget__wdBrowseSection> &
      Word$WdBrowseTarget__wdBrowseSection &
      2; // 2
    static +wdBrowseTable: Class<Word$WdBrowseTarget__wdBrowseTable> &
      Word$WdBrowseTarget__wdBrowseTable &
      7; // 7
  }

  declare class Word$WdBrowseTarget__wdBrowseComment
    mixins Word$WdBrowseTarget {}
  declare class Word$WdBrowseTarget__wdBrowseEdit mixins Word$WdBrowseTarget {}
  declare class Word$WdBrowseTarget__wdBrowseEndnote
    mixins Word$WdBrowseTarget {}
  declare class Word$WdBrowseTarget__wdBrowseField mixins Word$WdBrowseTarget {}
  declare class Word$WdBrowseTarget__wdBrowseFind mixins Word$WdBrowseTarget {}
  declare class Word$WdBrowseTarget__wdBrowseFootnote
    mixins Word$WdBrowseTarget {}
  declare class Word$WdBrowseTarget__wdBrowseGoTo mixins Word$WdBrowseTarget {}
  declare class Word$WdBrowseTarget__wdBrowseGraphic
    mixins Word$WdBrowseTarget {}
  declare class Word$WdBrowseTarget__wdBrowseHeading
    mixins Word$WdBrowseTarget {}
  declare class Word$WdBrowseTarget__wdBrowsePage mixins Word$WdBrowseTarget {}
  declare class Word$WdBrowseTarget__wdBrowseSection
    mixins Word$WdBrowseTarget {}
  declare class Word$WdBrowseTarget__wdBrowseTable mixins Word$WdBrowseTarget {}

  declare class Word$WdBuildingBlockTypes {
    constructor(...args: empty): mixed;
    static +wdTypeAutoText: Class<Word$WdBuildingBlockTypes__wdTypeAutoText> &
      Word$WdBuildingBlockTypes__wdTypeAutoText &
      9; // 9
    static +wdTypeBibliography: Class<Word$WdBuildingBlockTypes__wdTypeBibliography> &
      Word$WdBuildingBlockTypes__wdTypeBibliography &
      34; // 34
    static +wdTypeCoverPage: Class<Word$WdBuildingBlockTypes__wdTypeCoverPage> &
      Word$WdBuildingBlockTypes__wdTypeCoverPage &
      2; // 2
    static +wdTypeCustom1: Class<Word$WdBuildingBlockTypes__wdTypeCustom1> &
      Word$WdBuildingBlockTypes__wdTypeCustom1 &
      29; // 29
    static +wdTypeCustom2: Class<Word$WdBuildingBlockTypes__wdTypeCustom2> &
      Word$WdBuildingBlockTypes__wdTypeCustom2 &
      30; // 30
    static +wdTypeCustom3: Class<Word$WdBuildingBlockTypes__wdTypeCustom3> &
      Word$WdBuildingBlockTypes__wdTypeCustom3 &
      31; // 31
    static +wdTypeCustom4: Class<Word$WdBuildingBlockTypes__wdTypeCustom4> &
      Word$WdBuildingBlockTypes__wdTypeCustom4 &
      32; // 32
    static +wdTypeCustom5: Class<Word$WdBuildingBlockTypes__wdTypeCustom5> &
      Word$WdBuildingBlockTypes__wdTypeCustom5 &
      33; // 33
    static +wdTypeCustomAutoText: Class<Word$WdBuildingBlockTypes__wdTypeCustomAutoText> &
      Word$WdBuildingBlockTypes__wdTypeCustomAutoText &
      23; // 23
    static +wdTypeCustomBibliography: Class<Word$WdBuildingBlockTypes__wdTypeCustomBibliography> &
      Word$WdBuildingBlockTypes__wdTypeCustomBibliography &
      35; // 35
    static +wdTypeCustomCoverPage: Class<Word$WdBuildingBlockTypes__wdTypeCustomCoverPage> &
      Word$WdBuildingBlockTypes__wdTypeCustomCoverPage &
      16; // 16
    static +wdTypeCustomEquations: Class<Word$WdBuildingBlockTypes__wdTypeCustomEquations> &
      Word$WdBuildingBlockTypes__wdTypeCustomEquations &
      17; // 17
    static +wdTypeCustomFooters: Class<Word$WdBuildingBlockTypes__wdTypeCustomFooters> &
      Word$WdBuildingBlockTypes__wdTypeCustomFooters &
      18; // 18
    static +wdTypeCustomHeaders: Class<Word$WdBuildingBlockTypes__wdTypeCustomHeaders> &
      Word$WdBuildingBlockTypes__wdTypeCustomHeaders &
      19; // 19
    static +wdTypeCustomPageNumber: Class<Word$WdBuildingBlockTypes__wdTypeCustomPageNumber> &
      Word$WdBuildingBlockTypes__wdTypeCustomPageNumber &
      20; // 20
    static +wdTypeCustomPageNumberBottom: Class<Word$WdBuildingBlockTypes__wdTypeCustomPageNumberBottom> &
      Word$WdBuildingBlockTypes__wdTypeCustomPageNumberBottom &
      26; // 26
    static +wdTypeCustomPageNumberPage: Class<Word$WdBuildingBlockTypes__wdTypeCustomPageNumberPage> &
      Word$WdBuildingBlockTypes__wdTypeCustomPageNumberPage &
      27; // 27
    static +wdTypeCustomPageNumberTop: Class<Word$WdBuildingBlockTypes__wdTypeCustomPageNumberTop> &
      Word$WdBuildingBlockTypes__wdTypeCustomPageNumberTop &
      25; // 25
    static +wdTypeCustomQuickParts: Class<Word$WdBuildingBlockTypes__wdTypeCustomQuickParts> &
      Word$WdBuildingBlockTypes__wdTypeCustomQuickParts &
      15; // 15
    static +wdTypeCustomTableOfContents: Class<Word$WdBuildingBlockTypes__wdTypeCustomTableOfContents> &
      Word$WdBuildingBlockTypes__wdTypeCustomTableOfContents &
      28; // 28
    static +wdTypeCustomTables: Class<Word$WdBuildingBlockTypes__wdTypeCustomTables> &
      Word$WdBuildingBlockTypes__wdTypeCustomTables &
      21; // 21
    static +wdTypeCustomTextBox: Class<Word$WdBuildingBlockTypes__wdTypeCustomTextBox> &
      Word$WdBuildingBlockTypes__wdTypeCustomTextBox &
      24; // 24
    static +wdTypeCustomWatermarks: Class<Word$WdBuildingBlockTypes__wdTypeCustomWatermarks> &
      Word$WdBuildingBlockTypes__wdTypeCustomWatermarks &
      22; // 22
    static +wdTypeEquations: Class<Word$WdBuildingBlockTypes__wdTypeEquations> &
      Word$WdBuildingBlockTypes__wdTypeEquations &
      3; // 3
    static +wdTypeFooters: Class<Word$WdBuildingBlockTypes__wdTypeFooters> &
      Word$WdBuildingBlockTypes__wdTypeFooters &
      4; // 4
    static +wdTypeHeaders: Class<Word$WdBuildingBlockTypes__wdTypeHeaders> &
      Word$WdBuildingBlockTypes__wdTypeHeaders &
      5; // 5
    static +wdTypePageNumber: Class<Word$WdBuildingBlockTypes__wdTypePageNumber> &
      Word$WdBuildingBlockTypes__wdTypePageNumber &
      6; // 6
    static +wdTypePageNumberBottom: Class<Word$WdBuildingBlockTypes__wdTypePageNumberBottom> &
      Word$WdBuildingBlockTypes__wdTypePageNumberBottom &
      12; // 12
    static +wdTypePageNumberPage: Class<Word$WdBuildingBlockTypes__wdTypePageNumberPage> &
      Word$WdBuildingBlockTypes__wdTypePageNumberPage &
      13; // 13
    static +wdTypePageNumberTop: Class<Word$WdBuildingBlockTypes__wdTypePageNumberTop> &
      Word$WdBuildingBlockTypes__wdTypePageNumberTop &
      11; // 11
    static +wdTypeQuickParts: Class<Word$WdBuildingBlockTypes__wdTypeQuickParts> &
      Word$WdBuildingBlockTypes__wdTypeQuickParts &
      1; // 1
    static +wdTypeTableOfContents: Class<Word$WdBuildingBlockTypes__wdTypeTableOfContents> &
      Word$WdBuildingBlockTypes__wdTypeTableOfContents &
      14; // 14
    static +wdTypeTables: Class<Word$WdBuildingBlockTypes__wdTypeTables> &
      Word$WdBuildingBlockTypes__wdTypeTables &
      7; // 7
    static +wdTypeTextBox: Class<Word$WdBuildingBlockTypes__wdTypeTextBox> &
      Word$WdBuildingBlockTypes__wdTypeTextBox &
      10; // 10
    static +wdTypeWatermarks: Class<Word$WdBuildingBlockTypes__wdTypeWatermarks> &
      Word$WdBuildingBlockTypes__wdTypeWatermarks &
      8; // 8
  }

  declare class Word$WdBuildingBlockTypes__wdTypeAutoText
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeBibliography
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCoverPage
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustom1
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustom2
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustom3
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustom4
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustom5
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustomAutoText
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustomBibliography
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustomCoverPage
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustomEquations
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustomFooters
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustomHeaders
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustomPageNumber
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustomPageNumberBottom
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustomPageNumberPage
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustomPageNumberTop
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustomQuickParts
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustomTableOfContents
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustomTables
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustomTextBox
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeCustomWatermarks
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeEquations
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeFooters
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeHeaders
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypePageNumber
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypePageNumberBottom
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypePageNumberPage
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypePageNumberTop
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeQuickParts
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeTableOfContents
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeTables
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeTextBox
    mixins Word$WdBuildingBlockTypes {}
  declare class Word$WdBuildingBlockTypes__wdTypeWatermarks
    mixins Word$WdBuildingBlockTypes {}

  declare class Word$WdBuiltInProperty {
    constructor(...args: empty): mixed;
    static +wdPropertyAppName: Class<Word$WdBuiltInProperty__wdPropertyAppName> &
      Word$WdBuiltInProperty__wdPropertyAppName &
      9; // 9
    static +wdPropertyAuthor: Class<Word$WdBuiltInProperty__wdPropertyAuthor> &
      Word$WdBuiltInProperty__wdPropertyAuthor &
      3; // 3
    static +wdPropertyBytes: Class<Word$WdBuiltInProperty__wdPropertyBytes> &
      Word$WdBuiltInProperty__wdPropertyBytes &
      22; // 22
    static +wdPropertyCategory: Class<Word$WdBuiltInProperty__wdPropertyCategory> &
      Word$WdBuiltInProperty__wdPropertyCategory &
      18; // 18
    static +wdPropertyCharacters: Class<Word$WdBuiltInProperty__wdPropertyCharacters> &
      Word$WdBuiltInProperty__wdPropertyCharacters &
      16; // 16
    static +wdPropertyCharsWSpaces: Class<Word$WdBuiltInProperty__wdPropertyCharsWSpaces> &
      Word$WdBuiltInProperty__wdPropertyCharsWSpaces &
      30; // 30
    static +wdPropertyComments: Class<Word$WdBuiltInProperty__wdPropertyComments> &
      Word$WdBuiltInProperty__wdPropertyComments &
      5; // 5
    static +wdPropertyCompany: Class<Word$WdBuiltInProperty__wdPropertyCompany> &
      Word$WdBuiltInProperty__wdPropertyCompany &
      21; // 21
    static +wdPropertyFormat: Class<Word$WdBuiltInProperty__wdPropertyFormat> &
      Word$WdBuiltInProperty__wdPropertyFormat &
      19; // 19
    static +wdPropertyHiddenSlides: Class<Word$WdBuiltInProperty__wdPropertyHiddenSlides> &
      Word$WdBuiltInProperty__wdPropertyHiddenSlides &
      27; // 27
    static +wdPropertyHyperlinkBase: Class<Word$WdBuiltInProperty__wdPropertyHyperlinkBase> &
      Word$WdBuiltInProperty__wdPropertyHyperlinkBase &
      29; // 29
    static +wdPropertyKeywords: Class<Word$WdBuiltInProperty__wdPropertyKeywords> &
      Word$WdBuiltInProperty__wdPropertyKeywords &
      4; // 4
    static +wdPropertyLastAuthor: Class<Word$WdBuiltInProperty__wdPropertyLastAuthor> &
      Word$WdBuiltInProperty__wdPropertyLastAuthor &
      7; // 7
    static +wdPropertyLines: Class<Word$WdBuiltInProperty__wdPropertyLines> &
      Word$WdBuiltInProperty__wdPropertyLines &
      23; // 23
    static +wdPropertyManager: Class<Word$WdBuiltInProperty__wdPropertyManager> &
      Word$WdBuiltInProperty__wdPropertyManager &
      20; // 20
    static +wdPropertyMMClips: Class<Word$WdBuiltInProperty__wdPropertyMMClips> &
      Word$WdBuiltInProperty__wdPropertyMMClips &
      28; // 28
    static +wdPropertyNotes: Class<Word$WdBuiltInProperty__wdPropertyNotes> &
      Word$WdBuiltInProperty__wdPropertyNotes &
      26; // 26
    static +wdPropertyPages: Class<Word$WdBuiltInProperty__wdPropertyPages> &
      Word$WdBuiltInProperty__wdPropertyPages &
      14; // 14
    static +wdPropertyParas: Class<Word$WdBuiltInProperty__wdPropertyParas> &
      Word$WdBuiltInProperty__wdPropertyParas &
      24; // 24
    static +wdPropertyRevision: Class<Word$WdBuiltInProperty__wdPropertyRevision> &
      Word$WdBuiltInProperty__wdPropertyRevision &
      8; // 8
    static +wdPropertySecurity: Class<Word$WdBuiltInProperty__wdPropertySecurity> &
      Word$WdBuiltInProperty__wdPropertySecurity &
      17; // 17
    static +wdPropertySlides: Class<Word$WdBuiltInProperty__wdPropertySlides> &
      Word$WdBuiltInProperty__wdPropertySlides &
      25; // 25
    static +wdPropertySubject: Class<Word$WdBuiltInProperty__wdPropertySubject> &
      Word$WdBuiltInProperty__wdPropertySubject &
      2; // 2
    static +wdPropertyTemplate: Class<Word$WdBuiltInProperty__wdPropertyTemplate> &
      Word$WdBuiltInProperty__wdPropertyTemplate &
      6; // 6
    static +wdPropertyTimeCreated: Class<Word$WdBuiltInProperty__wdPropertyTimeCreated> &
      Word$WdBuiltInProperty__wdPropertyTimeCreated &
      11; // 11
    static +wdPropertyTimeLastPrinted: Class<Word$WdBuiltInProperty__wdPropertyTimeLastPrinted> &
      Word$WdBuiltInProperty__wdPropertyTimeLastPrinted &
      10; // 10
    static +wdPropertyTimeLastSaved: Class<Word$WdBuiltInProperty__wdPropertyTimeLastSaved> &
      Word$WdBuiltInProperty__wdPropertyTimeLastSaved &
      12; // 12
    static +wdPropertyTitle: Class<Word$WdBuiltInProperty__wdPropertyTitle> &
      Word$WdBuiltInProperty__wdPropertyTitle &
      1; // 1
    static +wdPropertyVBATotalEdit: Class<Word$WdBuiltInProperty__wdPropertyVBATotalEdit> &
      Word$WdBuiltInProperty__wdPropertyVBATotalEdit &
      13; // 13
    static +wdPropertyWords: Class<Word$WdBuiltInProperty__wdPropertyWords> &
      Word$WdBuiltInProperty__wdPropertyWords &
      15; // 15
  }

  declare class Word$WdBuiltInProperty__wdPropertyAppName
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyAuthor
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyBytes
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyCategory
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyCharacters
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyCharsWSpaces
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyComments
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyCompany
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyFormat
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyHiddenSlides
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyHyperlinkBase
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyKeywords
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyLastAuthor
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyLines
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyManager
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyMMClips
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyNotes
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyPages
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyParas
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyRevision
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertySecurity
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertySlides
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertySubject
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyTemplate
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyTimeCreated
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyTimeLastPrinted
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyTimeLastSaved
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyTitle
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyVBATotalEdit
    mixins Word$WdBuiltInProperty {}
  declare class Word$WdBuiltInProperty__wdPropertyWords
    mixins Word$WdBuiltInProperty {}

  declare class Word$WdBuiltinStyle {
    constructor(...args: empty): mixed;
    static +wdStyleBibliography: Class<Word$WdBuiltinStyle__wdStyleBibliography> &
      Word$WdBuiltinStyle__wdStyleBibliography &
      -266; // -266
    static +wdStyleBlockQuotation: Class<Word$WdBuiltinStyle__wdStyleBlockQuotation> &
      Word$WdBuiltinStyle__wdStyleBlockQuotation &
      -85; // -85
    static +wdStyleBodyText: Class<Word$WdBuiltinStyle__wdStyleBodyText> &
      Word$WdBuiltinStyle__wdStyleBodyText &
      -67; // -67
    static +wdStyleBodyText2: Class<Word$WdBuiltinStyle__wdStyleBodyText2> &
      Word$WdBuiltinStyle__wdStyleBodyText2 &
      -81; // -81
    static +wdStyleBodyText3: Class<Word$WdBuiltinStyle__wdStyleBodyText3> &
      Word$WdBuiltinStyle__wdStyleBodyText3 &
      -82; // -82
    static +wdStyleBodyTextFirstIndent: Class<Word$WdBuiltinStyle__wdStyleBodyTextFirstIndent> &
      Word$WdBuiltinStyle__wdStyleBodyTextFirstIndent &
      -78; // -78
    static +wdStyleBodyTextFirstIndent2: Class<Word$WdBuiltinStyle__wdStyleBodyTextFirstIndent2> &
      Word$WdBuiltinStyle__wdStyleBodyTextFirstIndent2 &
      -79; // -79
    static +wdStyleBodyTextIndent: Class<Word$WdBuiltinStyle__wdStyleBodyTextIndent> &
      Word$WdBuiltinStyle__wdStyleBodyTextIndent &
      -68; // -68
    static +wdStyleBodyTextIndent2: Class<Word$WdBuiltinStyle__wdStyleBodyTextIndent2> &
      Word$WdBuiltinStyle__wdStyleBodyTextIndent2 &
      -83; // -83
    static +wdStyleBodyTextIndent3: Class<Word$WdBuiltinStyle__wdStyleBodyTextIndent3> &
      Word$WdBuiltinStyle__wdStyleBodyTextIndent3 &
      -84; // -84
    static +wdStyleBookTitle: Class<Word$WdBuiltinStyle__wdStyleBookTitle> &
      Word$WdBuiltinStyle__wdStyleBookTitle &
      -265; // -265
    static +wdStyleCaption: Class<Word$WdBuiltinStyle__wdStyleCaption> &
      Word$WdBuiltinStyle__wdStyleCaption &
      -35; // -35
    static +wdStyleClosing: Class<Word$WdBuiltinStyle__wdStyleClosing> &
      Word$WdBuiltinStyle__wdStyleClosing &
      -64; // -64
    static +wdStyleCommentReference: Class<Word$WdBuiltinStyle__wdStyleCommentReference> &
      Word$WdBuiltinStyle__wdStyleCommentReference &
      -40; // -40
    static +wdStyleCommentText: Class<Word$WdBuiltinStyle__wdStyleCommentText> &
      Word$WdBuiltinStyle__wdStyleCommentText &
      -31; // -31
    static +wdStyleDate: Class<Word$WdBuiltinStyle__wdStyleDate> &
      Word$WdBuiltinStyle__wdStyleDate &
      -77; // -77
    static +wdStyleDefaultParagraphFont: Class<Word$WdBuiltinStyle__wdStyleDefaultParagraphFont> &
      Word$WdBuiltinStyle__wdStyleDefaultParagraphFont &
      -66; // -66
    static +wdStyleEmphasis: Class<Word$WdBuiltinStyle__wdStyleEmphasis> &
      Word$WdBuiltinStyle__wdStyleEmphasis &
      -89; // -89
    static +wdStyleEndnoteReference: Class<Word$WdBuiltinStyle__wdStyleEndnoteReference> &
      Word$WdBuiltinStyle__wdStyleEndnoteReference &
      -43; // -43
    static +wdStyleEndnoteText: Class<Word$WdBuiltinStyle__wdStyleEndnoteText> &
      Word$WdBuiltinStyle__wdStyleEndnoteText &
      -44; // -44
    static +wdStyleEnvelopeAddress: Class<Word$WdBuiltinStyle__wdStyleEnvelopeAddress> &
      Word$WdBuiltinStyle__wdStyleEnvelopeAddress &
      -37; // -37
    static +wdStyleEnvelopeReturn: Class<Word$WdBuiltinStyle__wdStyleEnvelopeReturn> &
      Word$WdBuiltinStyle__wdStyleEnvelopeReturn &
      -38; // -38
    static +wdStyleFooter: Class<Word$WdBuiltinStyle__wdStyleFooter> &
      Word$WdBuiltinStyle__wdStyleFooter &
      -33; // -33
    static +wdStyleFootnoteReference: Class<Word$WdBuiltinStyle__wdStyleFootnoteReference> &
      Word$WdBuiltinStyle__wdStyleFootnoteReference &
      -39; // -39
    static +wdStyleFootnoteText: Class<Word$WdBuiltinStyle__wdStyleFootnoteText> &
      Word$WdBuiltinStyle__wdStyleFootnoteText &
      -30; // -30
    static +wdStyleHeader: Class<Word$WdBuiltinStyle__wdStyleHeader> &
      Word$WdBuiltinStyle__wdStyleHeader &
      -32; // -32
    static +wdStyleHeading1: Class<Word$WdBuiltinStyle__wdStyleHeading1> &
      Word$WdBuiltinStyle__wdStyleHeading1 &
      -2; // -2
    static +wdStyleHeading2: Class<Word$WdBuiltinStyle__wdStyleHeading2> &
      Word$WdBuiltinStyle__wdStyleHeading2 &
      -3; // -3
    static +wdStyleHeading3: Class<Word$WdBuiltinStyle__wdStyleHeading3> &
      Word$WdBuiltinStyle__wdStyleHeading3 &
      -4; // -4
    static +wdStyleHeading4: Class<Word$WdBuiltinStyle__wdStyleHeading4> &
      Word$WdBuiltinStyle__wdStyleHeading4 &
      -5; // -5
    static +wdStyleHeading5: Class<Word$WdBuiltinStyle__wdStyleHeading5> &
      Word$WdBuiltinStyle__wdStyleHeading5 &
      -6; // -6
    static +wdStyleHeading6: Class<Word$WdBuiltinStyle__wdStyleHeading6> &
      Word$WdBuiltinStyle__wdStyleHeading6 &
      -7; // -7
    static +wdStyleHeading7: Class<Word$WdBuiltinStyle__wdStyleHeading7> &
      Word$WdBuiltinStyle__wdStyleHeading7 &
      -8; // -8
    static +wdStyleHeading8: Class<Word$WdBuiltinStyle__wdStyleHeading8> &
      Word$WdBuiltinStyle__wdStyleHeading8 &
      -9; // -9
    static +wdStyleHeading9: Class<Word$WdBuiltinStyle__wdStyleHeading9> &
      Word$WdBuiltinStyle__wdStyleHeading9 &
      -10; // -10
    static +wdStyleHtmlAcronym: Class<Word$WdBuiltinStyle__wdStyleHtmlAcronym> &
      Word$WdBuiltinStyle__wdStyleHtmlAcronym &
      -96; // -96
    static +wdStyleHtmlAddress: Class<Word$WdBuiltinStyle__wdStyleHtmlAddress> &
      Word$WdBuiltinStyle__wdStyleHtmlAddress &
      -97; // -97
    static +wdStyleHtmlCite: Class<Word$WdBuiltinStyle__wdStyleHtmlCite> &
      Word$WdBuiltinStyle__wdStyleHtmlCite &
      -98; // -98
    static +wdStyleHtmlCode: Class<Word$WdBuiltinStyle__wdStyleHtmlCode> &
      Word$WdBuiltinStyle__wdStyleHtmlCode &
      -99; // -99
    static +wdStyleHtmlDfn: Class<Word$WdBuiltinStyle__wdStyleHtmlDfn> &
      Word$WdBuiltinStyle__wdStyleHtmlDfn &
      -100; // -100
    static +wdStyleHtmlKbd: Class<Word$WdBuiltinStyle__wdStyleHtmlKbd> &
      Word$WdBuiltinStyle__wdStyleHtmlKbd &
      -101; // -101
    static +wdStyleHtmlNormal: Class<Word$WdBuiltinStyle__wdStyleHtmlNormal> &
      Word$WdBuiltinStyle__wdStyleHtmlNormal &
      -95; // -95
    static +wdStyleHtmlPre: Class<Word$WdBuiltinStyle__wdStyleHtmlPre> &
      Word$WdBuiltinStyle__wdStyleHtmlPre &
      -102; // -102
    static +wdStyleHtmlSamp: Class<Word$WdBuiltinStyle__wdStyleHtmlSamp> &
      Word$WdBuiltinStyle__wdStyleHtmlSamp &
      -103; // -103
    static +wdStyleHtmlTt: Class<Word$WdBuiltinStyle__wdStyleHtmlTt> &
      Word$WdBuiltinStyle__wdStyleHtmlTt &
      -104; // -104
    static +wdStyleHtmlVar: Class<Word$WdBuiltinStyle__wdStyleHtmlVar> &
      Word$WdBuiltinStyle__wdStyleHtmlVar &
      -105; // -105
    static +wdStyleHyperlink: Class<Word$WdBuiltinStyle__wdStyleHyperlink> &
      Word$WdBuiltinStyle__wdStyleHyperlink &
      -86; // -86
    static +wdStyleHyperlinkFollowed: Class<Word$WdBuiltinStyle__wdStyleHyperlinkFollowed> &
      Word$WdBuiltinStyle__wdStyleHyperlinkFollowed &
      -87; // -87
    static +wdStyleIndex1: Class<Word$WdBuiltinStyle__wdStyleIndex1> &
      Word$WdBuiltinStyle__wdStyleIndex1 &
      -11; // -11
    static +wdStyleIndex2: Class<Word$WdBuiltinStyle__wdStyleIndex2> &
      Word$WdBuiltinStyle__wdStyleIndex2 &
      -12; // -12
    static +wdStyleIndex3: Class<Word$WdBuiltinStyle__wdStyleIndex3> &
      Word$WdBuiltinStyle__wdStyleIndex3 &
      -13; // -13
    static +wdStyleIndex4: Class<Word$WdBuiltinStyle__wdStyleIndex4> &
      Word$WdBuiltinStyle__wdStyleIndex4 &
      -14; // -14
    static +wdStyleIndex5: Class<Word$WdBuiltinStyle__wdStyleIndex5> &
      Word$WdBuiltinStyle__wdStyleIndex5 &
      -15; // -15
    static +wdStyleIndex6: Class<Word$WdBuiltinStyle__wdStyleIndex6> &
      Word$WdBuiltinStyle__wdStyleIndex6 &
      -16; // -16
    static +wdStyleIndex7: Class<Word$WdBuiltinStyle__wdStyleIndex7> &
      Word$WdBuiltinStyle__wdStyleIndex7 &
      -17; // -17
    static +wdStyleIndex8: Class<Word$WdBuiltinStyle__wdStyleIndex8> &
      Word$WdBuiltinStyle__wdStyleIndex8 &
      -18; // -18
    static +wdStyleIndex9: Class<Word$WdBuiltinStyle__wdStyleIndex9> &
      Word$WdBuiltinStyle__wdStyleIndex9 &
      -19; // -19
    static +wdStyleIndexHeading: Class<Word$WdBuiltinStyle__wdStyleIndexHeading> &
      Word$WdBuiltinStyle__wdStyleIndexHeading &
      -34; // -34
    static +wdStyleIntenseEmphasis: Class<Word$WdBuiltinStyle__wdStyleIntenseEmphasis> &
      Word$WdBuiltinStyle__wdStyleIntenseEmphasis &
      -262; // -262
    static +wdStyleIntenseQuote: Class<Word$WdBuiltinStyle__wdStyleIntenseQuote> &
      Word$WdBuiltinStyle__wdStyleIntenseQuote &
      -182; // -182
    static +wdStyleIntenseReference: Class<Word$WdBuiltinStyle__wdStyleIntenseReference> &
      Word$WdBuiltinStyle__wdStyleIntenseReference &
      -264; // -264
    static +wdStyleLineNumber: Class<Word$WdBuiltinStyle__wdStyleLineNumber> &
      Word$WdBuiltinStyle__wdStyleLineNumber &
      -41; // -41
    static +wdStyleList: Class<Word$WdBuiltinStyle__wdStyleList> &
      Word$WdBuiltinStyle__wdStyleList &
      -48; // -48
    static +wdStyleList2: Class<Word$WdBuiltinStyle__wdStyleList2> &
      Word$WdBuiltinStyle__wdStyleList2 &
      -51; // -51
    static +wdStyleList3: Class<Word$WdBuiltinStyle__wdStyleList3> &
      Word$WdBuiltinStyle__wdStyleList3 &
      -52; // -52
    static +wdStyleList4: Class<Word$WdBuiltinStyle__wdStyleList4> &
      Word$WdBuiltinStyle__wdStyleList4 &
      -53; // -53
    static +wdStyleList5: Class<Word$WdBuiltinStyle__wdStyleList5> &
      Word$WdBuiltinStyle__wdStyleList5 &
      -54; // -54
    static +wdStyleListBullet: Class<Word$WdBuiltinStyle__wdStyleListBullet> &
      Word$WdBuiltinStyle__wdStyleListBullet &
      -49; // -49
    static +wdStyleListBullet2: Class<Word$WdBuiltinStyle__wdStyleListBullet2> &
      Word$WdBuiltinStyle__wdStyleListBullet2 &
      -55; // -55
    static +wdStyleListBullet3: Class<Word$WdBuiltinStyle__wdStyleListBullet3> &
      Word$WdBuiltinStyle__wdStyleListBullet3 &
      -56; // -56
    static +wdStyleListBullet4: Class<Word$WdBuiltinStyle__wdStyleListBullet4> &
      Word$WdBuiltinStyle__wdStyleListBullet4 &
      -57; // -57
    static +wdStyleListBullet5: Class<Word$WdBuiltinStyle__wdStyleListBullet5> &
      Word$WdBuiltinStyle__wdStyleListBullet5 &
      -58; // -58
    static +wdStyleListContinue: Class<Word$WdBuiltinStyle__wdStyleListContinue> &
      Word$WdBuiltinStyle__wdStyleListContinue &
      -69; // -69
    static +wdStyleListContinue2: Class<Word$WdBuiltinStyle__wdStyleListContinue2> &
      Word$WdBuiltinStyle__wdStyleListContinue2 &
      -70; // -70
    static +wdStyleListContinue3: Class<Word$WdBuiltinStyle__wdStyleListContinue3> &
      Word$WdBuiltinStyle__wdStyleListContinue3 &
      -71; // -71
    static +wdStyleListContinue4: Class<Word$WdBuiltinStyle__wdStyleListContinue4> &
      Word$WdBuiltinStyle__wdStyleListContinue4 &
      -72; // -72
    static +wdStyleListContinue5: Class<Word$WdBuiltinStyle__wdStyleListContinue5> &
      Word$WdBuiltinStyle__wdStyleListContinue5 &
      -73; // -73
    static +wdStyleListNumber: Class<Word$WdBuiltinStyle__wdStyleListNumber> &
      Word$WdBuiltinStyle__wdStyleListNumber &
      -50; // -50
    static +wdStyleListNumber2: Class<Word$WdBuiltinStyle__wdStyleListNumber2> &
      Word$WdBuiltinStyle__wdStyleListNumber2 &
      -59; // -59
    static +wdStyleListNumber3: Class<Word$WdBuiltinStyle__wdStyleListNumber3> &
      Word$WdBuiltinStyle__wdStyleListNumber3 &
      -60; // -60
    static +wdStyleListNumber4: Class<Word$WdBuiltinStyle__wdStyleListNumber4> &
      Word$WdBuiltinStyle__wdStyleListNumber4 &
      -61; // -61
    static +wdStyleListNumber5: Class<Word$WdBuiltinStyle__wdStyleListNumber5> &
      Word$WdBuiltinStyle__wdStyleListNumber5 &
      -62; // -62
    static +wdStyleListParagraph: Class<Word$WdBuiltinStyle__wdStyleListParagraph> &
      Word$WdBuiltinStyle__wdStyleListParagraph &
      -180; // -180
    static +wdStyleMacroText: Class<Word$WdBuiltinStyle__wdStyleMacroText> &
      Word$WdBuiltinStyle__wdStyleMacroText &
      -46; // -46
    static +wdStyleMessageHeader: Class<Word$WdBuiltinStyle__wdStyleMessageHeader> &
      Word$WdBuiltinStyle__wdStyleMessageHeader &
      -74; // -74
    static +wdStyleNavPane: Class<Word$WdBuiltinStyle__wdStyleNavPane> &
      Word$WdBuiltinStyle__wdStyleNavPane &
      -90; // -90
    static +wdStyleNormal: Class<Word$WdBuiltinStyle__wdStyleNormal> &
      Word$WdBuiltinStyle__wdStyleNormal &
      -1; // -1
    static +wdStyleNormalIndent: Class<Word$WdBuiltinStyle__wdStyleNormalIndent> &
      Word$WdBuiltinStyle__wdStyleNormalIndent &
      -29; // -29
    static +wdStyleNormalObject: Class<Word$WdBuiltinStyle__wdStyleNormalObject> &
      Word$WdBuiltinStyle__wdStyleNormalObject &
      -158; // -158
    static +wdStyleNormalTable: Class<Word$WdBuiltinStyle__wdStyleNormalTable> &
      Word$WdBuiltinStyle__wdStyleNormalTable &
      -106; // -106
    static +wdStyleNoteHeading: Class<Word$WdBuiltinStyle__wdStyleNoteHeading> &
      Word$WdBuiltinStyle__wdStyleNoteHeading &
      -80; // -80
    static +wdStylePageNumber: Class<Word$WdBuiltinStyle__wdStylePageNumber> &
      Word$WdBuiltinStyle__wdStylePageNumber &
      -42; // -42
    static +wdStylePlainText: Class<Word$WdBuiltinStyle__wdStylePlainText> &
      Word$WdBuiltinStyle__wdStylePlainText &
      -91; // -91
    static +wdStyleQuote: Class<Word$WdBuiltinStyle__wdStyleQuote> &
      Word$WdBuiltinStyle__wdStyleQuote &
      -181; // -181
    static +wdStyleSalutation: Class<Word$WdBuiltinStyle__wdStyleSalutation> &
      Word$WdBuiltinStyle__wdStyleSalutation &
      -76; // -76
    static +wdStyleSignature: Class<Word$WdBuiltinStyle__wdStyleSignature> &
      Word$WdBuiltinStyle__wdStyleSignature &
      -65; // -65
    static +wdStyleStrong: Class<Word$WdBuiltinStyle__wdStyleStrong> &
      Word$WdBuiltinStyle__wdStyleStrong &
      -88; // -88
    static +wdStyleSubtitle: Class<Word$WdBuiltinStyle__wdStyleSubtitle> &
      Word$WdBuiltinStyle__wdStyleSubtitle &
      -75; // -75
    static +wdStyleSubtleEmphasis: Class<Word$WdBuiltinStyle__wdStyleSubtleEmphasis> &
      Word$WdBuiltinStyle__wdStyleSubtleEmphasis &
      -261; // -261
    static +wdStyleSubtleReference: Class<Word$WdBuiltinStyle__wdStyleSubtleReference> &
      Word$WdBuiltinStyle__wdStyleSubtleReference &
      -263; // -263
    static +wdStyleTableColorfulGrid: Class<Word$WdBuiltinStyle__wdStyleTableColorfulGrid> &
      Word$WdBuiltinStyle__wdStyleTableColorfulGrid &
      -172; // -172
    static +wdStyleTableColorfulList: Class<Word$WdBuiltinStyle__wdStyleTableColorfulList> &
      Word$WdBuiltinStyle__wdStyleTableColorfulList &
      -171; // -171
    static +wdStyleTableColorfulShading: Class<Word$WdBuiltinStyle__wdStyleTableColorfulShading> &
      Word$WdBuiltinStyle__wdStyleTableColorfulShading &
      -170; // -170
    static +wdStyleTableDarkList: Class<Word$WdBuiltinStyle__wdStyleTableDarkList> &
      Word$WdBuiltinStyle__wdStyleTableDarkList &
      -169; // -169
    static +wdStyleTableLightGrid: Class<Word$WdBuiltinStyle__wdStyleTableLightGrid> &
      Word$WdBuiltinStyle__wdStyleTableLightGrid &
      -161; // -161
    static +wdStyleTableLightGridAccent1: Class<Word$WdBuiltinStyle__wdStyleTableLightGridAccent1> &
      Word$WdBuiltinStyle__wdStyleTableLightGridAccent1 &
      -175; // -175
    static +wdStyleTableLightList: Class<Word$WdBuiltinStyle__wdStyleTableLightList> &
      Word$WdBuiltinStyle__wdStyleTableLightList &
      -160; // -160
    static +wdStyleTableLightListAccent1: Class<Word$WdBuiltinStyle__wdStyleTableLightListAccent1> &
      Word$WdBuiltinStyle__wdStyleTableLightListAccent1 &
      -174; // -174
    static +wdStyleTableLightShading: Class<Word$WdBuiltinStyle__wdStyleTableLightShading> &
      Word$WdBuiltinStyle__wdStyleTableLightShading &
      -159; // -159
    static +wdStyleTableLightShadingAccent1: Class<Word$WdBuiltinStyle__wdStyleTableLightShadingAccent1> &
      Word$WdBuiltinStyle__wdStyleTableLightShadingAccent1 &
      -173; // -173
    static +wdStyleTableMediumGrid1: Class<Word$WdBuiltinStyle__wdStyleTableMediumGrid1> &
      Word$WdBuiltinStyle__wdStyleTableMediumGrid1 &
      -166; // -166
    static +wdStyleTableMediumGrid2: Class<Word$WdBuiltinStyle__wdStyleTableMediumGrid2> &
      Word$WdBuiltinStyle__wdStyleTableMediumGrid2 &
      -167; // -167
    static +wdStyleTableMediumGrid3: Class<Word$WdBuiltinStyle__wdStyleTableMediumGrid3> &
      Word$WdBuiltinStyle__wdStyleTableMediumGrid3 &
      -168; // -168
    static +wdStyleTableMediumList1: Class<Word$WdBuiltinStyle__wdStyleTableMediumList1> &
      Word$WdBuiltinStyle__wdStyleTableMediumList1 &
      -164; // -164
    static +wdStyleTableMediumList1Accent1: Class<Word$WdBuiltinStyle__wdStyleTableMediumList1Accent1> &
      Word$WdBuiltinStyle__wdStyleTableMediumList1Accent1 &
      -178; // -178
    static +wdStyleTableMediumList2: Class<Word$WdBuiltinStyle__wdStyleTableMediumList2> &
      Word$WdBuiltinStyle__wdStyleTableMediumList2 &
      -165; // -165
    static +wdStyleTableMediumShading1: Class<Word$WdBuiltinStyle__wdStyleTableMediumShading1> &
      Word$WdBuiltinStyle__wdStyleTableMediumShading1 &
      -162; // -162
    static +wdStyleTableMediumShading1Accent1: Class<Word$WdBuiltinStyle__wdStyleTableMediumShading1Accent1> &
      Word$WdBuiltinStyle__wdStyleTableMediumShading1Accent1 &
      -176; // -176
    static +wdStyleTableMediumShading2: Class<Word$WdBuiltinStyle__wdStyleTableMediumShading2> &
      Word$WdBuiltinStyle__wdStyleTableMediumShading2 &
      -163; // -163
    static +wdStyleTableMediumShading2Accent1: Class<Word$WdBuiltinStyle__wdStyleTableMediumShading2Accent1> &
      Word$WdBuiltinStyle__wdStyleTableMediumShading2Accent1 &
      -177; // -177
    static +wdStyleTableOfAuthorities: Class<Word$WdBuiltinStyle__wdStyleTableOfAuthorities> &
      Word$WdBuiltinStyle__wdStyleTableOfAuthorities &
      -45; // -45
    static +wdStyleTableOfFigures: Class<Word$WdBuiltinStyle__wdStyleTableOfFigures> &
      Word$WdBuiltinStyle__wdStyleTableOfFigures &
      -36; // -36
    static +wdStyleTitle: Class<Word$WdBuiltinStyle__wdStyleTitle> &
      Word$WdBuiltinStyle__wdStyleTitle &
      -63; // -63
    static +wdStyleTOAHeading: Class<Word$WdBuiltinStyle__wdStyleTOAHeading> &
      Word$WdBuiltinStyle__wdStyleTOAHeading &
      -47; // -47
    static +wdStyleTOC1: Class<Word$WdBuiltinStyle__wdStyleTOC1> &
      Word$WdBuiltinStyle__wdStyleTOC1 &
      -20; // -20
    static +wdStyleTOC2: Class<Word$WdBuiltinStyle__wdStyleTOC2> &
      Word$WdBuiltinStyle__wdStyleTOC2 &
      -21; // -21
    static +wdStyleTOC3: Class<Word$WdBuiltinStyle__wdStyleTOC3> &
      Word$WdBuiltinStyle__wdStyleTOC3 &
      -22; // -22
    static +wdStyleTOC4: Class<Word$WdBuiltinStyle__wdStyleTOC4> &
      Word$WdBuiltinStyle__wdStyleTOC4 &
      -23; // -23
    static +wdStyleTOC5: Class<Word$WdBuiltinStyle__wdStyleTOC5> &
      Word$WdBuiltinStyle__wdStyleTOC5 &
      -24; // -24
    static +wdStyleTOC6: Class<Word$WdBuiltinStyle__wdStyleTOC6> &
      Word$WdBuiltinStyle__wdStyleTOC6 &
      -25; // -25
    static +wdStyleTOC7: Class<Word$WdBuiltinStyle__wdStyleTOC7> &
      Word$WdBuiltinStyle__wdStyleTOC7 &
      -26; // -26
    static +wdStyleTOC8: Class<Word$WdBuiltinStyle__wdStyleTOC8> &
      Word$WdBuiltinStyle__wdStyleTOC8 &
      -27; // -27
    static +wdStyleTOC9: Class<Word$WdBuiltinStyle__wdStyleTOC9> &
      Word$WdBuiltinStyle__wdStyleTOC9 &
      -28; // -28
    static +wdStyleTocHeading: Class<Word$WdBuiltinStyle__wdStyleTocHeading> &
      Word$WdBuiltinStyle__wdStyleTocHeading &
      -267; // -267
  }

  declare class Word$WdBuiltinStyle__wdStyleBibliography
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleBlockQuotation
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleBodyText
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleBodyText2
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleBodyText3
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleBodyTextFirstIndent
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleBodyTextFirstIndent2
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleBodyTextIndent
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleBodyTextIndent2
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleBodyTextIndent3
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleBookTitle
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleCaption
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleClosing
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleCommentReference
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleCommentText
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleDate mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleDefaultParagraphFont
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleEmphasis
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleEndnoteReference
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleEndnoteText
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleEnvelopeAddress
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleEnvelopeReturn
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleFooter mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleFootnoteReference
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleFootnoteText
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHeader mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHeading1
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHeading2
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHeading3
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHeading4
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHeading5
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHeading6
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHeading7
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHeading8
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHeading9
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHtmlAcronym
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHtmlAddress
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHtmlCite
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHtmlCode
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHtmlDfn
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHtmlKbd
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHtmlNormal
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHtmlPre
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHtmlSamp
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHtmlTt mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHtmlVar
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHyperlink
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleHyperlinkFollowed
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleIndex1 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleIndex2 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleIndex3 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleIndex4 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleIndex5 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleIndex6 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleIndex7 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleIndex8 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleIndex9 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleIndexHeading
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleIntenseEmphasis
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleIntenseQuote
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleIntenseReference
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleLineNumber
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleList mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleList2 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleList3 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleList4 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleList5 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleListBullet
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleListBullet2
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleListBullet3
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleListBullet4
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleListBullet5
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleListContinue
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleListContinue2
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleListContinue3
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleListContinue4
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleListContinue5
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleListNumber
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleListNumber2
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleListNumber3
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleListNumber4
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleListNumber5
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleListParagraph
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleMacroText
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleMessageHeader
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleNavPane
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleNormal mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleNormalIndent
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleNormalObject
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleNormalTable
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleNoteHeading
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStylePageNumber
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStylePlainText
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleQuote mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleSalutation
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleSignature
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleStrong mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleSubtitle
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleSubtleEmphasis
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleSubtleReference
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableColorfulGrid
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableColorfulList
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableColorfulShading
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableDarkList
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableLightGrid
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableLightGridAccent1
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableLightList
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableLightListAccent1
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableLightShading
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableLightShadingAccent1
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableMediumGrid1
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableMediumGrid2
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableMediumGrid3
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableMediumList1
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableMediumList1Accent1
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableMediumList2
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableMediumShading1
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableMediumShading1Accent1
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableMediumShading2
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableMediumShading2Accent1
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableOfAuthorities
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTableOfFigures
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTitle mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTOAHeading
    mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTOC1 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTOC2 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTOC3 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTOC4 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTOC5 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTOC6 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTOC7 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTOC8 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTOC9 mixins Word$WdBuiltinStyle {}
  declare class Word$WdBuiltinStyle__wdStyleTocHeading
    mixins Word$WdBuiltinStyle {}

  declare class Word$WdCalendarType {
    constructor(...args: empty): mixed;
    static +wdCalendarArabic: Class<Word$WdCalendarType__wdCalendarArabic> &
      Word$WdCalendarType__wdCalendarArabic &
      1; // 1
    static +wdCalendarHebrew: Class<Word$WdCalendarType__wdCalendarHebrew> &
      Word$WdCalendarType__wdCalendarHebrew &
      2; // 2
    static +wdCalendarJapan: Class<Word$WdCalendarType__wdCalendarJapan> &
      Word$WdCalendarType__wdCalendarJapan &
      4; // 4
    static +wdCalendarKorean: Class<Word$WdCalendarType__wdCalendarKorean> &
      Word$WdCalendarType__wdCalendarKorean &
      6; // 6
    static +wdCalendarSakaEra: Class<Word$WdCalendarType__wdCalendarSakaEra> &
      Word$WdCalendarType__wdCalendarSakaEra &
      7; // 7
    static +wdCalendarTaiwan: Class<Word$WdCalendarType__wdCalendarTaiwan> &
      Word$WdCalendarType__wdCalendarTaiwan &
      3; // 3
    static +wdCalendarThai: Class<Word$WdCalendarType__wdCalendarThai> &
      Word$WdCalendarType__wdCalendarThai &
      5; // 5
    static +wdCalendarTranslitEnglish: Class<Word$WdCalendarType__wdCalendarTranslitEnglish> &
      Word$WdCalendarType__wdCalendarTranslitEnglish &
      8; // 8
    static +wdCalendarTranslitFrench: Class<Word$WdCalendarType__wdCalendarTranslitFrench> &
      Word$WdCalendarType__wdCalendarTranslitFrench &
      9; // 9
    static +wdCalendarUmalqura: Class<Word$WdCalendarType__wdCalendarUmalqura> &
      Word$WdCalendarType__wdCalendarUmalqura &
      13; // 13
    static +wdCalendarWestern: Class<Word$WdCalendarType__wdCalendarWestern> &
      Word$WdCalendarType__wdCalendarWestern &
      0; // 0
  }

  declare class Word$WdCalendarType__wdCalendarArabic
    mixins Word$WdCalendarType {}
  declare class Word$WdCalendarType__wdCalendarHebrew
    mixins Word$WdCalendarType {}
  declare class Word$WdCalendarType__wdCalendarJapan
    mixins Word$WdCalendarType {}
  declare class Word$WdCalendarType__wdCalendarKorean
    mixins Word$WdCalendarType {}
  declare class Word$WdCalendarType__wdCalendarSakaEra
    mixins Word$WdCalendarType {}
  declare class Word$WdCalendarType__wdCalendarTaiwan
    mixins Word$WdCalendarType {}
  declare class Word$WdCalendarType__wdCalendarThai
    mixins Word$WdCalendarType {}
  declare class Word$WdCalendarType__wdCalendarTranslitEnglish
    mixins Word$WdCalendarType {}
  declare class Word$WdCalendarType__wdCalendarTranslitFrench
    mixins Word$WdCalendarType {}
  declare class Word$WdCalendarType__wdCalendarUmalqura
    mixins Word$WdCalendarType {}
  declare class Word$WdCalendarType__wdCalendarWestern
    mixins Word$WdCalendarType {}

  declare class Word$WdCalendarTypeBi {
    constructor(...args: empty): mixed;
    static +wdCalendarTypeBidi: Class<Word$WdCalendarTypeBi__wdCalendarTypeBidi> &
      Word$WdCalendarTypeBi__wdCalendarTypeBidi &
      99; // 99
    static +wdCalendarTypeGregorian: Class<Word$WdCalendarTypeBi__wdCalendarTypeGregorian> &
      Word$WdCalendarTypeBi__wdCalendarTypeGregorian &
      100; // 100
  }

  declare class Word$WdCalendarTypeBi__wdCalendarTypeBidi
    mixins Word$WdCalendarTypeBi {}
  declare class Word$WdCalendarTypeBi__wdCalendarTypeGregorian
    mixins Word$WdCalendarTypeBi {}

  declare class Word$WdCaptionLabelID {
    constructor(...args: empty): mixed;
    static +wdCaptionEquation: Class<Word$WdCaptionLabelID__wdCaptionEquation> &
      Word$WdCaptionLabelID__wdCaptionEquation &
      -3; // -3
    static +wdCaptionFigure: Class<Word$WdCaptionLabelID__wdCaptionFigure> &
      Word$WdCaptionLabelID__wdCaptionFigure &
      -1; // -1
    static +wdCaptionTable: Class<Word$WdCaptionLabelID__wdCaptionTable> &
      Word$WdCaptionLabelID__wdCaptionTable &
      -2; // -2
  }

  declare class Word$WdCaptionLabelID__wdCaptionEquation
    mixins Word$WdCaptionLabelID {}
  declare class Word$WdCaptionLabelID__wdCaptionFigure
    mixins Word$WdCaptionLabelID {}
  declare class Word$WdCaptionLabelID__wdCaptionTable
    mixins Word$WdCaptionLabelID {}

  declare class Word$WdCaptionNumberStyle {
    constructor(...args: empty): mixed;
    static +wdCaptionNumberStyleArabic: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleArabic> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleArabic &
      0; // 0
    static +wdCaptionNumberStyleArabicFullWidth: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleArabicFullWidth> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleArabicFullWidth &
      14; // 14
    static +wdCaptionNumberStyleArabicLetter1: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleArabicLetter1> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleArabicLetter1 &
      46; // 46
    static +wdCaptionNumberStyleArabicLetter2: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleArabicLetter2> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleArabicLetter2 &
      48; // 48
    static +wdCaptionNumberStyleChosung: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleChosung> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleChosung &
      25; // 25
    static +wdCaptionNumberStyleGanada: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleGanada> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleGanada &
      24; // 24
    static +wdCaptionNumberStyleHanjaRead: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleHanjaRead> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleHanjaRead &
      41; // 41
    static +wdCaptionNumberStyleHanjaReadDigit: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleHanjaReadDigit> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleHanjaReadDigit &
      42; // 42
    static +wdCaptionNumberStyleHebrewLetter1: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleHebrewLetter1> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleHebrewLetter1 &
      45; // 45
    static +wdCaptionNumberStyleHebrewLetter2: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleHebrewLetter2> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleHebrewLetter2 &
      47; // 47
    static +wdCaptionNumberStyleHindiArabic: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleHindiArabic> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleHindiArabic &
      51; // 51
    static +wdCaptionNumberStyleHindiCardinalText: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleHindiCardinalText> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleHindiCardinalText &
      52; // 52
    static +wdCaptionNumberStyleHindiLetter1: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleHindiLetter1> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleHindiLetter1 &
      49; // 49
    static +wdCaptionNumberStyleHindiLetter2: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleHindiLetter2> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleHindiLetter2 &
      50; // 50
    static +wdCaptionNumberStyleKanji: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleKanji> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleKanji &
      10; // 10
    static +wdCaptionNumberStyleKanjiDigit: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleKanjiDigit> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleKanjiDigit &
      11; // 11
    static +wdCaptionNumberStyleKanjiTraditional: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleKanjiTraditional> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleKanjiTraditional &
      16; // 16
    static +wdCaptionNumberStyleLowercaseLetter: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleLowercaseLetter> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleLowercaseLetter &
      4; // 4
    static +wdCaptionNumberStyleLowercaseRoman: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleLowercaseRoman> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleLowercaseRoman &
      2; // 2
    static +wdCaptionNumberStyleNumberInCircle: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleNumberInCircle> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleNumberInCircle &
      18; // 18
    static +wdCaptionNumberStyleSimpChinNum2: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleSimpChinNum2> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleSimpChinNum2 &
      38; // 38
    static +wdCaptionNumberStyleSimpChinNum3: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleSimpChinNum3> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleSimpChinNum3 &
      39; // 39
    static +wdCaptionNumberStyleThaiArabic: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleThaiArabic> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleThaiArabic &
      54; // 54
    static +wdCaptionNumberStyleThaiCardinalText: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleThaiCardinalText> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleThaiCardinalText &
      55; // 55
    static +wdCaptionNumberStyleThaiLetter: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleThaiLetter> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleThaiLetter &
      53; // 53
    static +wdCaptionNumberStyleTradChinNum2: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleTradChinNum2> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleTradChinNum2 &
      34; // 34
    static +wdCaptionNumberStyleTradChinNum3: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleTradChinNum3> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleTradChinNum3 &
      35; // 35
    static +wdCaptionNumberStyleUppercaseLetter: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleUppercaseLetter> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleUppercaseLetter &
      3; // 3
    static +wdCaptionNumberStyleUppercaseRoman: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleUppercaseRoman> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleUppercaseRoman &
      1; // 1
    static +wdCaptionNumberStyleVietCardinalText: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleVietCardinalText> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleVietCardinalText &
      56; // 56
    static +wdCaptionNumberStyleZodiac1: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleZodiac1> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleZodiac1 &
      30; // 30
    static +wdCaptionNumberStyleZodiac2: Class<Word$WdCaptionNumberStyle__wdCaptionNumberStyleZodiac2> &
      Word$WdCaptionNumberStyle__wdCaptionNumberStyleZodiac2 &
      31; // 31
  }

  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleArabic
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleArabicFullWidth
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleArabicLetter1
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleArabicLetter2
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleChosung
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleGanada
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleHanjaRead
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleHanjaReadDigit
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleHebrewLetter1
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleHebrewLetter2
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleHindiArabic
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleHindiCardinalText
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleHindiLetter1
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleHindiLetter2
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleKanji
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleKanjiDigit
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleKanjiTraditional
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleLowercaseLetter
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleLowercaseRoman
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleNumberInCircle
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleSimpChinNum2
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleSimpChinNum3
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleThaiArabic
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleThaiCardinalText
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleThaiLetter
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleTradChinNum2
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleTradChinNum3
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleUppercaseLetter
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleUppercaseRoman
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleVietCardinalText
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleZodiac1
    mixins Word$WdCaptionNumberStyle {}
  declare class Word$WdCaptionNumberStyle__wdCaptionNumberStyleZodiac2
    mixins Word$WdCaptionNumberStyle {}

  declare class Word$WdCaptionNumberStyleHID {
    constructor(...args: empty): mixed;
    static +emptyenum: Class<Word$WdCaptionNumberStyleHID__emptyenum> &
      Word$WdCaptionNumberStyleHID__emptyenum &
      0; // 0
  }

  declare class Word$WdCaptionNumberStyleHID__emptyenum
    mixins Word$WdCaptionNumberStyleHID {}

  declare class Word$WdCaptionPosition {
    constructor(...args: empty): mixed;
    static +wdCaptionPositionAbove: Class<Word$WdCaptionPosition__wdCaptionPositionAbove> &
      Word$WdCaptionPosition__wdCaptionPositionAbove &
      0; // 0
    static +wdCaptionPositionBelow: Class<Word$WdCaptionPosition__wdCaptionPositionBelow> &
      Word$WdCaptionPosition__wdCaptionPositionBelow &
      1; // 1
  }

  declare class Word$WdCaptionPosition__wdCaptionPositionAbove
    mixins Word$WdCaptionPosition {}
  declare class Word$WdCaptionPosition__wdCaptionPositionBelow
    mixins Word$WdCaptionPosition {}

  declare class Word$WdCellColor {
    constructor(...args: empty): mixed;
    static +wdCellColorByAuthor: Class<Word$WdCellColor__wdCellColorByAuthor> &
      Word$WdCellColor__wdCellColorByAuthor &
      -1; // -1
    static +wdCellColorLightBlue: Class<Word$WdCellColor__wdCellColorLightBlue> &
      Word$WdCellColor__wdCellColorLightBlue &
      2; // 2
    static +wdCellColorLightGray: Class<Word$WdCellColor__wdCellColorLightGray> &
      Word$WdCellColor__wdCellColorLightGray &
      7; // 7
    static +wdCellColorLightGreen: Class<Word$WdCellColor__wdCellColorLightGreen> &
      Word$WdCellColor__wdCellColorLightGreen &
      6; // 6
    static +wdCellColorLightOrange: Class<Word$WdCellColor__wdCellColorLightOrange> &
      Word$WdCellColor__wdCellColorLightOrange &
      5; // 5
    static +wdCellColorLightPurple: Class<Word$WdCellColor__wdCellColorLightPurple> &
      Word$WdCellColor__wdCellColorLightPurple &
      4; // 4
    static +wdCellColorLightYellow: Class<Word$WdCellColor__wdCellColorLightYellow> &
      Word$WdCellColor__wdCellColorLightYellow &
      3; // 3
    static +wdCellColorNoHighlight: Class<Word$WdCellColor__wdCellColorNoHighlight> &
      Word$WdCellColor__wdCellColorNoHighlight &
      0; // 0
    static +wdCellColorPink: Class<Word$WdCellColor__wdCellColorPink> &
      Word$WdCellColor__wdCellColorPink &
      1; // 1
  }

  declare class Word$WdCellColor__wdCellColorByAuthor mixins Word$WdCellColor {}
  declare class Word$WdCellColor__wdCellColorLightBlue
    mixins Word$WdCellColor {}
  declare class Word$WdCellColor__wdCellColorLightGray
    mixins Word$WdCellColor {}
  declare class Word$WdCellColor__wdCellColorLightGreen
    mixins Word$WdCellColor {}
  declare class Word$WdCellColor__wdCellColorLightOrange
    mixins Word$WdCellColor {}
  declare class Word$WdCellColor__wdCellColorLightPurple
    mixins Word$WdCellColor {}
  declare class Word$WdCellColor__wdCellColorLightYellow
    mixins Word$WdCellColor {}
  declare class Word$WdCellColor__wdCellColorNoHighlight
    mixins Word$WdCellColor {}
  declare class Word$WdCellColor__wdCellColorPink mixins Word$WdCellColor {}

  declare class Word$WdCellVerticalAlignment {
    constructor(...args: empty): mixed;
    static +wdCellAlignVerticalBottom: Class<Word$WdCellVerticalAlignment__wdCellAlignVerticalBottom> &
      Word$WdCellVerticalAlignment__wdCellAlignVerticalBottom &
      3; // 3
    static +wdCellAlignVerticalCenter: Class<Word$WdCellVerticalAlignment__wdCellAlignVerticalCenter> &
      Word$WdCellVerticalAlignment__wdCellAlignVerticalCenter &
      1; // 1
    static +wdCellAlignVerticalTop: Class<Word$WdCellVerticalAlignment__wdCellAlignVerticalTop> &
      Word$WdCellVerticalAlignment__wdCellAlignVerticalTop &
      0; // 0
  }

  declare class Word$WdCellVerticalAlignment__wdCellAlignVerticalBottom
    mixins Word$WdCellVerticalAlignment {}
  declare class Word$WdCellVerticalAlignment__wdCellAlignVerticalCenter
    mixins Word$WdCellVerticalAlignment {}
  declare class Word$WdCellVerticalAlignment__wdCellAlignVerticalTop
    mixins Word$WdCellVerticalAlignment {}

  declare class Word$WdCharacterCase {
    constructor(...args: empty): mixed;
    static +wdFullWidth: Class<Word$WdCharacterCase__wdFullWidth> &
      Word$WdCharacterCase__wdFullWidth &
      7; // 7
    static +wdHalfWidth: Class<Word$WdCharacterCase__wdHalfWidth> &
      Word$WdCharacterCase__wdHalfWidth &
      6; // 6
    static +wdHiragana: Class<Word$WdCharacterCase__wdHiragana> &
      Word$WdCharacterCase__wdHiragana &
      9; // 9
    static +wdKatakana: Class<Word$WdCharacterCase__wdKatakana> &
      Word$WdCharacterCase__wdKatakana &
      8; // 8
    static +wdLowerCase: Class<Word$WdCharacterCase__wdLowerCase> &
      Word$WdCharacterCase__wdLowerCase &
      0; // 0
    static +wdNextCase: Class<Word$WdCharacterCase__wdNextCase> &
      Word$WdCharacterCase__wdNextCase &
      -1; // -1
    static +wdTitleSentence: Class<Word$WdCharacterCase__wdTitleSentence> &
      Word$WdCharacterCase__wdTitleSentence &
      4; // 4
    static +wdTitleWord: Class<Word$WdCharacterCase__wdTitleWord> &
      Word$WdCharacterCase__wdTitleWord &
      2; // 2
    static +wdToggleCase: Class<Word$WdCharacterCase__wdToggleCase> &
      Word$WdCharacterCase__wdToggleCase &
      5; // 5
    static +wdUpperCase: Class<Word$WdCharacterCase__wdUpperCase> &
      Word$WdCharacterCase__wdUpperCase &
      1; // 1
  }

  declare class Word$WdCharacterCase__wdFullWidth mixins Word$WdCharacterCase {}
  declare class Word$WdCharacterCase__wdHalfWidth mixins Word$WdCharacterCase {}
  declare class Word$WdCharacterCase__wdHiragana mixins Word$WdCharacterCase {}
  declare class Word$WdCharacterCase__wdKatakana mixins Word$WdCharacterCase {}
  declare class Word$WdCharacterCase__wdLowerCase mixins Word$WdCharacterCase {}
  declare class Word$WdCharacterCase__wdNextCase mixins Word$WdCharacterCase {}
  declare class Word$WdCharacterCase__wdTitleSentence
    mixins Word$WdCharacterCase {}
  declare class Word$WdCharacterCase__wdTitleWord mixins Word$WdCharacterCase {}
  declare class Word$WdCharacterCase__wdToggleCase
    mixins Word$WdCharacterCase {}
  declare class Word$WdCharacterCase__wdUpperCase mixins Word$WdCharacterCase {}

  declare class Word$WdCharacterCaseHID {
    constructor(...args: empty): mixed;
    static +emptyenum: Class<Word$WdCharacterCaseHID__emptyenum> &
      Word$WdCharacterCaseHID__emptyenum &
      0; // 0
  }

  declare class Word$WdCharacterCaseHID__emptyenum
    mixins Word$WdCharacterCaseHID {}

  declare class Word$WdCharacterWidth {
    constructor(...args: empty): mixed;
    static +wdWidthFullWidth: Class<Word$WdCharacterWidth__wdWidthFullWidth> &
      Word$WdCharacterWidth__wdWidthFullWidth &
      7; // 7
    static +wdWidthHalfWidth: Class<Word$WdCharacterWidth__wdWidthHalfWidth> &
      Word$WdCharacterWidth__wdWidthHalfWidth &
      6; // 6
  }

  declare class Word$WdCharacterWidth__wdWidthFullWidth
    mixins Word$WdCharacterWidth {}
  declare class Word$WdCharacterWidth__wdWidthHalfWidth
    mixins Word$WdCharacterWidth {}

  declare class Word$WdCheckInVersionType {
    constructor(...args: empty): mixed;
    static +wdCheckInMajorVersion: Class<Word$WdCheckInVersionType__wdCheckInMajorVersion> &
      Word$WdCheckInVersionType__wdCheckInMajorVersion &
      1; // 1
    static +wdCheckInMinorVersion: Class<Word$WdCheckInVersionType__wdCheckInMinorVersion> &
      Word$WdCheckInVersionType__wdCheckInMinorVersion &
      0; // 0
    static +wdCheckInOverwriteVersion: Class<Word$WdCheckInVersionType__wdCheckInOverwriteVersion> &
      Word$WdCheckInVersionType__wdCheckInOverwriteVersion &
      2; // 2
  }

  declare class Word$WdCheckInVersionType__wdCheckInMajorVersion
    mixins Word$WdCheckInVersionType {}
  declare class Word$WdCheckInVersionType__wdCheckInMinorVersion
    mixins Word$WdCheckInVersionType {}
  declare class Word$WdCheckInVersionType__wdCheckInOverwriteVersion
    mixins Word$WdCheckInVersionType {}

  declare class Word$WdChevronConvertRule {
    constructor(...args: empty): mixed;
    static +wdAlwaysConvert: Class<Word$WdChevronConvertRule__wdAlwaysConvert> &
      Word$WdChevronConvertRule__wdAlwaysConvert &
      1; // 1
    static +wdAskToConvert: Class<Word$WdChevronConvertRule__wdAskToConvert> &
      Word$WdChevronConvertRule__wdAskToConvert &
      3; // 3
    static +wdAskToNotConvert: Class<Word$WdChevronConvertRule__wdAskToNotConvert> &
      Word$WdChevronConvertRule__wdAskToNotConvert &
      2; // 2
    static +wdNeverConvert: Class<Word$WdChevronConvertRule__wdNeverConvert> &
      Word$WdChevronConvertRule__wdNeverConvert &
      0; // 0
  }

  declare class Word$WdChevronConvertRule__wdAlwaysConvert
    mixins Word$WdChevronConvertRule {}
  declare class Word$WdChevronConvertRule__wdAskToConvert
    mixins Word$WdChevronConvertRule {}
  declare class Word$WdChevronConvertRule__wdAskToNotConvert
    mixins Word$WdChevronConvertRule {}
  declare class Word$WdChevronConvertRule__wdNeverConvert
    mixins Word$WdChevronConvertRule {}

  declare class Word$WdCollapseDirection {
    constructor(...args: empty): mixed;
    static +wdCollapseEnd: Class<Word$WdCollapseDirection__wdCollapseEnd> &
      Word$WdCollapseDirection__wdCollapseEnd &
      0; // 0
    static +wdCollapseStart: Class<Word$WdCollapseDirection__wdCollapseStart> &
      Word$WdCollapseDirection__wdCollapseStart &
      1; // 1
  }

  declare class Word$WdCollapseDirection__wdCollapseEnd
    mixins Word$WdCollapseDirection {}
  declare class Word$WdCollapseDirection__wdCollapseStart
    mixins Word$WdCollapseDirection {}

  declare class Word$WdColor {
    constructor(...args: empty): mixed;
    static +wdColorAqua: Class<Word$WdColor__wdColorAqua> &
      Word$WdColor__wdColorAqua &
      13421619; // 13421619
    static +wdColorAutomatic: Class<Word$WdColor__wdColorAutomatic> &
      Word$WdColor__wdColorAutomatic &
      -16777216; // -16777216
    static +wdColorBlack: Class<Word$WdColor__wdColorBlack> &
      Word$WdColor__wdColorBlack &
      0; // 0
    static +wdColorBlue: Class<Word$WdColor__wdColorBlue> &
      Word$WdColor__wdColorBlue &
      16711680; // 16711680
    static +wdColorBlueGray: Class<Word$WdColor__wdColorBlueGray> &
      Word$WdColor__wdColorBlueGray &
      10053222; // 10053222
    static +wdColorBrightGreen: Class<Word$WdColor__wdColorBrightGreen> &
      Word$WdColor__wdColorBrightGreen &
      65280; // 65280
    static +wdColorBrown: Class<Word$WdColor__wdColorBrown> &
      Word$WdColor__wdColorBrown &
      13209; // 13209
    static +wdColorDarkBlue: Class<Word$WdColor__wdColorDarkBlue> &
      Word$WdColor__wdColorDarkBlue &
      8388608; // 8388608
    static +wdColorDarkGreen: Class<Word$WdColor__wdColorDarkGreen> &
      Word$WdColor__wdColorDarkGreen &
      13056; // 13056
    static +wdColorDarkRed: Class<Word$WdColor__wdColorDarkRed> &
      Word$WdColor__wdColorDarkRed &
      128; // 128
    static +wdColorDarkTeal: Class<Word$WdColor__wdColorDarkTeal> &
      Word$WdColor__wdColorDarkTeal &
      6697728; // 6697728
    static +wdColorDarkYellow: Class<Word$WdColor__wdColorDarkYellow> &
      Word$WdColor__wdColorDarkYellow &
      32896; // 32896
    static +wdColorGold: Class<Word$WdColor__wdColorGold> &
      Word$WdColor__wdColorGold &
      52479; // 52479
    static +wdColorGray05: Class<Word$WdColor__wdColorGray05> &
      Word$WdColor__wdColorGray05 &
      15987699; // 15987699
    static +wdColorGray10: Class<Word$WdColor__wdColorGray10> &
      Word$WdColor__wdColorGray10 &
      15132390; // 15132390
    static +wdColorGray125: Class<Word$WdColor__wdColorGray125> &
      Word$WdColor__wdColorGray125 &
      14737632; // 14737632
    static +wdColorGray15: Class<Word$WdColor__wdColorGray15> &
      Word$WdColor__wdColorGray15 &
      14277081; // 14277081
    static +wdColorGray20: Class<Word$WdColor__wdColorGray20> &
      Word$WdColor__wdColorGray20 &
      13421772; // 13421772
    static +wdColorGray25: Class<Word$WdColor__wdColorGray25> &
      Word$WdColor__wdColorGray25 &
      12632256; // 12632256
    static +wdColorGray30: Class<Word$WdColor__wdColorGray30> &
      Word$WdColor__wdColorGray30 &
      11776947; // 11776947
    static +wdColorGray35: Class<Word$WdColor__wdColorGray35> &
      Word$WdColor__wdColorGray35 &
      10921638; // 10921638
    static +wdColorGray375: Class<Word$WdColor__wdColorGray375> &
      Word$WdColor__wdColorGray375 &
      10526880; // 10526880
    static +wdColorGray40: Class<Word$WdColor__wdColorGray40> &
      Word$WdColor__wdColorGray40 &
      10066329; // 10066329
    static +wdColorGray45: Class<Word$WdColor__wdColorGray45> &
      Word$WdColor__wdColorGray45 &
      9211020; // 9211020
    static +wdColorGray50: Class<Word$WdColor__wdColorGray50> &
      Word$WdColor__wdColorGray50 &
      8421504; // 8421504
    static +wdColorGray55: Class<Word$WdColor__wdColorGray55> &
      Word$WdColor__wdColorGray55 &
      7566195; // 7566195
    static +wdColorGray60: Class<Word$WdColor__wdColorGray60> &
      Word$WdColor__wdColorGray60 &
      6710886; // 6710886
    static +wdColorGray625: Class<Word$WdColor__wdColorGray625> &
      Word$WdColor__wdColorGray625 &
      6316128; // 6316128
    static +wdColorGray65: Class<Word$WdColor__wdColorGray65> &
      Word$WdColor__wdColorGray65 &
      5855577; // 5855577
    static +wdColorGray70: Class<Word$WdColor__wdColorGray70> &
      Word$WdColor__wdColorGray70 &
      5000268; // 5000268
    static +wdColorGray75: Class<Word$WdColor__wdColorGray75> &
      Word$WdColor__wdColorGray75 &
      4210752; // 4210752
    static +wdColorGray80: Class<Word$WdColor__wdColorGray80> &
      Word$WdColor__wdColorGray80 &
      3355443; // 3355443
    static +wdColorGray85: Class<Word$WdColor__wdColorGray85> &
      Word$WdColor__wdColorGray85 &
      2500134; // 2500134
    static +wdColorGray875: Class<Word$WdColor__wdColorGray875> &
      Word$WdColor__wdColorGray875 &
      2105376; // 2105376
    static +wdColorGray90: Class<Word$WdColor__wdColorGray90> &
      Word$WdColor__wdColorGray90 &
      1644825; // 1644825
    static +wdColorGray95: Class<Word$WdColor__wdColorGray95> &
      Word$WdColor__wdColorGray95 &
      789516; // 789516
    static +wdColorGreen: Class<Word$WdColor__wdColorGreen> &
      Word$WdColor__wdColorGreen &
      32768; // 32768
    static +wdColorIndigo: Class<Word$WdColor__wdColorIndigo> &
      Word$WdColor__wdColorIndigo &
      10040115; // 10040115
    static +wdColorLavender: Class<Word$WdColor__wdColorLavender> &
      Word$WdColor__wdColorLavender &
      16751052; // 16751052
    static +wdColorLightBlue: Class<Word$WdColor__wdColorLightBlue> &
      Word$WdColor__wdColorLightBlue &
      16737843; // 16737843
    static +wdColorLightGreen: Class<Word$WdColor__wdColorLightGreen> &
      Word$WdColor__wdColorLightGreen &
      13434828; // 13434828
    static +wdColorLightOrange: Class<Word$WdColor__wdColorLightOrange> &
      Word$WdColor__wdColorLightOrange &
      39423; // 39423
    static +wdColorLightTurquoise: Class<Word$WdColor__wdColorLightTurquoise> &
      Word$WdColor__wdColorLightTurquoise &
      16777164; // 16777164
    static +wdColorLightYellow: Class<Word$WdColor__wdColorLightYellow> &
      Word$WdColor__wdColorLightYellow &
      10092543; // 10092543
    static +wdColorLime: Class<Word$WdColor__wdColorLime> &
      Word$WdColor__wdColorLime &
      52377; // 52377
    static +wdColorOliveGreen: Class<Word$WdColor__wdColorOliveGreen> &
      Word$WdColor__wdColorOliveGreen &
      13107; // 13107
    static +wdColorOrange: Class<Word$WdColor__wdColorOrange> &
      Word$WdColor__wdColorOrange &
      26367; // 26367
    static +wdColorPaleBlue: Class<Word$WdColor__wdColorPaleBlue> &
      Word$WdColor__wdColorPaleBlue &
      16764057; // 16764057
    static +wdColorPink: Class<Word$WdColor__wdColorPink> &
      Word$WdColor__wdColorPink &
      16711935; // 16711935
    static +wdColorPlum: Class<Word$WdColor__wdColorPlum> &
      Word$WdColor__wdColorPlum &
      6697881; // 6697881
    static +wdColorRed: Class<Word$WdColor__wdColorRed> &
      Word$WdColor__wdColorRed &
      255; // 255
    static +wdColorRose: Class<Word$WdColor__wdColorRose> &
      Word$WdColor__wdColorRose &
      13408767; // 13408767
    static +wdColorSeaGreen: Class<Word$WdColor__wdColorSeaGreen> &
      Word$WdColor__wdColorSeaGreen &
      6723891; // 6723891
    static +wdColorSkyBlue: Class<Word$WdColor__wdColorSkyBlue> &
      Word$WdColor__wdColorSkyBlue &
      16763904; // 16763904
    static +wdColorTan: Class<Word$WdColor__wdColorTan> &
      Word$WdColor__wdColorTan &
      10079487; // 10079487
    static +wdColorTeal: Class<Word$WdColor__wdColorTeal> &
      Word$WdColor__wdColorTeal &
      8421376; // 8421376
    static +wdColorTurquoise: Class<Word$WdColor__wdColorTurquoise> &
      Word$WdColor__wdColorTurquoise &
      16776960; // 16776960
    static +wdColorViolet: Class<Word$WdColor__wdColorViolet> &
      Word$WdColor__wdColorViolet &
      8388736; // 8388736
    static +wdColorWhite: Class<Word$WdColor__wdColorWhite> &
      Word$WdColor__wdColorWhite &
      16777215; // 16777215
    static +wdColorYellow: Class<Word$WdColor__wdColorYellow> &
      Word$WdColor__wdColorYellow &
      65535; // 65535
  }

  declare class Word$WdColor__wdColorAqua mixins Word$WdColor {}
  declare class Word$WdColor__wdColorAutomatic mixins Word$WdColor {}
  declare class Word$WdColor__wdColorBlack mixins Word$WdColor {}
  declare class Word$WdColor__wdColorBlue mixins Word$WdColor {}
  declare class Word$WdColor__wdColorBlueGray mixins Word$WdColor {}
  declare class Word$WdColor__wdColorBrightGreen mixins Word$WdColor {}
  declare class Word$WdColor__wdColorBrown mixins Word$WdColor {}
  declare class Word$WdColor__wdColorDarkBlue mixins Word$WdColor {}
  declare class Word$WdColor__wdColorDarkGreen mixins Word$WdColor {}
  declare class Word$WdColor__wdColorDarkRed mixins Word$WdColor {}
  declare class Word$WdColor__wdColorDarkTeal mixins Word$WdColor {}
  declare class Word$WdColor__wdColorDarkYellow mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGold mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray05 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray10 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray125 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray15 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray20 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray25 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray30 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray35 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray375 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray40 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray45 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray50 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray55 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray60 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray625 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray65 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray70 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray75 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray80 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray85 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray875 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray90 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGray95 mixins Word$WdColor {}
  declare class Word$WdColor__wdColorGreen mixins Word$WdColor {}
  declare class Word$WdColor__wdColorIndigo mixins Word$WdColor {}
  declare class Word$WdColor__wdColorLavender mixins Word$WdColor {}
  declare class Word$WdColor__wdColorLightBlue mixins Word$WdColor {}
  declare class Word$WdColor__wdColorLightGreen mixins Word$WdColor {}
  declare class Word$WdColor__wdColorLightOrange mixins Word$WdColor {}
  declare class Word$WdColor__wdColorLightTurquoise mixins Word$WdColor {}
  declare class Word$WdColor__wdColorLightYellow mixins Word$WdColor {}
  declare class Word$WdColor__wdColorLime mixins Word$WdColor {}
  declare class Word$WdColor__wdColorOliveGreen mixins Word$WdColor {}
  declare class Word$WdColor__wdColorOrange mixins Word$WdColor {}
  declare class Word$WdColor__wdColorPaleBlue mixins Word$WdColor {}
  declare class Word$WdColor__wdColorPink mixins Word$WdColor {}
  declare class Word$WdColor__wdColorPlum mixins Word$WdColor {}
  declare class Word$WdColor__wdColorRed mixins Word$WdColor {}
  declare class Word$WdColor__wdColorRose mixins Word$WdColor {}
  declare class Word$WdColor__wdColorSeaGreen mixins Word$WdColor {}
  declare class Word$WdColor__wdColorSkyBlue mixins Word$WdColor {}
  declare class Word$WdColor__wdColorTan mixins Word$WdColor {}
  declare class Word$WdColor__wdColorTeal mixins Word$WdColor {}
  declare class Word$WdColor__wdColorTurquoise mixins Word$WdColor {}
  declare class Word$WdColor__wdColorViolet mixins Word$WdColor {}
  declare class Word$WdColor__wdColorWhite mixins Word$WdColor {}
  declare class Word$WdColor__wdColorYellow mixins Word$WdColor {}

  declare class Word$WdColorIndex {
    constructor(...args: empty): mixed;
    static +wdAuto: Class<Word$WdColorIndex__wdAuto> &
      Word$WdColorIndex__wdAuto &
      0; // 0
    static +wdBlack: Class<Word$WdColorIndex__wdBlack> &
      Word$WdColorIndex__wdBlack &
      1; // 1
    static +wdBlue: Class<Word$WdColorIndex__wdBlue> &
      Word$WdColorIndex__wdBlue &
      2; // 2
    static +wdBrightGreen: Class<Word$WdColorIndex__wdBrightGreen> &
      Word$WdColorIndex__wdBrightGreen &
      4; // 4
    static +wdByAuthor: Class<Word$WdColorIndex__wdByAuthor> &
      Word$WdColorIndex__wdByAuthor &
      -1; // -1
    static +wdDarkBlue: Class<Word$WdColorIndex__wdDarkBlue> &
      Word$WdColorIndex__wdDarkBlue &
      9; // 9
    static +wdDarkRed: Class<Word$WdColorIndex__wdDarkRed> &
      Word$WdColorIndex__wdDarkRed &
      13; // 13
    static +wdDarkYellow: Class<Word$WdColorIndex__wdDarkYellow> &
      Word$WdColorIndex__wdDarkYellow &
      14; // 14
    static +wdGray25: Class<Word$WdColorIndex__wdGray25> &
      Word$WdColorIndex__wdGray25 &
      16; // 16
    static +wdGray50: Class<Word$WdColorIndex__wdGray50> &
      Word$WdColorIndex__wdGray50 &
      15; // 15
    static +wdGreen: Class<Word$WdColorIndex__wdGreen> &
      Word$WdColorIndex__wdGreen &
      11; // 11
    static +wdNoHighlight: Class<Word$WdColorIndex__wdNoHighlight> &
      Word$WdColorIndex__wdNoHighlight &
      0; // 0
    static +wdPink: Class<Word$WdColorIndex__wdPink> &
      Word$WdColorIndex__wdPink &
      5; // 5
    static +wdRed: Class<Word$WdColorIndex__wdRed> &
      Word$WdColorIndex__wdRed &
      6; // 6
    static +wdTeal: Class<Word$WdColorIndex__wdTeal> &
      Word$WdColorIndex__wdTeal &
      10; // 10
    static +wdTurquoise: Class<Word$WdColorIndex__wdTurquoise> &
      Word$WdColorIndex__wdTurquoise &
      3; // 3
    static +wdViolet: Class<Word$WdColorIndex__wdViolet> &
      Word$WdColorIndex__wdViolet &
      12; // 12
    static +wdWhite: Class<Word$WdColorIndex__wdWhite> &
      Word$WdColorIndex__wdWhite &
      8; // 8
    static +wdYellow: Class<Word$WdColorIndex__wdYellow> &
      Word$WdColorIndex__wdYellow &
      7; // 7
  }

  declare class Word$WdColorIndex__wdAuto mixins Word$WdColorIndex {}
  declare class Word$WdColorIndex__wdBlack mixins Word$WdColorIndex {}
  declare class Word$WdColorIndex__wdBlue mixins Word$WdColorIndex {}
  declare class Word$WdColorIndex__wdBrightGreen mixins Word$WdColorIndex {}
  declare class Word$WdColorIndex__wdByAuthor mixins Word$WdColorIndex {}
  declare class Word$WdColorIndex__wdDarkBlue mixins Word$WdColorIndex {}
  declare class Word$WdColorIndex__wdDarkRed mixins Word$WdColorIndex {}
  declare class Word$WdColorIndex__wdDarkYellow mixins Word$WdColorIndex {}
  declare class Word$WdColorIndex__wdGray25 mixins Word$WdColorIndex {}
  declare class Word$WdColorIndex__wdGray50 mixins Word$WdColorIndex {}
  declare class Word$WdColorIndex__wdGreen mixins Word$WdColorIndex {}
  declare class Word$WdColorIndex__wdNoHighlight mixins Word$WdColorIndex {}
  declare class Word$WdColorIndex__wdPink mixins Word$WdColorIndex {}
  declare class Word$WdColorIndex__wdRed mixins Word$WdColorIndex {}
  declare class Word$WdColorIndex__wdTeal mixins Word$WdColorIndex {}
  declare class Word$WdColorIndex__wdTurquoise mixins Word$WdColorIndex {}
  declare class Word$WdColorIndex__wdViolet mixins Word$WdColorIndex {}
  declare class Word$WdColorIndex__wdWhite mixins Word$WdColorIndex {}
  declare class Word$WdColorIndex__wdYellow mixins Word$WdColorIndex {}

  declare class Word$WdCompareDestination {
    constructor(...args: empty): mixed;
    static +wdCompareDestinationNew: Class<Word$WdCompareDestination__wdCompareDestinationNew> &
      Word$WdCompareDestination__wdCompareDestinationNew &
      2; // 2
    static +wdCompareDestinationOriginal: Class<Word$WdCompareDestination__wdCompareDestinationOriginal> &
      Word$WdCompareDestination__wdCompareDestinationOriginal &
      0; // 0
    static +wdCompareDestinationRevised: Class<Word$WdCompareDestination__wdCompareDestinationRevised> &
      Word$WdCompareDestination__wdCompareDestinationRevised &
      1; // 1
  }

  declare class Word$WdCompareDestination__wdCompareDestinationNew
    mixins Word$WdCompareDestination {}
  declare class Word$WdCompareDestination__wdCompareDestinationOriginal
    mixins Word$WdCompareDestination {}
  declare class Word$WdCompareDestination__wdCompareDestinationRevised
    mixins Word$WdCompareDestination {}

  declare class Word$WdCompareTarget {
    constructor(...args: empty): mixed;
    static +wdCompareTargetCurrent: Class<Word$WdCompareTarget__wdCompareTargetCurrent> &
      Word$WdCompareTarget__wdCompareTargetCurrent &
      1; // 1
    static +wdCompareTargetNew: Class<Word$WdCompareTarget__wdCompareTargetNew> &
      Word$WdCompareTarget__wdCompareTargetNew &
      2; // 2
    static +wdCompareTargetSelected: Class<Word$WdCompareTarget__wdCompareTargetSelected> &
      Word$WdCompareTarget__wdCompareTargetSelected &
      0; // 0
  }

  declare class Word$WdCompareTarget__wdCompareTargetCurrent
    mixins Word$WdCompareTarget {}
  declare class Word$WdCompareTarget__wdCompareTargetNew
    mixins Word$WdCompareTarget {}
  declare class Word$WdCompareTarget__wdCompareTargetSelected
    mixins Word$WdCompareTarget {}

  declare class Word$WdCompatibility {
    constructor(...args: empty): mixed;
    static +wdAlignTablesRowByRow: Class<Word$WdCompatibility__wdAlignTablesRowByRow> &
      Word$WdCompatibility__wdAlignTablesRowByRow &
      39; // 39
    static +wdAllowSpaceOfSameStyleInTable: Class<Word$WdCompatibility__wdAllowSpaceOfSameStyleInTable> &
      Word$WdCompatibility__wdAllowSpaceOfSameStyleInTable &
      54; // 54
    static +wdApplyBreakingRules: Class<Word$WdCompatibility__wdApplyBreakingRules> &
      Word$WdCompatibility__wdApplyBreakingRules &
      46; // 46
    static +wdAutofitLikeWW11: Class<Word$WdCompatibility__wdAutofitLikeWW11> &
      Word$WdCompatibility__wdAutofitLikeWW11 &
      57; // 57
    static +wdAutospaceLikeWW7: Class<Word$WdCompatibility__wdAutospaceLikeWW7> &
      Word$WdCompatibility__wdAutospaceLikeWW7 &
      38; // 38
    static +wdCachedColBalance: Class<Word$WdCompatibility__wdCachedColBalance> &
      Word$WdCompatibility__wdCachedColBalance &
      65; // 65
    static +wdConvMailMergeEsc: Class<Word$WdCompatibility__wdConvMailMergeEsc> &
      Word$WdCompatibility__wdConvMailMergeEsc &
      6; // 6
    static +wdDisableOTKerning: Class<Word$WdCompatibility__wdDisableOTKerning> &
      Word$WdCompatibility__wdDisableOTKerning &
      66; // 66
    static +wdDontAdjustLineHeightInTable: Class<Word$WdCompatibility__wdDontAdjustLineHeightInTable> &
      Word$WdCompatibility__wdDontAdjustLineHeightInTable &
      36; // 36
    static +wdDontAutofitConstrainedTables: Class<Word$WdCompatibility__wdDontAutofitConstrainedTables> &
      Word$WdCompatibility__wdDontAutofitConstrainedTables &
      56; // 56
    static +wdDontBalanceSingleByteDoubleByteWidth: Class<Word$WdCompatibility__wdDontBalanceSingleByteDoubleByteWidth> &
      Word$WdCompatibility__wdDontBalanceSingleByteDoubleByteWidth &
      16; // 16
    static +wdDontBreakConstrainedForcedTables: Class<Word$WdCompatibility__wdDontBreakConstrainedForcedTables> &
      Word$WdCompatibility__wdDontBreakConstrainedForcedTables &
      62; // 62
    static +wdDontBreakWrappedTables: Class<Word$WdCompatibility__wdDontBreakWrappedTables> &
      Word$WdCompatibility__wdDontBreakWrappedTables &
      43; // 43
    static +wdDontOverrideTableStyleFontSzAndJustification: Class<Word$WdCompatibility__wdDontOverrideTableStyleFontSzAndJustification> &
      Word$WdCompatibility__wdDontOverrideTableStyleFontSzAndJustification &
      68; // 68
    static +wdDontSnapTextToGridInTableWithObjects: Class<Word$WdCompatibility__wdDontSnapTextToGridInTableWithObjects> &
      Word$WdCompatibility__wdDontSnapTextToGridInTableWithObjects &
      44; // 44
    static +wdDontULTrailSpace: Class<Word$WdCompatibility__wdDontULTrailSpace> &
      Word$WdCompatibility__wdDontULTrailSpace &
      15; // 15
    static +wdDontUseAsianBreakRulesInGrid: Class<Word$WdCompatibility__wdDontUseAsianBreakRulesInGrid> &
      Word$WdCompatibility__wdDontUseAsianBreakRulesInGrid &
      48; // 48
    static +wdDontUseHTMLParagraphAutoSpacing: Class<Word$WdCompatibility__wdDontUseHTMLParagraphAutoSpacing> &
      Word$WdCompatibility__wdDontUseHTMLParagraphAutoSpacing &
      35; // 35
    static +wdDontUseIndentAsNumberingTabStop: Class<Word$WdCompatibility__wdDontUseIndentAsNumberingTabStop> &
      Word$WdCompatibility__wdDontUseIndentAsNumberingTabStop &
      52; // 52
    static +wdDontVertAlignCellWithShape: Class<Word$WdCompatibility__wdDontVertAlignCellWithShape> &
      Word$WdCompatibility__wdDontVertAlignCellWithShape &
      61; // 61
    static +wdDontVertAlignInTextbox: Class<Word$WdCompatibility__wdDontVertAlignInTextbox> &
      Word$WdCompatibility__wdDontVertAlignInTextbox &
      63; // 63
    static +wdDontWrapTextWithPunctuation: Class<Word$WdCompatibility__wdDontWrapTextWithPunctuation> &
      Word$WdCompatibility__wdDontWrapTextWithPunctuation &
      47; // 47
    static +wdExactOnTop: Class<Word$WdCompatibility__wdExactOnTop> &
      Word$WdCompatibility__wdExactOnTop &
      28; // 28
    static +wdExpandShiftReturn: Class<Word$WdCompatibility__wdExpandShiftReturn> &
      Word$WdCompatibility__wdExpandShiftReturn &
      14; // 14
    static +wdFELineBreak11: Class<Word$WdCompatibility__wdFELineBreak11> &
      Word$WdCompatibility__wdFELineBreak11 &
      53; // 53
    static +wdFlipMirrorIndents: Class<Word$WdCompatibility__wdFlipMirrorIndents> &
      Word$WdCompatibility__wdFlipMirrorIndents &
      67; // 67
    static +wdFootnoteLayoutLikeWW8: Class<Word$WdCompatibility__wdFootnoteLayoutLikeWW8> &
      Word$WdCompatibility__wdFootnoteLayoutLikeWW8 &
      34; // 34
    static +wdForgetLastTabAlignment: Class<Word$WdCompatibility__wdForgetLastTabAlignment> &
      Word$WdCompatibility__wdForgetLastTabAlignment &
      37; // 37
    static +wdGrowAutofit: Class<Word$WdCompatibility__wdGrowAutofit> &
      Word$WdCompatibility__wdGrowAutofit &
      50; // 50
    static +wdHangulWidthLikeWW11: Class<Word$WdCompatibility__wdHangulWidthLikeWW11> &
      Word$WdCompatibility__wdHangulWidthLikeWW11 &
      59; // 59
    static +wdLayoutRawTableWidth: Class<Word$WdCompatibility__wdLayoutRawTableWidth> &
      Word$WdCompatibility__wdLayoutRawTableWidth &
      40; // 40
    static +wdLayoutTableRowsApart: Class<Word$WdCompatibility__wdLayoutTableRowsApart> &
      Word$WdCompatibility__wdLayoutTableRowsApart &
      41; // 41
    static +wdLeaveBackslashAlone: Class<Word$WdCompatibility__wdLeaveBackslashAlone> &
      Word$WdCompatibility__wdLeaveBackslashAlone &
      13; // 13
    static +wdLineWrapLikeWord6: Class<Word$WdCompatibility__wdLineWrapLikeWord6> &
      Word$WdCompatibility__wdLineWrapLikeWord6 &
      32; // 32
    static +wdMWSmallCaps: Class<Word$WdCompatibility__wdMWSmallCaps> &
      Word$WdCompatibility__wdMWSmallCaps &
      22; // 22
    static +wdNoColumnBalance: Class<Word$WdCompatibility__wdNoColumnBalance> &
      Word$WdCompatibility__wdNoColumnBalance &
      5; // 5
    static +wdNoExtraLineSpacing: Class<Word$WdCompatibility__wdNoExtraLineSpacing> &
      Word$WdCompatibility__wdNoExtraLineSpacing &
      23; // 23
    static +wdNoLeading: Class<Word$WdCompatibility__wdNoLeading> &
      Word$WdCompatibility__wdNoLeading &
      20; // 20
    static +wdNoSpaceForUL: Class<Word$WdCompatibility__wdNoSpaceForUL> &
      Word$WdCompatibility__wdNoSpaceForUL &
      21; // 21
    static +wdNoSpaceRaiseLower: Class<Word$WdCompatibility__wdNoSpaceRaiseLower> &
      Word$WdCompatibility__wdNoSpaceRaiseLower &
      2; // 2
    static +wdNoTabHangIndent: Class<Word$WdCompatibility__wdNoTabHangIndent> &
      Word$WdCompatibility__wdNoTabHangIndent &
      1; // 1
    static +wdOrigWordTableRules: Class<Word$WdCompatibility__wdOrigWordTableRules> &
      Word$WdCompatibility__wdOrigWordTableRules &
      9; // 9
    static +wdPrintBodyTextBeforeHeader: Class<Word$WdCompatibility__wdPrintBodyTextBeforeHeader> &
      Word$WdCompatibility__wdPrintBodyTextBeforeHeader &
      19; // 19
    static +wdPrintColBlack: Class<Word$WdCompatibility__wdPrintColBlack> &
      Word$WdCompatibility__wdPrintColBlack &
      3; // 3
    static +wdSelectFieldWithFirstOrLastCharacter: Class<Word$WdCompatibility__wdSelectFieldWithFirstOrLastCharacter> &
      Word$WdCompatibility__wdSelectFieldWithFirstOrLastCharacter &
      45; // 45
    static +wdShapeLayoutLikeWW8: Class<Word$WdCompatibility__wdShapeLayoutLikeWW8> &
      Word$WdCompatibility__wdShapeLayoutLikeWW8 &
      33; // 33
    static +wdShowBreaksInFrames: Class<Word$WdCompatibility__wdShowBreaksInFrames> &
      Word$WdCompatibility__wdShowBreaksInFrames &
      11; // 11
    static +wdSpacingInWholePoints: Class<Word$WdCompatibility__wdSpacingInWholePoints> &
      Word$WdCompatibility__wdSpacingInWholePoints &
      18; // 18
    static +wdSplitPgBreakAndParaMark: Class<Word$WdCompatibility__wdSplitPgBreakAndParaMark> &
      Word$WdCompatibility__wdSplitPgBreakAndParaMark &
      60; // 60
    static +wdSubFontBySize: Class<Word$WdCompatibility__wdSubFontBySize> &
      Word$WdCompatibility__wdSubFontBySize &
      25; // 25
    static +wdSuppressBottomSpacing: Class<Word$WdCompatibility__wdSuppressBottomSpacing> &
      Word$WdCompatibility__wdSuppressBottomSpacing &
      29; // 29
    static +wdSuppressSpBfAfterPgBrk: Class<Word$WdCompatibility__wdSuppressSpBfAfterPgBrk> &
      Word$WdCompatibility__wdSuppressSpBfAfterPgBrk &
      7; // 7
    static +wdSuppressTopSpacing: Class<Word$WdCompatibility__wdSuppressTopSpacing> &
      Word$WdCompatibility__wdSuppressTopSpacing &
      8; // 8
    static +wdSuppressTopSpacingMac5: Class<Word$WdCompatibility__wdSuppressTopSpacingMac5> &
      Word$WdCompatibility__wdSuppressTopSpacingMac5 &
      17; // 17
    static +wdSwapBordersFacingPages: Class<Word$WdCompatibility__wdSwapBordersFacingPages> &
      Word$WdCompatibility__wdSwapBordersFacingPages &
      12; // 12
    static +wdTransparentMetafiles: Class<Word$WdCompatibility__wdTransparentMetafiles> &
      Word$WdCompatibility__wdTransparentMetafiles &
      10; // 10
    static +wdTruncateFontHeight: Class<Word$WdCompatibility__wdTruncateFontHeight> &
      Word$WdCompatibility__wdTruncateFontHeight &
      24; // 24
    static +wdUnderlineTabInNumList: Class<Word$WdCompatibility__wdUnderlineTabInNumList> &
      Word$WdCompatibility__wdUnderlineTabInNumList &
      58; // 58
    static +wdUseNormalStyleForList: Class<Word$WdCompatibility__wdUseNormalStyleForList> &
      Word$WdCompatibility__wdUseNormalStyleForList &
      51; // 51
    static +wdUsePrinterMetrics: Class<Word$WdCompatibility__wdUsePrinterMetrics> &
      Word$WdCompatibility__wdUsePrinterMetrics &
      26; // 26
    static +wdUseWord2002TableStyleRules: Class<Word$WdCompatibility__wdUseWord2002TableStyleRules> &
      Word$WdCompatibility__wdUseWord2002TableStyleRules &
      49; // 49
    static +wdUseWord97LineBreakingRules: Class<Word$WdCompatibility__wdUseWord97LineBreakingRules> &
      Word$WdCompatibility__wdUseWord97LineBreakingRules &
      42; // 42
    static +wdWord11KerningPairs: Class<Word$WdCompatibility__wdWord11KerningPairs> &
      Word$WdCompatibility__wdWord11KerningPairs &
      64; // 64
    static +wdWPJustification: Class<Word$WdCompatibility__wdWPJustification> &
      Word$WdCompatibility__wdWPJustification &
      31; // 31
    static +wdWPSpaceWidth: Class<Word$WdCompatibility__wdWPSpaceWidth> &
      Word$WdCompatibility__wdWPSpaceWidth &
      30; // 30
    static +wdWrapTrailSpaces: Class<Word$WdCompatibility__wdWrapTrailSpaces> &
      Word$WdCompatibility__wdWrapTrailSpaces &
      4; // 4
    static +wdWW11IndentRules: Class<Word$WdCompatibility__wdWW11IndentRules> &
      Word$WdCompatibility__wdWW11IndentRules &
      55; // 55
    static +wdWW6BorderRules: Class<Word$WdCompatibility__wdWW6BorderRules> &
      Word$WdCompatibility__wdWW6BorderRules &
      27; // 27
  }

  declare class Word$WdCompatibility__wdAlignTablesRowByRow
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdAllowSpaceOfSameStyleInTable
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdApplyBreakingRules
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdAutofitLikeWW11
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdAutospaceLikeWW7
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdCachedColBalance
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdConvMailMergeEsc
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdDisableOTKerning
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdDontAdjustLineHeightInTable
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdDontAutofitConstrainedTables
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdDontBalanceSingleByteDoubleByteWidth
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdDontBreakConstrainedForcedTables
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdDontBreakWrappedTables
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdDontOverrideTableStyleFontSzAndJustification
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdDontSnapTextToGridInTableWithObjects
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdDontULTrailSpace
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdDontUseAsianBreakRulesInGrid
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdDontUseHTMLParagraphAutoSpacing
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdDontUseIndentAsNumberingTabStop
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdDontVertAlignCellWithShape
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdDontVertAlignInTextbox
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdDontWrapTextWithPunctuation
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdExactOnTop
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdExpandShiftReturn
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdFELineBreak11
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdFlipMirrorIndents
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdFootnoteLayoutLikeWW8
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdForgetLastTabAlignment
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdGrowAutofit
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdHangulWidthLikeWW11
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdLayoutRawTableWidth
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdLayoutTableRowsApart
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdLeaveBackslashAlone
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdLineWrapLikeWord6
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdMWSmallCaps
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdNoColumnBalance
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdNoExtraLineSpacing
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdNoLeading mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdNoSpaceForUL
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdNoSpaceRaiseLower
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdNoTabHangIndent
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdOrigWordTableRules
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdPrintBodyTextBeforeHeader
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdPrintColBlack
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdSelectFieldWithFirstOrLastCharacter
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdShapeLayoutLikeWW8
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdShowBreaksInFrames
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdSpacingInWholePoints
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdSplitPgBreakAndParaMark
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdSubFontBySize
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdSuppressBottomSpacing
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdSuppressSpBfAfterPgBrk
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdSuppressTopSpacing
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdSuppressTopSpacingMac5
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdSwapBordersFacingPages
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdTransparentMetafiles
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdTruncateFontHeight
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdUnderlineTabInNumList
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdUseNormalStyleForList
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdUsePrinterMetrics
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdUseWord2002TableStyleRules
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdUseWord97LineBreakingRules
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdWord11KerningPairs
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdWPJustification
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdWPSpaceWidth
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdWrapTrailSpaces
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdWW11IndentRules
    mixins Word$WdCompatibility {}
  declare class Word$WdCompatibility__wdWW6BorderRules
    mixins Word$WdCompatibility {}

  declare class Word$WdCompatibilityMode {
    constructor(...args: empty): mixed;
    static +wdCurrent: Class<Word$WdCompatibilityMode__wdCurrent> &
      Word$WdCompatibilityMode__wdCurrent &
      65535; // 65535
    static +wdWord2003: Class<Word$WdCompatibilityMode__wdWord2003> &
      Word$WdCompatibilityMode__wdWord2003 &
      11; // 11
    static +wdWord2007: Class<Word$WdCompatibilityMode__wdWord2007> &
      Word$WdCompatibilityMode__wdWord2007 &
      12; // 12
    static +wdWord2010: Class<Word$WdCompatibilityMode__wdWord2010> &
      Word$WdCompatibilityMode__wdWord2010 &
      14; // 14
  }

  declare class Word$WdCompatibilityMode__wdCurrent
    mixins Word$WdCompatibilityMode {}
  declare class Word$WdCompatibilityMode__wdWord2003
    mixins Word$WdCompatibilityMode {}
  declare class Word$WdCompatibilityMode__wdWord2007
    mixins Word$WdCompatibilityMode {}
  declare class Word$WdCompatibilityMode__wdWord2010
    mixins Word$WdCompatibilityMode {}

  declare class Word$WdConditionCode {
    constructor(...args: empty): mixed;
    static +wdEvenColumnBanding: Class<Word$WdConditionCode__wdEvenColumnBanding> &
      Word$WdConditionCode__wdEvenColumnBanding &
      7; // 7
    static +wdEvenRowBanding: Class<Word$WdConditionCode__wdEvenRowBanding> &
      Word$WdConditionCode__wdEvenRowBanding &
      3; // 3
    static +wdFirstColumn: Class<Word$WdConditionCode__wdFirstColumn> &
      Word$WdConditionCode__wdFirstColumn &
      4; // 4
    static +wdFirstRow: Class<Word$WdConditionCode__wdFirstRow> &
      Word$WdConditionCode__wdFirstRow &
      0; // 0
    static +wdLastColumn: Class<Word$WdConditionCode__wdLastColumn> &
      Word$WdConditionCode__wdLastColumn &
      5; // 5
    static +wdLastRow: Class<Word$WdConditionCode__wdLastRow> &
      Word$WdConditionCode__wdLastRow &
      1; // 1
    static +wdNECell: Class<Word$WdConditionCode__wdNECell> &
      Word$WdConditionCode__wdNECell &
      8; // 8
    static +wdNWCell: Class<Word$WdConditionCode__wdNWCell> &
      Word$WdConditionCode__wdNWCell &
      9; // 9
    static +wdOddColumnBanding: Class<Word$WdConditionCode__wdOddColumnBanding> &
      Word$WdConditionCode__wdOddColumnBanding &
      6; // 6
    static +wdOddRowBanding: Class<Word$WdConditionCode__wdOddRowBanding> &
      Word$WdConditionCode__wdOddRowBanding &
      2; // 2
    static +wdSECell: Class<Word$WdConditionCode__wdSECell> &
      Word$WdConditionCode__wdSECell &
      10; // 10
    static +wdSWCell: Class<Word$WdConditionCode__wdSWCell> &
      Word$WdConditionCode__wdSWCell &
      11; // 11
  }

  declare class Word$WdConditionCode__wdEvenColumnBanding
    mixins Word$WdConditionCode {}
  declare class Word$WdConditionCode__wdEvenRowBanding
    mixins Word$WdConditionCode {}
  declare class Word$WdConditionCode__wdFirstColumn
    mixins Word$WdConditionCode {}
  declare class Word$WdConditionCode__wdFirstRow mixins Word$WdConditionCode {}
  declare class Word$WdConditionCode__wdLastColumn
    mixins Word$WdConditionCode {}
  declare class Word$WdConditionCode__wdLastRow mixins Word$WdConditionCode {}
  declare class Word$WdConditionCode__wdNECell mixins Word$WdConditionCode {}
  declare class Word$WdConditionCode__wdNWCell mixins Word$WdConditionCode {}
  declare class Word$WdConditionCode__wdOddColumnBanding
    mixins Word$WdConditionCode {}
  declare class Word$WdConditionCode__wdOddRowBanding
    mixins Word$WdConditionCode {}
  declare class Word$WdConditionCode__wdSECell mixins Word$WdConditionCode {}
  declare class Word$WdConditionCode__wdSWCell mixins Word$WdConditionCode {}

  declare class Word$WdConstants {
    constructor(...args: empty): mixed;
    static +wdAutoPosition: Class<Word$WdConstants__wdAutoPosition> &
      Word$WdConstants__wdAutoPosition &
      0; // 0
    static +wdBackward: Class<Word$WdConstants__wdBackward> &
      Word$WdConstants__wdBackward &
      -1073741823; // -1073741823
    static +wdCreatorCode: Class<Word$WdConstants__wdCreatorCode> &
      Word$WdConstants__wdCreatorCode &
      1297307460; // 1297307460
    static +wdFirst: Class<Word$WdConstants__wdFirst> &
      Word$WdConstants__wdFirst &
      1; // 1
    static +wdForward: Class<Word$WdConstants__wdForward> &
      Word$WdConstants__wdForward &
      1073741823; // 1073741823
    static +wdToggle: Class<Word$WdConstants__wdToggle> &
      Word$WdConstants__wdToggle &
      9999998; // 9999998
    static +wdUndefined: Class<Word$WdConstants__wdUndefined> &
      Word$WdConstants__wdUndefined &
      9999999; // 9999999
  }

  declare class Word$WdConstants__wdAutoPosition mixins Word$WdConstants {}
  declare class Word$WdConstants__wdBackward mixins Word$WdConstants {}
  declare class Word$WdConstants__wdCreatorCode mixins Word$WdConstants {}
  declare class Word$WdConstants__wdFirst mixins Word$WdConstants {}
  declare class Word$WdConstants__wdForward mixins Word$WdConstants {}
  declare class Word$WdConstants__wdToggle mixins Word$WdConstants {}
  declare class Word$WdConstants__wdUndefined mixins Word$WdConstants {}

  declare class Word$WdContentControlDateStorageFormat {
    constructor(...args: empty): mixed;
    static +wdContentControlDateStorageDate: Class<Word$WdContentControlDateStorageFormat__wdContentControlDateStorageDate> &
      Word$WdContentControlDateStorageFormat__wdContentControlDateStorageDate &
      1; // 1
    static +wdContentControlDateStorageDateTime: Class<Word$WdContentControlDateStorageFormat__wdContentControlDateStorageDateTime> &
      Word$WdContentControlDateStorageFormat__wdContentControlDateStorageDateTime &
      2; // 2
    static +wdContentControlDateStorageText: Class<Word$WdContentControlDateStorageFormat__wdContentControlDateStorageText> &
      Word$WdContentControlDateStorageFormat__wdContentControlDateStorageText &
      0; // 0
  }

  declare class Word$WdContentControlDateStorageFormat__wdContentControlDateStorageDate
    mixins Word$WdContentControlDateStorageFormat {}
  declare class Word$WdContentControlDateStorageFormat__wdContentControlDateStorageDateTime
    mixins Word$WdContentControlDateStorageFormat {}
  declare class Word$WdContentControlDateStorageFormat__wdContentControlDateStorageText
    mixins Word$WdContentControlDateStorageFormat {}

  declare class Word$WdContentControlType {
    constructor(...args: empty): mixed;
    static +wdContentControlBuildingBlockGallery: Class<Word$WdContentControlType__wdContentControlBuildingBlockGallery> &
      Word$WdContentControlType__wdContentControlBuildingBlockGallery &
      5; // 5
    static +wdContentControlCheckBox: Class<Word$WdContentControlType__wdContentControlCheckBox> &
      Word$WdContentControlType__wdContentControlCheckBox &
      8; // 8
    static +wdContentControlComboBox: Class<Word$WdContentControlType__wdContentControlComboBox> &
      Word$WdContentControlType__wdContentControlComboBox &
      3; // 3
    static +wdContentControlDate: Class<Word$WdContentControlType__wdContentControlDate> &
      Word$WdContentControlType__wdContentControlDate &
      6; // 6
    static +wdContentControlDropdownList: Class<Word$WdContentControlType__wdContentControlDropdownList> &
      Word$WdContentControlType__wdContentControlDropdownList &
      4; // 4
    static +wdContentControlGroup: Class<Word$WdContentControlType__wdContentControlGroup> &
      Word$WdContentControlType__wdContentControlGroup &
      7; // 7
    static +wdContentControlPicture: Class<Word$WdContentControlType__wdContentControlPicture> &
      Word$WdContentControlType__wdContentControlPicture &
      2; // 2
    static +wdContentControlRichText: Class<Word$WdContentControlType__wdContentControlRichText> &
      Word$WdContentControlType__wdContentControlRichText &
      0; // 0
    static +wdContentControlText: Class<Word$WdContentControlType__wdContentControlText> &
      Word$WdContentControlType__wdContentControlText &
      1; // 1
  }

  declare class Word$WdContentControlType__wdContentControlBuildingBlockGallery
    mixins Word$WdContentControlType {}
  declare class Word$WdContentControlType__wdContentControlCheckBox
    mixins Word$WdContentControlType {}
  declare class Word$WdContentControlType__wdContentControlComboBox
    mixins Word$WdContentControlType {}
  declare class Word$WdContentControlType__wdContentControlDate
    mixins Word$WdContentControlType {}
  declare class Word$WdContentControlType__wdContentControlDropdownList
    mixins Word$WdContentControlType {}
  declare class Word$WdContentControlType__wdContentControlGroup
    mixins Word$WdContentControlType {}
  declare class Word$WdContentControlType__wdContentControlPicture
    mixins Word$WdContentControlType {}
  declare class Word$WdContentControlType__wdContentControlRichText
    mixins Word$WdContentControlType {}
  declare class Word$WdContentControlType__wdContentControlText
    mixins Word$WdContentControlType {}

  declare class Word$WdContinue {
    constructor(...args: empty): mixed;
    static +wdContinueDisabled: Class<Word$WdContinue__wdContinueDisabled> &
      Word$WdContinue__wdContinueDisabled &
      0; // 0
    static +wdContinueList: Class<Word$WdContinue__wdContinueList> &
      Word$WdContinue__wdContinueList &
      2; // 2
    static +wdResetList: Class<Word$WdContinue__wdResetList> &
      Word$WdContinue__wdResetList &
      1; // 1
  }

  declare class Word$WdContinue__wdContinueDisabled mixins Word$WdContinue {}
  declare class Word$WdContinue__wdContinueList mixins Word$WdContinue {}
  declare class Word$WdContinue__wdResetList mixins Word$WdContinue {}

  declare class Word$WdCountry {
    constructor(...args: empty): mixed;
    static +wdArgentina: Class<Word$WdCountry__wdArgentina> &
      Word$WdCountry__wdArgentina &
      54; // 54
    static +wdBrazil: Class<Word$WdCountry__wdBrazil> &
      Word$WdCountry__wdBrazil &
      55; // 55
    static +wdCanada: Class<Word$WdCountry__wdCanada> &
      Word$WdCountry__wdCanada &
      2; // 2
    static +wdChile: Class<Word$WdCountry__wdChile> &
      Word$WdCountry__wdChile &
      56; // 56
    static +wdChina: Class<Word$WdCountry__wdChina> &
      Word$WdCountry__wdChina &
      86; // 86
    static +wdDenmark: Class<Word$WdCountry__wdDenmark> &
      Word$WdCountry__wdDenmark &
      45; // 45
    static +wdFinland: Class<Word$WdCountry__wdFinland> &
      Word$WdCountry__wdFinland &
      358; // 358
    static +wdFrance: Class<Word$WdCountry__wdFrance> &
      Word$WdCountry__wdFrance &
      33; // 33
    static +wdGermany: Class<Word$WdCountry__wdGermany> &
      Word$WdCountry__wdGermany &
      49; // 49
    static +wdIceland: Class<Word$WdCountry__wdIceland> &
      Word$WdCountry__wdIceland &
      354; // 354
    static +wdItaly: Class<Word$WdCountry__wdItaly> &
      Word$WdCountry__wdItaly &
      39; // 39
    static +wdJapan: Class<Word$WdCountry__wdJapan> &
      Word$WdCountry__wdJapan &
      81; // 81
    static +wdKorea: Class<Word$WdCountry__wdKorea> &
      Word$WdCountry__wdKorea &
      82; // 82
    static +wdLatinAmerica: Class<Word$WdCountry__wdLatinAmerica> &
      Word$WdCountry__wdLatinAmerica &
      3; // 3
    static +wdMexico: Class<Word$WdCountry__wdMexico> &
      Word$WdCountry__wdMexico &
      52; // 52
    static +wdNetherlands: Class<Word$WdCountry__wdNetherlands> &
      Word$WdCountry__wdNetherlands &
      31; // 31
    static +wdNorway: Class<Word$WdCountry__wdNorway> &
      Word$WdCountry__wdNorway &
      47; // 47
    static +wdPeru: Class<Word$WdCountry__wdPeru> & Word$WdCountry__wdPeru & 51; // 51
    static +wdSpain: Class<Word$WdCountry__wdSpain> &
      Word$WdCountry__wdSpain &
      34; // 34
    static +wdSweden: Class<Word$WdCountry__wdSweden> &
      Word$WdCountry__wdSweden &
      46; // 46
    static +wdTaiwan: Class<Word$WdCountry__wdTaiwan> &
      Word$WdCountry__wdTaiwan &
      886; // 886
    static +wdUK: Class<Word$WdCountry__wdUK> & Word$WdCountry__wdUK & 44; // 44
    static +wdUS: Class<Word$WdCountry__wdUS> & Word$WdCountry__wdUS & 1; // 1
    static +wdVenezuela: Class<Word$WdCountry__wdVenezuela> &
      Word$WdCountry__wdVenezuela &
      58; // 58
  }

  declare class Word$WdCountry__wdArgentina mixins Word$WdCountry {}
  declare class Word$WdCountry__wdBrazil mixins Word$WdCountry {}
  declare class Word$WdCountry__wdCanada mixins Word$WdCountry {}
  declare class Word$WdCountry__wdChile mixins Word$WdCountry {}
  declare class Word$WdCountry__wdChina mixins Word$WdCountry {}
  declare class Word$WdCountry__wdDenmark mixins Word$WdCountry {}
  declare class Word$WdCountry__wdFinland mixins Word$WdCountry {}
  declare class Word$WdCountry__wdFrance mixins Word$WdCountry {}
  declare class Word$WdCountry__wdGermany mixins Word$WdCountry {}
  declare class Word$WdCountry__wdIceland mixins Word$WdCountry {}
  declare class Word$WdCountry__wdItaly mixins Word$WdCountry {}
  declare class Word$WdCountry__wdJapan mixins Word$WdCountry {}
  declare class Word$WdCountry__wdKorea mixins Word$WdCountry {}
  declare class Word$WdCountry__wdLatinAmerica mixins Word$WdCountry {}
  declare class Word$WdCountry__wdMexico mixins Word$WdCountry {}
  declare class Word$WdCountry__wdNetherlands mixins Word$WdCountry {}
  declare class Word$WdCountry__wdNorway mixins Word$WdCountry {}
  declare class Word$WdCountry__wdPeru mixins Word$WdCountry {}
  declare class Word$WdCountry__wdSpain mixins Word$WdCountry {}
  declare class Word$WdCountry__wdSweden mixins Word$WdCountry {}
  declare class Word$WdCountry__wdTaiwan mixins Word$WdCountry {}
  declare class Word$WdCountry__wdUK mixins Word$WdCountry {}
  declare class Word$WdCountry__wdUS mixins Word$WdCountry {}
  declare class Word$WdCountry__wdVenezuela mixins Word$WdCountry {}

  declare class Word$WdCursorMovement {
    constructor(...args: empty): mixed;
    static +wdCursorMovementLogical: Class<Word$WdCursorMovement__wdCursorMovementLogical> &
      Word$WdCursorMovement__wdCursorMovementLogical &
      0; // 0
    static +wdCursorMovementVisual: Class<Word$WdCursorMovement__wdCursorMovementVisual> &
      Word$WdCursorMovement__wdCursorMovementVisual &
      1; // 1
  }

  declare class Word$WdCursorMovement__wdCursorMovementLogical
    mixins Word$WdCursorMovement {}
  declare class Word$WdCursorMovement__wdCursorMovementVisual
    mixins Word$WdCursorMovement {}

  declare class Word$WdCursorType {
    constructor(...args: empty): mixed;
    static +wdCursorIBeam: Class<Word$WdCursorType__wdCursorIBeam> &
      Word$WdCursorType__wdCursorIBeam &
      1; // 1
    static +wdCursorNormal: Class<Word$WdCursorType__wdCursorNormal> &
      Word$WdCursorType__wdCursorNormal &
      2; // 2
    static +wdCursorNorthwestArrow: Class<Word$WdCursorType__wdCursorNorthwestArrow> &
      Word$WdCursorType__wdCursorNorthwestArrow &
      3; // 3
    static +wdCursorWait: Class<Word$WdCursorType__wdCursorWait> &
      Word$WdCursorType__wdCursorWait &
      0; // 0
  }

  declare class Word$WdCursorType__wdCursorIBeam mixins Word$WdCursorType {}
  declare class Word$WdCursorType__wdCursorNormal mixins Word$WdCursorType {}
  declare class Word$WdCursorType__wdCursorNorthwestArrow
    mixins Word$WdCursorType {}
  declare class Word$WdCursorType__wdCursorWait mixins Word$WdCursorType {}

  declare class Word$WdCustomLabelPageSize {
    constructor(...args: empty): mixed;
    static +wdCustomLabelA4: Class<Word$WdCustomLabelPageSize__wdCustomLabelA4> &
      Word$WdCustomLabelPageSize__wdCustomLabelA4 &
      2; // 2
    static +wdCustomLabelA4LS: Class<Word$WdCustomLabelPageSize__wdCustomLabelA4LS> &
      Word$WdCustomLabelPageSize__wdCustomLabelA4LS &
      3; // 3
    static +wdCustomLabelA5: Class<Word$WdCustomLabelPageSize__wdCustomLabelA5> &
      Word$WdCustomLabelPageSize__wdCustomLabelA5 &
      4; // 4
    static +wdCustomLabelA5LS: Class<Word$WdCustomLabelPageSize__wdCustomLabelA5LS> &
      Word$WdCustomLabelPageSize__wdCustomLabelA5LS &
      5; // 5
    static +wdCustomLabelB4JIS: Class<Word$WdCustomLabelPageSize__wdCustomLabelB4JIS> &
      Word$WdCustomLabelPageSize__wdCustomLabelB4JIS &
      13; // 13
    static +wdCustomLabelB5: Class<Word$WdCustomLabelPageSize__wdCustomLabelB5> &
      Word$WdCustomLabelPageSize__wdCustomLabelB5 &
      6; // 6
    static +wdCustomLabelFanfold: Class<Word$WdCustomLabelPageSize__wdCustomLabelFanfold> &
      Word$WdCustomLabelPageSize__wdCustomLabelFanfold &
      8; // 8
    static +wdCustomLabelHigaki: Class<Word$WdCustomLabelPageSize__wdCustomLabelHigaki> &
      Word$WdCustomLabelPageSize__wdCustomLabelHigaki &
      11; // 11
    static +wdCustomLabelHigakiLS: Class<Word$WdCustomLabelPageSize__wdCustomLabelHigakiLS> &
      Word$WdCustomLabelPageSize__wdCustomLabelHigakiLS &
      12; // 12
    static +wdCustomLabelLetter: Class<Word$WdCustomLabelPageSize__wdCustomLabelLetter> &
      Word$WdCustomLabelPageSize__wdCustomLabelLetter &
      0; // 0
    static +wdCustomLabelLetterLS: Class<Word$WdCustomLabelPageSize__wdCustomLabelLetterLS> &
      Word$WdCustomLabelPageSize__wdCustomLabelLetterLS &
      1; // 1
    static +wdCustomLabelMini: Class<Word$WdCustomLabelPageSize__wdCustomLabelMini> &
      Word$WdCustomLabelPageSize__wdCustomLabelMini &
      7; // 7
    static +wdCustomLabelVertHalfSheet: Class<Word$WdCustomLabelPageSize__wdCustomLabelVertHalfSheet> &
      Word$WdCustomLabelPageSize__wdCustomLabelVertHalfSheet &
      9; // 9
    static +wdCustomLabelVertHalfSheetLS: Class<Word$WdCustomLabelPageSize__wdCustomLabelVertHalfSheetLS> &
      Word$WdCustomLabelPageSize__wdCustomLabelVertHalfSheetLS &
      10; // 10
  }

  declare class Word$WdCustomLabelPageSize__wdCustomLabelA4
    mixins Word$WdCustomLabelPageSize {}
  declare class Word$WdCustomLabelPageSize__wdCustomLabelA4LS
    mixins Word$WdCustomLabelPageSize {}
  declare class Word$WdCustomLabelPageSize__wdCustomLabelA5
    mixins Word$WdCustomLabelPageSize {}
  declare class Word$WdCustomLabelPageSize__wdCustomLabelA5LS
    mixins Word$WdCustomLabelPageSize {}
  declare class Word$WdCustomLabelPageSize__wdCustomLabelB4JIS
    mixins Word$WdCustomLabelPageSize {}
  declare class Word$WdCustomLabelPageSize__wdCustomLabelB5
    mixins Word$WdCustomLabelPageSize {}
  declare class Word$WdCustomLabelPageSize__wdCustomLabelFanfold
    mixins Word$WdCustomLabelPageSize {}
  declare class Word$WdCustomLabelPageSize__wdCustomLabelHigaki
    mixins Word$WdCustomLabelPageSize {}
  declare class Word$WdCustomLabelPageSize__wdCustomLabelHigakiLS
    mixins Word$WdCustomLabelPageSize {}
  declare class Word$WdCustomLabelPageSize__wdCustomLabelLetter
    mixins Word$WdCustomLabelPageSize {}
  declare class Word$WdCustomLabelPageSize__wdCustomLabelLetterLS
    mixins Word$WdCustomLabelPageSize {}
  declare class Word$WdCustomLabelPageSize__wdCustomLabelMini
    mixins Word$WdCustomLabelPageSize {}
  declare class Word$WdCustomLabelPageSize__wdCustomLabelVertHalfSheet
    mixins Word$WdCustomLabelPageSize {}
  declare class Word$WdCustomLabelPageSize__wdCustomLabelVertHalfSheetLS
    mixins Word$WdCustomLabelPageSize {}

  declare class Word$WdDateLanguage {
    constructor(...args: empty): mixed;
    static +wdDateLanguageBidi: Class<Word$WdDateLanguage__wdDateLanguageBidi> &
      Word$WdDateLanguage__wdDateLanguageBidi &
      10; // 10
    static +wdDateLanguageLatin: Class<Word$WdDateLanguage__wdDateLanguageLatin> &
      Word$WdDateLanguage__wdDateLanguageLatin &
      1033; // 1033
  }

  declare class Word$WdDateLanguage__wdDateLanguageBidi
    mixins Word$WdDateLanguage {}
  declare class Word$WdDateLanguage__wdDateLanguageLatin
    mixins Word$WdDateLanguage {}

  declare class Word$WdDefaultFilePath {
    constructor(...args: empty): mixed;
    static +wdAutoRecoverPath: Class<Word$WdDefaultFilePath__wdAutoRecoverPath> &
      Word$WdDefaultFilePath__wdAutoRecoverPath &
      5; // 5
    static +wdBorderArtPath: Class<Word$WdDefaultFilePath__wdBorderArtPath> &
      Word$WdDefaultFilePath__wdBorderArtPath &
      19; // 19
    static +wdCurrentFolderPath: Class<Word$WdDefaultFilePath__wdCurrentFolderPath> &
      Word$WdDefaultFilePath__wdCurrentFolderPath &
      14; // 14
    static +wdDocumentsPath: Class<Word$WdDefaultFilePath__wdDocumentsPath> &
      Word$WdDefaultFilePath__wdDocumentsPath &
      0; // 0
    static +wdGraphicsFiltersPath: Class<Word$WdDefaultFilePath__wdGraphicsFiltersPath> &
      Word$WdDefaultFilePath__wdGraphicsFiltersPath &
      10; // 10
    static +wdPicturesPath: Class<Word$WdDefaultFilePath__wdPicturesPath> &
      Word$WdDefaultFilePath__wdPicturesPath &
      1; // 1
    static +wdProgramPath: Class<Word$WdDefaultFilePath__wdProgramPath> &
      Word$WdDefaultFilePath__wdProgramPath &
      9; // 9
    static +wdProofingToolsPath: Class<Word$WdDefaultFilePath__wdProofingToolsPath> &
      Word$WdDefaultFilePath__wdProofingToolsPath &
      12; // 12
    static +wdStartupPath: Class<Word$WdDefaultFilePath__wdStartupPath> &
      Word$WdDefaultFilePath__wdStartupPath &
      8; // 8
    static +wdStyleGalleryPath: Class<Word$WdDefaultFilePath__wdStyleGalleryPath> &
      Word$WdDefaultFilePath__wdStyleGalleryPath &
      15; // 15
    static +wdTempFilePath: Class<Word$WdDefaultFilePath__wdTempFilePath> &
      Word$WdDefaultFilePath__wdTempFilePath &
      13; // 13
    static +wdTextConvertersPath: Class<Word$WdDefaultFilePath__wdTextConvertersPath> &
      Word$WdDefaultFilePath__wdTextConvertersPath &
      11; // 11
    static +wdToolsPath: Class<Word$WdDefaultFilePath__wdToolsPath> &
      Word$WdDefaultFilePath__wdToolsPath &
      6; // 6
    static +wdTutorialPath: Class<Word$WdDefaultFilePath__wdTutorialPath> &
      Word$WdDefaultFilePath__wdTutorialPath &
      7; // 7
    static +wdUserOptionsPath: Class<Word$WdDefaultFilePath__wdUserOptionsPath> &
      Word$WdDefaultFilePath__wdUserOptionsPath &
      4; // 4
    static +wdUserTemplatesPath: Class<Word$WdDefaultFilePath__wdUserTemplatesPath> &
      Word$WdDefaultFilePath__wdUserTemplatesPath &
      2; // 2
    static +wdWorkgroupTemplatesPath: Class<Word$WdDefaultFilePath__wdWorkgroupTemplatesPath> &
      Word$WdDefaultFilePath__wdWorkgroupTemplatesPath &
      3; // 3
  }

  declare class Word$WdDefaultFilePath__wdAutoRecoverPath
    mixins Word$WdDefaultFilePath {}
  declare class Word$WdDefaultFilePath__wdBorderArtPath
    mixins Word$WdDefaultFilePath {}
  declare class Word$WdDefaultFilePath__wdCurrentFolderPath
    mixins Word$WdDefaultFilePath {}
  declare class Word$WdDefaultFilePath__wdDocumentsPath
    mixins Word$WdDefaultFilePath {}
  declare class Word$WdDefaultFilePath__wdGraphicsFiltersPath
    mixins Word$WdDefaultFilePath {}
  declare class Word$WdDefaultFilePath__wdPicturesPath
    mixins Word$WdDefaultFilePath {}
  declare class Word$WdDefaultFilePath__wdProgramPath
    mixins Word$WdDefaultFilePath {}
  declare class Word$WdDefaultFilePath__wdProofingToolsPath
    mixins Word$WdDefaultFilePath {}
  declare class Word$WdDefaultFilePath__wdStartupPath
    mixins Word$WdDefaultFilePath {}
  declare class Word$WdDefaultFilePath__wdStyleGalleryPath
    mixins Word$WdDefaultFilePath {}
  declare class Word$WdDefaultFilePath__wdTempFilePath
    mixins Word$WdDefaultFilePath {}
  declare class Word$WdDefaultFilePath__wdTextConvertersPath
    mixins Word$WdDefaultFilePath {}
  declare class Word$WdDefaultFilePath__wdToolsPath
    mixins Word$WdDefaultFilePath {}
  declare class Word$WdDefaultFilePath__wdTutorialPath
    mixins Word$WdDefaultFilePath {}
  declare class Word$WdDefaultFilePath__wdUserOptionsPath
    mixins Word$WdDefaultFilePath {}
  declare class Word$WdDefaultFilePath__wdUserTemplatesPath
    mixins Word$WdDefaultFilePath {}
  declare class Word$WdDefaultFilePath__wdWorkgroupTemplatesPath
    mixins Word$WdDefaultFilePath {}

  declare class Word$WdDefaultListBehavior {
    constructor(...args: empty): mixed;
    static +wdWord10ListBehavior: Class<Word$WdDefaultListBehavior__wdWord10ListBehavior> &
      Word$WdDefaultListBehavior__wdWord10ListBehavior &
      2; // 2
    static +wdWord8ListBehavior: Class<Word$WdDefaultListBehavior__wdWord8ListBehavior> &
      Word$WdDefaultListBehavior__wdWord8ListBehavior &
      0; // 0
    static +wdWord9ListBehavior: Class<Word$WdDefaultListBehavior__wdWord9ListBehavior> &
      Word$WdDefaultListBehavior__wdWord9ListBehavior &
      1; // 1
  }

  declare class Word$WdDefaultListBehavior__wdWord10ListBehavior
    mixins Word$WdDefaultListBehavior {}
  declare class Word$WdDefaultListBehavior__wdWord8ListBehavior
    mixins Word$WdDefaultListBehavior {}
  declare class Word$WdDefaultListBehavior__wdWord9ListBehavior
    mixins Word$WdDefaultListBehavior {}

  declare class Word$WdDefaultTableBehavior {
    constructor(...args: empty): mixed;
    static +wdWord8TableBehavior: Class<Word$WdDefaultTableBehavior__wdWord8TableBehavior> &
      Word$WdDefaultTableBehavior__wdWord8TableBehavior &
      0; // 0
    static +wdWord9TableBehavior: Class<Word$WdDefaultTableBehavior__wdWord9TableBehavior> &
      Word$WdDefaultTableBehavior__wdWord9TableBehavior &
      1; // 1
  }

  declare class Word$WdDefaultTableBehavior__wdWord8TableBehavior
    mixins Word$WdDefaultTableBehavior {}
  declare class Word$WdDefaultTableBehavior__wdWord9TableBehavior
    mixins Word$WdDefaultTableBehavior {}

  declare class Word$WdDeleteCells {
    constructor(...args: empty): mixed;
    static +wdDeleteCellsEntireColumn: Class<Word$WdDeleteCells__wdDeleteCellsEntireColumn> &
      Word$WdDeleteCells__wdDeleteCellsEntireColumn &
      3; // 3
    static +wdDeleteCellsEntireRow: Class<Word$WdDeleteCells__wdDeleteCellsEntireRow> &
      Word$WdDeleteCells__wdDeleteCellsEntireRow &
      2; // 2
    static +wdDeleteCellsShiftLeft: Class<Word$WdDeleteCells__wdDeleteCellsShiftLeft> &
      Word$WdDeleteCells__wdDeleteCellsShiftLeft &
      0; // 0
    static +wdDeleteCellsShiftUp: Class<Word$WdDeleteCells__wdDeleteCellsShiftUp> &
      Word$WdDeleteCells__wdDeleteCellsShiftUp &
      1; // 1
  }

  declare class Word$WdDeleteCells__wdDeleteCellsEntireColumn
    mixins Word$WdDeleteCells {}
  declare class Word$WdDeleteCells__wdDeleteCellsEntireRow
    mixins Word$WdDeleteCells {}
  declare class Word$WdDeleteCells__wdDeleteCellsShiftLeft
    mixins Word$WdDeleteCells {}
  declare class Word$WdDeleteCells__wdDeleteCellsShiftUp
    mixins Word$WdDeleteCells {}

  declare class Word$WdDeletedTextMark {
    constructor(...args: empty): mixed;
    static +wdDeletedTextMarkBold: Class<Word$WdDeletedTextMark__wdDeletedTextMarkBold> &
      Word$WdDeletedTextMark__wdDeletedTextMarkBold &
      5; // 5
    static +wdDeletedTextMarkCaret: Class<Word$WdDeletedTextMark__wdDeletedTextMarkCaret> &
      Word$WdDeletedTextMark__wdDeletedTextMarkCaret &
      2; // 2
    static +wdDeletedTextMarkColorOnly: Class<Word$WdDeletedTextMark__wdDeletedTextMarkColorOnly> &
      Word$WdDeletedTextMark__wdDeletedTextMarkColorOnly &
      9; // 9
    static +wdDeletedTextMarkDoubleStrikeThrough: Class<Word$WdDeletedTextMark__wdDeletedTextMarkDoubleStrikeThrough> &
      Word$WdDeletedTextMark__wdDeletedTextMarkDoubleStrikeThrough &
      10; // 10
    static +wdDeletedTextMarkDoubleUnderline: Class<Word$WdDeletedTextMark__wdDeletedTextMarkDoubleUnderline> &
      Word$WdDeletedTextMark__wdDeletedTextMarkDoubleUnderline &
      8; // 8
    static +wdDeletedTextMarkHidden: Class<Word$WdDeletedTextMark__wdDeletedTextMarkHidden> &
      Word$WdDeletedTextMark__wdDeletedTextMarkHidden &
      0; // 0
    static +wdDeletedTextMarkItalic: Class<Word$WdDeletedTextMark__wdDeletedTextMarkItalic> &
      Word$WdDeletedTextMark__wdDeletedTextMarkItalic &
      6; // 6
    static +wdDeletedTextMarkNone: Class<Word$WdDeletedTextMark__wdDeletedTextMarkNone> &
      Word$WdDeletedTextMark__wdDeletedTextMarkNone &
      4; // 4
    static +wdDeletedTextMarkPound: Class<Word$WdDeletedTextMark__wdDeletedTextMarkPound> &
      Word$WdDeletedTextMark__wdDeletedTextMarkPound &
      3; // 3
    static +wdDeletedTextMarkStrikeThrough: Class<Word$WdDeletedTextMark__wdDeletedTextMarkStrikeThrough> &
      Word$WdDeletedTextMark__wdDeletedTextMarkStrikeThrough &
      1; // 1
    static +wdDeletedTextMarkUnderline: Class<Word$WdDeletedTextMark__wdDeletedTextMarkUnderline> &
      Word$WdDeletedTextMark__wdDeletedTextMarkUnderline &
      7; // 7
  }

  declare class Word$WdDeletedTextMark__wdDeletedTextMarkBold
    mixins Word$WdDeletedTextMark {}
  declare class Word$WdDeletedTextMark__wdDeletedTextMarkCaret
    mixins Word$WdDeletedTextMark {}
  declare class Word$WdDeletedTextMark__wdDeletedTextMarkColorOnly
    mixins Word$WdDeletedTextMark {}
  declare class Word$WdDeletedTextMark__wdDeletedTextMarkDoubleStrikeThrough
    mixins Word$WdDeletedTextMark {}
  declare class Word$WdDeletedTextMark__wdDeletedTextMarkDoubleUnderline
    mixins Word$WdDeletedTextMark {}
  declare class Word$WdDeletedTextMark__wdDeletedTextMarkHidden
    mixins Word$WdDeletedTextMark {}
  declare class Word$WdDeletedTextMark__wdDeletedTextMarkItalic
    mixins Word$WdDeletedTextMark {}
  declare class Word$WdDeletedTextMark__wdDeletedTextMarkNone
    mixins Word$WdDeletedTextMark {}
  declare class Word$WdDeletedTextMark__wdDeletedTextMarkPound
    mixins Word$WdDeletedTextMark {}
  declare class Word$WdDeletedTextMark__wdDeletedTextMarkStrikeThrough
    mixins Word$WdDeletedTextMark {}
  declare class Word$WdDeletedTextMark__wdDeletedTextMarkUnderline
    mixins Word$WdDeletedTextMark {}

  declare class Word$WdDiacriticColor {
    constructor(...args: empty): mixed;
    static +wdDiacriticColorBidi: Class<Word$WdDiacriticColor__wdDiacriticColorBidi> &
      Word$WdDiacriticColor__wdDiacriticColorBidi &
      0; // 0
    static +wdDiacriticColorLatin: Class<Word$WdDiacriticColor__wdDiacriticColorLatin> &
      Word$WdDiacriticColor__wdDiacriticColorLatin &
      1; // 1
  }

  declare class Word$WdDiacriticColor__wdDiacriticColorBidi
    mixins Word$WdDiacriticColor {}
  declare class Word$WdDiacriticColor__wdDiacriticColorLatin
    mixins Word$WdDiacriticColor {}

  declare class Word$WdDictionaryType {
    constructor(...args: empty): mixed;
    static +wdGrammar: Class<Word$WdDictionaryType__wdGrammar> &
      Word$WdDictionaryType__wdGrammar &
      1; // 1
    static +wdHangulHanjaConversion: Class<Word$WdDictionaryType__wdHangulHanjaConversion> &
      Word$WdDictionaryType__wdHangulHanjaConversion &
      8; // 8
    static +wdHangulHanjaConversionCustom: Class<Word$WdDictionaryType__wdHangulHanjaConversionCustom> &
      Word$WdDictionaryType__wdHangulHanjaConversionCustom &
      9; // 9
    static +wdHyphenation: Class<Word$WdDictionaryType__wdHyphenation> &
      Word$WdDictionaryType__wdHyphenation &
      3; // 3
    static +wdSpelling: Class<Word$WdDictionaryType__wdSpelling> &
      Word$WdDictionaryType__wdSpelling &
      0; // 0
    static +wdSpellingComplete: Class<Word$WdDictionaryType__wdSpellingComplete> &
      Word$WdDictionaryType__wdSpellingComplete &
      4; // 4
    static +wdSpellingCustom: Class<Word$WdDictionaryType__wdSpellingCustom> &
      Word$WdDictionaryType__wdSpellingCustom &
      5; // 5
    static +wdSpellingLegal: Class<Word$WdDictionaryType__wdSpellingLegal> &
      Word$WdDictionaryType__wdSpellingLegal &
      6; // 6
    static +wdSpellingMedical: Class<Word$WdDictionaryType__wdSpellingMedical> &
      Word$WdDictionaryType__wdSpellingMedical &
      7; // 7
    static +wdThesaurus: Class<Word$WdDictionaryType__wdThesaurus> &
      Word$WdDictionaryType__wdThesaurus &
      2; // 2
  }

  declare class Word$WdDictionaryType__wdGrammar mixins Word$WdDictionaryType {}
  declare class Word$WdDictionaryType__wdHangulHanjaConversion
    mixins Word$WdDictionaryType {}
  declare class Word$WdDictionaryType__wdHangulHanjaConversionCustom
    mixins Word$WdDictionaryType {}
  declare class Word$WdDictionaryType__wdHyphenation
    mixins Word$WdDictionaryType {}
  declare class Word$WdDictionaryType__wdSpelling
    mixins Word$WdDictionaryType {}
  declare class Word$WdDictionaryType__wdSpellingComplete
    mixins Word$WdDictionaryType {}
  declare class Word$WdDictionaryType__wdSpellingCustom
    mixins Word$WdDictionaryType {}
  declare class Word$WdDictionaryType__wdSpellingLegal
    mixins Word$WdDictionaryType {}
  declare class Word$WdDictionaryType__wdSpellingMedical
    mixins Word$WdDictionaryType {}
  declare class Word$WdDictionaryType__wdThesaurus
    mixins Word$WdDictionaryType {}

  declare class Word$WdDictionaryTypeHID {
    constructor(...args: empty): mixed;
    static +emptyenum: Class<Word$WdDictionaryTypeHID__emptyenum> &
      Word$WdDictionaryTypeHID__emptyenum &
      0; // 0
  }

  declare class Word$WdDictionaryTypeHID__emptyenum
    mixins Word$WdDictionaryTypeHID {}

  declare class Word$WdDisableFeaturesIntroducedAfter {
    constructor(...args: empty): mixed;
    static +wd70: Class<Word$WdDisableFeaturesIntroducedAfter__wd70> &
      Word$WdDisableFeaturesIntroducedAfter__wd70 &
      0; // 0
    static +wd70FE: Class<Word$WdDisableFeaturesIntroducedAfter__wd70FE> &
      Word$WdDisableFeaturesIntroducedAfter__wd70FE &
      1; // 1
    static +wd80: Class<Word$WdDisableFeaturesIntroducedAfter__wd80> &
      Word$WdDisableFeaturesIntroducedAfter__wd80 &
      2; // 2
  }

  declare class Word$WdDisableFeaturesIntroducedAfter__wd70
    mixins Word$WdDisableFeaturesIntroducedAfter {}
  declare class Word$WdDisableFeaturesIntroducedAfter__wd70FE
    mixins Word$WdDisableFeaturesIntroducedAfter {}
  declare class Word$WdDisableFeaturesIntroducedAfter__wd80
    mixins Word$WdDisableFeaturesIntroducedAfter {}

  declare class Word$WdDocPartInsertOptions {
    constructor(...args: empty): mixed;
    static +wdInsertContent: Class<Word$WdDocPartInsertOptions__wdInsertContent> &
      Word$WdDocPartInsertOptions__wdInsertContent &
      0; // 0
    static +wdInsertPage: Class<Word$WdDocPartInsertOptions__wdInsertPage> &
      Word$WdDocPartInsertOptions__wdInsertPage &
      2; // 2
    static +wdInsertParagraph: Class<Word$WdDocPartInsertOptions__wdInsertParagraph> &
      Word$WdDocPartInsertOptions__wdInsertParagraph &
      1; // 1
  }

  declare class Word$WdDocPartInsertOptions__wdInsertContent
    mixins Word$WdDocPartInsertOptions {}
  declare class Word$WdDocPartInsertOptions__wdInsertPage
    mixins Word$WdDocPartInsertOptions {}
  declare class Word$WdDocPartInsertOptions__wdInsertParagraph
    mixins Word$WdDocPartInsertOptions {}

  declare class Word$WdDocumentDirection {
    constructor(...args: empty): mixed;
    static +wdLeftToRight: Class<Word$WdDocumentDirection__wdLeftToRight> &
      Word$WdDocumentDirection__wdLeftToRight &
      0; // 0
    static +wdRightToLeft: Class<Word$WdDocumentDirection__wdRightToLeft> &
      Word$WdDocumentDirection__wdRightToLeft &
      1; // 1
  }

  declare class Word$WdDocumentDirection__wdLeftToRight
    mixins Word$WdDocumentDirection {}
  declare class Word$WdDocumentDirection__wdRightToLeft
    mixins Word$WdDocumentDirection {}

  declare class Word$WdDocumentKind {
    constructor(...args: empty): mixed;
    static +wdDocumentEmail: Class<Word$WdDocumentKind__wdDocumentEmail> &
      Word$WdDocumentKind__wdDocumentEmail &
      2; // 2
    static +wdDocumentLetter: Class<Word$WdDocumentKind__wdDocumentLetter> &
      Word$WdDocumentKind__wdDocumentLetter &
      1; // 1
    static +wdDocumentNotSpecified: Class<Word$WdDocumentKind__wdDocumentNotSpecified> &
      Word$WdDocumentKind__wdDocumentNotSpecified &
      0; // 0
  }

  declare class Word$WdDocumentKind__wdDocumentEmail
    mixins Word$WdDocumentKind {}
  declare class Word$WdDocumentKind__wdDocumentLetter
    mixins Word$WdDocumentKind {}
  declare class Word$WdDocumentKind__wdDocumentNotSpecified
    mixins Word$WdDocumentKind {}

  declare class Word$WdDocumentMedium {
    constructor(...args: empty): mixed;
    static +wdDocument: Class<Word$WdDocumentMedium__wdDocument> &
      Word$WdDocumentMedium__wdDocument &
      1; // 1
    static +wdEmailMessage: Class<Word$WdDocumentMedium__wdEmailMessage> &
      Word$WdDocumentMedium__wdEmailMessage &
      0; // 0
    static +wdWebPage: Class<Word$WdDocumentMedium__wdWebPage> &
      Word$WdDocumentMedium__wdWebPage &
      2; // 2
  }

  declare class Word$WdDocumentMedium__wdDocument
    mixins Word$WdDocumentMedium {}
  declare class Word$WdDocumentMedium__wdEmailMessage
    mixins Word$WdDocumentMedium {}
  declare class Word$WdDocumentMedium__wdWebPage mixins Word$WdDocumentMedium {}

  declare class Word$WdDocumentType {
    constructor(...args: empty): mixed;
    static +wdTypeDocument: Class<Word$WdDocumentType__wdTypeDocument> &
      Word$WdDocumentType__wdTypeDocument &
      0; // 0
    static +wdTypeFrameset: Class<Word$WdDocumentType__wdTypeFrameset> &
      Word$WdDocumentType__wdTypeFrameset &
      2; // 2
    static +wdTypeTemplate: Class<Word$WdDocumentType__wdTypeTemplate> &
      Word$WdDocumentType__wdTypeTemplate &
      1; // 1
  }

  declare class Word$WdDocumentType__wdTypeDocument
    mixins Word$WdDocumentType {}
  declare class Word$WdDocumentType__wdTypeFrameset
    mixins Word$WdDocumentType {}
  declare class Word$WdDocumentType__wdTypeTemplate
    mixins Word$WdDocumentType {}

  declare class Word$WdDocumentViewDirection {
    constructor(...args: empty): mixed;
    static +wdDocumentViewLtr: Class<Word$WdDocumentViewDirection__wdDocumentViewLtr> &
      Word$WdDocumentViewDirection__wdDocumentViewLtr &
      1; // 1
    static +wdDocumentViewRtl: Class<Word$WdDocumentViewDirection__wdDocumentViewRtl> &
      Word$WdDocumentViewDirection__wdDocumentViewRtl &
      0; // 0
  }

  declare class Word$WdDocumentViewDirection__wdDocumentViewLtr
    mixins Word$WdDocumentViewDirection {}
  declare class Word$WdDocumentViewDirection__wdDocumentViewRtl
    mixins Word$WdDocumentViewDirection {}

  declare class Word$WdDropPosition {
    constructor(...args: empty): mixed;
    static +wdDropMargin: Class<Word$WdDropPosition__wdDropMargin> &
      Word$WdDropPosition__wdDropMargin &
      2; // 2
    static +wdDropNone: Class<Word$WdDropPosition__wdDropNone> &
      Word$WdDropPosition__wdDropNone &
      0; // 0
    static +wdDropNormal: Class<Word$WdDropPosition__wdDropNormal> &
      Word$WdDropPosition__wdDropNormal &
      1; // 1
  }

  declare class Word$WdDropPosition__wdDropMargin mixins Word$WdDropPosition {}
  declare class Word$WdDropPosition__wdDropNone mixins Word$WdDropPosition {}
  declare class Word$WdDropPosition__wdDropNormal mixins Word$WdDropPosition {}

  declare class Word$WdEditionOption {
    constructor(...args: empty): mixed;
    static +wdAutomaticUpdate: Class<Word$WdEditionOption__wdAutomaticUpdate> &
      Word$WdEditionOption__wdAutomaticUpdate &
      3; // 3
    static +wdCancelPublisher: Class<Word$WdEditionOption__wdCancelPublisher> &
      Word$WdEditionOption__wdCancelPublisher &
      0; // 0
    static +wdChangeAttributes: Class<Word$WdEditionOption__wdChangeAttributes> &
      Word$WdEditionOption__wdChangeAttributes &
      5; // 5
    static +wdManualUpdate: Class<Word$WdEditionOption__wdManualUpdate> &
      Word$WdEditionOption__wdManualUpdate &
      4; // 4
    static +wdOpenSource: Class<Word$WdEditionOption__wdOpenSource> &
      Word$WdEditionOption__wdOpenSource &
      7; // 7
    static +wdSelectPublisher: Class<Word$WdEditionOption__wdSelectPublisher> &
      Word$WdEditionOption__wdSelectPublisher &
      2; // 2
    static +wdSendPublisher: Class<Word$WdEditionOption__wdSendPublisher> &
      Word$WdEditionOption__wdSendPublisher &
      1; // 1
    static +wdUpdateSubscriber: Class<Word$WdEditionOption__wdUpdateSubscriber> &
      Word$WdEditionOption__wdUpdateSubscriber &
      6; // 6
  }

  declare class Word$WdEditionOption__wdAutomaticUpdate
    mixins Word$WdEditionOption {}
  declare class Word$WdEditionOption__wdCancelPublisher
    mixins Word$WdEditionOption {}
  declare class Word$WdEditionOption__wdChangeAttributes
    mixins Word$WdEditionOption {}
  declare class Word$WdEditionOption__wdManualUpdate
    mixins Word$WdEditionOption {}
  declare class Word$WdEditionOption__wdOpenSource
    mixins Word$WdEditionOption {}
  declare class Word$WdEditionOption__wdSelectPublisher
    mixins Word$WdEditionOption {}
  declare class Word$WdEditionOption__wdSendPublisher
    mixins Word$WdEditionOption {}
  declare class Word$WdEditionOption__wdUpdateSubscriber
    mixins Word$WdEditionOption {}

  declare class Word$WdEditionType {
    constructor(...args: empty): mixed;
    static +wdPublisher: Class<Word$WdEditionType__wdPublisher> &
      Word$WdEditionType__wdPublisher &
      0; // 0
    static +wdSubscriber: Class<Word$WdEditionType__wdSubscriber> &
      Word$WdEditionType__wdSubscriber &
      1; // 1
  }

  declare class Word$WdEditionType__wdPublisher mixins Word$WdEditionType {}
  declare class Word$WdEditionType__wdSubscriber mixins Word$WdEditionType {}

  declare class Word$WdEditorType {
    constructor(...args: empty): mixed;
    static +wdEditorCurrent: Class<Word$WdEditorType__wdEditorCurrent> &
      Word$WdEditorType__wdEditorCurrent &
      -6; // -6
    static +wdEditorEditors: Class<Word$WdEditorType__wdEditorEditors> &
      Word$WdEditorType__wdEditorEditors &
      -5; // -5
    static +wdEditorEveryone: Class<Word$WdEditorType__wdEditorEveryone> &
      Word$WdEditorType__wdEditorEveryone &
      -1; // -1
    static +wdEditorOwners: Class<Word$WdEditorType__wdEditorOwners> &
      Word$WdEditorType__wdEditorOwners &
      -4; // -4
  }

  declare class Word$WdEditorType__wdEditorCurrent mixins Word$WdEditorType {}
  declare class Word$WdEditorType__wdEditorEditors mixins Word$WdEditorType {}
  declare class Word$WdEditorType__wdEditorEveryone mixins Word$WdEditorType {}
  declare class Word$WdEditorType__wdEditorOwners mixins Word$WdEditorType {}

  declare class Word$WdEmailHTMLFidelity {
    constructor(...args: empty): mixed;
    static +wdEmailHTMLFidelityHigh: Class<Word$WdEmailHTMLFidelity__wdEmailHTMLFidelityHigh> &
      Word$WdEmailHTMLFidelity__wdEmailHTMLFidelityHigh &
      3; // 3
    static +wdEmailHTMLFidelityLow: Class<Word$WdEmailHTMLFidelity__wdEmailHTMLFidelityLow> &
      Word$WdEmailHTMLFidelity__wdEmailHTMLFidelityLow &
      1; // 1
    static +wdEmailHTMLFidelityMedium: Class<Word$WdEmailHTMLFidelity__wdEmailHTMLFidelityMedium> &
      Word$WdEmailHTMLFidelity__wdEmailHTMLFidelityMedium &
      2; // 2
  }

  declare class Word$WdEmailHTMLFidelity__wdEmailHTMLFidelityHigh
    mixins Word$WdEmailHTMLFidelity {}
  declare class Word$WdEmailHTMLFidelity__wdEmailHTMLFidelityLow
    mixins Word$WdEmailHTMLFidelity {}
  declare class Word$WdEmailHTMLFidelity__wdEmailHTMLFidelityMedium
    mixins Word$WdEmailHTMLFidelity {}

  declare class Word$WdEmphasisMark {
    constructor(...args: empty): mixed;
    static +wdEmphasisMarkNone: Class<Word$WdEmphasisMark__wdEmphasisMarkNone> &
      Word$WdEmphasisMark__wdEmphasisMarkNone &
      0; // 0
    static +wdEmphasisMarkOverComma: Class<Word$WdEmphasisMark__wdEmphasisMarkOverComma> &
      Word$WdEmphasisMark__wdEmphasisMarkOverComma &
      2; // 2
    static +wdEmphasisMarkOverSolidCircle: Class<Word$WdEmphasisMark__wdEmphasisMarkOverSolidCircle> &
      Word$WdEmphasisMark__wdEmphasisMarkOverSolidCircle &
      1; // 1
    static +wdEmphasisMarkOverWhiteCircle: Class<Word$WdEmphasisMark__wdEmphasisMarkOverWhiteCircle> &
      Word$WdEmphasisMark__wdEmphasisMarkOverWhiteCircle &
      3; // 3
    static +wdEmphasisMarkUnderSolidCircle: Class<Word$WdEmphasisMark__wdEmphasisMarkUnderSolidCircle> &
      Word$WdEmphasisMark__wdEmphasisMarkUnderSolidCircle &
      4; // 4
  }

  declare class Word$WdEmphasisMark__wdEmphasisMarkNone
    mixins Word$WdEmphasisMark {}
  declare class Word$WdEmphasisMark__wdEmphasisMarkOverComma
    mixins Word$WdEmphasisMark {}
  declare class Word$WdEmphasisMark__wdEmphasisMarkOverSolidCircle
    mixins Word$WdEmphasisMark {}
  declare class Word$WdEmphasisMark__wdEmphasisMarkOverWhiteCircle
    mixins Word$WdEmphasisMark {}
  declare class Word$WdEmphasisMark__wdEmphasisMarkUnderSolidCircle
    mixins Word$WdEmphasisMark {}

  declare class Word$WdEnableCancelKey {
    constructor(...args: empty): mixed;
    static +wdCancelDisabled: Class<Word$WdEnableCancelKey__wdCancelDisabled> &
      Word$WdEnableCancelKey__wdCancelDisabled &
      0; // 0
    static +wdCancelInterrupt: Class<Word$WdEnableCancelKey__wdCancelInterrupt> &
      Word$WdEnableCancelKey__wdCancelInterrupt &
      1; // 1
  }

  declare class Word$WdEnableCancelKey__wdCancelDisabled
    mixins Word$WdEnableCancelKey {}
  declare class Word$WdEnableCancelKey__wdCancelInterrupt
    mixins Word$WdEnableCancelKey {}

  declare class Word$WdEncloseStyle {
    constructor(...args: empty): mixed;
    static +wdEncloseStyleLarge: Class<Word$WdEncloseStyle__wdEncloseStyleLarge> &
      Word$WdEncloseStyle__wdEncloseStyleLarge &
      2; // 2
    static +wdEncloseStyleNone: Class<Word$WdEncloseStyle__wdEncloseStyleNone> &
      Word$WdEncloseStyle__wdEncloseStyleNone &
      0; // 0
    static +wdEncloseStyleSmall: Class<Word$WdEncloseStyle__wdEncloseStyleSmall> &
      Word$WdEncloseStyle__wdEncloseStyleSmall &
      1; // 1
  }

  declare class Word$WdEncloseStyle__wdEncloseStyleLarge
    mixins Word$WdEncloseStyle {}
  declare class Word$WdEncloseStyle__wdEncloseStyleNone
    mixins Word$WdEncloseStyle {}
  declare class Word$WdEncloseStyle__wdEncloseStyleSmall
    mixins Word$WdEncloseStyle {}

  declare class Word$WdEnclosureType {
    constructor(...args: empty): mixed;
    static +wdEnclosureCircle: Class<Word$WdEnclosureType__wdEnclosureCircle> &
      Word$WdEnclosureType__wdEnclosureCircle &
      0; // 0
    static +wdEnclosureDiamond: Class<Word$WdEnclosureType__wdEnclosureDiamond> &
      Word$WdEnclosureType__wdEnclosureDiamond &
      3; // 3
    static +wdEnclosureSquare: Class<Word$WdEnclosureType__wdEnclosureSquare> &
      Word$WdEnclosureType__wdEnclosureSquare &
      1; // 1
    static +wdEnclosureTriangle: Class<Word$WdEnclosureType__wdEnclosureTriangle> &
      Word$WdEnclosureType__wdEnclosureTriangle &
      2; // 2
  }

  declare class Word$WdEnclosureType__wdEnclosureCircle
    mixins Word$WdEnclosureType {}
  declare class Word$WdEnclosureType__wdEnclosureDiamond
    mixins Word$WdEnclosureType {}
  declare class Word$WdEnclosureType__wdEnclosureSquare
    mixins Word$WdEnclosureType {}
  declare class Word$WdEnclosureType__wdEnclosureTriangle
    mixins Word$WdEnclosureType {}

  declare class Word$WdEndnoteLocation {
    constructor(...args: empty): mixed;
    static +wdEndOfDocument: Class<Word$WdEndnoteLocation__wdEndOfDocument> &
      Word$WdEndnoteLocation__wdEndOfDocument &
      1; // 1
    static +wdEndOfSection: Class<Word$WdEndnoteLocation__wdEndOfSection> &
      Word$WdEndnoteLocation__wdEndOfSection &
      0; // 0
  }

  declare class Word$WdEndnoteLocation__wdEndOfDocument
    mixins Word$WdEndnoteLocation {}
  declare class Word$WdEndnoteLocation__wdEndOfSection
    mixins Word$WdEndnoteLocation {}

  declare class Word$WdEnvelopeOrientation {
    constructor(...args: empty): mixed;
    static +wdCenterClockwise: Class<Word$WdEnvelopeOrientation__wdCenterClockwise> &
      Word$WdEnvelopeOrientation__wdCenterClockwise &
      7; // 7
    static +wdCenterLandscape: Class<Word$WdEnvelopeOrientation__wdCenterLandscape> &
      Word$WdEnvelopeOrientation__wdCenterLandscape &
      4; // 4
    static +wdCenterPortrait: Class<Word$WdEnvelopeOrientation__wdCenterPortrait> &
      Word$WdEnvelopeOrientation__wdCenterPortrait &
      1; // 1
    static +wdLeftClockwise: Class<Word$WdEnvelopeOrientation__wdLeftClockwise> &
      Word$WdEnvelopeOrientation__wdLeftClockwise &
      6; // 6
    static +wdLeftLandscape: Class<Word$WdEnvelopeOrientation__wdLeftLandscape> &
      Word$WdEnvelopeOrientation__wdLeftLandscape &
      3; // 3
    static +wdLeftPortrait: Class<Word$WdEnvelopeOrientation__wdLeftPortrait> &
      Word$WdEnvelopeOrientation__wdLeftPortrait &
      0; // 0
    static +wdRightClockwise: Class<Word$WdEnvelopeOrientation__wdRightClockwise> &
      Word$WdEnvelopeOrientation__wdRightClockwise &
      8; // 8
    static +wdRightLandscape: Class<Word$WdEnvelopeOrientation__wdRightLandscape> &
      Word$WdEnvelopeOrientation__wdRightLandscape &
      5; // 5
    static +wdRightPortrait: Class<Word$WdEnvelopeOrientation__wdRightPortrait> &
      Word$WdEnvelopeOrientation__wdRightPortrait &
      2; // 2
  }

  declare class Word$WdEnvelopeOrientation__wdCenterClockwise
    mixins Word$WdEnvelopeOrientation {}
  declare class Word$WdEnvelopeOrientation__wdCenterLandscape
    mixins Word$WdEnvelopeOrientation {}
  declare class Word$WdEnvelopeOrientation__wdCenterPortrait
    mixins Word$WdEnvelopeOrientation {}
  declare class Word$WdEnvelopeOrientation__wdLeftClockwise
    mixins Word$WdEnvelopeOrientation {}
  declare class Word$WdEnvelopeOrientation__wdLeftLandscape
    mixins Word$WdEnvelopeOrientation {}
  declare class Word$WdEnvelopeOrientation__wdLeftPortrait
    mixins Word$WdEnvelopeOrientation {}
  declare class Word$WdEnvelopeOrientation__wdRightClockwise
    mixins Word$WdEnvelopeOrientation {}
  declare class Word$WdEnvelopeOrientation__wdRightLandscape
    mixins Word$WdEnvelopeOrientation {}
  declare class Word$WdEnvelopeOrientation__wdRightPortrait
    mixins Word$WdEnvelopeOrientation {}

  declare class Word$WdExportCreateBookmarks {
    constructor(...args: empty): mixed;
    static +wdExportCreateHeadingBookmarks: Class<Word$WdExportCreateBookmarks__wdExportCreateHeadingBookmarks> &
      Word$WdExportCreateBookmarks__wdExportCreateHeadingBookmarks &
      1; // 1
    static +wdExportCreateNoBookmarks: Class<Word$WdExportCreateBookmarks__wdExportCreateNoBookmarks> &
      Word$WdExportCreateBookmarks__wdExportCreateNoBookmarks &
      0; // 0
    static +wdExportCreateWordBookmarks: Class<Word$WdExportCreateBookmarks__wdExportCreateWordBookmarks> &
      Word$WdExportCreateBookmarks__wdExportCreateWordBookmarks &
      2; // 2
  }

  declare class Word$WdExportCreateBookmarks__wdExportCreateHeadingBookmarks
    mixins Word$WdExportCreateBookmarks {}
  declare class Word$WdExportCreateBookmarks__wdExportCreateNoBookmarks
    mixins Word$WdExportCreateBookmarks {}
  declare class Word$WdExportCreateBookmarks__wdExportCreateWordBookmarks
    mixins Word$WdExportCreateBookmarks {}

  declare class Word$WdExportFormat {
    constructor(...args: empty): mixed;
    static +wdExportFormatPDF: Class<Word$WdExportFormat__wdExportFormatPDF> &
      Word$WdExportFormat__wdExportFormatPDF &
      17; // 17
    static +wdExportFormatXPS: Class<Word$WdExportFormat__wdExportFormatXPS> &
      Word$WdExportFormat__wdExportFormatXPS &
      18; // 18
  }

  declare class Word$WdExportFormat__wdExportFormatPDF
    mixins Word$WdExportFormat {}
  declare class Word$WdExportFormat__wdExportFormatXPS
    mixins Word$WdExportFormat {}

  declare class Word$WdExportItem {
    constructor(...args: empty): mixed;
    static +wdExportDocumentContent: Class<Word$WdExportItem__wdExportDocumentContent> &
      Word$WdExportItem__wdExportDocumentContent &
      0; // 0
    static +wdExportDocumentWithMarkup: Class<Word$WdExportItem__wdExportDocumentWithMarkup> &
      Word$WdExportItem__wdExportDocumentWithMarkup &
      7; // 7
  }

  declare class Word$WdExportItem__wdExportDocumentContent
    mixins Word$WdExportItem {}
  declare class Word$WdExportItem__wdExportDocumentWithMarkup
    mixins Word$WdExportItem {}

  declare class Word$WdExportOptimizeFor {
    constructor(...args: empty): mixed;
    static +wdExportOptimizeForOnScreen: Class<Word$WdExportOptimizeFor__wdExportOptimizeForOnScreen> &
      Word$WdExportOptimizeFor__wdExportOptimizeForOnScreen &
      1; // 1
    static +wdExportOptimizeForPrint: Class<Word$WdExportOptimizeFor__wdExportOptimizeForPrint> &
      Word$WdExportOptimizeFor__wdExportOptimizeForPrint &
      0; // 0
  }

  declare class Word$WdExportOptimizeFor__wdExportOptimizeForOnScreen
    mixins Word$WdExportOptimizeFor {}
  declare class Word$WdExportOptimizeFor__wdExportOptimizeForPrint
    mixins Word$WdExportOptimizeFor {}

  declare class Word$WdExportRange {
    constructor(...args: empty): mixed;
    static +wdExportAllDocument: Class<Word$WdExportRange__wdExportAllDocument> &
      Word$WdExportRange__wdExportAllDocument &
      0; // 0
    static +wdExportCurrentPage: Class<Word$WdExportRange__wdExportCurrentPage> &
      Word$WdExportRange__wdExportCurrentPage &
      2; // 2
    static +wdExportFromTo: Class<Word$WdExportRange__wdExportFromTo> &
      Word$WdExportRange__wdExportFromTo &
      3; // 3
    static +wdExportSelection: Class<Word$WdExportRange__wdExportSelection> &
      Word$WdExportRange__wdExportSelection &
      1; // 1
  }

  declare class Word$WdExportRange__wdExportAllDocument
    mixins Word$WdExportRange {}
  declare class Word$WdExportRange__wdExportCurrentPage
    mixins Word$WdExportRange {}
  declare class Word$WdExportRange__wdExportFromTo mixins Word$WdExportRange {}
  declare class Word$WdExportRange__wdExportSelection
    mixins Word$WdExportRange {}

  declare class Word$WdFarEastLineBreakLanguageID {
    constructor(...args: empty): mixed;
    static +wdLineBreakJapanese: Class<Word$WdFarEastLineBreakLanguageID__wdLineBreakJapanese> &
      Word$WdFarEastLineBreakLanguageID__wdLineBreakJapanese &
      1041; // 1041
    static +wdLineBreakKorean: Class<Word$WdFarEastLineBreakLanguageID__wdLineBreakKorean> &
      Word$WdFarEastLineBreakLanguageID__wdLineBreakKorean &
      1042; // 1042
    static +wdLineBreakSimplifiedChinese: Class<Word$WdFarEastLineBreakLanguageID__wdLineBreakSimplifiedChinese> &
      Word$WdFarEastLineBreakLanguageID__wdLineBreakSimplifiedChinese &
      2052; // 2052
    static +wdLineBreakTraditionalChinese: Class<Word$WdFarEastLineBreakLanguageID__wdLineBreakTraditionalChinese> &
      Word$WdFarEastLineBreakLanguageID__wdLineBreakTraditionalChinese &
      1028; // 1028
  }

  declare class Word$WdFarEastLineBreakLanguageID__wdLineBreakJapanese
    mixins Word$WdFarEastLineBreakLanguageID {}
  declare class Word$WdFarEastLineBreakLanguageID__wdLineBreakKorean
    mixins Word$WdFarEastLineBreakLanguageID {}
  declare class Word$WdFarEastLineBreakLanguageID__wdLineBreakSimplifiedChinese
    mixins Word$WdFarEastLineBreakLanguageID {}
  declare class Word$WdFarEastLineBreakLanguageID__wdLineBreakTraditionalChinese
    mixins Word$WdFarEastLineBreakLanguageID {}

  declare class Word$WdFarEastLineBreakLevel {
    constructor(...args: empty): mixed;
    static +wdFarEastLineBreakLevelCustom: Class<Word$WdFarEastLineBreakLevel__wdFarEastLineBreakLevelCustom> &
      Word$WdFarEastLineBreakLevel__wdFarEastLineBreakLevelCustom &
      2; // 2
    static +wdFarEastLineBreakLevelNormal: Class<Word$WdFarEastLineBreakLevel__wdFarEastLineBreakLevelNormal> &
      Word$WdFarEastLineBreakLevel__wdFarEastLineBreakLevelNormal &
      0; // 0
    static +wdFarEastLineBreakLevelStrict: Class<Word$WdFarEastLineBreakLevel__wdFarEastLineBreakLevelStrict> &
      Word$WdFarEastLineBreakLevel__wdFarEastLineBreakLevelStrict &
      1; // 1
  }

  declare class Word$WdFarEastLineBreakLevel__wdFarEastLineBreakLevelCustom
    mixins Word$WdFarEastLineBreakLevel {}
  declare class Word$WdFarEastLineBreakLevel__wdFarEastLineBreakLevelNormal
    mixins Word$WdFarEastLineBreakLevel {}
  declare class Word$WdFarEastLineBreakLevel__wdFarEastLineBreakLevelStrict
    mixins Word$WdFarEastLineBreakLevel {}

  declare class Word$WdFieldKind {
    constructor(...args: empty): mixed;
    static +wdFieldKindCold: Class<Word$WdFieldKind__wdFieldKindCold> &
      Word$WdFieldKind__wdFieldKindCold &
      3; // 3
    static +wdFieldKindHot: Class<Word$WdFieldKind__wdFieldKindHot> &
      Word$WdFieldKind__wdFieldKindHot &
      1; // 1
    static +wdFieldKindNone: Class<Word$WdFieldKind__wdFieldKindNone> &
      Word$WdFieldKind__wdFieldKindNone &
      0; // 0
    static +wdFieldKindWarm: Class<Word$WdFieldKind__wdFieldKindWarm> &
      Word$WdFieldKind__wdFieldKindWarm &
      2; // 2
  }

  declare class Word$WdFieldKind__wdFieldKindCold mixins Word$WdFieldKind {}
  declare class Word$WdFieldKind__wdFieldKindHot mixins Word$WdFieldKind {}
  declare class Word$WdFieldKind__wdFieldKindNone mixins Word$WdFieldKind {}
  declare class Word$WdFieldKind__wdFieldKindWarm mixins Word$WdFieldKind {}

  declare class Word$WdFieldShading {
    constructor(...args: empty): mixed;
    static +wdFieldShadingAlways: Class<Word$WdFieldShading__wdFieldShadingAlways> &
      Word$WdFieldShading__wdFieldShadingAlways &
      1; // 1
    static +wdFieldShadingNever: Class<Word$WdFieldShading__wdFieldShadingNever> &
      Word$WdFieldShading__wdFieldShadingNever &
      0; // 0
    static +wdFieldShadingWhenSelected: Class<Word$WdFieldShading__wdFieldShadingWhenSelected> &
      Word$WdFieldShading__wdFieldShadingWhenSelected &
      2; // 2
  }

  declare class Word$WdFieldShading__wdFieldShadingAlways
    mixins Word$WdFieldShading {}
  declare class Word$WdFieldShading__wdFieldShadingNever
    mixins Word$WdFieldShading {}
  declare class Word$WdFieldShading__wdFieldShadingWhenSelected
    mixins Word$WdFieldShading {}

  declare class Word$WdFieldType {
    constructor(...args: empty): mixed;
    static +wdFieldAddin: Class<Word$WdFieldType__wdFieldAddin> &
      Word$WdFieldType__wdFieldAddin &
      81; // 81
    static +wdFieldAddressBlock: Class<Word$WdFieldType__wdFieldAddressBlock> &
      Word$WdFieldType__wdFieldAddressBlock &
      93; // 93
    static +wdFieldAdvance: Class<Word$WdFieldType__wdFieldAdvance> &
      Word$WdFieldType__wdFieldAdvance &
      84; // 84
    static +wdFieldAsk: Class<Word$WdFieldType__wdFieldAsk> &
      Word$WdFieldType__wdFieldAsk &
      38; // 38
    static +wdFieldAuthor: Class<Word$WdFieldType__wdFieldAuthor> &
      Word$WdFieldType__wdFieldAuthor &
      17; // 17
    static +wdFieldAutoNum: Class<Word$WdFieldType__wdFieldAutoNum> &
      Word$WdFieldType__wdFieldAutoNum &
      54; // 54
    static +wdFieldAutoNumLegal: Class<Word$WdFieldType__wdFieldAutoNumLegal> &
      Word$WdFieldType__wdFieldAutoNumLegal &
      53; // 53
    static +wdFieldAutoNumOutline: Class<Word$WdFieldType__wdFieldAutoNumOutline> &
      Word$WdFieldType__wdFieldAutoNumOutline &
      52; // 52
    static +wdFieldAutoText: Class<Word$WdFieldType__wdFieldAutoText> &
      Word$WdFieldType__wdFieldAutoText &
      79; // 79
    static +wdFieldAutoTextList: Class<Word$WdFieldType__wdFieldAutoTextList> &
      Word$WdFieldType__wdFieldAutoTextList &
      89; // 89
    static +wdFieldBarCode: Class<Word$WdFieldType__wdFieldBarCode> &
      Word$WdFieldType__wdFieldBarCode &
      63; // 63
    static +wdFieldBibliography: Class<Word$WdFieldType__wdFieldBibliography> &
      Word$WdFieldType__wdFieldBibliography &
      97; // 97
    static +wdFieldBidiOutline: Class<Word$WdFieldType__wdFieldBidiOutline> &
      Word$WdFieldType__wdFieldBidiOutline &
      92; // 92
    static +wdFieldCitation: Class<Word$WdFieldType__wdFieldCitation> &
      Word$WdFieldType__wdFieldCitation &
      96; // 96
    static +wdFieldComments: Class<Word$WdFieldType__wdFieldComments> &
      Word$WdFieldType__wdFieldComments &
      19; // 19
    static +wdFieldCompare: Class<Word$WdFieldType__wdFieldCompare> &
      Word$WdFieldType__wdFieldCompare &
      80; // 80
    static +wdFieldCreateDate: Class<Word$WdFieldType__wdFieldCreateDate> &
      Word$WdFieldType__wdFieldCreateDate &
      21; // 21
    static +wdFieldData: Class<Word$WdFieldType__wdFieldData> &
      Word$WdFieldType__wdFieldData &
      40; // 40
    static +wdFieldDatabase: Class<Word$WdFieldType__wdFieldDatabase> &
      Word$WdFieldType__wdFieldDatabase &
      78; // 78
    static +wdFieldDate: Class<Word$WdFieldType__wdFieldDate> &
      Word$WdFieldType__wdFieldDate &
      31; // 31
    static +wdFieldDDE: Class<Word$WdFieldType__wdFieldDDE> &
      Word$WdFieldType__wdFieldDDE &
      45; // 45
    static +wdFieldDDEAuto: Class<Word$WdFieldType__wdFieldDDEAuto> &
      Word$WdFieldType__wdFieldDDEAuto &
      46; // 46
    static +wdFieldDocProperty: Class<Word$WdFieldType__wdFieldDocProperty> &
      Word$WdFieldType__wdFieldDocProperty &
      85; // 85
    static +wdFieldDocVariable: Class<Word$WdFieldType__wdFieldDocVariable> &
      Word$WdFieldType__wdFieldDocVariable &
      64; // 64
    static +wdFieldEditTime: Class<Word$WdFieldType__wdFieldEditTime> &
      Word$WdFieldType__wdFieldEditTime &
      25; // 25
    static +wdFieldEmbed: Class<Word$WdFieldType__wdFieldEmbed> &
      Word$WdFieldType__wdFieldEmbed &
      58; // 58
    static +wdFieldEmpty: Class<Word$WdFieldType__wdFieldEmpty> &
      Word$WdFieldType__wdFieldEmpty &
      -1; // -1
    static +wdFieldExpression: Class<Word$WdFieldType__wdFieldExpression> &
      Word$WdFieldType__wdFieldExpression &
      34; // 34
    static +wdFieldFileName: Class<Word$WdFieldType__wdFieldFileName> &
      Word$WdFieldType__wdFieldFileName &
      29; // 29
    static +wdFieldFileSize: Class<Word$WdFieldType__wdFieldFileSize> &
      Word$WdFieldType__wdFieldFileSize &
      69; // 69
    static +wdFieldFillIn: Class<Word$WdFieldType__wdFieldFillIn> &
      Word$WdFieldType__wdFieldFillIn &
      39; // 39
    static +wdFieldFootnoteRef: Class<Word$WdFieldType__wdFieldFootnoteRef> &
      Word$WdFieldType__wdFieldFootnoteRef &
      5; // 5
    static +wdFieldFormCheckBox: Class<Word$WdFieldType__wdFieldFormCheckBox> &
      Word$WdFieldType__wdFieldFormCheckBox &
      71; // 71
    static +wdFieldFormDropDown: Class<Word$WdFieldType__wdFieldFormDropDown> &
      Word$WdFieldType__wdFieldFormDropDown &
      83; // 83
    static +wdFieldFormTextInput: Class<Word$WdFieldType__wdFieldFormTextInput> &
      Word$WdFieldType__wdFieldFormTextInput &
      70; // 70
    static +wdFieldFormula: Class<Word$WdFieldType__wdFieldFormula> &
      Word$WdFieldType__wdFieldFormula &
      49; // 49
    static +wdFieldGlossary: Class<Word$WdFieldType__wdFieldGlossary> &
      Word$WdFieldType__wdFieldGlossary &
      47; // 47
    static +wdFieldGoToButton: Class<Word$WdFieldType__wdFieldGoToButton> &
      Word$WdFieldType__wdFieldGoToButton &
      50; // 50
    static +wdFieldGreetingLine: Class<Word$WdFieldType__wdFieldGreetingLine> &
      Word$WdFieldType__wdFieldGreetingLine &
      94; // 94
    static +wdFieldHTMLActiveX: Class<Word$WdFieldType__wdFieldHTMLActiveX> &
      Word$WdFieldType__wdFieldHTMLActiveX &
      91; // 91
    static +wdFieldHyperlink: Class<Word$WdFieldType__wdFieldHyperlink> &
      Word$WdFieldType__wdFieldHyperlink &
      88; // 88
    static +wdFieldIf: Class<Word$WdFieldType__wdFieldIf> &
      Word$WdFieldType__wdFieldIf &
      7; // 7
    static +wdFieldImport: Class<Word$WdFieldType__wdFieldImport> &
      Word$WdFieldType__wdFieldImport &
      55; // 55
    static +wdFieldInclude: Class<Word$WdFieldType__wdFieldInclude> &
      Word$WdFieldType__wdFieldInclude &
      36; // 36
    static +wdFieldIncludePicture: Class<Word$WdFieldType__wdFieldIncludePicture> &
      Word$WdFieldType__wdFieldIncludePicture &
      67; // 67
    static +wdFieldIncludeText: Class<Word$WdFieldType__wdFieldIncludeText> &
      Word$WdFieldType__wdFieldIncludeText &
      68; // 68
    static +wdFieldIndex: Class<Word$WdFieldType__wdFieldIndex> &
      Word$WdFieldType__wdFieldIndex &
      8; // 8
    static +wdFieldIndexEntry: Class<Word$WdFieldType__wdFieldIndexEntry> &
      Word$WdFieldType__wdFieldIndexEntry &
      4; // 4
    static +wdFieldInfo: Class<Word$WdFieldType__wdFieldInfo> &
      Word$WdFieldType__wdFieldInfo &
      14; // 14
    static +wdFieldKeyWord: Class<Word$WdFieldType__wdFieldKeyWord> &
      Word$WdFieldType__wdFieldKeyWord &
      18; // 18
    static +wdFieldLastSavedBy: Class<Word$WdFieldType__wdFieldLastSavedBy> &
      Word$WdFieldType__wdFieldLastSavedBy &
      20; // 20
    static +wdFieldLink: Class<Word$WdFieldType__wdFieldLink> &
      Word$WdFieldType__wdFieldLink &
      56; // 56
    static +wdFieldListNum: Class<Word$WdFieldType__wdFieldListNum> &
      Word$WdFieldType__wdFieldListNum &
      90; // 90
    static +wdFieldMacroButton: Class<Word$WdFieldType__wdFieldMacroButton> &
      Word$WdFieldType__wdFieldMacroButton &
      51; // 51
    static +wdFieldMergeField: Class<Word$WdFieldType__wdFieldMergeField> &
      Word$WdFieldType__wdFieldMergeField &
      59; // 59
    static +wdFieldMergeRec: Class<Word$WdFieldType__wdFieldMergeRec> &
      Word$WdFieldType__wdFieldMergeRec &
      44; // 44
    static +wdFieldMergeSeq: Class<Word$WdFieldType__wdFieldMergeSeq> &
      Word$WdFieldType__wdFieldMergeSeq &
      75; // 75
    static +wdFieldNext: Class<Word$WdFieldType__wdFieldNext> &
      Word$WdFieldType__wdFieldNext &
      41; // 41
    static +wdFieldNextIf: Class<Word$WdFieldType__wdFieldNextIf> &
      Word$WdFieldType__wdFieldNextIf &
      42; // 42
    static +wdFieldNoteRef: Class<Word$WdFieldType__wdFieldNoteRef> &
      Word$WdFieldType__wdFieldNoteRef &
      72; // 72
    static +wdFieldNumChars: Class<Word$WdFieldType__wdFieldNumChars> &
      Word$WdFieldType__wdFieldNumChars &
      28; // 28
    static +wdFieldNumPages: Class<Word$WdFieldType__wdFieldNumPages> &
      Word$WdFieldType__wdFieldNumPages &
      26; // 26
    static +wdFieldNumWords: Class<Word$WdFieldType__wdFieldNumWords> &
      Word$WdFieldType__wdFieldNumWords &
      27; // 27
    static +wdFieldOCX: Class<Word$WdFieldType__wdFieldOCX> &
      Word$WdFieldType__wdFieldOCX &
      87; // 87
    static +wdFieldPage: Class<Word$WdFieldType__wdFieldPage> &
      Word$WdFieldType__wdFieldPage &
      33; // 33
    static +wdFieldPageRef: Class<Word$WdFieldType__wdFieldPageRef> &
      Word$WdFieldType__wdFieldPageRef &
      37; // 37
    static +wdFieldPrint: Class<Word$WdFieldType__wdFieldPrint> &
      Word$WdFieldType__wdFieldPrint &
      48; // 48
    static +wdFieldPrintDate: Class<Word$WdFieldType__wdFieldPrintDate> &
      Word$WdFieldType__wdFieldPrintDate &
      23; // 23
    static +wdFieldPrivate: Class<Word$WdFieldType__wdFieldPrivate> &
      Word$WdFieldType__wdFieldPrivate &
      77; // 77
    static +wdFieldQuote: Class<Word$WdFieldType__wdFieldQuote> &
      Word$WdFieldType__wdFieldQuote &
      35; // 35
    static +wdFieldRef: Class<Word$WdFieldType__wdFieldRef> &
      Word$WdFieldType__wdFieldRef &
      3; // 3
    static +wdFieldRefDoc: Class<Word$WdFieldType__wdFieldRefDoc> &
      Word$WdFieldType__wdFieldRefDoc &
      11; // 11
    static +wdFieldRevisionNum: Class<Word$WdFieldType__wdFieldRevisionNum> &
      Word$WdFieldType__wdFieldRevisionNum &
      24; // 24
    static +wdFieldSaveDate: Class<Word$WdFieldType__wdFieldSaveDate> &
      Word$WdFieldType__wdFieldSaveDate &
      22; // 22
    static +wdFieldSection: Class<Word$WdFieldType__wdFieldSection> &
      Word$WdFieldType__wdFieldSection &
      65; // 65
    static +wdFieldSectionPages: Class<Word$WdFieldType__wdFieldSectionPages> &
      Word$WdFieldType__wdFieldSectionPages &
      66; // 66
    static +wdFieldSequence: Class<Word$WdFieldType__wdFieldSequence> &
      Word$WdFieldType__wdFieldSequence &
      12; // 12
    static +wdFieldSet: Class<Word$WdFieldType__wdFieldSet> &
      Word$WdFieldType__wdFieldSet &
      6; // 6
    static +wdFieldShape: Class<Word$WdFieldType__wdFieldShape> &
      Word$WdFieldType__wdFieldShape &
      95; // 95
    static +wdFieldSkipIf: Class<Word$WdFieldType__wdFieldSkipIf> &
      Word$WdFieldType__wdFieldSkipIf &
      43; // 43
    static +wdFieldStyleRef: Class<Word$WdFieldType__wdFieldStyleRef> &
      Word$WdFieldType__wdFieldStyleRef &
      10; // 10
    static +wdFieldSubject: Class<Word$WdFieldType__wdFieldSubject> &
      Word$WdFieldType__wdFieldSubject &
      16; // 16
    static +wdFieldSubscriber: Class<Word$WdFieldType__wdFieldSubscriber> &
      Word$WdFieldType__wdFieldSubscriber &
      82; // 82
    static +wdFieldSymbol: Class<Word$WdFieldType__wdFieldSymbol> &
      Word$WdFieldType__wdFieldSymbol &
      57; // 57
    static +wdFieldTemplate: Class<Word$WdFieldType__wdFieldTemplate> &
      Word$WdFieldType__wdFieldTemplate &
      30; // 30
    static +wdFieldTime: Class<Word$WdFieldType__wdFieldTime> &
      Word$WdFieldType__wdFieldTime &
      32; // 32
    static +wdFieldTitle: Class<Word$WdFieldType__wdFieldTitle> &
      Word$WdFieldType__wdFieldTitle &
      15; // 15
    static +wdFieldTOA: Class<Word$WdFieldType__wdFieldTOA> &
      Word$WdFieldType__wdFieldTOA &
      73; // 73
    static +wdFieldTOAEntry: Class<Word$WdFieldType__wdFieldTOAEntry> &
      Word$WdFieldType__wdFieldTOAEntry &
      74; // 74
    static +wdFieldTOC: Class<Word$WdFieldType__wdFieldTOC> &
      Word$WdFieldType__wdFieldTOC &
      13; // 13
    static +wdFieldTOCEntry: Class<Word$WdFieldType__wdFieldTOCEntry> &
      Word$WdFieldType__wdFieldTOCEntry &
      9; // 9
    static +wdFieldUserAddress: Class<Word$WdFieldType__wdFieldUserAddress> &
      Word$WdFieldType__wdFieldUserAddress &
      62; // 62
    static +wdFieldUserInitials: Class<Word$WdFieldType__wdFieldUserInitials> &
      Word$WdFieldType__wdFieldUserInitials &
      61; // 61
    static +wdFieldUserName: Class<Word$WdFieldType__wdFieldUserName> &
      Word$WdFieldType__wdFieldUserName &
      60; // 60
  }

  declare class Word$WdFieldType__wdFieldAddin mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldAddressBlock mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldAdvance mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldAsk mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldAuthor mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldAutoNum mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldAutoNumLegal mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldAutoNumOutline
    mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldAutoText mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldAutoTextList mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldBarCode mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldBibliography mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldBidiOutline mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldCitation mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldComments mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldCompare mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldCreateDate mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldData mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldDatabase mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldDate mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldDDE mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldDDEAuto mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldDocProperty mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldDocVariable mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldEditTime mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldEmbed mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldEmpty mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldExpression mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldFileName mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldFileSize mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldFillIn mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldFootnoteRef mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldFormCheckBox mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldFormDropDown mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldFormTextInput
    mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldFormula mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldGlossary mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldGoToButton mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldGreetingLine mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldHTMLActiveX mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldHyperlink mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldIf mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldImport mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldInclude mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldIncludePicture
    mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldIncludeText mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldIndex mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldIndexEntry mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldInfo mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldKeyWord mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldLastSavedBy mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldLink mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldListNum mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldMacroButton mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldMergeField mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldMergeRec mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldMergeSeq mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldNext mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldNextIf mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldNoteRef mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldNumChars mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldNumPages mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldNumWords mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldOCX mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldPage mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldPageRef mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldPrint mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldPrintDate mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldPrivate mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldQuote mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldRef mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldRefDoc mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldRevisionNum mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldSaveDate mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldSection mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldSectionPages mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldSequence mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldSet mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldShape mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldSkipIf mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldStyleRef mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldSubject mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldSubscriber mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldSymbol mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldTemplate mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldTime mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldTitle mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldTOA mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldTOAEntry mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldTOC mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldTOCEntry mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldUserAddress mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldUserInitials mixins Word$WdFieldType {}
  declare class Word$WdFieldType__wdFieldUserName mixins Word$WdFieldType {}

  declare class Word$WdFindMatch {
    constructor(...args: empty): mixed;
    static +wdMatchAnyCharacter: Class<Word$WdFindMatch__wdMatchAnyCharacter> &
      Word$WdFindMatch__wdMatchAnyCharacter &
      65599; // 65599
    static +wdMatchAnyDigit: Class<Word$WdFindMatch__wdMatchAnyDigit> &
      Word$WdFindMatch__wdMatchAnyDigit &
      65567; // 65567
    static +wdMatchAnyLetter: Class<Word$WdFindMatch__wdMatchAnyLetter> &
      Word$WdFindMatch__wdMatchAnyLetter &
      65583; // 65583
    static +wdMatchCaretCharacter: Class<Word$WdFindMatch__wdMatchCaretCharacter> &
      Word$WdFindMatch__wdMatchCaretCharacter &
      11; // 11
    static +wdMatchColumnBreak: Class<Word$WdFindMatch__wdMatchColumnBreak> &
      Word$WdFindMatch__wdMatchColumnBreak &
      14; // 14
    static +wdMatchCommentMark: Class<Word$WdFindMatch__wdMatchCommentMark> &
      Word$WdFindMatch__wdMatchCommentMark &
      5; // 5
    static +wdMatchEmDash: Class<Word$WdFindMatch__wdMatchEmDash> &
      Word$WdFindMatch__wdMatchEmDash &
      8212; // 8212
    static +wdMatchEnDash: Class<Word$WdFindMatch__wdMatchEnDash> &
      Word$WdFindMatch__wdMatchEnDash &
      8211; // 8211
    static +wdMatchEndnoteMark: Class<Word$WdFindMatch__wdMatchEndnoteMark> &
      Word$WdFindMatch__wdMatchEndnoteMark &
      65555; // 65555
    static +wdMatchField: Class<Word$WdFindMatch__wdMatchField> &
      Word$WdFindMatch__wdMatchField &
      19; // 19
    static +wdMatchFootnoteMark: Class<Word$WdFindMatch__wdMatchFootnoteMark> &
      Word$WdFindMatch__wdMatchFootnoteMark &
      65554; // 65554
    static +wdMatchGraphic: Class<Word$WdFindMatch__wdMatchGraphic> &
      Word$WdFindMatch__wdMatchGraphic &
      1; // 1
    static +wdMatchManualLineBreak: Class<Word$WdFindMatch__wdMatchManualLineBreak> &
      Word$WdFindMatch__wdMatchManualLineBreak &
      65551; // 65551
    static +wdMatchManualPageBreak: Class<Word$WdFindMatch__wdMatchManualPageBreak> &
      Word$WdFindMatch__wdMatchManualPageBreak &
      65564; // 65564
    static +wdMatchNonbreakingHyphen: Class<Word$WdFindMatch__wdMatchNonbreakingHyphen> &
      Word$WdFindMatch__wdMatchNonbreakingHyphen &
      30; // 30
    static +wdMatchNonbreakingSpace: Class<Word$WdFindMatch__wdMatchNonbreakingSpace> &
      Word$WdFindMatch__wdMatchNonbreakingSpace &
      160; // 160
    static +wdMatchOptionalHyphen: Class<Word$WdFindMatch__wdMatchOptionalHyphen> &
      Word$WdFindMatch__wdMatchOptionalHyphen &
      31; // 31
    static +wdMatchParagraphMark: Class<Word$WdFindMatch__wdMatchParagraphMark> &
      Word$WdFindMatch__wdMatchParagraphMark &
      65551; // 65551
    static +wdMatchSectionBreak: Class<Word$WdFindMatch__wdMatchSectionBreak> &
      Word$WdFindMatch__wdMatchSectionBreak &
      65580; // 65580
    static +wdMatchTabCharacter: Class<Word$WdFindMatch__wdMatchTabCharacter> &
      Word$WdFindMatch__wdMatchTabCharacter &
      9; // 9
    static +wdMatchWhiteSpace: Class<Word$WdFindMatch__wdMatchWhiteSpace> &
      Word$WdFindMatch__wdMatchWhiteSpace &
      65655; // 65655
  }

  declare class Word$WdFindMatch__wdMatchAnyCharacter mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchAnyDigit mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchAnyLetter mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchCaretCharacter
    mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchColumnBreak mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchCommentMark mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchEmDash mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchEnDash mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchEndnoteMark mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchField mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchFootnoteMark mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchGraphic mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchManualLineBreak
    mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchManualPageBreak
    mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchNonbreakingHyphen
    mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchNonbreakingSpace
    mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchOptionalHyphen
    mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchParagraphMark
    mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchSectionBreak mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchTabCharacter mixins Word$WdFindMatch {}
  declare class Word$WdFindMatch__wdMatchWhiteSpace mixins Word$WdFindMatch {}

  declare class Word$WdFindWrap {
    constructor(...args: empty): mixed;
    static +wdFindAsk: Class<Word$WdFindWrap__wdFindAsk> &
      Word$WdFindWrap__wdFindAsk &
      2; // 2
    static +wdFindContinue: Class<Word$WdFindWrap__wdFindContinue> &
      Word$WdFindWrap__wdFindContinue &
      1; // 1
    static +wdFindStop: Class<Word$WdFindWrap__wdFindStop> &
      Word$WdFindWrap__wdFindStop &
      0; // 0
  }

  declare class Word$WdFindWrap__wdFindAsk mixins Word$WdFindWrap {}
  declare class Word$WdFindWrap__wdFindContinue mixins Word$WdFindWrap {}
  declare class Word$WdFindWrap__wdFindStop mixins Word$WdFindWrap {}

  declare class Word$WdFlowDirection {
    constructor(...args: empty): mixed;
    static +wdFlowLtr: Class<Word$WdFlowDirection__wdFlowLtr> &
      Word$WdFlowDirection__wdFlowLtr &
      0; // 0
    static +wdFlowRtl: Class<Word$WdFlowDirection__wdFlowRtl> &
      Word$WdFlowDirection__wdFlowRtl &
      1; // 1
  }

  declare class Word$WdFlowDirection__wdFlowLtr mixins Word$WdFlowDirection {}
  declare class Word$WdFlowDirection__wdFlowRtl mixins Word$WdFlowDirection {}

  declare class Word$WdFontBias {
    constructor(...args: empty): mixed;
    static +wdFontBiasDefault: Class<Word$WdFontBias__wdFontBiasDefault> &
      Word$WdFontBias__wdFontBiasDefault &
      0; // 0
    static +wdFontBiasDontCare: Class<Word$WdFontBias__wdFontBiasDontCare> &
      Word$WdFontBias__wdFontBiasDontCare &
      255; // 255
    static +wdFontBiasFareast: Class<Word$WdFontBias__wdFontBiasFareast> &
      Word$WdFontBias__wdFontBiasFareast &
      1; // 1
  }

  declare class Word$WdFontBias__wdFontBiasDefault mixins Word$WdFontBias {}
  declare class Word$WdFontBias__wdFontBiasDontCare mixins Word$WdFontBias {}
  declare class Word$WdFontBias__wdFontBiasFareast mixins Word$WdFontBias {}

  declare class Word$WdFootnoteLocation {
    constructor(...args: empty): mixed;
    static +wdBeneathText: Class<Word$WdFootnoteLocation__wdBeneathText> &
      Word$WdFootnoteLocation__wdBeneathText &
      1; // 1
    static +wdBottomOfPage: Class<Word$WdFootnoteLocation__wdBottomOfPage> &
      Word$WdFootnoteLocation__wdBottomOfPage &
      0; // 0
  }

  declare class Word$WdFootnoteLocation__wdBeneathText
    mixins Word$WdFootnoteLocation {}
  declare class Word$WdFootnoteLocation__wdBottomOfPage
    mixins Word$WdFootnoteLocation {}

  declare class Word$WdFramePosition {
    constructor(...args: empty): mixed;
    static +wdFrameBottom: Class<Word$WdFramePosition__wdFrameBottom> &
      Word$WdFramePosition__wdFrameBottom &
      -999997; // -999997
    static +wdFrameCenter: Class<Word$WdFramePosition__wdFrameCenter> &
      Word$WdFramePosition__wdFrameCenter &
      -999995; // -999995
    static +wdFrameInside: Class<Word$WdFramePosition__wdFrameInside> &
      Word$WdFramePosition__wdFrameInside &
      -999994; // -999994
    static +wdFrameLeft: Class<Word$WdFramePosition__wdFrameLeft> &
      Word$WdFramePosition__wdFrameLeft &
      -999998; // -999998
    static +wdFrameOutside: Class<Word$WdFramePosition__wdFrameOutside> &
      Word$WdFramePosition__wdFrameOutside &
      -999993; // -999993
    static +wdFrameRight: Class<Word$WdFramePosition__wdFrameRight> &
      Word$WdFramePosition__wdFrameRight &
      -999996; // -999996
    static +wdFrameTop: Class<Word$WdFramePosition__wdFrameTop> &
      Word$WdFramePosition__wdFrameTop &
      -999999; // -999999
  }

  declare class Word$WdFramePosition__wdFrameBottom
    mixins Word$WdFramePosition {}
  declare class Word$WdFramePosition__wdFrameCenter
    mixins Word$WdFramePosition {}
  declare class Word$WdFramePosition__wdFrameInside
    mixins Word$WdFramePosition {}
  declare class Word$WdFramePosition__wdFrameLeft mixins Word$WdFramePosition {}
  declare class Word$WdFramePosition__wdFrameOutside
    mixins Word$WdFramePosition {}
  declare class Word$WdFramePosition__wdFrameRight
    mixins Word$WdFramePosition {}
  declare class Word$WdFramePosition__wdFrameTop mixins Word$WdFramePosition {}

  declare class Word$WdFramesetNewFrameLocation {
    constructor(...args: empty): mixed;
    static +wdFramesetNewFrameAbove: Class<Word$WdFramesetNewFrameLocation__wdFramesetNewFrameAbove> &
      Word$WdFramesetNewFrameLocation__wdFramesetNewFrameAbove &
      0; // 0
    static +wdFramesetNewFrameBelow: Class<Word$WdFramesetNewFrameLocation__wdFramesetNewFrameBelow> &
      Word$WdFramesetNewFrameLocation__wdFramesetNewFrameBelow &
      1; // 1
    static +wdFramesetNewFrameLeft: Class<Word$WdFramesetNewFrameLocation__wdFramesetNewFrameLeft> &
      Word$WdFramesetNewFrameLocation__wdFramesetNewFrameLeft &
      3; // 3
    static +wdFramesetNewFrameRight: Class<Word$WdFramesetNewFrameLocation__wdFramesetNewFrameRight> &
      Word$WdFramesetNewFrameLocation__wdFramesetNewFrameRight &
      2; // 2
  }

  declare class Word$WdFramesetNewFrameLocation__wdFramesetNewFrameAbove
    mixins Word$WdFramesetNewFrameLocation {}
  declare class Word$WdFramesetNewFrameLocation__wdFramesetNewFrameBelow
    mixins Word$WdFramesetNewFrameLocation {}
  declare class Word$WdFramesetNewFrameLocation__wdFramesetNewFrameLeft
    mixins Word$WdFramesetNewFrameLocation {}
  declare class Word$WdFramesetNewFrameLocation__wdFramesetNewFrameRight
    mixins Word$WdFramesetNewFrameLocation {}

  declare class Word$WdFramesetSizeType {
    constructor(...args: empty): mixed;
    static +wdFramesetSizeTypeFixed: Class<Word$WdFramesetSizeType__wdFramesetSizeTypeFixed> &
      Word$WdFramesetSizeType__wdFramesetSizeTypeFixed &
      1; // 1
    static +wdFramesetSizeTypePercent: Class<Word$WdFramesetSizeType__wdFramesetSizeTypePercent> &
      Word$WdFramesetSizeType__wdFramesetSizeTypePercent &
      0; // 0
    static +wdFramesetSizeTypeRelative: Class<Word$WdFramesetSizeType__wdFramesetSizeTypeRelative> &
      Word$WdFramesetSizeType__wdFramesetSizeTypeRelative &
      2; // 2
  }

  declare class Word$WdFramesetSizeType__wdFramesetSizeTypeFixed
    mixins Word$WdFramesetSizeType {}
  declare class Word$WdFramesetSizeType__wdFramesetSizeTypePercent
    mixins Word$WdFramesetSizeType {}
  declare class Word$WdFramesetSizeType__wdFramesetSizeTypeRelative
    mixins Word$WdFramesetSizeType {}

  declare class Word$WdFramesetType {
    constructor(...args: empty): mixed;
    static +wdFramesetTypeFrame: Class<Word$WdFramesetType__wdFramesetTypeFrame> &
      Word$WdFramesetType__wdFramesetTypeFrame &
      1; // 1
    static +wdFramesetTypeFrameset: Class<Word$WdFramesetType__wdFramesetTypeFrameset> &
      Word$WdFramesetType__wdFramesetTypeFrameset &
      0; // 0
  }

  declare class Word$WdFramesetType__wdFramesetTypeFrame
    mixins Word$WdFramesetType {}
  declare class Word$WdFramesetType__wdFramesetTypeFrameset
    mixins Word$WdFramesetType {}

  declare class Word$WdFrameSizeRule {
    constructor(...args: empty): mixed;
    static +wdFrameAtLeast: Class<Word$WdFrameSizeRule__wdFrameAtLeast> &
      Word$WdFrameSizeRule__wdFrameAtLeast &
      1; // 1
    static +wdFrameAuto: Class<Word$WdFrameSizeRule__wdFrameAuto> &
      Word$WdFrameSizeRule__wdFrameAuto &
      0; // 0
    static +wdFrameExact: Class<Word$WdFrameSizeRule__wdFrameExact> &
      Word$WdFrameSizeRule__wdFrameExact &
      2; // 2
  }

  declare class Word$WdFrameSizeRule__wdFrameAtLeast
    mixins Word$WdFrameSizeRule {}
  declare class Word$WdFrameSizeRule__wdFrameAuto mixins Word$WdFrameSizeRule {}
  declare class Word$WdFrameSizeRule__wdFrameExact
    mixins Word$WdFrameSizeRule {}

  declare class Word$WdFrenchSpeller {
    constructor(...args: empty): mixed;
    static +wdFrenchBoth: Class<Word$WdFrenchSpeller__wdFrenchBoth> &
      Word$WdFrenchSpeller__wdFrenchBoth &
      0; // 0
    static +wdFrenchPostReform: Class<Word$WdFrenchSpeller__wdFrenchPostReform> &
      Word$WdFrenchSpeller__wdFrenchPostReform &
      2; // 2
    static +wdFrenchPreReform: Class<Word$WdFrenchSpeller__wdFrenchPreReform> &
      Word$WdFrenchSpeller__wdFrenchPreReform &
      1; // 1
  }

  declare class Word$WdFrenchSpeller__wdFrenchBoth
    mixins Word$WdFrenchSpeller {}
  declare class Word$WdFrenchSpeller__wdFrenchPostReform
    mixins Word$WdFrenchSpeller {}
  declare class Word$WdFrenchSpeller__wdFrenchPreReform
    mixins Word$WdFrenchSpeller {}

  declare class Word$WdGoToDirection {
    constructor(...args: empty): mixed;
    static +wdGoToAbsolute: Class<Word$WdGoToDirection__wdGoToAbsolute> &
      Word$WdGoToDirection__wdGoToAbsolute &
      1; // 1
    static +wdGoToFirst: Class<Word$WdGoToDirection__wdGoToFirst> &
      Word$WdGoToDirection__wdGoToFirst &
      1; // 1
    static +wdGoToLast: Class<Word$WdGoToDirection__wdGoToLast> &
      Word$WdGoToDirection__wdGoToLast &
      -1; // -1
    static +wdGoToNext: Class<Word$WdGoToDirection__wdGoToNext> &
      Word$WdGoToDirection__wdGoToNext &
      2; // 2
    static +wdGoToPrevious: Class<Word$WdGoToDirection__wdGoToPrevious> &
      Word$WdGoToDirection__wdGoToPrevious &
      3; // 3
    static +wdGoToRelative: Class<Word$WdGoToDirection__wdGoToRelative> &
      Word$WdGoToDirection__wdGoToRelative &
      2; // 2
  }

  declare class Word$WdGoToDirection__wdGoToAbsolute
    mixins Word$WdGoToDirection {}
  declare class Word$WdGoToDirection__wdGoToFirst mixins Word$WdGoToDirection {}
  declare class Word$WdGoToDirection__wdGoToLast mixins Word$WdGoToDirection {}
  declare class Word$WdGoToDirection__wdGoToNext mixins Word$WdGoToDirection {}
  declare class Word$WdGoToDirection__wdGoToPrevious
    mixins Word$WdGoToDirection {}
  declare class Word$WdGoToDirection__wdGoToRelative
    mixins Word$WdGoToDirection {}

  declare class Word$WdGoToItem {
    constructor(...args: empty): mixed;
    static +wdGoToBookmark: Class<Word$WdGoToItem__wdGoToBookmark> &
      Word$WdGoToItem__wdGoToBookmark &
      -1; // -1
    static +wdGoToComment: Class<Word$WdGoToItem__wdGoToComment> &
      Word$WdGoToItem__wdGoToComment &
      6; // 6
    static +wdGoToEndnote: Class<Word$WdGoToItem__wdGoToEndnote> &
      Word$WdGoToItem__wdGoToEndnote &
      5; // 5
    static +wdGoToEquation: Class<Word$WdGoToItem__wdGoToEquation> &
      Word$WdGoToItem__wdGoToEquation &
      10; // 10
    static +wdGoToField: Class<Word$WdGoToItem__wdGoToField> &
      Word$WdGoToItem__wdGoToField &
      7; // 7
    static +wdGoToFootnote: Class<Word$WdGoToItem__wdGoToFootnote> &
      Word$WdGoToItem__wdGoToFootnote &
      4; // 4
    static +wdGoToGrammaticalError: Class<Word$WdGoToItem__wdGoToGrammaticalError> &
      Word$WdGoToItem__wdGoToGrammaticalError &
      14; // 14
    static +wdGoToGraphic: Class<Word$WdGoToItem__wdGoToGraphic> &
      Word$WdGoToItem__wdGoToGraphic &
      8; // 8
    static +wdGoToHeading: Class<Word$WdGoToItem__wdGoToHeading> &
      Word$WdGoToItem__wdGoToHeading &
      11; // 11
    static +wdGoToLine: Class<Word$WdGoToItem__wdGoToLine> &
      Word$WdGoToItem__wdGoToLine &
      3; // 3
    static +wdGoToObject: Class<Word$WdGoToItem__wdGoToObject> &
      Word$WdGoToItem__wdGoToObject &
      9; // 9
    static +wdGoToPage: Class<Word$WdGoToItem__wdGoToPage> &
      Word$WdGoToItem__wdGoToPage &
      1; // 1
    static +wdGoToPercent: Class<Word$WdGoToItem__wdGoToPercent> &
      Word$WdGoToItem__wdGoToPercent &
      12; // 12
    static +wdGoToProofreadingError: Class<Word$WdGoToItem__wdGoToProofreadingError> &
      Word$WdGoToItem__wdGoToProofreadingError &
      15; // 15
    static +wdGoToSection: Class<Word$WdGoToItem__wdGoToSection> &
      Word$WdGoToItem__wdGoToSection &
      0; // 0
    static +wdGoToSpellingError: Class<Word$WdGoToItem__wdGoToSpellingError> &
      Word$WdGoToItem__wdGoToSpellingError &
      13; // 13
    static +wdGoToTable: Class<Word$WdGoToItem__wdGoToTable> &
      Word$WdGoToItem__wdGoToTable &
      2; // 2
  }

  declare class Word$WdGoToItem__wdGoToBookmark mixins Word$WdGoToItem {}
  declare class Word$WdGoToItem__wdGoToComment mixins Word$WdGoToItem {}
  declare class Word$WdGoToItem__wdGoToEndnote mixins Word$WdGoToItem {}
  declare class Word$WdGoToItem__wdGoToEquation mixins Word$WdGoToItem {}
  declare class Word$WdGoToItem__wdGoToField mixins Word$WdGoToItem {}
  declare class Word$WdGoToItem__wdGoToFootnote mixins Word$WdGoToItem {}
  declare class Word$WdGoToItem__wdGoToGrammaticalError
    mixins Word$WdGoToItem {}
  declare class Word$WdGoToItem__wdGoToGraphic mixins Word$WdGoToItem {}
  declare class Word$WdGoToItem__wdGoToHeading mixins Word$WdGoToItem {}
  declare class Word$WdGoToItem__wdGoToLine mixins Word$WdGoToItem {}
  declare class Word$WdGoToItem__wdGoToObject mixins Word$WdGoToItem {}
  declare class Word$WdGoToItem__wdGoToPage mixins Word$WdGoToItem {}
  declare class Word$WdGoToItem__wdGoToPercent mixins Word$WdGoToItem {}
  declare class Word$WdGoToItem__wdGoToProofreadingError
    mixins Word$WdGoToItem {}
  declare class Word$WdGoToItem__wdGoToSection mixins Word$WdGoToItem {}
  declare class Word$WdGoToItem__wdGoToSpellingError mixins Word$WdGoToItem {}
  declare class Word$WdGoToItem__wdGoToTable mixins Word$WdGoToItem {}

  declare class Word$WdGranularity {
    constructor(...args: empty): mixed;
    static +wdGranularityCharLevel: Class<Word$WdGranularity__wdGranularityCharLevel> &
      Word$WdGranularity__wdGranularityCharLevel &
      0; // 0
    static +wdGranularityWordLevel: Class<Word$WdGranularity__wdGranularityWordLevel> &
      Word$WdGranularity__wdGranularityWordLevel &
      1; // 1
  }

  declare class Word$WdGranularity__wdGranularityCharLevel
    mixins Word$WdGranularity {}
  declare class Word$WdGranularity__wdGranularityWordLevel
    mixins Word$WdGranularity {}

  declare class Word$WdGutterStyle {
    constructor(...args: empty): mixed;
    static +wdGutterPosLeft: Class<Word$WdGutterStyle__wdGutterPosLeft> &
      Word$WdGutterStyle__wdGutterPosLeft &
      0; // 0
    static +wdGutterPosRight: Class<Word$WdGutterStyle__wdGutterPosRight> &
      Word$WdGutterStyle__wdGutterPosRight &
      2; // 2
    static +wdGutterPosTop: Class<Word$WdGutterStyle__wdGutterPosTop> &
      Word$WdGutterStyle__wdGutterPosTop &
      1; // 1
  }

  declare class Word$WdGutterStyle__wdGutterPosLeft mixins Word$WdGutterStyle {}
  declare class Word$WdGutterStyle__wdGutterPosRight
    mixins Word$WdGutterStyle {}
  declare class Word$WdGutterStyle__wdGutterPosTop mixins Word$WdGutterStyle {}

  declare class Word$WdGutterStyleOld {
    constructor(...args: empty): mixed;
    static +wdGutterStyleBidi: Class<Word$WdGutterStyleOld__wdGutterStyleBidi> &
      Word$WdGutterStyleOld__wdGutterStyleBidi &
      2; // 2
    static +wdGutterStyleLatin: Class<Word$WdGutterStyleOld__wdGutterStyleLatin> &
      Word$WdGutterStyleOld__wdGutterStyleLatin &
      -10; // -10
  }

  declare class Word$WdGutterStyleOld__wdGutterStyleBidi
    mixins Word$WdGutterStyleOld {}
  declare class Word$WdGutterStyleOld__wdGutterStyleLatin
    mixins Word$WdGutterStyleOld {}

  declare class Word$WdHeaderFooterIndex {
    constructor(...args: empty): mixed;
    static +wdHeaderFooterEvenPages: Class<Word$WdHeaderFooterIndex__wdHeaderFooterEvenPages> &
      Word$WdHeaderFooterIndex__wdHeaderFooterEvenPages &
      3; // 3
    static +wdHeaderFooterFirstPage: Class<Word$WdHeaderFooterIndex__wdHeaderFooterFirstPage> &
      Word$WdHeaderFooterIndex__wdHeaderFooterFirstPage &
      2; // 2
    static +wdHeaderFooterPrimary: Class<Word$WdHeaderFooterIndex__wdHeaderFooterPrimary> &
      Word$WdHeaderFooterIndex__wdHeaderFooterPrimary &
      1; // 1
  }

  declare class Word$WdHeaderFooterIndex__wdHeaderFooterEvenPages
    mixins Word$WdHeaderFooterIndex {}
  declare class Word$WdHeaderFooterIndex__wdHeaderFooterFirstPage
    mixins Word$WdHeaderFooterIndex {}
  declare class Word$WdHeaderFooterIndex__wdHeaderFooterPrimary
    mixins Word$WdHeaderFooterIndex {}

  declare class Word$WdHeadingSeparator {
    constructor(...args: empty): mixed;
    static +wdHeadingSeparatorBlankLine: Class<Word$WdHeadingSeparator__wdHeadingSeparatorBlankLine> &
      Word$WdHeadingSeparator__wdHeadingSeparatorBlankLine &
      1; // 1
    static +wdHeadingSeparatorLetter: Class<Word$WdHeadingSeparator__wdHeadingSeparatorLetter> &
      Word$WdHeadingSeparator__wdHeadingSeparatorLetter &
      2; // 2
    static +wdHeadingSeparatorLetterFull: Class<Word$WdHeadingSeparator__wdHeadingSeparatorLetterFull> &
      Word$WdHeadingSeparator__wdHeadingSeparatorLetterFull &
      4; // 4
    static +wdHeadingSeparatorLetterLow: Class<Word$WdHeadingSeparator__wdHeadingSeparatorLetterLow> &
      Word$WdHeadingSeparator__wdHeadingSeparatorLetterLow &
      3; // 3
    static +wdHeadingSeparatorNone: Class<Word$WdHeadingSeparator__wdHeadingSeparatorNone> &
      Word$WdHeadingSeparator__wdHeadingSeparatorNone &
      0; // 0
  }

  declare class Word$WdHeadingSeparator__wdHeadingSeparatorBlankLine
    mixins Word$WdHeadingSeparator {}
  declare class Word$WdHeadingSeparator__wdHeadingSeparatorLetter
    mixins Word$WdHeadingSeparator {}
  declare class Word$WdHeadingSeparator__wdHeadingSeparatorLetterFull
    mixins Word$WdHeadingSeparator {}
  declare class Word$WdHeadingSeparator__wdHeadingSeparatorLetterLow
    mixins Word$WdHeadingSeparator {}
  declare class Word$WdHeadingSeparator__wdHeadingSeparatorNone
    mixins Word$WdHeadingSeparator {}

  declare class Word$WdHebSpellStart {
    constructor(...args: empty): mixed;
    static +wdFullScript: Class<Word$WdHebSpellStart__wdFullScript> &
      Word$WdHebSpellStart__wdFullScript &
      0; // 0
    static +wdMixedAuthorizedScript: Class<Word$WdHebSpellStart__wdMixedAuthorizedScript> &
      Word$WdHebSpellStart__wdMixedAuthorizedScript &
      3; // 3
    static +wdMixedScript: Class<Word$WdHebSpellStart__wdMixedScript> &
      Word$WdHebSpellStart__wdMixedScript &
      2; // 2
    static +wdPartialScript: Class<Word$WdHebSpellStart__wdPartialScript> &
      Word$WdHebSpellStart__wdPartialScript &
      1; // 1
  }

  declare class Word$WdHebSpellStart__wdFullScript
    mixins Word$WdHebSpellStart {}
  declare class Word$WdHebSpellStart__wdMixedAuthorizedScript
    mixins Word$WdHebSpellStart {}
  declare class Word$WdHebSpellStart__wdMixedScript
    mixins Word$WdHebSpellStart {}
  declare class Word$WdHebSpellStart__wdPartialScript
    mixins Word$WdHebSpellStart {}

  declare class Word$WdHelpType {
    constructor(...args: empty): mixed;
    static +wdHelp: Class<Word$WdHelpType__wdHelp> &
      Word$WdHelpType__wdHelp &
      0; // 0
    static +wdHelpAbout: Class<Word$WdHelpType__wdHelpAbout> &
      Word$WdHelpType__wdHelpAbout &
      1; // 1
    static +wdHelpActiveWindow: Class<Word$WdHelpType__wdHelpActiveWindow> &
      Word$WdHelpType__wdHelpActiveWindow &
      2; // 2
    static +wdHelpContents: Class<Word$WdHelpType__wdHelpContents> &
      Word$WdHelpType__wdHelpContents &
      3; // 3
    static +wdHelpExamplesAndDemos: Class<Word$WdHelpType__wdHelpExamplesAndDemos> &
      Word$WdHelpType__wdHelpExamplesAndDemos &
      4; // 4
    static +wdHelpHWP: Class<Word$WdHelpType__wdHelpHWP> &
      Word$WdHelpType__wdHelpHWP &
      13; // 13
    static +wdHelpIchitaro: Class<Word$WdHelpType__wdHelpIchitaro> &
      Word$WdHelpType__wdHelpIchitaro &
      11; // 11
    static +wdHelpIndex: Class<Word$WdHelpType__wdHelpIndex> &
      Word$WdHelpType__wdHelpIndex &
      5; // 5
    static +wdHelpKeyboard: Class<Word$WdHelpType__wdHelpKeyboard> &
      Word$WdHelpType__wdHelpKeyboard &
      6; // 6
    static +wdHelpPE2: Class<Word$WdHelpType__wdHelpPE2> &
      Word$WdHelpType__wdHelpPE2 &
      12; // 12
    static +wdHelpPSSHelp: Class<Word$WdHelpType__wdHelpPSSHelp> &
      Word$WdHelpType__wdHelpPSSHelp &
      7; // 7
    static +wdHelpQuickPreview: Class<Word$WdHelpType__wdHelpQuickPreview> &
      Word$WdHelpType__wdHelpQuickPreview &
      8; // 8
    static +wdHelpSearch: Class<Word$WdHelpType__wdHelpSearch> &
      Word$WdHelpType__wdHelpSearch &
      9; // 9
    static +wdHelpUsingHelp: Class<Word$WdHelpType__wdHelpUsingHelp> &
      Word$WdHelpType__wdHelpUsingHelp &
      10; // 10
  }

  declare class Word$WdHelpType__wdHelp mixins Word$WdHelpType {}
  declare class Word$WdHelpType__wdHelpAbout mixins Word$WdHelpType {}
  declare class Word$WdHelpType__wdHelpActiveWindow mixins Word$WdHelpType {}
  declare class Word$WdHelpType__wdHelpContents mixins Word$WdHelpType {}
  declare class Word$WdHelpType__wdHelpExamplesAndDemos
    mixins Word$WdHelpType {}
  declare class Word$WdHelpType__wdHelpHWP mixins Word$WdHelpType {}
  declare class Word$WdHelpType__wdHelpIchitaro mixins Word$WdHelpType {}
  declare class Word$WdHelpType__wdHelpIndex mixins Word$WdHelpType {}
  declare class Word$WdHelpType__wdHelpKeyboard mixins Word$WdHelpType {}
  declare class Word$WdHelpType__wdHelpPE2 mixins Word$WdHelpType {}
  declare class Word$WdHelpType__wdHelpPSSHelp mixins Word$WdHelpType {}
  declare class Word$WdHelpType__wdHelpQuickPreview mixins Word$WdHelpType {}
  declare class Word$WdHelpType__wdHelpSearch mixins Word$WdHelpType {}
  declare class Word$WdHelpType__wdHelpUsingHelp mixins Word$WdHelpType {}

  declare class Word$WdHelpTypeHID {
    constructor(...args: empty): mixed;
    static +emptyenum: Class<Word$WdHelpTypeHID__emptyenum> &
      Word$WdHelpTypeHID__emptyenum &
      0; // 0
  }

  declare class Word$WdHelpTypeHID__emptyenum mixins Word$WdHelpTypeHID {}

  declare class Word$WdHighAnsiText {
    constructor(...args: empty): mixed;
    static +wdAutoDetectHighAnsiFarEast: Class<Word$WdHighAnsiText__wdAutoDetectHighAnsiFarEast> &
      Word$WdHighAnsiText__wdAutoDetectHighAnsiFarEast &
      2; // 2
    static +wdHighAnsiIsFarEast: Class<Word$WdHighAnsiText__wdHighAnsiIsFarEast> &
      Word$WdHighAnsiText__wdHighAnsiIsFarEast &
      0; // 0
    static +wdHighAnsiIsHighAnsi: Class<Word$WdHighAnsiText__wdHighAnsiIsHighAnsi> &
      Word$WdHighAnsiText__wdHighAnsiIsHighAnsi &
      1; // 1
  }

  declare class Word$WdHighAnsiText__wdAutoDetectHighAnsiFarEast
    mixins Word$WdHighAnsiText {}
  declare class Word$WdHighAnsiText__wdHighAnsiIsFarEast
    mixins Word$WdHighAnsiText {}
  declare class Word$WdHighAnsiText__wdHighAnsiIsHighAnsi
    mixins Word$WdHighAnsiText {}

  declare class Word$WdHorizontalInVerticalType {
    constructor(...args: empty): mixed;
    static +wdHorizontalInVerticalFitInLine: Class<Word$WdHorizontalInVerticalType__wdHorizontalInVerticalFitInLine> &
      Word$WdHorizontalInVerticalType__wdHorizontalInVerticalFitInLine &
      1; // 1
    static +wdHorizontalInVerticalNone: Class<Word$WdHorizontalInVerticalType__wdHorizontalInVerticalNone> &
      Word$WdHorizontalInVerticalType__wdHorizontalInVerticalNone &
      0; // 0
    static +wdHorizontalInVerticalResizeLine: Class<Word$WdHorizontalInVerticalType__wdHorizontalInVerticalResizeLine> &
      Word$WdHorizontalInVerticalType__wdHorizontalInVerticalResizeLine &
      2; // 2
  }

  declare class Word$WdHorizontalInVerticalType__wdHorizontalInVerticalFitInLine
    mixins Word$WdHorizontalInVerticalType {}
  declare class Word$WdHorizontalInVerticalType__wdHorizontalInVerticalNone
    mixins Word$WdHorizontalInVerticalType {}
  declare class Word$WdHorizontalInVerticalType__wdHorizontalInVerticalResizeLine
    mixins Word$WdHorizontalInVerticalType {}

  declare class Word$WdHorizontalLineAlignment {
    constructor(...args: empty): mixed;
    static +wdHorizontalLineAlignCenter: Class<Word$WdHorizontalLineAlignment__wdHorizontalLineAlignCenter> &
      Word$WdHorizontalLineAlignment__wdHorizontalLineAlignCenter &
      1; // 1
    static +wdHorizontalLineAlignLeft: Class<Word$WdHorizontalLineAlignment__wdHorizontalLineAlignLeft> &
      Word$WdHorizontalLineAlignment__wdHorizontalLineAlignLeft &
      0; // 0
    static +wdHorizontalLineAlignRight: Class<Word$WdHorizontalLineAlignment__wdHorizontalLineAlignRight> &
      Word$WdHorizontalLineAlignment__wdHorizontalLineAlignRight &
      2; // 2
  }

  declare class Word$WdHorizontalLineAlignment__wdHorizontalLineAlignCenter
    mixins Word$WdHorizontalLineAlignment {}
  declare class Word$WdHorizontalLineAlignment__wdHorizontalLineAlignLeft
    mixins Word$WdHorizontalLineAlignment {}
  declare class Word$WdHorizontalLineAlignment__wdHorizontalLineAlignRight
    mixins Word$WdHorizontalLineAlignment {}

  declare class Word$WdHorizontalLineWidthType {
    constructor(...args: empty): mixed;
    static +wdHorizontalLineFixedWidth: Class<Word$WdHorizontalLineWidthType__wdHorizontalLineFixedWidth> &
      Word$WdHorizontalLineWidthType__wdHorizontalLineFixedWidth &
      -2; // -2
    static +wdHorizontalLinePercentWidth: Class<Word$WdHorizontalLineWidthType__wdHorizontalLinePercentWidth> &
      Word$WdHorizontalLineWidthType__wdHorizontalLinePercentWidth &
      -1; // -1
  }

  declare class Word$WdHorizontalLineWidthType__wdHorizontalLineFixedWidth
    mixins Word$WdHorizontalLineWidthType {}
  declare class Word$WdHorizontalLineWidthType__wdHorizontalLinePercentWidth
    mixins Word$WdHorizontalLineWidthType {}

  declare class Word$WdIMEMode {
    constructor(...args: empty): mixed;
    static +wdIMEModeAlpha: Class<Word$WdIMEMode__wdIMEModeAlpha> &
      Word$WdIMEMode__wdIMEModeAlpha &
      8; // 8
    static +wdIMEModeAlphaFull: Class<Word$WdIMEMode__wdIMEModeAlphaFull> &
      Word$WdIMEMode__wdIMEModeAlphaFull &
      7; // 7
    static +wdIMEModeHangul: Class<Word$WdIMEMode__wdIMEModeHangul> &
      Word$WdIMEMode__wdIMEModeHangul &
      10; // 10
    static +wdIMEModeHangulFull: Class<Word$WdIMEMode__wdIMEModeHangulFull> &
      Word$WdIMEMode__wdIMEModeHangulFull &
      9; // 9
    static +wdIMEModeHiragana: Class<Word$WdIMEMode__wdIMEModeHiragana> &
      Word$WdIMEMode__wdIMEModeHiragana &
      4; // 4
    static +wdIMEModeKatakana: Class<Word$WdIMEMode__wdIMEModeKatakana> &
      Word$WdIMEMode__wdIMEModeKatakana &
      5; // 5
    static +wdIMEModeKatakanaHalf: Class<Word$WdIMEMode__wdIMEModeKatakanaHalf> &
      Word$WdIMEMode__wdIMEModeKatakanaHalf &
      6; // 6
    static +wdIMEModeNoControl: Class<Word$WdIMEMode__wdIMEModeNoControl> &
      Word$WdIMEMode__wdIMEModeNoControl &
      0; // 0
    static +wdIMEModeOff: Class<Word$WdIMEMode__wdIMEModeOff> &
      Word$WdIMEMode__wdIMEModeOff &
      2; // 2
    static +wdIMEModeOn: Class<Word$WdIMEMode__wdIMEModeOn> &
      Word$WdIMEMode__wdIMEModeOn &
      1; // 1
  }

  declare class Word$WdIMEMode__wdIMEModeAlpha mixins Word$WdIMEMode {}
  declare class Word$WdIMEMode__wdIMEModeAlphaFull mixins Word$WdIMEMode {}
  declare class Word$WdIMEMode__wdIMEModeHangul mixins Word$WdIMEMode {}
  declare class Word$WdIMEMode__wdIMEModeHangulFull mixins Word$WdIMEMode {}
  declare class Word$WdIMEMode__wdIMEModeHiragana mixins Word$WdIMEMode {}
  declare class Word$WdIMEMode__wdIMEModeKatakana mixins Word$WdIMEMode {}
  declare class Word$WdIMEMode__wdIMEModeKatakanaHalf mixins Word$WdIMEMode {}
  declare class Word$WdIMEMode__wdIMEModeNoControl mixins Word$WdIMEMode {}
  declare class Word$WdIMEMode__wdIMEModeOff mixins Word$WdIMEMode {}
  declare class Word$WdIMEMode__wdIMEModeOn mixins Word$WdIMEMode {}

  declare class Word$WdIndexFilter {
    constructor(...args: empty): mixed;
    static +wdIndexFilterAiueo: Class<Word$WdIndexFilter__wdIndexFilterAiueo> &
      Word$WdIndexFilter__wdIndexFilterAiueo &
      1; // 1
    static +wdIndexFilterAkasatana: Class<Word$WdIndexFilter__wdIndexFilterAkasatana> &
      Word$WdIndexFilter__wdIndexFilterAkasatana &
      2; // 2
    static +wdIndexFilterChosung: Class<Word$WdIndexFilter__wdIndexFilterChosung> &
      Word$WdIndexFilter__wdIndexFilterChosung &
      3; // 3
    static +wdIndexFilterFull: Class<Word$WdIndexFilter__wdIndexFilterFull> &
      Word$WdIndexFilter__wdIndexFilterFull &
      6; // 6
    static +wdIndexFilterLow: Class<Word$WdIndexFilter__wdIndexFilterLow> &
      Word$WdIndexFilter__wdIndexFilterLow &
      4; // 4
    static +wdIndexFilterMedium: Class<Word$WdIndexFilter__wdIndexFilterMedium> &
      Word$WdIndexFilter__wdIndexFilterMedium &
      5; // 5
    static +wdIndexFilterNone: Class<Word$WdIndexFilter__wdIndexFilterNone> &
      Word$WdIndexFilter__wdIndexFilterNone &
      0; // 0
  }

  declare class Word$WdIndexFilter__wdIndexFilterAiueo
    mixins Word$WdIndexFilter {}
  declare class Word$WdIndexFilter__wdIndexFilterAkasatana
    mixins Word$WdIndexFilter {}
  declare class Word$WdIndexFilter__wdIndexFilterChosung
    mixins Word$WdIndexFilter {}
  declare class Word$WdIndexFilter__wdIndexFilterFull
    mixins Word$WdIndexFilter {}
  declare class Word$WdIndexFilter__wdIndexFilterLow
    mixins Word$WdIndexFilter {}
  declare class Word$WdIndexFilter__wdIndexFilterMedium
    mixins Word$WdIndexFilter {}
  declare class Word$WdIndexFilter__wdIndexFilterNone
    mixins Word$WdIndexFilter {}

  declare class Word$WdIndexFormat {
    constructor(...args: empty): mixed;
    static +wdIndexBulleted: Class<Word$WdIndexFormat__wdIndexBulleted> &
      Word$WdIndexFormat__wdIndexBulleted &
      4; // 4
    static +wdIndexClassic: Class<Word$WdIndexFormat__wdIndexClassic> &
      Word$WdIndexFormat__wdIndexClassic &
      1; // 1
    static +wdIndexFancy: Class<Word$WdIndexFormat__wdIndexFancy> &
      Word$WdIndexFormat__wdIndexFancy &
      2; // 2
    static +wdIndexFormal: Class<Word$WdIndexFormat__wdIndexFormal> &
      Word$WdIndexFormat__wdIndexFormal &
      5; // 5
    static +wdIndexModern: Class<Word$WdIndexFormat__wdIndexModern> &
      Word$WdIndexFormat__wdIndexModern &
      3; // 3
    static +wdIndexSimple: Class<Word$WdIndexFormat__wdIndexSimple> &
      Word$WdIndexFormat__wdIndexSimple &
      6; // 6
    static +wdIndexTemplate: Class<Word$WdIndexFormat__wdIndexTemplate> &
      Word$WdIndexFormat__wdIndexTemplate &
      0; // 0
  }

  declare class Word$WdIndexFormat__wdIndexBulleted mixins Word$WdIndexFormat {}
  declare class Word$WdIndexFormat__wdIndexClassic mixins Word$WdIndexFormat {}
  declare class Word$WdIndexFormat__wdIndexFancy mixins Word$WdIndexFormat {}
  declare class Word$WdIndexFormat__wdIndexFormal mixins Word$WdIndexFormat {}
  declare class Word$WdIndexFormat__wdIndexModern mixins Word$WdIndexFormat {}
  declare class Word$WdIndexFormat__wdIndexSimple mixins Word$WdIndexFormat {}
  declare class Word$WdIndexFormat__wdIndexTemplate mixins Word$WdIndexFormat {}

  declare class Word$WdIndexSortBy {
    constructor(...args: empty): mixed;
    static +wdIndexSortByStroke: Class<Word$WdIndexSortBy__wdIndexSortByStroke> &
      Word$WdIndexSortBy__wdIndexSortByStroke &
      0; // 0
    static +wdIndexSortBySyllable: Class<Word$WdIndexSortBy__wdIndexSortBySyllable> &
      Word$WdIndexSortBy__wdIndexSortBySyllable &
      1; // 1
  }

  declare class Word$WdIndexSortBy__wdIndexSortByStroke
    mixins Word$WdIndexSortBy {}
  declare class Word$WdIndexSortBy__wdIndexSortBySyllable
    mixins Word$WdIndexSortBy {}

  declare class Word$WdIndexType {
    constructor(...args: empty): mixed;
    static +wdIndexIndent: Class<Word$WdIndexType__wdIndexIndent> &
      Word$WdIndexType__wdIndexIndent &
      0; // 0
    static +wdIndexRunin: Class<Word$WdIndexType__wdIndexRunin> &
      Word$WdIndexType__wdIndexRunin &
      1; // 1
  }

  declare class Word$WdIndexType__wdIndexIndent mixins Word$WdIndexType {}
  declare class Word$WdIndexType__wdIndexRunin mixins Word$WdIndexType {}

  declare class Word$WdInformation {
    constructor(...args: empty): mixed;
    static +wdActiveEndAdjustedPageNumber: Class<Word$WdInformation__wdActiveEndAdjustedPageNumber> &
      Word$WdInformation__wdActiveEndAdjustedPageNumber &
      1; // 1
    static +wdActiveEndPageNumber: Class<Word$WdInformation__wdActiveEndPageNumber> &
      Word$WdInformation__wdActiveEndPageNumber &
      3; // 3
    static +wdActiveEndSectionNumber: Class<Word$WdInformation__wdActiveEndSectionNumber> &
      Word$WdInformation__wdActiveEndSectionNumber &
      2; // 2
    static +wdAtEndOfRowMarker: Class<Word$WdInformation__wdAtEndOfRowMarker> &
      Word$WdInformation__wdAtEndOfRowMarker &
      31; // 31
    static +wdCapsLock: Class<Word$WdInformation__wdCapsLock> &
      Word$WdInformation__wdCapsLock &
      21; // 21
    static +wdEndOfRangeColumnNumber: Class<Word$WdInformation__wdEndOfRangeColumnNumber> &
      Word$WdInformation__wdEndOfRangeColumnNumber &
      17; // 17
    static +wdEndOfRangeRowNumber: Class<Word$WdInformation__wdEndOfRangeRowNumber> &
      Word$WdInformation__wdEndOfRangeRowNumber &
      14; // 14
    static +wdFirstCharacterColumnNumber: Class<Word$WdInformation__wdFirstCharacterColumnNumber> &
      Word$WdInformation__wdFirstCharacterColumnNumber &
      9; // 9
    static +wdFirstCharacterLineNumber: Class<Word$WdInformation__wdFirstCharacterLineNumber> &
      Word$WdInformation__wdFirstCharacterLineNumber &
      10; // 10
    static +wdFrameIsSelected: Class<Word$WdInformation__wdFrameIsSelected> &
      Word$WdInformation__wdFrameIsSelected &
      11; // 11
    static +wdHeaderFooterType: Class<Word$WdInformation__wdHeaderFooterType> &
      Word$WdInformation__wdHeaderFooterType &
      33; // 33
    static +wdHorizontalPositionRelativeToPage: Class<Word$WdInformation__wdHorizontalPositionRelativeToPage> &
      Word$WdInformation__wdHorizontalPositionRelativeToPage &
      5; // 5
    static +wdHorizontalPositionRelativeToTextBoundary: Class<Word$WdInformation__wdHorizontalPositionRelativeToTextBoundary> &
      Word$WdInformation__wdHorizontalPositionRelativeToTextBoundary &
      7; // 7
    static +wdInClipboard: Class<Word$WdInformation__wdInClipboard> &
      Word$WdInformation__wdInClipboard &
      38; // 38
    static +wdInCommentPane: Class<Word$WdInformation__wdInCommentPane> &
      Word$WdInformation__wdInCommentPane &
      26; // 26
    static +wdInEndnote: Class<Word$WdInformation__wdInEndnote> &
      Word$WdInformation__wdInEndnote &
      36; // 36
    static +wdInFootnote: Class<Word$WdInformation__wdInFootnote> &
      Word$WdInformation__wdInFootnote &
      35; // 35
    static +wdInFootnoteEndnotePane: Class<Word$WdInformation__wdInFootnoteEndnotePane> &
      Word$WdInformation__wdInFootnoteEndnotePane &
      25; // 25
    static +wdInHeaderFooter: Class<Word$WdInformation__wdInHeaderFooter> &
      Word$WdInformation__wdInHeaderFooter &
      28; // 28
    static +wdInMasterDocument: Class<Word$WdInformation__wdInMasterDocument> &
      Word$WdInformation__wdInMasterDocument &
      34; // 34
    static +wdInWordMail: Class<Word$WdInformation__wdInWordMail> &
      Word$WdInformation__wdInWordMail &
      37; // 37
    static +wdMaximumNumberOfColumns: Class<Word$WdInformation__wdMaximumNumberOfColumns> &
      Word$WdInformation__wdMaximumNumberOfColumns &
      18; // 18
    static +wdMaximumNumberOfRows: Class<Word$WdInformation__wdMaximumNumberOfRows> &
      Word$WdInformation__wdMaximumNumberOfRows &
      15; // 15
    static +wdNumberOfPagesInDocument: Class<Word$WdInformation__wdNumberOfPagesInDocument> &
      Word$WdInformation__wdNumberOfPagesInDocument &
      4; // 4
    static +wdNumLock: Class<Word$WdInformation__wdNumLock> &
      Word$WdInformation__wdNumLock &
      22; // 22
    static +wdOverType: Class<Word$WdInformation__wdOverType> &
      Word$WdInformation__wdOverType &
      23; // 23
    static +wdReferenceOfType: Class<Word$WdInformation__wdReferenceOfType> &
      Word$WdInformation__wdReferenceOfType &
      32; // 32
    static +wdRevisionMarking: Class<Word$WdInformation__wdRevisionMarking> &
      Word$WdInformation__wdRevisionMarking &
      24; // 24
    static +wdSelectionMode: Class<Word$WdInformation__wdSelectionMode> &
      Word$WdInformation__wdSelectionMode &
      20; // 20
    static +wdStartOfRangeColumnNumber: Class<Word$WdInformation__wdStartOfRangeColumnNumber> &
      Word$WdInformation__wdStartOfRangeColumnNumber &
      16; // 16
    static +wdStartOfRangeRowNumber: Class<Word$WdInformation__wdStartOfRangeRowNumber> &
      Word$WdInformation__wdStartOfRangeRowNumber &
      13; // 13
    static +wdVerticalPositionRelativeToPage: Class<Word$WdInformation__wdVerticalPositionRelativeToPage> &
      Word$WdInformation__wdVerticalPositionRelativeToPage &
      6; // 6
    static +wdVerticalPositionRelativeToTextBoundary: Class<Word$WdInformation__wdVerticalPositionRelativeToTextBoundary> &
      Word$WdInformation__wdVerticalPositionRelativeToTextBoundary &
      8; // 8
    static +wdWithInTable: Class<Word$WdInformation__wdWithInTable> &
      Word$WdInformation__wdWithInTable &
      12; // 12
    static +wdZoomPercentage: Class<Word$WdInformation__wdZoomPercentage> &
      Word$WdInformation__wdZoomPercentage &
      19; // 19
  }

  declare class Word$WdInformation__wdActiveEndAdjustedPageNumber
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdActiveEndPageNumber
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdActiveEndSectionNumber
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdAtEndOfRowMarker
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdCapsLock mixins Word$WdInformation {}
  declare class Word$WdInformation__wdEndOfRangeColumnNumber
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdEndOfRangeRowNumber
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdFirstCharacterColumnNumber
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdFirstCharacterLineNumber
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdFrameIsSelected
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdHeaderFooterType
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdHorizontalPositionRelativeToPage
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdHorizontalPositionRelativeToTextBoundary
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdInClipboard mixins Word$WdInformation {}
  declare class Word$WdInformation__wdInCommentPane mixins Word$WdInformation {}
  declare class Word$WdInformation__wdInEndnote mixins Word$WdInformation {}
  declare class Word$WdInformation__wdInFootnote mixins Word$WdInformation {}
  declare class Word$WdInformation__wdInFootnoteEndnotePane
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdInHeaderFooter
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdInMasterDocument
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdInWordMail mixins Word$WdInformation {}
  declare class Word$WdInformation__wdMaximumNumberOfColumns
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdMaximumNumberOfRows
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdNumberOfPagesInDocument
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdNumLock mixins Word$WdInformation {}
  declare class Word$WdInformation__wdOverType mixins Word$WdInformation {}
  declare class Word$WdInformation__wdReferenceOfType
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdRevisionMarking
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdSelectionMode mixins Word$WdInformation {}
  declare class Word$WdInformation__wdStartOfRangeColumnNumber
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdStartOfRangeRowNumber
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdVerticalPositionRelativeToPage
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdVerticalPositionRelativeToTextBoundary
    mixins Word$WdInformation {}
  declare class Word$WdInformation__wdWithInTable mixins Word$WdInformation {}
  declare class Word$WdInformation__wdZoomPercentage
    mixins Word$WdInformation {}

  declare class Word$WdInlineShapeType {
    constructor(...args: empty): mixed;
    static +wdInlineShapeChart: Class<Word$WdInlineShapeType__wdInlineShapeChart> &
      Word$WdInlineShapeType__wdInlineShapeChart &
      12; // 12
    static +wdInlineShapeDiagram: Class<Word$WdInlineShapeType__wdInlineShapeDiagram> &
      Word$WdInlineShapeType__wdInlineShapeDiagram &
      13; // 13
    static +wdInlineShapeEmbeddedOLEObject: Class<Word$WdInlineShapeType__wdInlineShapeEmbeddedOLEObject> &
      Word$WdInlineShapeType__wdInlineShapeEmbeddedOLEObject &
      1; // 1
    static +wdInlineShapeHorizontalLine: Class<Word$WdInlineShapeType__wdInlineShapeHorizontalLine> &
      Word$WdInlineShapeType__wdInlineShapeHorizontalLine &
      6; // 6
    static +wdInlineShapeLinkedOLEObject: Class<Word$WdInlineShapeType__wdInlineShapeLinkedOLEObject> &
      Word$WdInlineShapeType__wdInlineShapeLinkedOLEObject &
      2; // 2
    static +wdInlineShapeLinkedPicture: Class<Word$WdInlineShapeType__wdInlineShapeLinkedPicture> &
      Word$WdInlineShapeType__wdInlineShapeLinkedPicture &
      4; // 4
    static +wdInlineShapeLinkedPictureHorizontalLine: Class<Word$WdInlineShapeType__wdInlineShapeLinkedPictureHorizontalLine> &
      Word$WdInlineShapeType__wdInlineShapeLinkedPictureHorizontalLine &
      8; // 8
    static +wdInlineShapeLockedCanvas: Class<Word$WdInlineShapeType__wdInlineShapeLockedCanvas> &
      Word$WdInlineShapeType__wdInlineShapeLockedCanvas &
      14; // 14
    static +wdInlineShapeOLEControlObject: Class<Word$WdInlineShapeType__wdInlineShapeOLEControlObject> &
      Word$WdInlineShapeType__wdInlineShapeOLEControlObject &
      5; // 5
    static +wdInlineShapeOWSAnchor: Class<Word$WdInlineShapeType__wdInlineShapeOWSAnchor> &
      Word$WdInlineShapeType__wdInlineShapeOWSAnchor &
      11; // 11
    static +wdInlineShapePicture: Class<Word$WdInlineShapeType__wdInlineShapePicture> &
      Word$WdInlineShapeType__wdInlineShapePicture &
      3; // 3
    static +wdInlineShapePictureBullet: Class<Word$WdInlineShapeType__wdInlineShapePictureBullet> &
      Word$WdInlineShapeType__wdInlineShapePictureBullet &
      9; // 9
    static +wdInlineShapePictureHorizontalLine: Class<Word$WdInlineShapeType__wdInlineShapePictureHorizontalLine> &
      Word$WdInlineShapeType__wdInlineShapePictureHorizontalLine &
      7; // 7
    static +wdInlineShapeScriptAnchor: Class<Word$WdInlineShapeType__wdInlineShapeScriptAnchor> &
      Word$WdInlineShapeType__wdInlineShapeScriptAnchor &
      10; // 10
    static +wdInlineShapeSmartArt: Class<Word$WdInlineShapeType__wdInlineShapeSmartArt> &
      Word$WdInlineShapeType__wdInlineShapeSmartArt &
      15; // 15
  }

  declare class Word$WdInlineShapeType__wdInlineShapeChart
    mixins Word$WdInlineShapeType {}
  declare class Word$WdInlineShapeType__wdInlineShapeDiagram
    mixins Word$WdInlineShapeType {}
  declare class Word$WdInlineShapeType__wdInlineShapeEmbeddedOLEObject
    mixins Word$WdInlineShapeType {}
  declare class Word$WdInlineShapeType__wdInlineShapeHorizontalLine
    mixins Word$WdInlineShapeType {}
  declare class Word$WdInlineShapeType__wdInlineShapeLinkedOLEObject
    mixins Word$WdInlineShapeType {}
  declare class Word$WdInlineShapeType__wdInlineShapeLinkedPicture
    mixins Word$WdInlineShapeType {}
  declare class Word$WdInlineShapeType__wdInlineShapeLinkedPictureHorizontalLine
    mixins Word$WdInlineShapeType {}
  declare class Word$WdInlineShapeType__wdInlineShapeLockedCanvas
    mixins Word$WdInlineShapeType {}
  declare class Word$WdInlineShapeType__wdInlineShapeOLEControlObject
    mixins Word$WdInlineShapeType {}
  declare class Word$WdInlineShapeType__wdInlineShapeOWSAnchor
    mixins Word$WdInlineShapeType {}
  declare class Word$WdInlineShapeType__wdInlineShapePicture
    mixins Word$WdInlineShapeType {}
  declare class Word$WdInlineShapeType__wdInlineShapePictureBullet
    mixins Word$WdInlineShapeType {}
  declare class Word$WdInlineShapeType__wdInlineShapePictureHorizontalLine
    mixins Word$WdInlineShapeType {}
  declare class Word$WdInlineShapeType__wdInlineShapeScriptAnchor
    mixins Word$WdInlineShapeType {}
  declare class Word$WdInlineShapeType__wdInlineShapeSmartArt
    mixins Word$WdInlineShapeType {}

  declare class Word$WdInsertCells {
    constructor(...args: empty): mixed;
    static +wdInsertCellsEntireColumn: Class<Word$WdInsertCells__wdInsertCellsEntireColumn> &
      Word$WdInsertCells__wdInsertCellsEntireColumn &
      3; // 3
    static +wdInsertCellsEntireRow: Class<Word$WdInsertCells__wdInsertCellsEntireRow> &
      Word$WdInsertCells__wdInsertCellsEntireRow &
      2; // 2
    static +wdInsertCellsShiftDown: Class<Word$WdInsertCells__wdInsertCellsShiftDown> &
      Word$WdInsertCells__wdInsertCellsShiftDown &
      1; // 1
    static +wdInsertCellsShiftRight: Class<Word$WdInsertCells__wdInsertCellsShiftRight> &
      Word$WdInsertCells__wdInsertCellsShiftRight &
      0; // 0
  }

  declare class Word$WdInsertCells__wdInsertCellsEntireColumn
    mixins Word$WdInsertCells {}
  declare class Word$WdInsertCells__wdInsertCellsEntireRow
    mixins Word$WdInsertCells {}
  declare class Word$WdInsertCells__wdInsertCellsShiftDown
    mixins Word$WdInsertCells {}
  declare class Word$WdInsertCells__wdInsertCellsShiftRight
    mixins Word$WdInsertCells {}

  declare class Word$WdInsertedTextMark {
    constructor(...args: empty): mixed;
    static +wdInsertedTextMarkBold: Class<Word$WdInsertedTextMark__wdInsertedTextMarkBold> &
      Word$WdInsertedTextMark__wdInsertedTextMarkBold &
      1; // 1
    static +wdInsertedTextMarkColorOnly: Class<Word$WdInsertedTextMark__wdInsertedTextMarkColorOnly> &
      Word$WdInsertedTextMark__wdInsertedTextMarkColorOnly &
      5; // 5
    static +wdInsertedTextMarkDoubleStrikeThrough: Class<Word$WdInsertedTextMark__wdInsertedTextMarkDoubleStrikeThrough> &
      Word$WdInsertedTextMark__wdInsertedTextMarkDoubleStrikeThrough &
      7; // 7
    static +wdInsertedTextMarkDoubleUnderline: Class<Word$WdInsertedTextMark__wdInsertedTextMarkDoubleUnderline> &
      Word$WdInsertedTextMark__wdInsertedTextMarkDoubleUnderline &
      4; // 4
    static +wdInsertedTextMarkItalic: Class<Word$WdInsertedTextMark__wdInsertedTextMarkItalic> &
      Word$WdInsertedTextMark__wdInsertedTextMarkItalic &
      2; // 2
    static +wdInsertedTextMarkNone: Class<Word$WdInsertedTextMark__wdInsertedTextMarkNone> &
      Word$WdInsertedTextMark__wdInsertedTextMarkNone &
      0; // 0
    static +wdInsertedTextMarkStrikeThrough: Class<Word$WdInsertedTextMark__wdInsertedTextMarkStrikeThrough> &
      Word$WdInsertedTextMark__wdInsertedTextMarkStrikeThrough &
      6; // 6
    static +wdInsertedTextMarkUnderline: Class<Word$WdInsertedTextMark__wdInsertedTextMarkUnderline> &
      Word$WdInsertedTextMark__wdInsertedTextMarkUnderline &
      3; // 3
  }

  declare class Word$WdInsertedTextMark__wdInsertedTextMarkBold
    mixins Word$WdInsertedTextMark {}
  declare class Word$WdInsertedTextMark__wdInsertedTextMarkColorOnly
    mixins Word$WdInsertedTextMark {}
  declare class Word$WdInsertedTextMark__wdInsertedTextMarkDoubleStrikeThrough
    mixins Word$WdInsertedTextMark {}
  declare class Word$WdInsertedTextMark__wdInsertedTextMarkDoubleUnderline
    mixins Word$WdInsertedTextMark {}
  declare class Word$WdInsertedTextMark__wdInsertedTextMarkItalic
    mixins Word$WdInsertedTextMark {}
  declare class Word$WdInsertedTextMark__wdInsertedTextMarkNone
    mixins Word$WdInsertedTextMark {}
  declare class Word$WdInsertedTextMark__wdInsertedTextMarkStrikeThrough
    mixins Word$WdInsertedTextMark {}
  declare class Word$WdInsertedTextMark__wdInsertedTextMarkUnderline
    mixins Word$WdInsertedTextMark {}

  declare class Word$WdInternationalIndex {
    constructor(...args: empty): mixed;
    static +wd24HourClock: Class<Word$WdInternationalIndex__wd24HourClock> &
      Word$WdInternationalIndex__wd24HourClock &
      21; // 21
    static +wdCurrencyCode: Class<Word$WdInternationalIndex__wdCurrencyCode> &
      Word$WdInternationalIndex__wdCurrencyCode &
      20; // 20
    static +wdDateSeparator: Class<Word$WdInternationalIndex__wdDateSeparator> &
      Word$WdInternationalIndex__wdDateSeparator &
      25; // 25
    static +wdDecimalSeparator: Class<Word$WdInternationalIndex__wdDecimalSeparator> &
      Word$WdInternationalIndex__wdDecimalSeparator &
      18; // 18
    static +wdInternationalAM: Class<Word$WdInternationalIndex__wdInternationalAM> &
      Word$WdInternationalIndex__wdInternationalAM &
      22; // 22
    static +wdInternationalPM: Class<Word$WdInternationalIndex__wdInternationalPM> &
      Word$WdInternationalIndex__wdInternationalPM &
      23; // 23
    static +wdListSeparator: Class<Word$WdInternationalIndex__wdListSeparator> &
      Word$WdInternationalIndex__wdListSeparator &
      17; // 17
    static +wdProductLanguageID: Class<Word$WdInternationalIndex__wdProductLanguageID> &
      Word$WdInternationalIndex__wdProductLanguageID &
      26; // 26
    static +wdThousandsSeparator: Class<Word$WdInternationalIndex__wdThousandsSeparator> &
      Word$WdInternationalIndex__wdThousandsSeparator &
      19; // 19
    static +wdTimeSeparator: Class<Word$WdInternationalIndex__wdTimeSeparator> &
      Word$WdInternationalIndex__wdTimeSeparator &
      24; // 24
  }

  declare class Word$WdInternationalIndex__wd24HourClock
    mixins Word$WdInternationalIndex {}
  declare class Word$WdInternationalIndex__wdCurrencyCode
    mixins Word$WdInternationalIndex {}
  declare class Word$WdInternationalIndex__wdDateSeparator
    mixins Word$WdInternationalIndex {}
  declare class Word$WdInternationalIndex__wdDecimalSeparator
    mixins Word$WdInternationalIndex {}
  declare class Word$WdInternationalIndex__wdInternationalAM
    mixins Word$WdInternationalIndex {}
  declare class Word$WdInternationalIndex__wdInternationalPM
    mixins Word$WdInternationalIndex {}
  declare class Word$WdInternationalIndex__wdListSeparator
    mixins Word$WdInternationalIndex {}
  declare class Word$WdInternationalIndex__wdProductLanguageID
    mixins Word$WdInternationalIndex {}
  declare class Word$WdInternationalIndex__wdThousandsSeparator
    mixins Word$WdInternationalIndex {}
  declare class Word$WdInternationalIndex__wdTimeSeparator
    mixins Word$WdInternationalIndex {}

  declare class Word$WdJustificationMode {
    constructor(...args: empty): mixed;
    static +wdJustificationModeCompress: Class<Word$WdJustificationMode__wdJustificationModeCompress> &
      Word$WdJustificationMode__wdJustificationModeCompress &
      1; // 1
    static +wdJustificationModeCompressKana: Class<Word$WdJustificationMode__wdJustificationModeCompressKana> &
      Word$WdJustificationMode__wdJustificationModeCompressKana &
      2; // 2
    static +wdJustificationModeExpand: Class<Word$WdJustificationMode__wdJustificationModeExpand> &
      Word$WdJustificationMode__wdJustificationModeExpand &
      0; // 0
  }

  declare class Word$WdJustificationMode__wdJustificationModeCompress
    mixins Word$WdJustificationMode {}
  declare class Word$WdJustificationMode__wdJustificationModeCompressKana
    mixins Word$WdJustificationMode {}
  declare class Word$WdJustificationMode__wdJustificationModeExpand
    mixins Word$WdJustificationMode {}

  declare class Word$WdKana {
    constructor(...args: empty): mixed;
    static +wdKanaHiragana: Class<Word$WdKana__wdKanaHiragana> &
      Word$WdKana__wdKanaHiragana &
      9; // 9
    static +wdKanaKatakana: Class<Word$WdKana__wdKanaKatakana> &
      Word$WdKana__wdKanaKatakana &
      8; // 8
  }

  declare class Word$WdKana__wdKanaHiragana mixins Word$WdKana {}
  declare class Word$WdKana__wdKanaKatakana mixins Word$WdKana {}

  declare class Word$WdKey {
    constructor(...args: empty): mixed;
    static +wdKey0: Class<Word$WdKey__wdKey0> & Word$WdKey__wdKey0 & 48; // 48
    static +wdKey1: Class<Word$WdKey__wdKey1> & Word$WdKey__wdKey1 & 49; // 49
    static +wdKey2: Class<Word$WdKey__wdKey2> & Word$WdKey__wdKey2 & 50; // 50
    static +wdKey3: Class<Word$WdKey__wdKey3> & Word$WdKey__wdKey3 & 51; // 51
    static +wdKey4: Class<Word$WdKey__wdKey4> & Word$WdKey__wdKey4 & 52; // 52
    static +wdKey5: Class<Word$WdKey__wdKey5> & Word$WdKey__wdKey5 & 53; // 53
    static +wdKey6: Class<Word$WdKey__wdKey6> & Word$WdKey__wdKey6 & 54; // 54
    static +wdKey7: Class<Word$WdKey__wdKey7> & Word$WdKey__wdKey7 & 55; // 55
    static +wdKey8: Class<Word$WdKey__wdKey8> & Word$WdKey__wdKey8 & 56; // 56
    static +wdKey9: Class<Word$WdKey__wdKey9> & Word$WdKey__wdKey9 & 57; // 57
    static +wdKeyA: Class<Word$WdKey__wdKeyA> & Word$WdKey__wdKeyA & 65; // 65
    static +wdKeyAlt: Class<Word$WdKey__wdKeyAlt> & Word$WdKey__wdKeyAlt & 1024; // 1024
    static +wdKeyB: Class<Word$WdKey__wdKeyB> & Word$WdKey__wdKeyB & 66; // 66
    static +wdKeyBackSingleQuote: Class<Word$WdKey__wdKeyBackSingleQuote> &
      Word$WdKey__wdKeyBackSingleQuote &
      192; // 192
    static +wdKeyBackSlash: Class<Word$WdKey__wdKeyBackSlash> &
      Word$WdKey__wdKeyBackSlash &
      220; // 220
    static +wdKeyBackspace: Class<Word$WdKey__wdKeyBackspace> &
      Word$WdKey__wdKeyBackspace &
      8; // 8
    static +wdKeyC: Class<Word$WdKey__wdKeyC> & Word$WdKey__wdKeyC & 67; // 67
    static +wdKeyCloseSquareBrace: Class<Word$WdKey__wdKeyCloseSquareBrace> &
      Word$WdKey__wdKeyCloseSquareBrace &
      221; // 221
    static +wdKeyComma: Class<Word$WdKey__wdKeyComma> &
      Word$WdKey__wdKeyComma &
      188; // 188
    static +wdKeyCommand: Class<Word$WdKey__wdKeyCommand> &
      Word$WdKey__wdKeyCommand &
      512; // 512
    static +wdKeyControl: Class<Word$WdKey__wdKeyControl> &
      Word$WdKey__wdKeyControl &
      512; // 512
    static +wdKeyD: Class<Word$WdKey__wdKeyD> & Word$WdKey__wdKeyD & 68; // 68
    static +wdKeyDelete: Class<Word$WdKey__wdKeyDelete> &
      Word$WdKey__wdKeyDelete &
      46; // 46
    static +wdKeyE: Class<Word$WdKey__wdKeyE> & Word$WdKey__wdKeyE & 69; // 69
    static +wdKeyEnd: Class<Word$WdKey__wdKeyEnd> & Word$WdKey__wdKeyEnd & 35; // 35
    static +wdKeyEquals: Class<Word$WdKey__wdKeyEquals> &
      Word$WdKey__wdKeyEquals &
      187; // 187
    static +wdKeyEsc: Class<Word$WdKey__wdKeyEsc> & Word$WdKey__wdKeyEsc & 27; // 27
    static +wdKeyF: Class<Word$WdKey__wdKeyF> & Word$WdKey__wdKeyF & 70; // 70
    static +wdKeyF1: Class<Word$WdKey__wdKeyF1> & Word$WdKey__wdKeyF1 & 112; // 112
    static +wdKeyF10: Class<Word$WdKey__wdKeyF10> & Word$WdKey__wdKeyF10 & 121; // 121
    static +wdKeyF11: Class<Word$WdKey__wdKeyF11> & Word$WdKey__wdKeyF11 & 122; // 122
    static +wdKeyF12: Class<Word$WdKey__wdKeyF12> & Word$WdKey__wdKeyF12 & 123; // 123
    static +wdKeyF13: Class<Word$WdKey__wdKeyF13> & Word$WdKey__wdKeyF13 & 124; // 124
    static +wdKeyF14: Class<Word$WdKey__wdKeyF14> & Word$WdKey__wdKeyF14 & 125; // 125
    static +wdKeyF15: Class<Word$WdKey__wdKeyF15> & Word$WdKey__wdKeyF15 & 126; // 126
    static +wdKeyF16: Class<Word$WdKey__wdKeyF16> & Word$WdKey__wdKeyF16 & 127; // 127
    static +wdKeyF2: Class<Word$WdKey__wdKeyF2> & Word$WdKey__wdKeyF2 & 113; // 113
    static +wdKeyF3: Class<Word$WdKey__wdKeyF3> & Word$WdKey__wdKeyF3 & 114; // 114
    static +wdKeyF4: Class<Word$WdKey__wdKeyF4> & Word$WdKey__wdKeyF4 & 115; // 115
    static +wdKeyF5: Class<Word$WdKey__wdKeyF5> & Word$WdKey__wdKeyF5 & 116; // 116
    static +wdKeyF6: Class<Word$WdKey__wdKeyF6> & Word$WdKey__wdKeyF6 & 117; // 117
    static +wdKeyF7: Class<Word$WdKey__wdKeyF7> & Word$WdKey__wdKeyF7 & 118; // 118
    static +wdKeyF8: Class<Word$WdKey__wdKeyF8> & Word$WdKey__wdKeyF8 & 119; // 119
    static +wdKeyF9: Class<Word$WdKey__wdKeyF9> & Word$WdKey__wdKeyF9 & 120; // 120
    static +wdKeyG: Class<Word$WdKey__wdKeyG> & Word$WdKey__wdKeyG & 71; // 71
    static +wdKeyH: Class<Word$WdKey__wdKeyH> & Word$WdKey__wdKeyH & 72; // 72
    static +wdKeyHome: Class<Word$WdKey__wdKeyHome> &
      Word$WdKey__wdKeyHome &
      36; // 36
    static +wdKeyHyphen: Class<Word$WdKey__wdKeyHyphen> &
      Word$WdKey__wdKeyHyphen &
      189; // 189
    static +wdKeyI: Class<Word$WdKey__wdKeyI> & Word$WdKey__wdKeyI & 73; // 73
    static +wdKeyInsert: Class<Word$WdKey__wdKeyInsert> &
      Word$WdKey__wdKeyInsert &
      45; // 45
    static +wdKeyJ: Class<Word$WdKey__wdKeyJ> & Word$WdKey__wdKeyJ & 74; // 74
    static +wdKeyK: Class<Word$WdKey__wdKeyK> & Word$WdKey__wdKeyK & 75; // 75
    static +wdKeyL: Class<Word$WdKey__wdKeyL> & Word$WdKey__wdKeyL & 76; // 76
    static +wdKeyM: Class<Word$WdKey__wdKeyM> & Word$WdKey__wdKeyM & 77; // 77
    static +wdKeyN: Class<Word$WdKey__wdKeyN> & Word$WdKey__wdKeyN & 78; // 78
    static +wdKeyNumeric0: Class<Word$WdKey__wdKeyNumeric0> &
      Word$WdKey__wdKeyNumeric0 &
      96; // 96
    static +wdKeyNumeric1: Class<Word$WdKey__wdKeyNumeric1> &
      Word$WdKey__wdKeyNumeric1 &
      97; // 97
    static +wdKeyNumeric2: Class<Word$WdKey__wdKeyNumeric2> &
      Word$WdKey__wdKeyNumeric2 &
      98; // 98
    static +wdKeyNumeric3: Class<Word$WdKey__wdKeyNumeric3> &
      Word$WdKey__wdKeyNumeric3 &
      99; // 99
    static +wdKeyNumeric4: Class<Word$WdKey__wdKeyNumeric4> &
      Word$WdKey__wdKeyNumeric4 &
      100; // 100
    static +wdKeyNumeric5: Class<Word$WdKey__wdKeyNumeric5> &
      Word$WdKey__wdKeyNumeric5 &
      101; // 101
    static +wdKeyNumeric5Special: Class<Word$WdKey__wdKeyNumeric5Special> &
      Word$WdKey__wdKeyNumeric5Special &
      12; // 12
    static +wdKeyNumeric6: Class<Word$WdKey__wdKeyNumeric6> &
      Word$WdKey__wdKeyNumeric6 &
      102; // 102
    static +wdKeyNumeric7: Class<Word$WdKey__wdKeyNumeric7> &
      Word$WdKey__wdKeyNumeric7 &
      103; // 103
    static +wdKeyNumeric8: Class<Word$WdKey__wdKeyNumeric8> &
      Word$WdKey__wdKeyNumeric8 &
      104; // 104
    static +wdKeyNumeric9: Class<Word$WdKey__wdKeyNumeric9> &
      Word$WdKey__wdKeyNumeric9 &
      105; // 105
    static +wdKeyNumericAdd: Class<Word$WdKey__wdKeyNumericAdd> &
      Word$WdKey__wdKeyNumericAdd &
      107; // 107
    static +wdKeyNumericDecimal: Class<Word$WdKey__wdKeyNumericDecimal> &
      Word$WdKey__wdKeyNumericDecimal &
      110; // 110
    static +wdKeyNumericDivide: Class<Word$WdKey__wdKeyNumericDivide> &
      Word$WdKey__wdKeyNumericDivide &
      111; // 111
    static +wdKeyNumericMultiply: Class<Word$WdKey__wdKeyNumericMultiply> &
      Word$WdKey__wdKeyNumericMultiply &
      106; // 106
    static +wdKeyNumericSubtract: Class<Word$WdKey__wdKeyNumericSubtract> &
      Word$WdKey__wdKeyNumericSubtract &
      109; // 109
    static +wdKeyO: Class<Word$WdKey__wdKeyO> & Word$WdKey__wdKeyO & 79; // 79
    static +wdKeyOpenSquareBrace: Class<Word$WdKey__wdKeyOpenSquareBrace> &
      Word$WdKey__wdKeyOpenSquareBrace &
      219; // 219
    static +wdKeyOption: Class<Word$WdKey__wdKeyOption> &
      Word$WdKey__wdKeyOption &
      1024; // 1024
    static +wdKeyP: Class<Word$WdKey__wdKeyP> & Word$WdKey__wdKeyP & 80; // 80
    static +wdKeyPageDown: Class<Word$WdKey__wdKeyPageDown> &
      Word$WdKey__wdKeyPageDown &
      34; // 34
    static +wdKeyPageUp: Class<Word$WdKey__wdKeyPageUp> &
      Word$WdKey__wdKeyPageUp &
      33; // 33
    static +wdKeyPause: Class<Word$WdKey__wdKeyPause> &
      Word$WdKey__wdKeyPause &
      19; // 19
    static +wdKeyPeriod: Class<Word$WdKey__wdKeyPeriod> &
      Word$WdKey__wdKeyPeriod &
      190; // 190
    static +wdKeyQ: Class<Word$WdKey__wdKeyQ> & Word$WdKey__wdKeyQ & 81; // 81
    static +wdKeyR: Class<Word$WdKey__wdKeyR> & Word$WdKey__wdKeyR & 82; // 82
    static +wdKeyReturn: Class<Word$WdKey__wdKeyReturn> &
      Word$WdKey__wdKeyReturn &
      13; // 13
    static +wdKeyS: Class<Word$WdKey__wdKeyS> & Word$WdKey__wdKeyS & 83; // 83
    static +wdKeyScrollLock: Class<Word$WdKey__wdKeyScrollLock> &
      Word$WdKey__wdKeyScrollLock &
      145; // 145
    static +wdKeySemiColon: Class<Word$WdKey__wdKeySemiColon> &
      Word$WdKey__wdKeySemiColon &
      186; // 186
    static +wdKeyShift: Class<Word$WdKey__wdKeyShift> &
      Word$WdKey__wdKeyShift &
      256; // 256
    static +wdKeySingleQuote: Class<Word$WdKey__wdKeySingleQuote> &
      Word$WdKey__wdKeySingleQuote &
      222; // 222
    static +wdKeySlash: Class<Word$WdKey__wdKeySlash> &
      Word$WdKey__wdKeySlash &
      191; // 191
    static +wdKeySpacebar: Class<Word$WdKey__wdKeySpacebar> &
      Word$WdKey__wdKeySpacebar &
      32; // 32
    static +wdKeyT: Class<Word$WdKey__wdKeyT> & Word$WdKey__wdKeyT & 84; // 84
    static +wdKeyTab: Class<Word$WdKey__wdKeyTab> & Word$WdKey__wdKeyTab & 9; // 9
    static +wdKeyU: Class<Word$WdKey__wdKeyU> & Word$WdKey__wdKeyU & 85; // 85
    static +wdKeyV: Class<Word$WdKey__wdKeyV> & Word$WdKey__wdKeyV & 86; // 86
    static +wdKeyW: Class<Word$WdKey__wdKeyW> & Word$WdKey__wdKeyW & 87; // 87
    static +wdKeyX: Class<Word$WdKey__wdKeyX> & Word$WdKey__wdKeyX & 88; // 88
    static +wdKeyY: Class<Word$WdKey__wdKeyY> & Word$WdKey__wdKeyY & 89; // 89
    static +wdKeyZ: Class<Word$WdKey__wdKeyZ> & Word$WdKey__wdKeyZ & 90; // 90
    static +wdNoKey: Class<Word$WdKey__wdNoKey> & Word$WdKey__wdNoKey & 255; // 255
  }

  declare class Word$WdKey__wdKey0 mixins Word$WdKey {}
  declare class Word$WdKey__wdKey1 mixins Word$WdKey {}
  declare class Word$WdKey__wdKey2 mixins Word$WdKey {}
  declare class Word$WdKey__wdKey3 mixins Word$WdKey {}
  declare class Word$WdKey__wdKey4 mixins Word$WdKey {}
  declare class Word$WdKey__wdKey5 mixins Word$WdKey {}
  declare class Word$WdKey__wdKey6 mixins Word$WdKey {}
  declare class Word$WdKey__wdKey7 mixins Word$WdKey {}
  declare class Word$WdKey__wdKey8 mixins Word$WdKey {}
  declare class Word$WdKey__wdKey9 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyA mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyAlt mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyB mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyBackSingleQuote mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyBackSlash mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyBackspace mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyC mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyCloseSquareBrace mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyComma mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyCommand mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyControl mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyD mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyDelete mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyE mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyEnd mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyEquals mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyEsc mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyF mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyF1 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyF10 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyF11 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyF12 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyF13 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyF14 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyF15 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyF16 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyF2 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyF3 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyF4 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyF5 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyF6 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyF7 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyF8 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyF9 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyG mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyH mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyHome mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyHyphen mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyI mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyInsert mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyJ mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyK mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyL mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyM mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyN mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyNumeric0 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyNumeric1 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyNumeric2 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyNumeric3 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyNumeric4 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyNumeric5 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyNumeric5Special mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyNumeric6 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyNumeric7 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyNumeric8 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyNumeric9 mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyNumericAdd mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyNumericDecimal mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyNumericDivide mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyNumericMultiply mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyNumericSubtract mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyO mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyOpenSquareBrace mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyOption mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyP mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyPageDown mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyPageUp mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyPause mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyPeriod mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyQ mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyR mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyReturn mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyS mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyScrollLock mixins Word$WdKey {}
  declare class Word$WdKey__wdKeySemiColon mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyShift mixins Word$WdKey {}
  declare class Word$WdKey__wdKeySingleQuote mixins Word$WdKey {}
  declare class Word$WdKey__wdKeySlash mixins Word$WdKey {}
  declare class Word$WdKey__wdKeySpacebar mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyT mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyTab mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyU mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyV mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyW mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyX mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyY mixins Word$WdKey {}
  declare class Word$WdKey__wdKeyZ mixins Word$WdKey {}
  declare class Word$WdKey__wdNoKey mixins Word$WdKey {}

  declare class Word$WdKeyCategory {
    constructor(...args: empty): mixed;
    static +wdKeyCategoryAutoText: Class<Word$WdKeyCategory__wdKeyCategoryAutoText> &
      Word$WdKeyCategory__wdKeyCategoryAutoText &
      4; // 4
    static +wdKeyCategoryCommand: Class<Word$WdKeyCategory__wdKeyCategoryCommand> &
      Word$WdKeyCategory__wdKeyCategoryCommand &
      1; // 1
    static +wdKeyCategoryDisable: Class<Word$WdKeyCategory__wdKeyCategoryDisable> &
      Word$WdKeyCategory__wdKeyCategoryDisable &
      0; // 0
    static +wdKeyCategoryFont: Class<Word$WdKeyCategory__wdKeyCategoryFont> &
      Word$WdKeyCategory__wdKeyCategoryFont &
      3; // 3
    static +wdKeyCategoryMacro: Class<Word$WdKeyCategory__wdKeyCategoryMacro> &
      Word$WdKeyCategory__wdKeyCategoryMacro &
      2; // 2
    static +wdKeyCategoryNil: Class<Word$WdKeyCategory__wdKeyCategoryNil> &
      Word$WdKeyCategory__wdKeyCategoryNil &
      -1; // -1
    static +wdKeyCategoryPrefix: Class<Word$WdKeyCategory__wdKeyCategoryPrefix> &
      Word$WdKeyCategory__wdKeyCategoryPrefix &
      7; // 7
    static +wdKeyCategoryStyle: Class<Word$WdKeyCategory__wdKeyCategoryStyle> &
      Word$WdKeyCategory__wdKeyCategoryStyle &
      5; // 5
    static +wdKeyCategorySymbol: Class<Word$WdKeyCategory__wdKeyCategorySymbol> &
      Word$WdKeyCategory__wdKeyCategorySymbol &
      6; // 6
  }

  declare class Word$WdKeyCategory__wdKeyCategoryAutoText
    mixins Word$WdKeyCategory {}
  declare class Word$WdKeyCategory__wdKeyCategoryCommand
    mixins Word$WdKeyCategory {}
  declare class Word$WdKeyCategory__wdKeyCategoryDisable
    mixins Word$WdKeyCategory {}
  declare class Word$WdKeyCategory__wdKeyCategoryFont
    mixins Word$WdKeyCategory {}
  declare class Word$WdKeyCategory__wdKeyCategoryMacro
    mixins Word$WdKeyCategory {}
  declare class Word$WdKeyCategory__wdKeyCategoryNil
    mixins Word$WdKeyCategory {}
  declare class Word$WdKeyCategory__wdKeyCategoryPrefix
    mixins Word$WdKeyCategory {}
  declare class Word$WdKeyCategory__wdKeyCategoryStyle
    mixins Word$WdKeyCategory {}
  declare class Word$WdKeyCategory__wdKeyCategorySymbol
    mixins Word$WdKeyCategory {}

  declare class Word$WdLanguageID {
    constructor(...args: empty): mixed;
    static +wdAfrikaans: Class<Word$WdLanguageID__wdAfrikaans> &
      Word$WdLanguageID__wdAfrikaans &
      1078; // 1078
    static +wdAlbanian: Class<Word$WdLanguageID__wdAlbanian> &
      Word$WdLanguageID__wdAlbanian &
      1052; // 1052
    static +wdAmharic: Class<Word$WdLanguageID__wdAmharic> &
      Word$WdLanguageID__wdAmharic &
      1118; // 1118
    static +wdArabic: Class<Word$WdLanguageID__wdArabic> &
      Word$WdLanguageID__wdArabic &
      1025; // 1025
    static +wdArabicAlgeria: Class<Word$WdLanguageID__wdArabicAlgeria> &
      Word$WdLanguageID__wdArabicAlgeria &
      5121; // 5121
    static +wdArabicBahrain: Class<Word$WdLanguageID__wdArabicBahrain> &
      Word$WdLanguageID__wdArabicBahrain &
      15361; // 15361
    static +wdArabicEgypt: Class<Word$WdLanguageID__wdArabicEgypt> &
      Word$WdLanguageID__wdArabicEgypt &
      3073; // 3073
    static +wdArabicIraq: Class<Word$WdLanguageID__wdArabicIraq> &
      Word$WdLanguageID__wdArabicIraq &
      2049; // 2049
    static +wdArabicJordan: Class<Word$WdLanguageID__wdArabicJordan> &
      Word$WdLanguageID__wdArabicJordan &
      11265; // 11265
    static +wdArabicKuwait: Class<Word$WdLanguageID__wdArabicKuwait> &
      Word$WdLanguageID__wdArabicKuwait &
      13313; // 13313
    static +wdArabicLebanon: Class<Word$WdLanguageID__wdArabicLebanon> &
      Word$WdLanguageID__wdArabicLebanon &
      12289; // 12289
    static +wdArabicLibya: Class<Word$WdLanguageID__wdArabicLibya> &
      Word$WdLanguageID__wdArabicLibya &
      4097; // 4097
    static +wdArabicMorocco: Class<Word$WdLanguageID__wdArabicMorocco> &
      Word$WdLanguageID__wdArabicMorocco &
      6145; // 6145
    static +wdArabicOman: Class<Word$WdLanguageID__wdArabicOman> &
      Word$WdLanguageID__wdArabicOman &
      8193; // 8193
    static +wdArabicQatar: Class<Word$WdLanguageID__wdArabicQatar> &
      Word$WdLanguageID__wdArabicQatar &
      16385; // 16385
    static +wdArabicSyria: Class<Word$WdLanguageID__wdArabicSyria> &
      Word$WdLanguageID__wdArabicSyria &
      10241; // 10241
    static +wdArabicTunisia: Class<Word$WdLanguageID__wdArabicTunisia> &
      Word$WdLanguageID__wdArabicTunisia &
      7169; // 7169
    static +wdArabicUAE: Class<Word$WdLanguageID__wdArabicUAE> &
      Word$WdLanguageID__wdArabicUAE &
      14337; // 14337
    static +wdArabicYemen: Class<Word$WdLanguageID__wdArabicYemen> &
      Word$WdLanguageID__wdArabicYemen &
      9217; // 9217
    static +wdArmenian: Class<Word$WdLanguageID__wdArmenian> &
      Word$WdLanguageID__wdArmenian &
      1067; // 1067
    static +wdAssamese: Class<Word$WdLanguageID__wdAssamese> &
      Word$WdLanguageID__wdAssamese &
      1101; // 1101
    static +wdAzeriCyrillic: Class<Word$WdLanguageID__wdAzeriCyrillic> &
      Word$WdLanguageID__wdAzeriCyrillic &
      2092; // 2092
    static +wdAzeriLatin: Class<Word$WdLanguageID__wdAzeriLatin> &
      Word$WdLanguageID__wdAzeriLatin &
      1068; // 1068
    static +wdBasque: Class<Word$WdLanguageID__wdBasque> &
      Word$WdLanguageID__wdBasque &
      1069; // 1069
    static +wdBelgianDutch: Class<Word$WdLanguageID__wdBelgianDutch> &
      Word$WdLanguageID__wdBelgianDutch &
      2067; // 2067
    static +wdBelgianFrench: Class<Word$WdLanguageID__wdBelgianFrench> &
      Word$WdLanguageID__wdBelgianFrench &
      2060; // 2060
    static +wdBengali: Class<Word$WdLanguageID__wdBengali> &
      Word$WdLanguageID__wdBengali &
      1093; // 1093
    static +wdBulgarian: Class<Word$WdLanguageID__wdBulgarian> &
      Word$WdLanguageID__wdBulgarian &
      1026; // 1026
    static +wdBurmese: Class<Word$WdLanguageID__wdBurmese> &
      Word$WdLanguageID__wdBurmese &
      1109; // 1109
    static +wdByelorussian: Class<Word$WdLanguageID__wdByelorussian> &
      Word$WdLanguageID__wdByelorussian &
      1059; // 1059
    static +wdCatalan: Class<Word$WdLanguageID__wdCatalan> &
      Word$WdLanguageID__wdCatalan &
      1027; // 1027
    static +wdCherokee: Class<Word$WdLanguageID__wdCherokee> &
      Word$WdLanguageID__wdCherokee &
      1116; // 1116
    static +wdChineseHongKongSAR: Class<Word$WdLanguageID__wdChineseHongKongSAR> &
      Word$WdLanguageID__wdChineseHongKongSAR &
      3076; // 3076
    static +wdChineseMacaoSAR: Class<Word$WdLanguageID__wdChineseMacaoSAR> &
      Word$WdLanguageID__wdChineseMacaoSAR &
      5124; // 5124
    static +wdChineseSingapore: Class<Word$WdLanguageID__wdChineseSingapore> &
      Word$WdLanguageID__wdChineseSingapore &
      4100; // 4100
    static +wdCroatian: Class<Word$WdLanguageID__wdCroatian> &
      Word$WdLanguageID__wdCroatian &
      1050; // 1050
    static +wdCzech: Class<Word$WdLanguageID__wdCzech> &
      Word$WdLanguageID__wdCzech &
      1029; // 1029
    static +wdDanish: Class<Word$WdLanguageID__wdDanish> &
      Word$WdLanguageID__wdDanish &
      1030; // 1030
    static +wdDivehi: Class<Word$WdLanguageID__wdDivehi> &
      Word$WdLanguageID__wdDivehi &
      1125; // 1125
    static +wdDutch: Class<Word$WdLanguageID__wdDutch> &
      Word$WdLanguageID__wdDutch &
      1043; // 1043
    static +wdEdo: Class<Word$WdLanguageID__wdEdo> &
      Word$WdLanguageID__wdEdo &
      1126; // 1126
    static +wdEnglishAUS: Class<Word$WdLanguageID__wdEnglishAUS> &
      Word$WdLanguageID__wdEnglishAUS &
      3081; // 3081
    static +wdEnglishBelize: Class<Word$WdLanguageID__wdEnglishBelize> &
      Word$WdLanguageID__wdEnglishBelize &
      10249; // 10249
    static +wdEnglishCanadian: Class<Word$WdLanguageID__wdEnglishCanadian> &
      Word$WdLanguageID__wdEnglishCanadian &
      4105; // 4105
    static +wdEnglishCaribbean: Class<Word$WdLanguageID__wdEnglishCaribbean> &
      Word$WdLanguageID__wdEnglishCaribbean &
      9225; // 9225
    static +wdEnglishIndonesia: Class<Word$WdLanguageID__wdEnglishIndonesia> &
      Word$WdLanguageID__wdEnglishIndonesia &
      14345; // 14345
    static +wdEnglishIreland: Class<Word$WdLanguageID__wdEnglishIreland> &
      Word$WdLanguageID__wdEnglishIreland &
      6153; // 6153
    static +wdEnglishJamaica: Class<Word$WdLanguageID__wdEnglishJamaica> &
      Word$WdLanguageID__wdEnglishJamaica &
      8201; // 8201
    static +wdEnglishNewZealand: Class<Word$WdLanguageID__wdEnglishNewZealand> &
      Word$WdLanguageID__wdEnglishNewZealand &
      5129; // 5129
    static +wdEnglishPhilippines: Class<Word$WdLanguageID__wdEnglishPhilippines> &
      Word$WdLanguageID__wdEnglishPhilippines &
      13321; // 13321
    static +wdEnglishSouthAfrica: Class<Word$WdLanguageID__wdEnglishSouthAfrica> &
      Word$WdLanguageID__wdEnglishSouthAfrica &
      7177; // 7177
    static +wdEnglishTrinidadTobago: Class<Word$WdLanguageID__wdEnglishTrinidadTobago> &
      Word$WdLanguageID__wdEnglishTrinidadTobago &
      11273; // 11273
    static +wdEnglishUK: Class<Word$WdLanguageID__wdEnglishUK> &
      Word$WdLanguageID__wdEnglishUK &
      2057; // 2057
    static +wdEnglishUS: Class<Word$WdLanguageID__wdEnglishUS> &
      Word$WdLanguageID__wdEnglishUS &
      1033; // 1033
    static +wdEnglishZimbabwe: Class<Word$WdLanguageID__wdEnglishZimbabwe> &
      Word$WdLanguageID__wdEnglishZimbabwe &
      12297; // 12297
    static +wdEstonian: Class<Word$WdLanguageID__wdEstonian> &
      Word$WdLanguageID__wdEstonian &
      1061; // 1061
    static +wdFaeroese: Class<Word$WdLanguageID__wdFaeroese> &
      Word$WdLanguageID__wdFaeroese &
      1080; // 1080
    static +wdFilipino: Class<Word$WdLanguageID__wdFilipino> &
      Word$WdLanguageID__wdFilipino &
      1124; // 1124
    static +wdFinnish: Class<Word$WdLanguageID__wdFinnish> &
      Word$WdLanguageID__wdFinnish &
      1035; // 1035
    static +wdFrench: Class<Word$WdLanguageID__wdFrench> &
      Word$WdLanguageID__wdFrench &
      1036; // 1036
    static +wdFrenchCameroon: Class<Word$WdLanguageID__wdFrenchCameroon> &
      Word$WdLanguageID__wdFrenchCameroon &
      11276; // 11276
    static +wdFrenchCanadian: Class<Word$WdLanguageID__wdFrenchCanadian> &
      Word$WdLanguageID__wdFrenchCanadian &
      3084; // 3084
    static +wdFrenchCongoDRC: Class<Word$WdLanguageID__wdFrenchCongoDRC> &
      Word$WdLanguageID__wdFrenchCongoDRC &
      9228; // 9228
    static +wdFrenchCotedIvoire: Class<Word$WdLanguageID__wdFrenchCotedIvoire> &
      Word$WdLanguageID__wdFrenchCotedIvoire &
      12300; // 12300
    static +wdFrenchHaiti: Class<Word$WdLanguageID__wdFrenchHaiti> &
      Word$WdLanguageID__wdFrenchHaiti &
      15372; // 15372
    static +wdFrenchLuxembourg: Class<Word$WdLanguageID__wdFrenchLuxembourg> &
      Word$WdLanguageID__wdFrenchLuxembourg &
      5132; // 5132
    static +wdFrenchMali: Class<Word$WdLanguageID__wdFrenchMali> &
      Word$WdLanguageID__wdFrenchMali &
      13324; // 13324
    static +wdFrenchMonaco: Class<Word$WdLanguageID__wdFrenchMonaco> &
      Word$WdLanguageID__wdFrenchMonaco &
      6156; // 6156
    static +wdFrenchMorocco: Class<Word$WdLanguageID__wdFrenchMorocco> &
      Word$WdLanguageID__wdFrenchMorocco &
      14348; // 14348
    static +wdFrenchReunion: Class<Word$WdLanguageID__wdFrenchReunion> &
      Word$WdLanguageID__wdFrenchReunion &
      8204; // 8204
    static +wdFrenchSenegal: Class<Word$WdLanguageID__wdFrenchSenegal> &
      Word$WdLanguageID__wdFrenchSenegal &
      10252; // 10252
    static +wdFrenchWestIndies: Class<Word$WdLanguageID__wdFrenchWestIndies> &
      Word$WdLanguageID__wdFrenchWestIndies &
      7180; // 7180
    static +wdFrisianNetherlands: Class<Word$WdLanguageID__wdFrisianNetherlands> &
      Word$WdLanguageID__wdFrisianNetherlands &
      1122; // 1122
    static +wdFulfulde: Class<Word$WdLanguageID__wdFulfulde> &
      Word$WdLanguageID__wdFulfulde &
      1127; // 1127
    static +wdGaelicIreland: Class<Word$WdLanguageID__wdGaelicIreland> &
      Word$WdLanguageID__wdGaelicIreland &
      2108; // 2108
    static +wdGaelicScotland: Class<Word$WdLanguageID__wdGaelicScotland> &
      Word$WdLanguageID__wdGaelicScotland &
      1084; // 1084
    static +wdGalician: Class<Word$WdLanguageID__wdGalician> &
      Word$WdLanguageID__wdGalician &
      1110; // 1110
    static +wdGeorgian: Class<Word$WdLanguageID__wdGeorgian> &
      Word$WdLanguageID__wdGeorgian &
      1079; // 1079
    static +wdGerman: Class<Word$WdLanguageID__wdGerman> &
      Word$WdLanguageID__wdGerman &
      1031; // 1031
    static +wdGermanAustria: Class<Word$WdLanguageID__wdGermanAustria> &
      Word$WdLanguageID__wdGermanAustria &
      3079; // 3079
    static +wdGermanLiechtenstein: Class<Word$WdLanguageID__wdGermanLiechtenstein> &
      Word$WdLanguageID__wdGermanLiechtenstein &
      5127; // 5127
    static +wdGermanLuxembourg: Class<Word$WdLanguageID__wdGermanLuxembourg> &
      Word$WdLanguageID__wdGermanLuxembourg &
      4103; // 4103
    static +wdGreek: Class<Word$WdLanguageID__wdGreek> &
      Word$WdLanguageID__wdGreek &
      1032; // 1032
    static +wdGuarani: Class<Word$WdLanguageID__wdGuarani> &
      Word$WdLanguageID__wdGuarani &
      1140; // 1140
    static +wdGujarati: Class<Word$WdLanguageID__wdGujarati> &
      Word$WdLanguageID__wdGujarati &
      1095; // 1095
    static +wdHausa: Class<Word$WdLanguageID__wdHausa> &
      Word$WdLanguageID__wdHausa &
      1128; // 1128
    static +wdHawaiian: Class<Word$WdLanguageID__wdHawaiian> &
      Word$WdLanguageID__wdHawaiian &
      1141; // 1141
    static +wdHebrew: Class<Word$WdLanguageID__wdHebrew> &
      Word$WdLanguageID__wdHebrew &
      1037; // 1037
    static +wdHindi: Class<Word$WdLanguageID__wdHindi> &
      Word$WdLanguageID__wdHindi &
      1081; // 1081
    static +wdHungarian: Class<Word$WdLanguageID__wdHungarian> &
      Word$WdLanguageID__wdHungarian &
      1038; // 1038
    static +wdIbibio: Class<Word$WdLanguageID__wdIbibio> &
      Word$WdLanguageID__wdIbibio &
      1129; // 1129
    static +wdIcelandic: Class<Word$WdLanguageID__wdIcelandic> &
      Word$WdLanguageID__wdIcelandic &
      1039; // 1039
    static +wdIgbo: Class<Word$WdLanguageID__wdIgbo> &
      Word$WdLanguageID__wdIgbo &
      1136; // 1136
    static +wdIndonesian: Class<Word$WdLanguageID__wdIndonesian> &
      Word$WdLanguageID__wdIndonesian &
      1057; // 1057
    static +wdInuktitut: Class<Word$WdLanguageID__wdInuktitut> &
      Word$WdLanguageID__wdInuktitut &
      1117; // 1117
    static +wdItalian: Class<Word$WdLanguageID__wdItalian> &
      Word$WdLanguageID__wdItalian &
      1040; // 1040
    static +wdJapanese: Class<Word$WdLanguageID__wdJapanese> &
      Word$WdLanguageID__wdJapanese &
      1041; // 1041
    static +wdKannada: Class<Word$WdLanguageID__wdKannada> &
      Word$WdLanguageID__wdKannada &
      1099; // 1099
    static +wdKanuri: Class<Word$WdLanguageID__wdKanuri> &
      Word$WdLanguageID__wdKanuri &
      1137; // 1137
    static +wdKashmiri: Class<Word$WdLanguageID__wdKashmiri> &
      Word$WdLanguageID__wdKashmiri &
      1120; // 1120
    static +wdKazakh: Class<Word$WdLanguageID__wdKazakh> &
      Word$WdLanguageID__wdKazakh &
      1087; // 1087
    static +wdKhmer: Class<Word$WdLanguageID__wdKhmer> &
      Word$WdLanguageID__wdKhmer &
      1107; // 1107
    static +wdKirghiz: Class<Word$WdLanguageID__wdKirghiz> &
      Word$WdLanguageID__wdKirghiz &
      1088; // 1088
    static +wdKonkani: Class<Word$WdLanguageID__wdKonkani> &
      Word$WdLanguageID__wdKonkani &
      1111; // 1111
    static +wdKorean: Class<Word$WdLanguageID__wdKorean> &
      Word$WdLanguageID__wdKorean &
      1042; // 1042
    static +wdKyrgyz: Class<Word$WdLanguageID__wdKyrgyz> &
      Word$WdLanguageID__wdKyrgyz &
      1088; // 1088
    static +wdLanguageNone: Class<Word$WdLanguageID__wdLanguageNone> &
      Word$WdLanguageID__wdLanguageNone &
      0; // 0
    static +wdLao: Class<Word$WdLanguageID__wdLao> &
      Word$WdLanguageID__wdLao &
      1108; // 1108
    static +wdLatin: Class<Word$WdLanguageID__wdLatin> &
      Word$WdLanguageID__wdLatin &
      1142; // 1142
    static +wdLatvian: Class<Word$WdLanguageID__wdLatvian> &
      Word$WdLanguageID__wdLatvian &
      1062; // 1062
    static +wdLithuanian: Class<Word$WdLanguageID__wdLithuanian> &
      Word$WdLanguageID__wdLithuanian &
      1063; // 1063
    static +wdMacedonianFYROM: Class<Word$WdLanguageID__wdMacedonianFYROM> &
      Word$WdLanguageID__wdMacedonianFYROM &
      1071; // 1071
    static +wdMalayalam: Class<Word$WdLanguageID__wdMalayalam> &
      Word$WdLanguageID__wdMalayalam &
      1100; // 1100
    static +wdMalayBruneiDarussalam: Class<Word$WdLanguageID__wdMalayBruneiDarussalam> &
      Word$WdLanguageID__wdMalayBruneiDarussalam &
      2110; // 2110
    static +wdMalaysian: Class<Word$WdLanguageID__wdMalaysian> &
      Word$WdLanguageID__wdMalaysian &
      1086; // 1086
    static +wdMaltese: Class<Word$WdLanguageID__wdMaltese> &
      Word$WdLanguageID__wdMaltese &
      1082; // 1082
    static +wdManipuri: Class<Word$WdLanguageID__wdManipuri> &
      Word$WdLanguageID__wdManipuri &
      1112; // 1112
    static +wdMarathi: Class<Word$WdLanguageID__wdMarathi> &
      Word$WdLanguageID__wdMarathi &
      1102; // 1102
    static +wdMexicanSpanish: Class<Word$WdLanguageID__wdMexicanSpanish> &
      Word$WdLanguageID__wdMexicanSpanish &
      2058; // 2058
    static +wdMongolian: Class<Word$WdLanguageID__wdMongolian> &
      Word$WdLanguageID__wdMongolian &
      1104; // 1104
    static +wdNepali: Class<Word$WdLanguageID__wdNepali> &
      Word$WdLanguageID__wdNepali &
      1121; // 1121
    static +wdNoProofing: Class<Word$WdLanguageID__wdNoProofing> &
      Word$WdLanguageID__wdNoProofing &
      1024; // 1024
    static +wdNorwegianBokmol: Class<Word$WdLanguageID__wdNorwegianBokmol> &
      Word$WdLanguageID__wdNorwegianBokmol &
      1044; // 1044
    static +wdNorwegianNynorsk: Class<Word$WdLanguageID__wdNorwegianNynorsk> &
      Word$WdLanguageID__wdNorwegianNynorsk &
      2068; // 2068
    static +wdOriya: Class<Word$WdLanguageID__wdOriya> &
      Word$WdLanguageID__wdOriya &
      1096; // 1096
    static +wdOromo: Class<Word$WdLanguageID__wdOromo> &
      Word$WdLanguageID__wdOromo &
      1138; // 1138
    static +wdPashto: Class<Word$WdLanguageID__wdPashto> &
      Word$WdLanguageID__wdPashto &
      1123; // 1123
    static +wdPersian: Class<Word$WdLanguageID__wdPersian> &
      Word$WdLanguageID__wdPersian &
      1065; // 1065
    static +wdPolish: Class<Word$WdLanguageID__wdPolish> &
      Word$WdLanguageID__wdPolish &
      1045; // 1045
    static +wdPortuguese: Class<Word$WdLanguageID__wdPortuguese> &
      Word$WdLanguageID__wdPortuguese &
      2070; // 2070
    static +wdPortugueseBrazil: Class<Word$WdLanguageID__wdPortugueseBrazil> &
      Word$WdLanguageID__wdPortugueseBrazil &
      1046; // 1046
    static +wdPunjabi: Class<Word$WdLanguageID__wdPunjabi> &
      Word$WdLanguageID__wdPunjabi &
      1094; // 1094
    static +wdRhaetoRomanic: Class<Word$WdLanguageID__wdRhaetoRomanic> &
      Word$WdLanguageID__wdRhaetoRomanic &
      1047; // 1047
    static +wdRomanian: Class<Word$WdLanguageID__wdRomanian> &
      Word$WdLanguageID__wdRomanian &
      1048; // 1048
    static +wdRomanianMoldova: Class<Word$WdLanguageID__wdRomanianMoldova> &
      Word$WdLanguageID__wdRomanianMoldova &
      2072; // 2072
    static +wdRussian: Class<Word$WdLanguageID__wdRussian> &
      Word$WdLanguageID__wdRussian &
      1049; // 1049
    static +wdRussianMoldova: Class<Word$WdLanguageID__wdRussianMoldova> &
      Word$WdLanguageID__wdRussianMoldova &
      2073; // 2073
    static +wdSamiLappish: Class<Word$WdLanguageID__wdSamiLappish> &
      Word$WdLanguageID__wdSamiLappish &
      1083; // 1083
    static +wdSanskrit: Class<Word$WdLanguageID__wdSanskrit> &
      Word$WdLanguageID__wdSanskrit &
      1103; // 1103
    static +wdSerbianCyrillic: Class<Word$WdLanguageID__wdSerbianCyrillic> &
      Word$WdLanguageID__wdSerbianCyrillic &
      3098; // 3098
    static +wdSerbianLatin: Class<Word$WdLanguageID__wdSerbianLatin> &
      Word$WdLanguageID__wdSerbianLatin &
      2074; // 2074
    static +wdSesotho: Class<Word$WdLanguageID__wdSesotho> &
      Word$WdLanguageID__wdSesotho &
      1072; // 1072
    static +wdSimplifiedChinese: Class<Word$WdLanguageID__wdSimplifiedChinese> &
      Word$WdLanguageID__wdSimplifiedChinese &
      2052; // 2052
    static +wdSindhi: Class<Word$WdLanguageID__wdSindhi> &
      Word$WdLanguageID__wdSindhi &
      1113; // 1113
    static +wdSindhiPakistan: Class<Word$WdLanguageID__wdSindhiPakistan> &
      Word$WdLanguageID__wdSindhiPakistan &
      2137; // 2137
    static +wdSinhalese: Class<Word$WdLanguageID__wdSinhalese> &
      Word$WdLanguageID__wdSinhalese &
      1115; // 1115
    static +wdSlovak: Class<Word$WdLanguageID__wdSlovak> &
      Word$WdLanguageID__wdSlovak &
      1051; // 1051
    static +wdSlovenian: Class<Word$WdLanguageID__wdSlovenian> &
      Word$WdLanguageID__wdSlovenian &
      1060; // 1060
    static +wdSomali: Class<Word$WdLanguageID__wdSomali> &
      Word$WdLanguageID__wdSomali &
      1143; // 1143
    static +wdSorbian: Class<Word$WdLanguageID__wdSorbian> &
      Word$WdLanguageID__wdSorbian &
      1070; // 1070
    static +wdSpanish: Class<Word$WdLanguageID__wdSpanish> &
      Word$WdLanguageID__wdSpanish &
      1034; // 1034
    static +wdSpanishArgentina: Class<Word$WdLanguageID__wdSpanishArgentina> &
      Word$WdLanguageID__wdSpanishArgentina &
      11274; // 11274
    static +wdSpanishBolivia: Class<Word$WdLanguageID__wdSpanishBolivia> &
      Word$WdLanguageID__wdSpanishBolivia &
      16394; // 16394
    static +wdSpanishChile: Class<Word$WdLanguageID__wdSpanishChile> &
      Word$WdLanguageID__wdSpanishChile &
      13322; // 13322
    static +wdSpanishColombia: Class<Word$WdLanguageID__wdSpanishColombia> &
      Word$WdLanguageID__wdSpanishColombia &
      9226; // 9226
    static +wdSpanishCostaRica: Class<Word$WdLanguageID__wdSpanishCostaRica> &
      Word$WdLanguageID__wdSpanishCostaRica &
      5130; // 5130
    static +wdSpanishDominicanRepublic: Class<Word$WdLanguageID__wdSpanishDominicanRepublic> &
      Word$WdLanguageID__wdSpanishDominicanRepublic &
      7178; // 7178
    static +wdSpanishEcuador: Class<Word$WdLanguageID__wdSpanishEcuador> &
      Word$WdLanguageID__wdSpanishEcuador &
      12298; // 12298
    static +wdSpanishElSalvador: Class<Word$WdLanguageID__wdSpanishElSalvador> &
      Word$WdLanguageID__wdSpanishElSalvador &
      17418; // 17418
    static +wdSpanishGuatemala: Class<Word$WdLanguageID__wdSpanishGuatemala> &
      Word$WdLanguageID__wdSpanishGuatemala &
      4106; // 4106
    static +wdSpanishHonduras: Class<Word$WdLanguageID__wdSpanishHonduras> &
      Word$WdLanguageID__wdSpanishHonduras &
      18442; // 18442
    static +wdSpanishModernSort: Class<Word$WdLanguageID__wdSpanishModernSort> &
      Word$WdLanguageID__wdSpanishModernSort &
      3082; // 3082
    static +wdSpanishNicaragua: Class<Word$WdLanguageID__wdSpanishNicaragua> &
      Word$WdLanguageID__wdSpanishNicaragua &
      19466; // 19466
    static +wdSpanishPanama: Class<Word$WdLanguageID__wdSpanishPanama> &
      Word$WdLanguageID__wdSpanishPanama &
      6154; // 6154
    static +wdSpanishParaguay: Class<Word$WdLanguageID__wdSpanishParaguay> &
      Word$WdLanguageID__wdSpanishParaguay &
      15370; // 15370
    static +wdSpanishPeru: Class<Word$WdLanguageID__wdSpanishPeru> &
      Word$WdLanguageID__wdSpanishPeru &
      10250; // 10250
    static +wdSpanishPuertoRico: Class<Word$WdLanguageID__wdSpanishPuertoRico> &
      Word$WdLanguageID__wdSpanishPuertoRico &
      20490; // 20490
    static +wdSpanishUruguay: Class<Word$WdLanguageID__wdSpanishUruguay> &
      Word$WdLanguageID__wdSpanishUruguay &
      14346; // 14346
    static +wdSpanishVenezuela: Class<Word$WdLanguageID__wdSpanishVenezuela> &
      Word$WdLanguageID__wdSpanishVenezuela &
      8202; // 8202
    static +wdSutu: Class<Word$WdLanguageID__wdSutu> &
      Word$WdLanguageID__wdSutu &
      1072; // 1072
    static +wdSwahili: Class<Word$WdLanguageID__wdSwahili> &
      Word$WdLanguageID__wdSwahili &
      1089; // 1089
    static +wdSwedish: Class<Word$WdLanguageID__wdSwedish> &
      Word$WdLanguageID__wdSwedish &
      1053; // 1053
    static +wdSwedishFinland: Class<Word$WdLanguageID__wdSwedishFinland> &
      Word$WdLanguageID__wdSwedishFinland &
      2077; // 2077
    static +wdSwissFrench: Class<Word$WdLanguageID__wdSwissFrench> &
      Word$WdLanguageID__wdSwissFrench &
      4108; // 4108
    static +wdSwissGerman: Class<Word$WdLanguageID__wdSwissGerman> &
      Word$WdLanguageID__wdSwissGerman &
      2055; // 2055
    static +wdSwissItalian: Class<Word$WdLanguageID__wdSwissItalian> &
      Word$WdLanguageID__wdSwissItalian &
      2064; // 2064
    static +wdSyriac: Class<Word$WdLanguageID__wdSyriac> &
      Word$WdLanguageID__wdSyriac &
      1114; // 1114
    static +wdTajik: Class<Word$WdLanguageID__wdTajik> &
      Word$WdLanguageID__wdTajik &
      1064; // 1064
    static +wdTamazight: Class<Word$WdLanguageID__wdTamazight> &
      Word$WdLanguageID__wdTamazight &
      1119; // 1119
    static +wdTamazightLatin: Class<Word$WdLanguageID__wdTamazightLatin> &
      Word$WdLanguageID__wdTamazightLatin &
      2143; // 2143
    static +wdTamil: Class<Word$WdLanguageID__wdTamil> &
      Word$WdLanguageID__wdTamil &
      1097; // 1097
    static +wdTatar: Class<Word$WdLanguageID__wdTatar> &
      Word$WdLanguageID__wdTatar &
      1092; // 1092
    static +wdTelugu: Class<Word$WdLanguageID__wdTelugu> &
      Word$WdLanguageID__wdTelugu &
      1098; // 1098
    static +wdThai: Class<Word$WdLanguageID__wdThai> &
      Word$WdLanguageID__wdThai &
      1054; // 1054
    static +wdTibetan: Class<Word$WdLanguageID__wdTibetan> &
      Word$WdLanguageID__wdTibetan &
      1105; // 1105
    static +wdTigrignaEritrea: Class<Word$WdLanguageID__wdTigrignaEritrea> &
      Word$WdLanguageID__wdTigrignaEritrea &
      2163; // 2163
    static +wdTigrignaEthiopic: Class<Word$WdLanguageID__wdTigrignaEthiopic> &
      Word$WdLanguageID__wdTigrignaEthiopic &
      1139; // 1139
    static +wdTraditionalChinese: Class<Word$WdLanguageID__wdTraditionalChinese> &
      Word$WdLanguageID__wdTraditionalChinese &
      1028; // 1028
    static +wdTsonga: Class<Word$WdLanguageID__wdTsonga> &
      Word$WdLanguageID__wdTsonga &
      1073; // 1073
    static +wdTswana: Class<Word$WdLanguageID__wdTswana> &
      Word$WdLanguageID__wdTswana &
      1074; // 1074
    static +wdTurkish: Class<Word$WdLanguageID__wdTurkish> &
      Word$WdLanguageID__wdTurkish &
      1055; // 1055
    static +wdTurkmen: Class<Word$WdLanguageID__wdTurkmen> &
      Word$WdLanguageID__wdTurkmen &
      1090; // 1090
    static +wdUkrainian: Class<Word$WdLanguageID__wdUkrainian> &
      Word$WdLanguageID__wdUkrainian &
      1058; // 1058
    static +wdUrdu: Class<Word$WdLanguageID__wdUrdu> &
      Word$WdLanguageID__wdUrdu &
      1056; // 1056
    static +wdUzbekCyrillic: Class<Word$WdLanguageID__wdUzbekCyrillic> &
      Word$WdLanguageID__wdUzbekCyrillic &
      2115; // 2115
    static +wdUzbekLatin: Class<Word$WdLanguageID__wdUzbekLatin> &
      Word$WdLanguageID__wdUzbekLatin &
      1091; // 1091
    static +wdVenda: Class<Word$WdLanguageID__wdVenda> &
      Word$WdLanguageID__wdVenda &
      1075; // 1075
    static +wdVietnamese: Class<Word$WdLanguageID__wdVietnamese> &
      Word$WdLanguageID__wdVietnamese &
      1066; // 1066
    static +wdWelsh: Class<Word$WdLanguageID__wdWelsh> &
      Word$WdLanguageID__wdWelsh &
      1106; // 1106
    static +wdXhosa: Class<Word$WdLanguageID__wdXhosa> &
      Word$WdLanguageID__wdXhosa &
      1076; // 1076
    static +wdYi: Class<Word$WdLanguageID__wdYi> &
      Word$WdLanguageID__wdYi &
      1144; // 1144
    static +wdYiddish: Class<Word$WdLanguageID__wdYiddish> &
      Word$WdLanguageID__wdYiddish &
      1085; // 1085
    static +wdYoruba: Class<Word$WdLanguageID__wdYoruba> &
      Word$WdLanguageID__wdYoruba &
      1130; // 1130
    static +wdZulu: Class<Word$WdLanguageID__wdZulu> &
      Word$WdLanguageID__wdZulu &
      1077; // 1077
  }

  declare class Word$WdLanguageID__wdAfrikaans mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdAlbanian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdAmharic mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdArabic mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdArabicAlgeria mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdArabicBahrain mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdArabicEgypt mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdArabicIraq mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdArabicJordan mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdArabicKuwait mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdArabicLebanon mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdArabicLibya mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdArabicMorocco mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdArabicOman mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdArabicQatar mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdArabicSyria mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdArabicTunisia mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdArabicUAE mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdArabicYemen mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdArmenian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdAssamese mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdAzeriCyrillic mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdAzeriLatin mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdBasque mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdBelgianDutch mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdBelgianFrench mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdBengali mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdBulgarian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdBurmese mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdByelorussian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdCatalan mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdCherokee mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdChineseHongKongSAR
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdChineseMacaoSAR mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdChineseSingapore
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdCroatian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdCzech mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdDanish mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdDivehi mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdDutch mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdEdo mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdEnglishAUS mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdEnglishBelize mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdEnglishCanadian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdEnglishCaribbean
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdEnglishIndonesia
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdEnglishIreland mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdEnglishJamaica mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdEnglishNewZealand
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdEnglishPhilippines
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdEnglishSouthAfrica
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdEnglishTrinidadTobago
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdEnglishUK mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdEnglishUS mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdEnglishZimbabwe mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdEstonian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdFaeroese mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdFilipino mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdFinnish mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdFrench mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdFrenchCameroon mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdFrenchCanadian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdFrenchCongoDRC mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdFrenchCotedIvoire
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdFrenchHaiti mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdFrenchLuxembourg
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdFrenchMali mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdFrenchMonaco mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdFrenchMorocco mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdFrenchReunion mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdFrenchSenegal mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdFrenchWestIndies
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdFrisianNetherlands
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdFulfulde mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdGaelicIreland mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdGaelicScotland mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdGalician mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdGeorgian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdGerman mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdGermanAustria mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdGermanLiechtenstein
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdGermanLuxembourg
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdGreek mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdGuarani mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdGujarati mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdHausa mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdHawaiian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdHebrew mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdHindi mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdHungarian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdIbibio mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdIcelandic mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdIgbo mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdIndonesian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdInuktitut mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdItalian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdJapanese mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdKannada mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdKanuri mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdKashmiri mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdKazakh mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdKhmer mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdKirghiz mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdKonkani mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdKorean mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdKyrgyz mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdLanguageNone mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdLao mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdLatin mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdLatvian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdLithuanian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdMacedonianFYROM mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdMalayalam mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdMalayBruneiDarussalam
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdMalaysian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdMaltese mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdManipuri mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdMarathi mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdMexicanSpanish mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdMongolian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdNepali mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdNoProofing mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdNorwegianBokmol mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdNorwegianNynorsk
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdOriya mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdOromo mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdPashto mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdPersian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdPolish mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdPortuguese mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdPortugueseBrazil
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdPunjabi mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdRhaetoRomanic mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdRomanian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdRomanianMoldova mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdRussian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdRussianMoldova mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSamiLappish mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSanskrit mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSerbianCyrillic mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSerbianLatin mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSesotho mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSimplifiedChinese
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSindhi mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSindhiPakistan mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSinhalese mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSlovak mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSlovenian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSomali mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSorbian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanish mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanishArgentina
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanishBolivia mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanishChile mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanishColombia mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanishCostaRica
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanishDominicanRepublic
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanishEcuador mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanishElSalvador
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanishGuatemala
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanishHonduras mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanishModernSort
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanishNicaragua
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanishPanama mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanishParaguay mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanishPeru mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanishPuertoRico
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanishUruguay mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSpanishVenezuela
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSutu mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSwahili mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSwedish mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSwedishFinland mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSwissFrench mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSwissGerman mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSwissItalian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdSyriac mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdTajik mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdTamazight mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdTamazightLatin mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdTamil mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdTatar mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdTelugu mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdThai mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdTibetan mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdTigrignaEritrea mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdTigrignaEthiopic
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdTraditionalChinese
    mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdTsonga mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdTswana mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdTurkish mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdTurkmen mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdUkrainian mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdUrdu mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdUzbekCyrillic mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdUzbekLatin mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdVenda mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdVietnamese mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdWelsh mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdXhosa mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdYi mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdYiddish mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdYoruba mixins Word$WdLanguageID {}
  declare class Word$WdLanguageID__wdZulu mixins Word$WdLanguageID {}

  declare class Word$WdLanguageID2000 {
    constructor(...args: empty): mixed;
    static +wdChineseHongKong: Class<Word$WdLanguageID2000__wdChineseHongKong> &
      Word$WdLanguageID2000__wdChineseHongKong &
      3076; // 3076
    static +wdChineseMacao: Class<Word$WdLanguageID2000__wdChineseMacao> &
      Word$WdLanguageID2000__wdChineseMacao &
      5124; // 5124
    static +wdEnglishTrinidad: Class<Word$WdLanguageID2000__wdEnglishTrinidad> &
      Word$WdLanguageID2000__wdEnglishTrinidad &
      11273; // 11273
  }

  declare class Word$WdLanguageID2000__wdChineseHongKong
    mixins Word$WdLanguageID2000 {}
  declare class Word$WdLanguageID2000__wdChineseMacao
    mixins Word$WdLanguageID2000 {}
  declare class Word$WdLanguageID2000__wdEnglishTrinidad
    mixins Word$WdLanguageID2000 {}

  declare class Word$WdLayoutMode {
    constructor(...args: empty): mixed;
    static +wdLayoutModeDefault: Class<Word$WdLayoutMode__wdLayoutModeDefault> &
      Word$WdLayoutMode__wdLayoutModeDefault &
      0; // 0
    static +wdLayoutModeGenko: Class<Word$WdLayoutMode__wdLayoutModeGenko> &
      Word$WdLayoutMode__wdLayoutModeGenko &
      3; // 3
    static +wdLayoutModeGrid: Class<Word$WdLayoutMode__wdLayoutModeGrid> &
      Word$WdLayoutMode__wdLayoutModeGrid &
      1; // 1
    static +wdLayoutModeLineGrid: Class<Word$WdLayoutMode__wdLayoutModeLineGrid> &
      Word$WdLayoutMode__wdLayoutModeLineGrid &
      2; // 2
  }

  declare class Word$WdLayoutMode__wdLayoutModeDefault
    mixins Word$WdLayoutMode {}
  declare class Word$WdLayoutMode__wdLayoutModeGenko mixins Word$WdLayoutMode {}
  declare class Word$WdLayoutMode__wdLayoutModeGrid mixins Word$WdLayoutMode {}
  declare class Word$WdLayoutMode__wdLayoutModeLineGrid
    mixins Word$WdLayoutMode {}

  declare class Word$WdLetterheadLocation {
    constructor(...args: empty): mixed;
    static +wdLetterBottom: Class<Word$WdLetterheadLocation__wdLetterBottom> &
      Word$WdLetterheadLocation__wdLetterBottom &
      1; // 1
    static +wdLetterLeft: Class<Word$WdLetterheadLocation__wdLetterLeft> &
      Word$WdLetterheadLocation__wdLetterLeft &
      2; // 2
    static +wdLetterRight: Class<Word$WdLetterheadLocation__wdLetterRight> &
      Word$WdLetterheadLocation__wdLetterRight &
      3; // 3
    static +wdLetterTop: Class<Word$WdLetterheadLocation__wdLetterTop> &
      Word$WdLetterheadLocation__wdLetterTop &
      0; // 0
  }

  declare class Word$WdLetterheadLocation__wdLetterBottom
    mixins Word$WdLetterheadLocation {}
  declare class Word$WdLetterheadLocation__wdLetterLeft
    mixins Word$WdLetterheadLocation {}
  declare class Word$WdLetterheadLocation__wdLetterRight
    mixins Word$WdLetterheadLocation {}
  declare class Word$WdLetterheadLocation__wdLetterTop
    mixins Word$WdLetterheadLocation {}

  declare class Word$WdLetterStyle {
    constructor(...args: empty): mixed;
    static +wdFullBlock: Class<Word$WdLetterStyle__wdFullBlock> &
      Word$WdLetterStyle__wdFullBlock &
      0; // 0
    static +wdModifiedBlock: Class<Word$WdLetterStyle__wdModifiedBlock> &
      Word$WdLetterStyle__wdModifiedBlock &
      1; // 1
    static +wdSemiBlock: Class<Word$WdLetterStyle__wdSemiBlock> &
      Word$WdLetterStyle__wdSemiBlock &
      2; // 2
  }

  declare class Word$WdLetterStyle__wdFullBlock mixins Word$WdLetterStyle {}
  declare class Word$WdLetterStyle__wdModifiedBlock mixins Word$WdLetterStyle {}
  declare class Word$WdLetterStyle__wdSemiBlock mixins Word$WdLetterStyle {}

  declare class Word$WdLigatures {
    constructor(...args: empty): mixed;
    static +wdLigaturesAll: Class<Word$WdLigatures__wdLigaturesAll> &
      Word$WdLigatures__wdLigaturesAll &
      15; // 15
    static +wdLigaturesContextual: Class<Word$WdLigatures__wdLigaturesContextual> &
      Word$WdLigatures__wdLigaturesContextual &
      2; // 2
    static +wdLigaturesContextualDiscretional: Class<Word$WdLigatures__wdLigaturesContextualDiscretional> &
      Word$WdLigatures__wdLigaturesContextualDiscretional &
      10; // 10
    static +wdLigaturesContextualHistorical: Class<Word$WdLigatures__wdLigaturesContextualHistorical> &
      Word$WdLigatures__wdLigaturesContextualHistorical &
      6; // 6
    static +wdLigaturesContextualHistoricalDiscretional: Class<Word$WdLigatures__wdLigaturesContextualHistoricalDiscretional> &
      Word$WdLigatures__wdLigaturesContextualHistoricalDiscretional &
      14; // 14
    static +wdLigaturesDiscretional: Class<Word$WdLigatures__wdLigaturesDiscretional> &
      Word$WdLigatures__wdLigaturesDiscretional &
      8; // 8
    static +wdLigaturesHistorical: Class<Word$WdLigatures__wdLigaturesHistorical> &
      Word$WdLigatures__wdLigaturesHistorical &
      4; // 4
    static +wdLigaturesHistoricalDiscretional: Class<Word$WdLigatures__wdLigaturesHistoricalDiscretional> &
      Word$WdLigatures__wdLigaturesHistoricalDiscretional &
      12; // 12
    static +wdLigaturesNone: Class<Word$WdLigatures__wdLigaturesNone> &
      Word$WdLigatures__wdLigaturesNone &
      0; // 0
    static +wdLigaturesStandard: Class<Word$WdLigatures__wdLigaturesStandard> &
      Word$WdLigatures__wdLigaturesStandard &
      1; // 1
    static +wdLigaturesStandardContextual: Class<Word$WdLigatures__wdLigaturesStandardContextual> &
      Word$WdLigatures__wdLigaturesStandardContextual &
      3; // 3
    static +wdLigaturesStandardContextualDiscretional: Class<Word$WdLigatures__wdLigaturesStandardContextualDiscretional> &
      Word$WdLigatures__wdLigaturesStandardContextualDiscretional &
      11; // 11
    static +wdLigaturesStandardContextualHistorical: Class<Word$WdLigatures__wdLigaturesStandardContextualHistorical> &
      Word$WdLigatures__wdLigaturesStandardContextualHistorical &
      7; // 7
    static +wdLigaturesStandardDiscretional: Class<Word$WdLigatures__wdLigaturesStandardDiscretional> &
      Word$WdLigatures__wdLigaturesStandardDiscretional &
      9; // 9
    static +wdLigaturesStandardHistorical: Class<Word$WdLigatures__wdLigaturesStandardHistorical> &
      Word$WdLigatures__wdLigaturesStandardHistorical &
      5; // 5
    static +wdLigaturesStandardHistoricalDiscretional: Class<Word$WdLigatures__wdLigaturesStandardHistoricalDiscretional> &
      Word$WdLigatures__wdLigaturesStandardHistoricalDiscretional &
      13; // 13
  }

  declare class Word$WdLigatures__wdLigaturesAll mixins Word$WdLigatures {}
  declare class Word$WdLigatures__wdLigaturesContextual
    mixins Word$WdLigatures {}
  declare class Word$WdLigatures__wdLigaturesContextualDiscretional
    mixins Word$WdLigatures {}
  declare class Word$WdLigatures__wdLigaturesContextualHistorical
    mixins Word$WdLigatures {}
  declare class Word$WdLigatures__wdLigaturesContextualHistoricalDiscretional
    mixins Word$WdLigatures {}
  declare class Word$WdLigatures__wdLigaturesDiscretional
    mixins Word$WdLigatures {}
  declare class Word$WdLigatures__wdLigaturesHistorical
    mixins Word$WdLigatures {}
  declare class Word$WdLigatures__wdLigaturesHistoricalDiscretional
    mixins Word$WdLigatures {}
  declare class Word$WdLigatures__wdLigaturesNone mixins Word$WdLigatures {}
  declare class Word$WdLigatures__wdLigaturesStandard mixins Word$WdLigatures {}
  declare class Word$WdLigatures__wdLigaturesStandardContextual
    mixins Word$WdLigatures {}
  declare class Word$WdLigatures__wdLigaturesStandardContextualDiscretional
    mixins Word$WdLigatures {}
  declare class Word$WdLigatures__wdLigaturesStandardContextualHistorical
    mixins Word$WdLigatures {}
  declare class Word$WdLigatures__wdLigaturesStandardDiscretional
    mixins Word$WdLigatures {}
  declare class Word$WdLigatures__wdLigaturesStandardHistorical
    mixins Word$WdLigatures {}
  declare class Word$WdLigatures__wdLigaturesStandardHistoricalDiscretional
    mixins Word$WdLigatures {}

  declare class Word$WdLineEndingType {
    constructor(...args: empty): mixed;
    static +wdCRLF: Class<Word$WdLineEndingType__wdCRLF> &
      Word$WdLineEndingType__wdCRLF &
      0; // 0
    static +wdCROnly: Class<Word$WdLineEndingType__wdCROnly> &
      Word$WdLineEndingType__wdCROnly &
      1; // 1
    static +wdLFCR: Class<Word$WdLineEndingType__wdLFCR> &
      Word$WdLineEndingType__wdLFCR &
      3; // 3
    static +wdLFOnly: Class<Word$WdLineEndingType__wdLFOnly> &
      Word$WdLineEndingType__wdLFOnly &
      2; // 2
    static +wdLSPS: Class<Word$WdLineEndingType__wdLSPS> &
      Word$WdLineEndingType__wdLSPS &
      4; // 4
  }

  declare class Word$WdLineEndingType__wdCRLF mixins Word$WdLineEndingType {}
  declare class Word$WdLineEndingType__wdCROnly mixins Word$WdLineEndingType {}
  declare class Word$WdLineEndingType__wdLFCR mixins Word$WdLineEndingType {}
  declare class Word$WdLineEndingType__wdLFOnly mixins Word$WdLineEndingType {}
  declare class Word$WdLineEndingType__wdLSPS mixins Word$WdLineEndingType {}

  declare class Word$WdLineSpacing {
    constructor(...args: empty): mixed;
    static +wdLineSpace1pt5: Class<Word$WdLineSpacing__wdLineSpace1pt5> &
      Word$WdLineSpacing__wdLineSpace1pt5 &
      1; // 1
    static +wdLineSpaceAtLeast: Class<Word$WdLineSpacing__wdLineSpaceAtLeast> &
      Word$WdLineSpacing__wdLineSpaceAtLeast &
      3; // 3
    static +wdLineSpaceDouble: Class<Word$WdLineSpacing__wdLineSpaceDouble> &
      Word$WdLineSpacing__wdLineSpaceDouble &
      2; // 2
    static +wdLineSpaceExactly: Class<Word$WdLineSpacing__wdLineSpaceExactly> &
      Word$WdLineSpacing__wdLineSpaceExactly &
      4; // 4
    static +wdLineSpaceMultiple: Class<Word$WdLineSpacing__wdLineSpaceMultiple> &
      Word$WdLineSpacing__wdLineSpaceMultiple &
      5; // 5
    static +wdLineSpaceSingle: Class<Word$WdLineSpacing__wdLineSpaceSingle> &
      Word$WdLineSpacing__wdLineSpaceSingle &
      0; // 0
  }

  declare class Word$WdLineSpacing__wdLineSpace1pt5 mixins Word$WdLineSpacing {}
  declare class Word$WdLineSpacing__wdLineSpaceAtLeast
    mixins Word$WdLineSpacing {}
  declare class Word$WdLineSpacing__wdLineSpaceDouble
    mixins Word$WdLineSpacing {}
  declare class Word$WdLineSpacing__wdLineSpaceExactly
    mixins Word$WdLineSpacing {}
  declare class Word$WdLineSpacing__wdLineSpaceMultiple
    mixins Word$WdLineSpacing {}
  declare class Word$WdLineSpacing__wdLineSpaceSingle
    mixins Word$WdLineSpacing {}

  declare class Word$WdLineStyle {
    constructor(...args: empty): mixed;
    static +wdLineStyleDashDot: Class<Word$WdLineStyle__wdLineStyleDashDot> &
      Word$WdLineStyle__wdLineStyleDashDot &
      5; // 5
    static +wdLineStyleDashDotDot: Class<Word$WdLineStyle__wdLineStyleDashDotDot> &
      Word$WdLineStyle__wdLineStyleDashDotDot &
      6; // 6
    static +wdLineStyleDashDotStroked: Class<Word$WdLineStyle__wdLineStyleDashDotStroked> &
      Word$WdLineStyle__wdLineStyleDashDotStroked &
      20; // 20
    static +wdLineStyleDashLargeGap: Class<Word$WdLineStyle__wdLineStyleDashLargeGap> &
      Word$WdLineStyle__wdLineStyleDashLargeGap &
      4; // 4
    static +wdLineStyleDashSmallGap: Class<Word$WdLineStyle__wdLineStyleDashSmallGap> &
      Word$WdLineStyle__wdLineStyleDashSmallGap &
      3; // 3
    static +wdLineStyleDot: Class<Word$WdLineStyle__wdLineStyleDot> &
      Word$WdLineStyle__wdLineStyleDot &
      2; // 2
    static +wdLineStyleDouble: Class<Word$WdLineStyle__wdLineStyleDouble> &
      Word$WdLineStyle__wdLineStyleDouble &
      7; // 7
    static +wdLineStyleDoubleWavy: Class<Word$WdLineStyle__wdLineStyleDoubleWavy> &
      Word$WdLineStyle__wdLineStyleDoubleWavy &
      19; // 19
    static +wdLineStyleEmboss3D: Class<Word$WdLineStyle__wdLineStyleEmboss3D> &
      Word$WdLineStyle__wdLineStyleEmboss3D &
      21; // 21
    static +wdLineStyleEngrave3D: Class<Word$WdLineStyle__wdLineStyleEngrave3D> &
      Word$WdLineStyle__wdLineStyleEngrave3D &
      22; // 22
    static +wdLineStyleInset: Class<Word$WdLineStyle__wdLineStyleInset> &
      Word$WdLineStyle__wdLineStyleInset &
      24; // 24
    static +wdLineStyleNone: Class<Word$WdLineStyle__wdLineStyleNone> &
      Word$WdLineStyle__wdLineStyleNone &
      0; // 0
    static +wdLineStyleOutset: Class<Word$WdLineStyle__wdLineStyleOutset> &
      Word$WdLineStyle__wdLineStyleOutset &
      23; // 23
    static +wdLineStyleSingle: Class<Word$WdLineStyle__wdLineStyleSingle> &
      Word$WdLineStyle__wdLineStyleSingle &
      1; // 1
    static +wdLineStyleSingleWavy: Class<Word$WdLineStyle__wdLineStyleSingleWavy> &
      Word$WdLineStyle__wdLineStyleSingleWavy &
      18; // 18
    static +wdLineStyleThickThinLargeGap: Class<Word$WdLineStyle__wdLineStyleThickThinLargeGap> &
      Word$WdLineStyle__wdLineStyleThickThinLargeGap &
      16; // 16
    static +wdLineStyleThickThinMedGap: Class<Word$WdLineStyle__wdLineStyleThickThinMedGap> &
      Word$WdLineStyle__wdLineStyleThickThinMedGap &
      13; // 13
    static +wdLineStyleThickThinSmallGap: Class<Word$WdLineStyle__wdLineStyleThickThinSmallGap> &
      Word$WdLineStyle__wdLineStyleThickThinSmallGap &
      10; // 10
    static +wdLineStyleThinThickLargeGap: Class<Word$WdLineStyle__wdLineStyleThinThickLargeGap> &
      Word$WdLineStyle__wdLineStyleThinThickLargeGap &
      15; // 15
    static +wdLineStyleThinThickMedGap: Class<Word$WdLineStyle__wdLineStyleThinThickMedGap> &
      Word$WdLineStyle__wdLineStyleThinThickMedGap &
      12; // 12
    static +wdLineStyleThinThickSmallGap: Class<Word$WdLineStyle__wdLineStyleThinThickSmallGap> &
      Word$WdLineStyle__wdLineStyleThinThickSmallGap &
      9; // 9
    static +wdLineStyleThinThickThinLargeGap: Class<Word$WdLineStyle__wdLineStyleThinThickThinLargeGap> &
      Word$WdLineStyle__wdLineStyleThinThickThinLargeGap &
      17; // 17
    static +wdLineStyleThinThickThinMedGap: Class<Word$WdLineStyle__wdLineStyleThinThickThinMedGap> &
      Word$WdLineStyle__wdLineStyleThinThickThinMedGap &
      14; // 14
    static +wdLineStyleThinThickThinSmallGap: Class<Word$WdLineStyle__wdLineStyleThinThickThinSmallGap> &
      Word$WdLineStyle__wdLineStyleThinThickThinSmallGap &
      11; // 11
    static +wdLineStyleTriple: Class<Word$WdLineStyle__wdLineStyleTriple> &
      Word$WdLineStyle__wdLineStyleTriple &
      8; // 8
  }

  declare class Word$WdLineStyle__wdLineStyleDashDot mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleDashDotDot
    mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleDashDotStroked
    mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleDashLargeGap
    mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleDashSmallGap
    mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleDot mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleDouble mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleDoubleWavy
    mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleEmboss3D mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleEngrave3D
    mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleInset mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleNone mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleOutset mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleSingle mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleSingleWavy
    mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleThickThinLargeGap
    mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleThickThinMedGap
    mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleThickThinSmallGap
    mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleThinThickLargeGap
    mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleThinThickMedGap
    mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleThinThickSmallGap
    mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleThinThickThinLargeGap
    mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleThinThickThinMedGap
    mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleThinThickThinSmallGap
    mixins Word$WdLineStyle {}
  declare class Word$WdLineStyle__wdLineStyleTriple mixins Word$WdLineStyle {}

  declare class Word$WdLineType {
    constructor(...args: empty): mixed;
    static +wdTableRow: Class<Word$WdLineType__wdTableRow> &
      Word$WdLineType__wdTableRow &
      1; // 1
    static +wdTextLine: Class<Word$WdLineType__wdTextLine> &
      Word$WdLineType__wdTextLine &
      0; // 0
  }

  declare class Word$WdLineType__wdTableRow mixins Word$WdLineType {}
  declare class Word$WdLineType__wdTextLine mixins Word$WdLineType {}

  declare class Word$WdLineWidth {
    constructor(...args: empty): mixed;
    static +wdLineWidth025pt: Class<Word$WdLineWidth__wdLineWidth025pt> &
      Word$WdLineWidth__wdLineWidth025pt &
      2; // 2
    static +wdLineWidth050pt: Class<Word$WdLineWidth__wdLineWidth050pt> &
      Word$WdLineWidth__wdLineWidth050pt &
      4; // 4
    static +wdLineWidth075pt: Class<Word$WdLineWidth__wdLineWidth075pt> &
      Word$WdLineWidth__wdLineWidth075pt &
      6; // 6
    static +wdLineWidth100pt: Class<Word$WdLineWidth__wdLineWidth100pt> &
      Word$WdLineWidth__wdLineWidth100pt &
      8; // 8
    static +wdLineWidth150pt: Class<Word$WdLineWidth__wdLineWidth150pt> &
      Word$WdLineWidth__wdLineWidth150pt &
      12; // 12
    static +wdLineWidth225pt: Class<Word$WdLineWidth__wdLineWidth225pt> &
      Word$WdLineWidth__wdLineWidth225pt &
      18; // 18
    static +wdLineWidth300pt: Class<Word$WdLineWidth__wdLineWidth300pt> &
      Word$WdLineWidth__wdLineWidth300pt &
      24; // 24
    static +wdLineWidth450pt: Class<Word$WdLineWidth__wdLineWidth450pt> &
      Word$WdLineWidth__wdLineWidth450pt &
      36; // 36
    static +wdLineWidth600pt: Class<Word$WdLineWidth__wdLineWidth600pt> &
      Word$WdLineWidth__wdLineWidth600pt &
      48; // 48
  }

  declare class Word$WdLineWidth__wdLineWidth025pt mixins Word$WdLineWidth {}
  declare class Word$WdLineWidth__wdLineWidth050pt mixins Word$WdLineWidth {}
  declare class Word$WdLineWidth__wdLineWidth075pt mixins Word$WdLineWidth {}
  declare class Word$WdLineWidth__wdLineWidth100pt mixins Word$WdLineWidth {}
  declare class Word$WdLineWidth__wdLineWidth150pt mixins Word$WdLineWidth {}
  declare class Word$WdLineWidth__wdLineWidth225pt mixins Word$WdLineWidth {}
  declare class Word$WdLineWidth__wdLineWidth300pt mixins Word$WdLineWidth {}
  declare class Word$WdLineWidth__wdLineWidth450pt mixins Word$WdLineWidth {}
  declare class Word$WdLineWidth__wdLineWidth600pt mixins Word$WdLineWidth {}

  declare class Word$WdLinkType {
    constructor(...args: empty): mixed;
    static +wdLinkTypeChart: Class<Word$WdLinkType__wdLinkTypeChart> &
      Word$WdLinkType__wdLinkTypeChart &
      8; // 8
    static +wdLinkTypeDDE: Class<Word$WdLinkType__wdLinkTypeDDE> &
      Word$WdLinkType__wdLinkTypeDDE &
      6; // 6
    static +wdLinkTypeDDEAuto: Class<Word$WdLinkType__wdLinkTypeDDEAuto> &
      Word$WdLinkType__wdLinkTypeDDEAuto &
      7; // 7
    static +wdLinkTypeImport: Class<Word$WdLinkType__wdLinkTypeImport> &
      Word$WdLinkType__wdLinkTypeImport &
      5; // 5
    static +wdLinkTypeInclude: Class<Word$WdLinkType__wdLinkTypeInclude> &
      Word$WdLinkType__wdLinkTypeInclude &
      4; // 4
    static +wdLinkTypeOLE: Class<Word$WdLinkType__wdLinkTypeOLE> &
      Word$WdLinkType__wdLinkTypeOLE &
      0; // 0
    static +wdLinkTypePicture: Class<Word$WdLinkType__wdLinkTypePicture> &
      Word$WdLinkType__wdLinkTypePicture &
      1; // 1
    static +wdLinkTypeReference: Class<Word$WdLinkType__wdLinkTypeReference> &
      Word$WdLinkType__wdLinkTypeReference &
      3; // 3
    static +wdLinkTypeText: Class<Word$WdLinkType__wdLinkTypeText> &
      Word$WdLinkType__wdLinkTypeText &
      2; // 2
  }

  declare class Word$WdLinkType__wdLinkTypeChart mixins Word$WdLinkType {}
  declare class Word$WdLinkType__wdLinkTypeDDE mixins Word$WdLinkType {}
  declare class Word$WdLinkType__wdLinkTypeDDEAuto mixins Word$WdLinkType {}
  declare class Word$WdLinkType__wdLinkTypeImport mixins Word$WdLinkType {}
  declare class Word$WdLinkType__wdLinkTypeInclude mixins Word$WdLinkType {}
  declare class Word$WdLinkType__wdLinkTypeOLE mixins Word$WdLinkType {}
  declare class Word$WdLinkType__wdLinkTypePicture mixins Word$WdLinkType {}
  declare class Word$WdLinkType__wdLinkTypeReference mixins Word$WdLinkType {}
  declare class Word$WdLinkType__wdLinkTypeText mixins Word$WdLinkType {}

  declare class Word$WdListApplyTo {
    constructor(...args: empty): mixed;
    static +wdListApplyToSelection: Class<Word$WdListApplyTo__wdListApplyToSelection> &
      Word$WdListApplyTo__wdListApplyToSelection &
      2; // 2
    static +wdListApplyToThisPointForward: Class<Word$WdListApplyTo__wdListApplyToThisPointForward> &
      Word$WdListApplyTo__wdListApplyToThisPointForward &
      1; // 1
    static +wdListApplyToWholeList: Class<Word$WdListApplyTo__wdListApplyToWholeList> &
      Word$WdListApplyTo__wdListApplyToWholeList &
      0; // 0
  }

  declare class Word$WdListApplyTo__wdListApplyToSelection
    mixins Word$WdListApplyTo {}
  declare class Word$WdListApplyTo__wdListApplyToThisPointForward
    mixins Word$WdListApplyTo {}
  declare class Word$WdListApplyTo__wdListApplyToWholeList
    mixins Word$WdListApplyTo {}

  declare class Word$WdListGalleryType {
    constructor(...args: empty): mixed;
    static +wdBulletGallery: Class<Word$WdListGalleryType__wdBulletGallery> &
      Word$WdListGalleryType__wdBulletGallery &
      1; // 1
    static +wdNumberGallery: Class<Word$WdListGalleryType__wdNumberGallery> &
      Word$WdListGalleryType__wdNumberGallery &
      2; // 2
    static +wdOutlineNumberGallery: Class<Word$WdListGalleryType__wdOutlineNumberGallery> &
      Word$WdListGalleryType__wdOutlineNumberGallery &
      3; // 3
  }

  declare class Word$WdListGalleryType__wdBulletGallery
    mixins Word$WdListGalleryType {}
  declare class Word$WdListGalleryType__wdNumberGallery
    mixins Word$WdListGalleryType {}
  declare class Word$WdListGalleryType__wdOutlineNumberGallery
    mixins Word$WdListGalleryType {}

  declare class Word$WdListLevelAlignment {
    constructor(...args: empty): mixed;
    static +wdListLevelAlignCenter: Class<Word$WdListLevelAlignment__wdListLevelAlignCenter> &
      Word$WdListLevelAlignment__wdListLevelAlignCenter &
      1; // 1
    static +wdListLevelAlignLeft: Class<Word$WdListLevelAlignment__wdListLevelAlignLeft> &
      Word$WdListLevelAlignment__wdListLevelAlignLeft &
      0; // 0
    static +wdListLevelAlignRight: Class<Word$WdListLevelAlignment__wdListLevelAlignRight> &
      Word$WdListLevelAlignment__wdListLevelAlignRight &
      2; // 2
  }

  declare class Word$WdListLevelAlignment__wdListLevelAlignCenter
    mixins Word$WdListLevelAlignment {}
  declare class Word$WdListLevelAlignment__wdListLevelAlignLeft
    mixins Word$WdListLevelAlignment {}
  declare class Word$WdListLevelAlignment__wdListLevelAlignRight
    mixins Word$WdListLevelAlignment {}

  declare class Word$WdListNumberStyle {
    constructor(...args: empty): mixed;
    static +wdListNumberStyleAiueo: Class<Word$WdListNumberStyle__wdListNumberStyleAiueo> &
      Word$WdListNumberStyle__wdListNumberStyleAiueo &
      20; // 20
    static +wdListNumberStyleAiueoHalfWidth: Class<Word$WdListNumberStyle__wdListNumberStyleAiueoHalfWidth> &
      Word$WdListNumberStyle__wdListNumberStyleAiueoHalfWidth &
      12; // 12
    static +wdListNumberStyleArabic: Class<Word$WdListNumberStyle__wdListNumberStyleArabic> &
      Word$WdListNumberStyle__wdListNumberStyleArabic &
      0; // 0
    static +wdListNumberStyleArabic1: Class<Word$WdListNumberStyle__wdListNumberStyleArabic1> &
      Word$WdListNumberStyle__wdListNumberStyleArabic1 &
      46; // 46
    static +wdListNumberStyleArabic2: Class<Word$WdListNumberStyle__wdListNumberStyleArabic2> &
      Word$WdListNumberStyle__wdListNumberStyleArabic2 &
      48; // 48
    static +wdListNumberStyleArabicFullWidth: Class<Word$WdListNumberStyle__wdListNumberStyleArabicFullWidth> &
      Word$WdListNumberStyle__wdListNumberStyleArabicFullWidth &
      14; // 14
    static +wdListNumberStyleArabicLZ: Class<Word$WdListNumberStyle__wdListNumberStyleArabicLZ> &
      Word$WdListNumberStyle__wdListNumberStyleArabicLZ &
      22; // 22
    static +wdListNumberStyleArabicLZ2: Class<Word$WdListNumberStyle__wdListNumberStyleArabicLZ2> &
      Word$WdListNumberStyle__wdListNumberStyleArabicLZ2 &
      62; // 62
    static +wdListNumberStyleArabicLZ3: Class<Word$WdListNumberStyle__wdListNumberStyleArabicLZ3> &
      Word$WdListNumberStyle__wdListNumberStyleArabicLZ3 &
      63; // 63
    static +wdListNumberStyleArabicLZ4: Class<Word$WdListNumberStyle__wdListNumberStyleArabicLZ4> &
      Word$WdListNumberStyle__wdListNumberStyleArabicLZ4 &
      64; // 64
    static +wdListNumberStyleBullet: Class<Word$WdListNumberStyle__wdListNumberStyleBullet> &
      Word$WdListNumberStyle__wdListNumberStyleBullet &
      23; // 23
    static +wdListNumberStyleCardinalText: Class<Word$WdListNumberStyle__wdListNumberStyleCardinalText> &
      Word$WdListNumberStyle__wdListNumberStyleCardinalText &
      6; // 6
    static +wdListNumberStyleChosung: Class<Word$WdListNumberStyle__wdListNumberStyleChosung> &
      Word$WdListNumberStyle__wdListNumberStyleChosung &
      25; // 25
    static +wdListNumberStyleGanada: Class<Word$WdListNumberStyle__wdListNumberStyleGanada> &
      Word$WdListNumberStyle__wdListNumberStyleGanada &
      24; // 24
    static +wdListNumberStyleGBNum1: Class<Word$WdListNumberStyle__wdListNumberStyleGBNum1> &
      Word$WdListNumberStyle__wdListNumberStyleGBNum1 &
      26; // 26
    static +wdListNumberStyleGBNum2: Class<Word$WdListNumberStyle__wdListNumberStyleGBNum2> &
      Word$WdListNumberStyle__wdListNumberStyleGBNum2 &
      27; // 27
    static +wdListNumberStyleGBNum3: Class<Word$WdListNumberStyle__wdListNumberStyleGBNum3> &
      Word$WdListNumberStyle__wdListNumberStyleGBNum3 &
      28; // 28
    static +wdListNumberStyleGBNum4: Class<Word$WdListNumberStyle__wdListNumberStyleGBNum4> &
      Word$WdListNumberStyle__wdListNumberStyleGBNum4 &
      29; // 29
    static +wdListNumberStyleHangul: Class<Word$WdListNumberStyle__wdListNumberStyleHangul> &
      Word$WdListNumberStyle__wdListNumberStyleHangul &
      43; // 43
    static +wdListNumberStyleHanja: Class<Word$WdListNumberStyle__wdListNumberStyleHanja> &
      Word$WdListNumberStyle__wdListNumberStyleHanja &
      44; // 44
    static +wdListNumberStyleHanjaRead: Class<Word$WdListNumberStyle__wdListNumberStyleHanjaRead> &
      Word$WdListNumberStyle__wdListNumberStyleHanjaRead &
      41; // 41
    static +wdListNumberStyleHanjaReadDigit: Class<Word$WdListNumberStyle__wdListNumberStyleHanjaReadDigit> &
      Word$WdListNumberStyle__wdListNumberStyleHanjaReadDigit &
      42; // 42
    static +wdListNumberStyleHebrew1: Class<Word$WdListNumberStyle__wdListNumberStyleHebrew1> &
      Word$WdListNumberStyle__wdListNumberStyleHebrew1 &
      45; // 45
    static +wdListNumberStyleHebrew2: Class<Word$WdListNumberStyle__wdListNumberStyleHebrew2> &
      Word$WdListNumberStyle__wdListNumberStyleHebrew2 &
      47; // 47
    static +wdListNumberStyleHindiArabic: Class<Word$WdListNumberStyle__wdListNumberStyleHindiArabic> &
      Word$WdListNumberStyle__wdListNumberStyleHindiArabic &
      51; // 51
    static +wdListNumberStyleHindiCardinalText: Class<Word$WdListNumberStyle__wdListNumberStyleHindiCardinalText> &
      Word$WdListNumberStyle__wdListNumberStyleHindiCardinalText &
      52; // 52
    static +wdListNumberStyleHindiLetter1: Class<Word$WdListNumberStyle__wdListNumberStyleHindiLetter1> &
      Word$WdListNumberStyle__wdListNumberStyleHindiLetter1 &
      49; // 49
    static +wdListNumberStyleHindiLetter2: Class<Word$WdListNumberStyle__wdListNumberStyleHindiLetter2> &
      Word$WdListNumberStyle__wdListNumberStyleHindiLetter2 &
      50; // 50
    static +wdListNumberStyleIroha: Class<Word$WdListNumberStyle__wdListNumberStyleIroha> &
      Word$WdListNumberStyle__wdListNumberStyleIroha &
      21; // 21
    static +wdListNumberStyleIrohaHalfWidth: Class<Word$WdListNumberStyle__wdListNumberStyleIrohaHalfWidth> &
      Word$WdListNumberStyle__wdListNumberStyleIrohaHalfWidth &
      13; // 13
    static +wdListNumberStyleKanji: Class<Word$WdListNumberStyle__wdListNumberStyleKanji> &
      Word$WdListNumberStyle__wdListNumberStyleKanji &
      10; // 10
    static +wdListNumberStyleKanjiDigit: Class<Word$WdListNumberStyle__wdListNumberStyleKanjiDigit> &
      Word$WdListNumberStyle__wdListNumberStyleKanjiDigit &
      11; // 11
    static +wdListNumberStyleKanjiTraditional: Class<Word$WdListNumberStyle__wdListNumberStyleKanjiTraditional> &
      Word$WdListNumberStyle__wdListNumberStyleKanjiTraditional &
      16; // 16
    static +wdListNumberStyleKanjiTraditional2: Class<Word$WdListNumberStyle__wdListNumberStyleKanjiTraditional2> &
      Word$WdListNumberStyle__wdListNumberStyleKanjiTraditional2 &
      17; // 17
    static +wdListNumberStyleLegal: Class<Word$WdListNumberStyle__wdListNumberStyleLegal> &
      Word$WdListNumberStyle__wdListNumberStyleLegal &
      253; // 253
    static +wdListNumberStyleLegalLZ: Class<Word$WdListNumberStyle__wdListNumberStyleLegalLZ> &
      Word$WdListNumberStyle__wdListNumberStyleLegalLZ &
      254; // 254
    static +wdListNumberStyleLowercaseBulgarian: Class<Word$WdListNumberStyle__wdListNumberStyleLowercaseBulgarian> &
      Word$WdListNumberStyle__wdListNumberStyleLowercaseBulgarian &
      67; // 67
    static +wdListNumberStyleLowercaseGreek: Class<Word$WdListNumberStyle__wdListNumberStyleLowercaseGreek> &
      Word$WdListNumberStyle__wdListNumberStyleLowercaseGreek &
      60; // 60
    static +wdListNumberStyleLowercaseLetter: Class<Word$WdListNumberStyle__wdListNumberStyleLowercaseLetter> &
      Word$WdListNumberStyle__wdListNumberStyleLowercaseLetter &
      4; // 4
    static +wdListNumberStyleLowercaseRoman: Class<Word$WdListNumberStyle__wdListNumberStyleLowercaseRoman> &
      Word$WdListNumberStyle__wdListNumberStyleLowercaseRoman &
      2; // 2
    static +wdListNumberStyleLowercaseRussian: Class<Word$WdListNumberStyle__wdListNumberStyleLowercaseRussian> &
      Word$WdListNumberStyle__wdListNumberStyleLowercaseRussian &
      58; // 58
    static +wdListNumberStyleLowercaseTurkish: Class<Word$WdListNumberStyle__wdListNumberStyleLowercaseTurkish> &
      Word$WdListNumberStyle__wdListNumberStyleLowercaseTurkish &
      65; // 65
    static +wdListNumberStyleNone: Class<Word$WdListNumberStyle__wdListNumberStyleNone> &
      Word$WdListNumberStyle__wdListNumberStyleNone &
      255; // 255
    static +wdListNumberStyleNumberInCircle: Class<Word$WdListNumberStyle__wdListNumberStyleNumberInCircle> &
      Word$WdListNumberStyle__wdListNumberStyleNumberInCircle &
      18; // 18
    static +wdListNumberStyleOrdinal: Class<Word$WdListNumberStyle__wdListNumberStyleOrdinal> &
      Word$WdListNumberStyle__wdListNumberStyleOrdinal &
      5; // 5
    static +wdListNumberStyleOrdinalText: Class<Word$WdListNumberStyle__wdListNumberStyleOrdinalText> &
      Word$WdListNumberStyle__wdListNumberStyleOrdinalText &
      7; // 7
    static +wdListNumberStylePictureBullet: Class<Word$WdListNumberStyle__wdListNumberStylePictureBullet> &
      Word$WdListNumberStyle__wdListNumberStylePictureBullet &
      249; // 249
    static +wdListNumberStyleSimpChinNum1: Class<Word$WdListNumberStyle__wdListNumberStyleSimpChinNum1> &
      Word$WdListNumberStyle__wdListNumberStyleSimpChinNum1 &
      37; // 37
    static +wdListNumberStyleSimpChinNum2: Class<Word$WdListNumberStyle__wdListNumberStyleSimpChinNum2> &
      Word$WdListNumberStyle__wdListNumberStyleSimpChinNum2 &
      38; // 38
    static +wdListNumberStyleSimpChinNum3: Class<Word$WdListNumberStyle__wdListNumberStyleSimpChinNum3> &
      Word$WdListNumberStyle__wdListNumberStyleSimpChinNum3 &
      39; // 39
    static +wdListNumberStyleSimpChinNum4: Class<Word$WdListNumberStyle__wdListNumberStyleSimpChinNum4> &
      Word$WdListNumberStyle__wdListNumberStyleSimpChinNum4 &
      40; // 40
    static +wdListNumberStyleThaiArabic: Class<Word$WdListNumberStyle__wdListNumberStyleThaiArabic> &
      Word$WdListNumberStyle__wdListNumberStyleThaiArabic &
      54; // 54
    static +wdListNumberStyleThaiCardinalText: Class<Word$WdListNumberStyle__wdListNumberStyleThaiCardinalText> &
      Word$WdListNumberStyle__wdListNumberStyleThaiCardinalText &
      55; // 55
    static +wdListNumberStyleThaiLetter: Class<Word$WdListNumberStyle__wdListNumberStyleThaiLetter> &
      Word$WdListNumberStyle__wdListNumberStyleThaiLetter &
      53; // 53
    static +wdListNumberStyleTradChinNum1: Class<Word$WdListNumberStyle__wdListNumberStyleTradChinNum1> &
      Word$WdListNumberStyle__wdListNumberStyleTradChinNum1 &
      33; // 33
    static +wdListNumberStyleTradChinNum2: Class<Word$WdListNumberStyle__wdListNumberStyleTradChinNum2> &
      Word$WdListNumberStyle__wdListNumberStyleTradChinNum2 &
      34; // 34
    static +wdListNumberStyleTradChinNum3: Class<Word$WdListNumberStyle__wdListNumberStyleTradChinNum3> &
      Word$WdListNumberStyle__wdListNumberStyleTradChinNum3 &
      35; // 35
    static +wdListNumberStyleTradChinNum4: Class<Word$WdListNumberStyle__wdListNumberStyleTradChinNum4> &
      Word$WdListNumberStyle__wdListNumberStyleTradChinNum4 &
      36; // 36
    static +wdListNumberStyleUppercaseBulgarian: Class<Word$WdListNumberStyle__wdListNumberStyleUppercaseBulgarian> &
      Word$WdListNumberStyle__wdListNumberStyleUppercaseBulgarian &
      68; // 68
    static +wdListNumberStyleUppercaseGreek: Class<Word$WdListNumberStyle__wdListNumberStyleUppercaseGreek> &
      Word$WdListNumberStyle__wdListNumberStyleUppercaseGreek &
      61; // 61
    static +wdListNumberStyleUppercaseLetter: Class<Word$WdListNumberStyle__wdListNumberStyleUppercaseLetter> &
      Word$WdListNumberStyle__wdListNumberStyleUppercaseLetter &
      3; // 3
    static +wdListNumberStyleUppercaseRoman: Class<Word$WdListNumberStyle__wdListNumberStyleUppercaseRoman> &
      Word$WdListNumberStyle__wdListNumberStyleUppercaseRoman &
      1; // 1
    static +wdListNumberStyleUppercaseRussian: Class<Word$WdListNumberStyle__wdListNumberStyleUppercaseRussian> &
      Word$WdListNumberStyle__wdListNumberStyleUppercaseRussian &
      59; // 59
    static +wdListNumberStyleUppercaseTurkish: Class<Word$WdListNumberStyle__wdListNumberStyleUppercaseTurkish> &
      Word$WdListNumberStyle__wdListNumberStyleUppercaseTurkish &
      66; // 66
    static +wdListNumberStyleVietCardinalText: Class<Word$WdListNumberStyle__wdListNumberStyleVietCardinalText> &
      Word$WdListNumberStyle__wdListNumberStyleVietCardinalText &
      56; // 56
    static +wdListNumberStyleZodiac1: Class<Word$WdListNumberStyle__wdListNumberStyleZodiac1> &
      Word$WdListNumberStyle__wdListNumberStyleZodiac1 &
      30; // 30
    static +wdListNumberStyleZodiac2: Class<Word$WdListNumberStyle__wdListNumberStyleZodiac2> &
      Word$WdListNumberStyle__wdListNumberStyleZodiac2 &
      31; // 31
    static +wdListNumberStyleZodiac3: Class<Word$WdListNumberStyle__wdListNumberStyleZodiac3> &
      Word$WdListNumberStyle__wdListNumberStyleZodiac3 &
      32; // 32
  }

  declare class Word$WdListNumberStyle__wdListNumberStyleAiueo
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleAiueoHalfWidth
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleArabic
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleArabic1
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleArabic2
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleArabicFullWidth
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleArabicLZ
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleArabicLZ2
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleArabicLZ3
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleArabicLZ4
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleBullet
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleCardinalText
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleChosung
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleGanada
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleGBNum1
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleGBNum2
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleGBNum3
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleGBNum4
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleHangul
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleHanja
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleHanjaRead
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleHanjaReadDigit
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleHebrew1
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleHebrew2
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleHindiArabic
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleHindiCardinalText
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleHindiLetter1
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleHindiLetter2
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleIroha
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleIrohaHalfWidth
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleKanji
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleKanjiDigit
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleKanjiTraditional
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleKanjiTraditional2
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleLegal
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleLegalLZ
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleLowercaseBulgarian
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleLowercaseGreek
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleLowercaseLetter
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleLowercaseRoman
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleLowercaseRussian
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleLowercaseTurkish
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleNone
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleNumberInCircle
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleOrdinal
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleOrdinalText
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStylePictureBullet
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleSimpChinNum1
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleSimpChinNum2
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleSimpChinNum3
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleSimpChinNum4
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleThaiArabic
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleThaiCardinalText
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleThaiLetter
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleTradChinNum1
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleTradChinNum2
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleTradChinNum3
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleTradChinNum4
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleUppercaseBulgarian
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleUppercaseGreek
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleUppercaseLetter
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleUppercaseRoman
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleUppercaseRussian
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleUppercaseTurkish
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleVietCardinalText
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleZodiac1
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleZodiac2
    mixins Word$WdListNumberStyle {}
  declare class Word$WdListNumberStyle__wdListNumberStyleZodiac3
    mixins Word$WdListNumberStyle {}

  declare class Word$WdListNumberStyleHID {
    constructor(...args: empty): mixed;
    static +emptyenum: Class<Word$WdListNumberStyleHID__emptyenum> &
      Word$WdListNumberStyleHID__emptyenum &
      0; // 0
  }

  declare class Word$WdListNumberStyleHID__emptyenum
    mixins Word$WdListNumberStyleHID {}

  declare class Word$WdListType {
    constructor(...args: empty): mixed;
    static +wdListBullet: Class<Word$WdListType__wdListBullet> &
      Word$WdListType__wdListBullet &
      2; // 2
    static +wdListListNumOnly: Class<Word$WdListType__wdListListNumOnly> &
      Word$WdListType__wdListListNumOnly &
      1; // 1
    static +wdListMixedNumbering: Class<Word$WdListType__wdListMixedNumbering> &
      Word$WdListType__wdListMixedNumbering &
      5; // 5
    static +wdListNoNumbering: Class<Word$WdListType__wdListNoNumbering> &
      Word$WdListType__wdListNoNumbering &
      0; // 0
    static +wdListOutlineNumbering: Class<Word$WdListType__wdListOutlineNumbering> &
      Word$WdListType__wdListOutlineNumbering &
      4; // 4
    static +wdListPictureBullet: Class<Word$WdListType__wdListPictureBullet> &
      Word$WdListType__wdListPictureBullet &
      6; // 6
    static +wdListSimpleNumbering: Class<Word$WdListType__wdListSimpleNumbering> &
      Word$WdListType__wdListSimpleNumbering &
      3; // 3
  }

  declare class Word$WdListType__wdListBullet mixins Word$WdListType {}
  declare class Word$WdListType__wdListListNumOnly mixins Word$WdListType {}
  declare class Word$WdListType__wdListMixedNumbering mixins Word$WdListType {}
  declare class Word$WdListType__wdListNoNumbering mixins Word$WdListType {}
  declare class Word$WdListType__wdListOutlineNumbering
    mixins Word$WdListType {}
  declare class Word$WdListType__wdListPictureBullet mixins Word$WdListType {}
  declare class Word$WdListType__wdListSimpleNumbering mixins Word$WdListType {}

  declare class Word$WdLockType {
    constructor(...args: empty): mixed;
    static +wdLockChanged: Class<Word$WdLockType__wdLockChanged> &
      Word$WdLockType__wdLockChanged &
      3; // 3
    static +wdLockEphemeral: Class<Word$WdLockType__wdLockEphemeral> &
      Word$WdLockType__wdLockEphemeral &
      2; // 2
    static +wdLockNone: Class<Word$WdLockType__wdLockNone> &
      Word$WdLockType__wdLockNone &
      0; // 0
    static +wdLockReservation: Class<Word$WdLockType__wdLockReservation> &
      Word$WdLockType__wdLockReservation &
      1; // 1
  }

  declare class Word$WdLockType__wdLockChanged mixins Word$WdLockType {}
  declare class Word$WdLockType__wdLockEphemeral mixins Word$WdLockType {}
  declare class Word$WdLockType__wdLockNone mixins Word$WdLockType {}
  declare class Word$WdLockType__wdLockReservation mixins Word$WdLockType {}

  declare class Word$WdMailerPriority {
    constructor(...args: empty): mixed;
    static +wdPriorityHigh: Class<Word$WdMailerPriority__wdPriorityHigh> &
      Word$WdMailerPriority__wdPriorityHigh &
      3; // 3
    static +wdPriorityLow: Class<Word$WdMailerPriority__wdPriorityLow> &
      Word$WdMailerPriority__wdPriorityLow &
      2; // 2
    static +wdPriorityNormal: Class<Word$WdMailerPriority__wdPriorityNormal> &
      Word$WdMailerPriority__wdPriorityNormal &
      1; // 1
  }

  declare class Word$WdMailerPriority__wdPriorityHigh
    mixins Word$WdMailerPriority {}
  declare class Word$WdMailerPriority__wdPriorityLow
    mixins Word$WdMailerPriority {}
  declare class Word$WdMailerPriority__wdPriorityNormal
    mixins Word$WdMailerPriority {}

  declare class Word$WdMailMergeActiveRecord {
    constructor(...args: empty): mixed;
    static +wdFirstDataSourceRecord: Class<Word$WdMailMergeActiveRecord__wdFirstDataSourceRecord> &
      Word$WdMailMergeActiveRecord__wdFirstDataSourceRecord &
      -6; // -6
    static +wdFirstRecord: Class<Word$WdMailMergeActiveRecord__wdFirstRecord> &
      Word$WdMailMergeActiveRecord__wdFirstRecord &
      -4; // -4
    static +wdLastDataSourceRecord: Class<Word$WdMailMergeActiveRecord__wdLastDataSourceRecord> &
      Word$WdMailMergeActiveRecord__wdLastDataSourceRecord &
      -7; // -7
    static +wdLastRecord: Class<Word$WdMailMergeActiveRecord__wdLastRecord> &
      Word$WdMailMergeActiveRecord__wdLastRecord &
      -5; // -5
    static +wdNextDataSourceRecord: Class<Word$WdMailMergeActiveRecord__wdNextDataSourceRecord> &
      Word$WdMailMergeActiveRecord__wdNextDataSourceRecord &
      -8; // -8
    static +wdNextRecord: Class<Word$WdMailMergeActiveRecord__wdNextRecord> &
      Word$WdMailMergeActiveRecord__wdNextRecord &
      -2; // -2
    static +wdNoActiveRecord: Class<Word$WdMailMergeActiveRecord__wdNoActiveRecord> &
      Word$WdMailMergeActiveRecord__wdNoActiveRecord &
      -1; // -1
    static +wdPreviousDataSourceRecord: Class<Word$WdMailMergeActiveRecord__wdPreviousDataSourceRecord> &
      Word$WdMailMergeActiveRecord__wdPreviousDataSourceRecord &
      -9; // -9
    static +wdPreviousRecord: Class<Word$WdMailMergeActiveRecord__wdPreviousRecord> &
      Word$WdMailMergeActiveRecord__wdPreviousRecord &
      -3; // -3
  }

  declare class Word$WdMailMergeActiveRecord__wdFirstDataSourceRecord
    mixins Word$WdMailMergeActiveRecord {}
  declare class Word$WdMailMergeActiveRecord__wdFirstRecord
    mixins Word$WdMailMergeActiveRecord {}
  declare class Word$WdMailMergeActiveRecord__wdLastDataSourceRecord
    mixins Word$WdMailMergeActiveRecord {}
  declare class Word$WdMailMergeActiveRecord__wdLastRecord
    mixins Word$WdMailMergeActiveRecord {}
  declare class Word$WdMailMergeActiveRecord__wdNextDataSourceRecord
    mixins Word$WdMailMergeActiveRecord {}
  declare class Word$WdMailMergeActiveRecord__wdNextRecord
    mixins Word$WdMailMergeActiveRecord {}
  declare class Word$WdMailMergeActiveRecord__wdNoActiveRecord
    mixins Word$WdMailMergeActiveRecord {}
  declare class Word$WdMailMergeActiveRecord__wdPreviousDataSourceRecord
    mixins Word$WdMailMergeActiveRecord {}
  declare class Word$WdMailMergeActiveRecord__wdPreviousRecord
    mixins Word$WdMailMergeActiveRecord {}

  declare class Word$WdMailMergeComparison {
    constructor(...args: empty): mixed;
    static +wdMergeIfEqual: Class<Word$WdMailMergeComparison__wdMergeIfEqual> &
      Word$WdMailMergeComparison__wdMergeIfEqual &
      0; // 0
    static +wdMergeIfGreaterThan: Class<Word$WdMailMergeComparison__wdMergeIfGreaterThan> &
      Word$WdMailMergeComparison__wdMergeIfGreaterThan &
      3; // 3
    static +wdMergeIfGreaterThanOrEqual: Class<Word$WdMailMergeComparison__wdMergeIfGreaterThanOrEqual> &
      Word$WdMailMergeComparison__wdMergeIfGreaterThanOrEqual &
      5; // 5
    static +wdMergeIfIsBlank: Class<Word$WdMailMergeComparison__wdMergeIfIsBlank> &
      Word$WdMailMergeComparison__wdMergeIfIsBlank &
      6; // 6
    static +wdMergeIfIsNotBlank: Class<Word$WdMailMergeComparison__wdMergeIfIsNotBlank> &
      Word$WdMailMergeComparison__wdMergeIfIsNotBlank &
      7; // 7
    static +wdMergeIfLessThan: Class<Word$WdMailMergeComparison__wdMergeIfLessThan> &
      Word$WdMailMergeComparison__wdMergeIfLessThan &
      2; // 2
    static +wdMergeIfLessThanOrEqual: Class<Word$WdMailMergeComparison__wdMergeIfLessThanOrEqual> &
      Word$WdMailMergeComparison__wdMergeIfLessThanOrEqual &
      4; // 4
    static +wdMergeIfNotEqual: Class<Word$WdMailMergeComparison__wdMergeIfNotEqual> &
      Word$WdMailMergeComparison__wdMergeIfNotEqual &
      1; // 1
  }

  declare class Word$WdMailMergeComparison__wdMergeIfEqual
    mixins Word$WdMailMergeComparison {}
  declare class Word$WdMailMergeComparison__wdMergeIfGreaterThan
    mixins Word$WdMailMergeComparison {}
  declare class Word$WdMailMergeComparison__wdMergeIfGreaterThanOrEqual
    mixins Word$WdMailMergeComparison {}
  declare class Word$WdMailMergeComparison__wdMergeIfIsBlank
    mixins Word$WdMailMergeComparison {}
  declare class Word$WdMailMergeComparison__wdMergeIfIsNotBlank
    mixins Word$WdMailMergeComparison {}
  declare class Word$WdMailMergeComparison__wdMergeIfLessThan
    mixins Word$WdMailMergeComparison {}
  declare class Word$WdMailMergeComparison__wdMergeIfLessThanOrEqual
    mixins Word$WdMailMergeComparison {}
  declare class Word$WdMailMergeComparison__wdMergeIfNotEqual
    mixins Word$WdMailMergeComparison {}

  declare class Word$WdMailMergeDataSource {
    constructor(...args: empty): mixed;
    static +wdMergeInfoFromAccessDDE: Class<Word$WdMailMergeDataSource__wdMergeInfoFromAccessDDE> &
      Word$WdMailMergeDataSource__wdMergeInfoFromAccessDDE &
      1; // 1
    static +wdMergeInfoFromExcelDDE: Class<Word$WdMailMergeDataSource__wdMergeInfoFromExcelDDE> &
      Word$WdMailMergeDataSource__wdMergeInfoFromExcelDDE &
      2; // 2
    static +wdMergeInfoFromMSQueryDDE: Class<Word$WdMailMergeDataSource__wdMergeInfoFromMSQueryDDE> &
      Word$WdMailMergeDataSource__wdMergeInfoFromMSQueryDDE &
      3; // 3
    static +wdMergeInfoFromODBC: Class<Word$WdMailMergeDataSource__wdMergeInfoFromODBC> &
      Word$WdMailMergeDataSource__wdMergeInfoFromODBC &
      4; // 4
    static +wdMergeInfoFromODSO: Class<Word$WdMailMergeDataSource__wdMergeInfoFromODSO> &
      Word$WdMailMergeDataSource__wdMergeInfoFromODSO &
      5; // 5
    static +wdMergeInfoFromWord: Class<Word$WdMailMergeDataSource__wdMergeInfoFromWord> &
      Word$WdMailMergeDataSource__wdMergeInfoFromWord &
      0; // 0
    static +wdNoMergeInfo: Class<Word$WdMailMergeDataSource__wdNoMergeInfo> &
      Word$WdMailMergeDataSource__wdNoMergeInfo &
      -1; // -1
  }

  declare class Word$WdMailMergeDataSource__wdMergeInfoFromAccessDDE
    mixins Word$WdMailMergeDataSource {}
  declare class Word$WdMailMergeDataSource__wdMergeInfoFromExcelDDE
    mixins Word$WdMailMergeDataSource {}
  declare class Word$WdMailMergeDataSource__wdMergeInfoFromMSQueryDDE
    mixins Word$WdMailMergeDataSource {}
  declare class Word$WdMailMergeDataSource__wdMergeInfoFromODBC
    mixins Word$WdMailMergeDataSource {}
  declare class Word$WdMailMergeDataSource__wdMergeInfoFromODSO
    mixins Word$WdMailMergeDataSource {}
  declare class Word$WdMailMergeDataSource__wdMergeInfoFromWord
    mixins Word$WdMailMergeDataSource {}
  declare class Word$WdMailMergeDataSource__wdNoMergeInfo
    mixins Word$WdMailMergeDataSource {}

  declare class Word$WdMailMergeDefaultRecord {
    constructor(...args: empty): mixed;
    static +wdDefaultFirstRecord: Class<Word$WdMailMergeDefaultRecord__wdDefaultFirstRecord> &
      Word$WdMailMergeDefaultRecord__wdDefaultFirstRecord &
      1; // 1
    static +wdDefaultLastRecord: Class<Word$WdMailMergeDefaultRecord__wdDefaultLastRecord> &
      Word$WdMailMergeDefaultRecord__wdDefaultLastRecord &
      -16; // -16
  }

  declare class Word$WdMailMergeDefaultRecord__wdDefaultFirstRecord
    mixins Word$WdMailMergeDefaultRecord {}
  declare class Word$WdMailMergeDefaultRecord__wdDefaultLastRecord
    mixins Word$WdMailMergeDefaultRecord {}

  declare class Word$WdMailMergeDestination {
    constructor(...args: empty): mixed;
    static +wdSendToEmail: Class<Word$WdMailMergeDestination__wdSendToEmail> &
      Word$WdMailMergeDestination__wdSendToEmail &
      2; // 2
    static +wdSendToFax: Class<Word$WdMailMergeDestination__wdSendToFax> &
      Word$WdMailMergeDestination__wdSendToFax &
      3; // 3
    static +wdSendToNewDocument: Class<Word$WdMailMergeDestination__wdSendToNewDocument> &
      Word$WdMailMergeDestination__wdSendToNewDocument &
      0; // 0
    static +wdSendToPrinter: Class<Word$WdMailMergeDestination__wdSendToPrinter> &
      Word$WdMailMergeDestination__wdSendToPrinter &
      1; // 1
  }

  declare class Word$WdMailMergeDestination__wdSendToEmail
    mixins Word$WdMailMergeDestination {}
  declare class Word$WdMailMergeDestination__wdSendToFax
    mixins Word$WdMailMergeDestination {}
  declare class Word$WdMailMergeDestination__wdSendToNewDocument
    mixins Word$WdMailMergeDestination {}
  declare class Word$WdMailMergeDestination__wdSendToPrinter
    mixins Word$WdMailMergeDestination {}

  declare class Word$WdMailMergeMailFormat {
    constructor(...args: empty): mixed;
    static +wdMailFormatHTML: Class<Word$WdMailMergeMailFormat__wdMailFormatHTML> &
      Word$WdMailMergeMailFormat__wdMailFormatHTML &
      1; // 1
    static +wdMailFormatPlainText: Class<Word$WdMailMergeMailFormat__wdMailFormatPlainText> &
      Word$WdMailMergeMailFormat__wdMailFormatPlainText &
      0; // 0
  }

  declare class Word$WdMailMergeMailFormat__wdMailFormatHTML
    mixins Word$WdMailMergeMailFormat {}
  declare class Word$WdMailMergeMailFormat__wdMailFormatPlainText
    mixins Word$WdMailMergeMailFormat {}

  declare class Word$WdMailMergeMainDocType {
    constructor(...args: empty): mixed;
    static +wdCatalog: Class<Word$WdMailMergeMainDocType__wdCatalog> &
      Word$WdMailMergeMainDocType__wdCatalog &
      3; // 3
    static +wdDirectory: Class<Word$WdMailMergeMainDocType__wdDirectory> &
      Word$WdMailMergeMainDocType__wdDirectory &
      3; // 3
    static +wdEMail: Class<Word$WdMailMergeMainDocType__wdEMail> &
      Word$WdMailMergeMainDocType__wdEMail &
      4; // 4
    static +wdEnvelopes: Class<Word$WdMailMergeMainDocType__wdEnvelopes> &
      Word$WdMailMergeMainDocType__wdEnvelopes &
      2; // 2
    static +wdFax: Class<Word$WdMailMergeMainDocType__wdFax> &
      Word$WdMailMergeMainDocType__wdFax &
      5; // 5
    static +wdFormLetters: Class<Word$WdMailMergeMainDocType__wdFormLetters> &
      Word$WdMailMergeMainDocType__wdFormLetters &
      0; // 0
    static +wdMailingLabels: Class<Word$WdMailMergeMainDocType__wdMailingLabels> &
      Word$WdMailMergeMainDocType__wdMailingLabels &
      1; // 1
    static +wdNotAMergeDocument: Class<Word$WdMailMergeMainDocType__wdNotAMergeDocument> &
      Word$WdMailMergeMainDocType__wdNotAMergeDocument &
      -1; // -1
  }

  declare class Word$WdMailMergeMainDocType__wdCatalog
    mixins Word$WdMailMergeMainDocType {}
  declare class Word$WdMailMergeMainDocType__wdDirectory
    mixins Word$WdMailMergeMainDocType {}
  declare class Word$WdMailMergeMainDocType__wdEMail
    mixins Word$WdMailMergeMainDocType {}
  declare class Word$WdMailMergeMainDocType__wdEnvelopes
    mixins Word$WdMailMergeMainDocType {}
  declare class Word$WdMailMergeMainDocType__wdFax
    mixins Word$WdMailMergeMainDocType {}
  declare class Word$WdMailMergeMainDocType__wdFormLetters
    mixins Word$WdMailMergeMainDocType {}
  declare class Word$WdMailMergeMainDocType__wdMailingLabels
    mixins Word$WdMailMergeMainDocType {}
  declare class Word$WdMailMergeMainDocType__wdNotAMergeDocument
    mixins Word$WdMailMergeMainDocType {}

  declare class Word$WdMailMergeState {
    constructor(...args: empty): mixed;
    static +wdDataSource: Class<Word$WdMailMergeState__wdDataSource> &
      Word$WdMailMergeState__wdDataSource &
      5; // 5
    static +wdMainAndDataSource: Class<Word$WdMailMergeState__wdMainAndDataSource> &
      Word$WdMailMergeState__wdMainAndDataSource &
      2; // 2
    static +wdMainAndHeader: Class<Word$WdMailMergeState__wdMainAndHeader> &
      Word$WdMailMergeState__wdMainAndHeader &
      3; // 3
    static +wdMainAndSourceAndHeader: Class<Word$WdMailMergeState__wdMainAndSourceAndHeader> &
      Word$WdMailMergeState__wdMainAndSourceAndHeader &
      4; // 4
    static +wdMainDocumentOnly: Class<Word$WdMailMergeState__wdMainDocumentOnly> &
      Word$WdMailMergeState__wdMainDocumentOnly &
      1; // 1
    static +wdNormalDocument: Class<Word$WdMailMergeState__wdNormalDocument> &
      Word$WdMailMergeState__wdNormalDocument &
      0; // 0
  }

  declare class Word$WdMailMergeState__wdDataSource
    mixins Word$WdMailMergeState {}
  declare class Word$WdMailMergeState__wdMainAndDataSource
    mixins Word$WdMailMergeState {}
  declare class Word$WdMailMergeState__wdMainAndHeader
    mixins Word$WdMailMergeState {}
  declare class Word$WdMailMergeState__wdMainAndSourceAndHeader
    mixins Word$WdMailMergeState {}
  declare class Word$WdMailMergeState__wdMainDocumentOnly
    mixins Word$WdMailMergeState {}
  declare class Word$WdMailMergeState__wdNormalDocument
    mixins Word$WdMailMergeState {}

  declare class Word$WdMailSystem {
    constructor(...args: empty): mixed;
    static +wdMAPI: Class<Word$WdMailSystem__wdMAPI> &
      Word$WdMailSystem__wdMAPI &
      1; // 1
    static +wdMAPIandPowerTalk: Class<Word$WdMailSystem__wdMAPIandPowerTalk> &
      Word$WdMailSystem__wdMAPIandPowerTalk &
      3; // 3
    static +wdNoMailSystem: Class<Word$WdMailSystem__wdNoMailSystem> &
      Word$WdMailSystem__wdNoMailSystem &
      0; // 0
    static +wdPowerTalk: Class<Word$WdMailSystem__wdPowerTalk> &
      Word$WdMailSystem__wdPowerTalk &
      2; // 2
  }

  declare class Word$WdMailSystem__wdMAPI mixins Word$WdMailSystem {}
  declare class Word$WdMailSystem__wdMAPIandPowerTalk
    mixins Word$WdMailSystem {}
  declare class Word$WdMailSystem__wdNoMailSystem mixins Word$WdMailSystem {}
  declare class Word$WdMailSystem__wdPowerTalk mixins Word$WdMailSystem {}

  declare class Word$WdMappedDataFields {
    constructor(...args: empty): mixed;
    static +wdAddress1: Class<Word$WdMappedDataFields__wdAddress1> &
      Word$WdMappedDataFields__wdAddress1 &
      10; // 10
    static +wdAddress2: Class<Word$WdMappedDataFields__wdAddress2> &
      Word$WdMappedDataFields__wdAddress2 &
      11; // 11
    static +wdAddress3: Class<Word$WdMappedDataFields__wdAddress3> &
      Word$WdMappedDataFields__wdAddress3 &
      29; // 29
    static +wdBusinessFax: Class<Word$WdMappedDataFields__wdBusinessFax> &
      Word$WdMappedDataFields__wdBusinessFax &
      17; // 17
    static +wdBusinessPhone: Class<Word$WdMappedDataFields__wdBusinessPhone> &
      Word$WdMappedDataFields__wdBusinessPhone &
      16; // 16
    static +wdCity: Class<Word$WdMappedDataFields__wdCity> &
      Word$WdMappedDataFields__wdCity &
      12; // 12
    static +wdCompany: Class<Word$WdMappedDataFields__wdCompany> &
      Word$WdMappedDataFields__wdCompany &
      9; // 9
    static +wdCountryRegion: Class<Word$WdMappedDataFields__wdCountryRegion> &
      Word$WdMappedDataFields__wdCountryRegion &
      15; // 15
    static +wdCourtesyTitle: Class<Word$WdMappedDataFields__wdCourtesyTitle> &
      Word$WdMappedDataFields__wdCourtesyTitle &
      2; // 2
    static +wdDepartment: Class<Word$WdMappedDataFields__wdDepartment> &
      Word$WdMappedDataFields__wdDepartment &
      30; // 30
    static +wdEmailAddress: Class<Word$WdMappedDataFields__wdEmailAddress> &
      Word$WdMappedDataFields__wdEmailAddress &
      20; // 20
    static +wdFirstName: Class<Word$WdMappedDataFields__wdFirstName> &
      Word$WdMappedDataFields__wdFirstName &
      3; // 3
    static +wdHomeFax: Class<Word$WdMappedDataFields__wdHomeFax> &
      Word$WdMappedDataFields__wdHomeFax &
      19; // 19
    static +wdHomePhone: Class<Word$WdMappedDataFields__wdHomePhone> &
      Word$WdMappedDataFields__wdHomePhone &
      18; // 18
    static +wdJobTitle: Class<Word$WdMappedDataFields__wdJobTitle> &
      Word$WdMappedDataFields__wdJobTitle &
      8; // 8
    static +wdLastName: Class<Word$WdMappedDataFields__wdLastName> &
      Word$WdMappedDataFields__wdLastName &
      5; // 5
    static +wdMiddleName: Class<Word$WdMappedDataFields__wdMiddleName> &
      Word$WdMappedDataFields__wdMiddleName &
      4; // 4
    static +wdNickname: Class<Word$WdMappedDataFields__wdNickname> &
      Word$WdMappedDataFields__wdNickname &
      7; // 7
    static +wdPostalCode: Class<Word$WdMappedDataFields__wdPostalCode> &
      Word$WdMappedDataFields__wdPostalCode &
      14; // 14
    static +wdRubyFirstName: Class<Word$WdMappedDataFields__wdRubyFirstName> &
      Word$WdMappedDataFields__wdRubyFirstName &
      27; // 27
    static +wdRubyLastName: Class<Word$WdMappedDataFields__wdRubyLastName> &
      Word$WdMappedDataFields__wdRubyLastName &
      28; // 28
    static +wdSpouseCourtesyTitle: Class<Word$WdMappedDataFields__wdSpouseCourtesyTitle> &
      Word$WdMappedDataFields__wdSpouseCourtesyTitle &
      22; // 22
    static +wdSpouseFirstName: Class<Word$WdMappedDataFields__wdSpouseFirstName> &
      Word$WdMappedDataFields__wdSpouseFirstName &
      23; // 23
    static +wdSpouseLastName: Class<Word$WdMappedDataFields__wdSpouseLastName> &
      Word$WdMappedDataFields__wdSpouseLastName &
      25; // 25
    static +wdSpouseMiddleName: Class<Word$WdMappedDataFields__wdSpouseMiddleName> &
      Word$WdMappedDataFields__wdSpouseMiddleName &
      24; // 24
    static +wdSpouseNickname: Class<Word$WdMappedDataFields__wdSpouseNickname> &
      Word$WdMappedDataFields__wdSpouseNickname &
      26; // 26
    static +wdState: Class<Word$WdMappedDataFields__wdState> &
      Word$WdMappedDataFields__wdState &
      13; // 13
    static +wdSuffix: Class<Word$WdMappedDataFields__wdSuffix> &
      Word$WdMappedDataFields__wdSuffix &
      6; // 6
    static +wdUniqueIdentifier: Class<Word$WdMappedDataFields__wdUniqueIdentifier> &
      Word$WdMappedDataFields__wdUniqueIdentifier &
      1; // 1
    static +wdWebPageURL: Class<Word$WdMappedDataFields__wdWebPageURL> &
      Word$WdMappedDataFields__wdWebPageURL &
      21; // 21
  }

  declare class Word$WdMappedDataFields__wdAddress1
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdAddress2
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdAddress3
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdBusinessFax
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdBusinessPhone
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdCity
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdCompany
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdCountryRegion
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdCourtesyTitle
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdDepartment
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdEmailAddress
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdFirstName
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdHomeFax
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdHomePhone
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdJobTitle
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdLastName
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdMiddleName
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdNickname
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdPostalCode
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdRubyFirstName
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdRubyLastName
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdSpouseCourtesyTitle
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdSpouseFirstName
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdSpouseLastName
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdSpouseMiddleName
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdSpouseNickname
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdState
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdSuffix
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdUniqueIdentifier
    mixins Word$WdMappedDataFields {}
  declare class Word$WdMappedDataFields__wdWebPageURL
    mixins Word$WdMappedDataFields {}

  declare class Word$WdMeasurementUnits {
    constructor(...args: empty): mixed;
    static +wdCentimeters: Class<Word$WdMeasurementUnits__wdCentimeters> &
      Word$WdMeasurementUnits__wdCentimeters &
      1; // 1
    static +wdInches: Class<Word$WdMeasurementUnits__wdInches> &
      Word$WdMeasurementUnits__wdInches &
      0; // 0
    static +wdMillimeters: Class<Word$WdMeasurementUnits__wdMillimeters> &
      Word$WdMeasurementUnits__wdMillimeters &
      2; // 2
    static +wdPicas: Class<Word$WdMeasurementUnits__wdPicas> &
      Word$WdMeasurementUnits__wdPicas &
      4; // 4
    static +wdPoints: Class<Word$WdMeasurementUnits__wdPoints> &
      Word$WdMeasurementUnits__wdPoints &
      3; // 3
  }

  declare class Word$WdMeasurementUnits__wdCentimeters
    mixins Word$WdMeasurementUnits {}
  declare class Word$WdMeasurementUnits__wdInches
    mixins Word$WdMeasurementUnits {}
  declare class Word$WdMeasurementUnits__wdMillimeters
    mixins Word$WdMeasurementUnits {}
  declare class Word$WdMeasurementUnits__wdPicas
    mixins Word$WdMeasurementUnits {}
  declare class Word$WdMeasurementUnits__wdPoints
    mixins Word$WdMeasurementUnits {}

  declare class Word$WdMeasurementUnitsHID {
    constructor(...args: empty): mixed;
    static +emptyenum: Class<Word$WdMeasurementUnitsHID__emptyenum> &
      Word$WdMeasurementUnitsHID__emptyenum &
      0; // 0
  }

  declare class Word$WdMeasurementUnitsHID__emptyenum
    mixins Word$WdMeasurementUnitsHID {}

  declare class Word$WdMergeFormatFrom {
    constructor(...args: empty): mixed;
    static +wdMergeFormatFromOriginal: Class<Word$WdMergeFormatFrom__wdMergeFormatFromOriginal> &
      Word$WdMergeFormatFrom__wdMergeFormatFromOriginal &
      0; // 0
    static +wdMergeFormatFromPrompt: Class<Word$WdMergeFormatFrom__wdMergeFormatFromPrompt> &
      Word$WdMergeFormatFrom__wdMergeFormatFromPrompt &
      2; // 2
    static +wdMergeFormatFromRevised: Class<Word$WdMergeFormatFrom__wdMergeFormatFromRevised> &
      Word$WdMergeFormatFrom__wdMergeFormatFromRevised &
      1; // 1
  }

  declare class Word$WdMergeFormatFrom__wdMergeFormatFromOriginal
    mixins Word$WdMergeFormatFrom {}
  declare class Word$WdMergeFormatFrom__wdMergeFormatFromPrompt
    mixins Word$WdMergeFormatFrom {}
  declare class Word$WdMergeFormatFrom__wdMergeFormatFromRevised
    mixins Word$WdMergeFormatFrom {}

  declare class Word$WdMergeSubType {
    constructor(...args: empty): mixed;
    static +wdMergeSubTypeAccess: Class<Word$WdMergeSubType__wdMergeSubTypeAccess> &
      Word$WdMergeSubType__wdMergeSubTypeAccess &
      1; // 1
    static +wdMergeSubTypeOAL: Class<Word$WdMergeSubType__wdMergeSubTypeOAL> &
      Word$WdMergeSubType__wdMergeSubTypeOAL &
      2; // 2
    static +wdMergeSubTypeOLEDBText: Class<Word$WdMergeSubType__wdMergeSubTypeOLEDBText> &
      Word$WdMergeSubType__wdMergeSubTypeOLEDBText &
      5; // 5
    static +wdMergeSubTypeOLEDBWord: Class<Word$WdMergeSubType__wdMergeSubTypeOLEDBWord> &
      Word$WdMergeSubType__wdMergeSubTypeOLEDBWord &
      3; // 3
    static +wdMergeSubTypeOther: Class<Word$WdMergeSubType__wdMergeSubTypeOther> &
      Word$WdMergeSubType__wdMergeSubTypeOther &
      0; // 0
    static +wdMergeSubTypeOutlook: Class<Word$WdMergeSubType__wdMergeSubTypeOutlook> &
      Word$WdMergeSubType__wdMergeSubTypeOutlook &
      6; // 6
    static +wdMergeSubTypeWord: Class<Word$WdMergeSubType__wdMergeSubTypeWord> &
      Word$WdMergeSubType__wdMergeSubTypeWord &
      7; // 7
    static +wdMergeSubTypeWord2000: Class<Word$WdMergeSubType__wdMergeSubTypeWord2000> &
      Word$WdMergeSubType__wdMergeSubTypeWord2000 &
      8; // 8
    static +wdMergeSubTypeWorks: Class<Word$WdMergeSubType__wdMergeSubTypeWorks> &
      Word$WdMergeSubType__wdMergeSubTypeWorks &
      4; // 4
  }

  declare class Word$WdMergeSubType__wdMergeSubTypeAccess
    mixins Word$WdMergeSubType {}
  declare class Word$WdMergeSubType__wdMergeSubTypeOAL
    mixins Word$WdMergeSubType {}
  declare class Word$WdMergeSubType__wdMergeSubTypeOLEDBText
    mixins Word$WdMergeSubType {}
  declare class Word$WdMergeSubType__wdMergeSubTypeOLEDBWord
    mixins Word$WdMergeSubType {}
  declare class Word$WdMergeSubType__wdMergeSubTypeOther
    mixins Word$WdMergeSubType {}
  declare class Word$WdMergeSubType__wdMergeSubTypeOutlook
    mixins Word$WdMergeSubType {}
  declare class Word$WdMergeSubType__wdMergeSubTypeWord
    mixins Word$WdMergeSubType {}
  declare class Word$WdMergeSubType__wdMergeSubTypeWord2000
    mixins Word$WdMergeSubType {}
  declare class Word$WdMergeSubType__wdMergeSubTypeWorks
    mixins Word$WdMergeSubType {}

  declare class Word$WdMergeTarget {
    constructor(...args: empty): mixed;
    static +wdMergeTargetCurrent: Class<Word$WdMergeTarget__wdMergeTargetCurrent> &
      Word$WdMergeTarget__wdMergeTargetCurrent &
      1; // 1
    static +wdMergeTargetNew: Class<Word$WdMergeTarget__wdMergeTargetNew> &
      Word$WdMergeTarget__wdMergeTargetNew &
      2; // 2
    static +wdMergeTargetSelected: Class<Word$WdMergeTarget__wdMergeTargetSelected> &
      Word$WdMergeTarget__wdMergeTargetSelected &
      0; // 0
  }

  declare class Word$WdMergeTarget__wdMergeTargetCurrent
    mixins Word$WdMergeTarget {}
  declare class Word$WdMergeTarget__wdMergeTargetNew
    mixins Word$WdMergeTarget {}
  declare class Word$WdMergeTarget__wdMergeTargetSelected
    mixins Word$WdMergeTarget {}

  declare class Word$WdMonthNames {
    constructor(...args: empty): mixed;
    static +wdMonthNamesArabic: Class<Word$WdMonthNames__wdMonthNamesArabic> &
      Word$WdMonthNames__wdMonthNamesArabic &
      0; // 0
    static +wdMonthNamesEnglish: Class<Word$WdMonthNames__wdMonthNamesEnglish> &
      Word$WdMonthNames__wdMonthNamesEnglish &
      1; // 1
    static +wdMonthNamesFrench: Class<Word$WdMonthNames__wdMonthNamesFrench> &
      Word$WdMonthNames__wdMonthNamesFrench &
      2; // 2
  }

  declare class Word$WdMonthNames__wdMonthNamesArabic
    mixins Word$WdMonthNames {}
  declare class Word$WdMonthNames__wdMonthNamesEnglish
    mixins Word$WdMonthNames {}
  declare class Word$WdMonthNames__wdMonthNamesFrench
    mixins Word$WdMonthNames {}

  declare class Word$WdMoveFromTextMark {
    constructor(...args: empty): mixed;
    static +wdMoveFromTextMarkBold: Class<Word$WdMoveFromTextMark__wdMoveFromTextMarkBold> &
      Word$WdMoveFromTextMark__wdMoveFromTextMarkBold &
      6; // 6
    static +wdMoveFromTextMarkCaret: Class<Word$WdMoveFromTextMark__wdMoveFromTextMarkCaret> &
      Word$WdMoveFromTextMark__wdMoveFromTextMarkCaret &
      3; // 3
    static +wdMoveFromTextMarkColorOnly: Class<Word$WdMoveFromTextMark__wdMoveFromTextMarkColorOnly> &
      Word$WdMoveFromTextMark__wdMoveFromTextMarkColorOnly &
      10; // 10
    static +wdMoveFromTextMarkDoubleStrikeThrough: Class<Word$WdMoveFromTextMark__wdMoveFromTextMarkDoubleStrikeThrough> &
      Word$WdMoveFromTextMark__wdMoveFromTextMarkDoubleStrikeThrough &
      1; // 1
    static +wdMoveFromTextMarkDoubleUnderline: Class<Word$WdMoveFromTextMark__wdMoveFromTextMarkDoubleUnderline> &
      Word$WdMoveFromTextMark__wdMoveFromTextMarkDoubleUnderline &
      9; // 9
    static +wdMoveFromTextMarkHidden: Class<Word$WdMoveFromTextMark__wdMoveFromTextMarkHidden> &
      Word$WdMoveFromTextMark__wdMoveFromTextMarkHidden &
      0; // 0
    static +wdMoveFromTextMarkItalic: Class<Word$WdMoveFromTextMark__wdMoveFromTextMarkItalic> &
      Word$WdMoveFromTextMark__wdMoveFromTextMarkItalic &
      7; // 7
    static +wdMoveFromTextMarkNone: Class<Word$WdMoveFromTextMark__wdMoveFromTextMarkNone> &
      Word$WdMoveFromTextMark__wdMoveFromTextMarkNone &
      5; // 5
    static +wdMoveFromTextMarkPound: Class<Word$WdMoveFromTextMark__wdMoveFromTextMarkPound> &
      Word$WdMoveFromTextMark__wdMoveFromTextMarkPound &
      4; // 4
    static +wdMoveFromTextMarkStrikeThrough: Class<Word$WdMoveFromTextMark__wdMoveFromTextMarkStrikeThrough> &
      Word$WdMoveFromTextMark__wdMoveFromTextMarkStrikeThrough &
      2; // 2
    static +wdMoveFromTextMarkUnderline: Class<Word$WdMoveFromTextMark__wdMoveFromTextMarkUnderline> &
      Word$WdMoveFromTextMark__wdMoveFromTextMarkUnderline &
      8; // 8
  }

  declare class Word$WdMoveFromTextMark__wdMoveFromTextMarkBold
    mixins Word$WdMoveFromTextMark {}
  declare class Word$WdMoveFromTextMark__wdMoveFromTextMarkCaret
    mixins Word$WdMoveFromTextMark {}
  declare class Word$WdMoveFromTextMark__wdMoveFromTextMarkColorOnly
    mixins Word$WdMoveFromTextMark {}
  declare class Word$WdMoveFromTextMark__wdMoveFromTextMarkDoubleStrikeThrough
    mixins Word$WdMoveFromTextMark {}
  declare class Word$WdMoveFromTextMark__wdMoveFromTextMarkDoubleUnderline
    mixins Word$WdMoveFromTextMark {}
  declare class Word$WdMoveFromTextMark__wdMoveFromTextMarkHidden
    mixins Word$WdMoveFromTextMark {}
  declare class Word$WdMoveFromTextMark__wdMoveFromTextMarkItalic
    mixins Word$WdMoveFromTextMark {}
  declare class Word$WdMoveFromTextMark__wdMoveFromTextMarkNone
    mixins Word$WdMoveFromTextMark {}
  declare class Word$WdMoveFromTextMark__wdMoveFromTextMarkPound
    mixins Word$WdMoveFromTextMark {}
  declare class Word$WdMoveFromTextMark__wdMoveFromTextMarkStrikeThrough
    mixins Word$WdMoveFromTextMark {}
  declare class Word$WdMoveFromTextMark__wdMoveFromTextMarkUnderline
    mixins Word$WdMoveFromTextMark {}

  declare class Word$WdMovementType {
    constructor(...args: empty): mixed;
    static +wdExtend: Class<Word$WdMovementType__wdExtend> &
      Word$WdMovementType__wdExtend &
      1; // 1
    static +wdMove: Class<Word$WdMovementType__wdMove> &
      Word$WdMovementType__wdMove &
      0; // 0
  }

  declare class Word$WdMovementType__wdExtend mixins Word$WdMovementType {}
  declare class Word$WdMovementType__wdMove mixins Word$WdMovementType {}

  declare class Word$WdMoveToTextMark {
    constructor(...args: empty): mixed;
    static +wdMoveToTextMarkBold: Class<Word$WdMoveToTextMark__wdMoveToTextMarkBold> &
      Word$WdMoveToTextMark__wdMoveToTextMarkBold &
      1; // 1
    static +wdMoveToTextMarkColorOnly: Class<Word$WdMoveToTextMark__wdMoveToTextMarkColorOnly> &
      Word$WdMoveToTextMark__wdMoveToTextMarkColorOnly &
      5; // 5
    static +wdMoveToTextMarkDoubleStrikeThrough: Class<Word$WdMoveToTextMark__wdMoveToTextMarkDoubleStrikeThrough> &
      Word$WdMoveToTextMark__wdMoveToTextMarkDoubleStrikeThrough &
      7; // 7
    static +wdMoveToTextMarkDoubleUnderline: Class<Word$WdMoveToTextMark__wdMoveToTextMarkDoubleUnderline> &
      Word$WdMoveToTextMark__wdMoveToTextMarkDoubleUnderline &
      4; // 4
    static +wdMoveToTextMarkItalic: Class<Word$WdMoveToTextMark__wdMoveToTextMarkItalic> &
      Word$WdMoveToTextMark__wdMoveToTextMarkItalic &
      2; // 2
    static +wdMoveToTextMarkNone: Class<Word$WdMoveToTextMark__wdMoveToTextMarkNone> &
      Word$WdMoveToTextMark__wdMoveToTextMarkNone &
      0; // 0
    static +wdMoveToTextMarkStrikeThrough: Class<Word$WdMoveToTextMark__wdMoveToTextMarkStrikeThrough> &
      Word$WdMoveToTextMark__wdMoveToTextMarkStrikeThrough &
      6; // 6
    static +wdMoveToTextMarkUnderline: Class<Word$WdMoveToTextMark__wdMoveToTextMarkUnderline> &
      Word$WdMoveToTextMark__wdMoveToTextMarkUnderline &
      3; // 3
  }

  declare class Word$WdMoveToTextMark__wdMoveToTextMarkBold
    mixins Word$WdMoveToTextMark {}
  declare class Word$WdMoveToTextMark__wdMoveToTextMarkColorOnly
    mixins Word$WdMoveToTextMark {}
  declare class Word$WdMoveToTextMark__wdMoveToTextMarkDoubleStrikeThrough
    mixins Word$WdMoveToTextMark {}
  declare class Word$WdMoveToTextMark__wdMoveToTextMarkDoubleUnderline
    mixins Word$WdMoveToTextMark {}
  declare class Word$WdMoveToTextMark__wdMoveToTextMarkItalic
    mixins Word$WdMoveToTextMark {}
  declare class Word$WdMoveToTextMark__wdMoveToTextMarkNone
    mixins Word$WdMoveToTextMark {}
  declare class Word$WdMoveToTextMark__wdMoveToTextMarkStrikeThrough
    mixins Word$WdMoveToTextMark {}
  declare class Word$WdMoveToTextMark__wdMoveToTextMarkUnderline
    mixins Word$WdMoveToTextMark {}

  declare class Word$WdMultipleWordConversionsMode {
    constructor(...args: empty): mixed;
    static +wdHangulToHanja: Class<Word$WdMultipleWordConversionsMode__wdHangulToHanja> &
      Word$WdMultipleWordConversionsMode__wdHangulToHanja &
      0; // 0
    static +wdHanjaToHangul: Class<Word$WdMultipleWordConversionsMode__wdHanjaToHangul> &
      Word$WdMultipleWordConversionsMode__wdHanjaToHangul &
      1; // 1
  }

  declare class Word$WdMultipleWordConversionsMode__wdHangulToHanja
    mixins Word$WdMultipleWordConversionsMode {}
  declare class Word$WdMultipleWordConversionsMode__wdHanjaToHangul
    mixins Word$WdMultipleWordConversionsMode {}

  declare class Word$WdNewDocumentType {
    constructor(...args: empty): mixed;
    static +wdNewBlankDocument: Class<Word$WdNewDocumentType__wdNewBlankDocument> &
      Word$WdNewDocumentType__wdNewBlankDocument &
      0; // 0
    static +wdNewEmailMessage: Class<Word$WdNewDocumentType__wdNewEmailMessage> &
      Word$WdNewDocumentType__wdNewEmailMessage &
      2; // 2
    static +wdNewFrameset: Class<Word$WdNewDocumentType__wdNewFrameset> &
      Word$WdNewDocumentType__wdNewFrameset &
      3; // 3
    static +wdNewWebPage: Class<Word$WdNewDocumentType__wdNewWebPage> &
      Word$WdNewDocumentType__wdNewWebPage &
      1; // 1
    static +wdNewXMLDocument: Class<Word$WdNewDocumentType__wdNewXMLDocument> &
      Word$WdNewDocumentType__wdNewXMLDocument &
      4; // 4
  }

  declare class Word$WdNewDocumentType__wdNewBlankDocument
    mixins Word$WdNewDocumentType {}
  declare class Word$WdNewDocumentType__wdNewEmailMessage
    mixins Word$WdNewDocumentType {}
  declare class Word$WdNewDocumentType__wdNewFrameset
    mixins Word$WdNewDocumentType {}
  declare class Word$WdNewDocumentType__wdNewWebPage
    mixins Word$WdNewDocumentType {}
  declare class Word$WdNewDocumentType__wdNewXMLDocument
    mixins Word$WdNewDocumentType {}

  declare class Word$WdNoteNumberStyle {
    constructor(...args: empty): mixed;
    static +wdNoteNumberStyleArabic: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleArabic> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleArabic &
      0; // 0
    static +wdNoteNumberStyleArabicFullWidth: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleArabicFullWidth> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleArabicFullWidth &
      14; // 14
    static +wdNoteNumberStyleArabicLetter1: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleArabicLetter1> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleArabicLetter1 &
      46; // 46
    static +wdNoteNumberStyleArabicLetter2: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleArabicLetter2> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleArabicLetter2 &
      48; // 48
    static +wdNoteNumberStyleHanjaRead: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleHanjaRead> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleHanjaRead &
      41; // 41
    static +wdNoteNumberStyleHanjaReadDigit: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleHanjaReadDigit> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleHanjaReadDigit &
      42; // 42
    static +wdNoteNumberStyleHebrewLetter1: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleHebrewLetter1> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleHebrewLetter1 &
      45; // 45
    static +wdNoteNumberStyleHebrewLetter2: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleHebrewLetter2> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleHebrewLetter2 &
      47; // 47
    static +wdNoteNumberStyleHindiArabic: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleHindiArabic> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleHindiArabic &
      51; // 51
    static +wdNoteNumberStyleHindiCardinalText: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleHindiCardinalText> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleHindiCardinalText &
      52; // 52
    static +wdNoteNumberStyleHindiLetter1: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleHindiLetter1> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleHindiLetter1 &
      49; // 49
    static +wdNoteNumberStyleHindiLetter2: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleHindiLetter2> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleHindiLetter2 &
      50; // 50
    static +wdNoteNumberStyleKanji: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleKanji> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleKanji &
      10; // 10
    static +wdNoteNumberStyleKanjiDigit: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleKanjiDigit> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleKanjiDigit &
      11; // 11
    static +wdNoteNumberStyleKanjiTraditional: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleKanjiTraditional> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleKanjiTraditional &
      16; // 16
    static +wdNoteNumberStyleLowercaseLetter: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleLowercaseLetter> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleLowercaseLetter &
      4; // 4
    static +wdNoteNumberStyleLowercaseRoman: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleLowercaseRoman> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleLowercaseRoman &
      2; // 2
    static +wdNoteNumberStyleNumberInCircle: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleNumberInCircle> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleNumberInCircle &
      18; // 18
    static +wdNoteNumberStyleSimpChinNum1: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleSimpChinNum1> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleSimpChinNum1 &
      37; // 37
    static +wdNoteNumberStyleSimpChinNum2: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleSimpChinNum2> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleSimpChinNum2 &
      38; // 38
    static +wdNoteNumberStyleSymbol: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleSymbol> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleSymbol &
      9; // 9
    static +wdNoteNumberStyleThaiArabic: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleThaiArabic> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleThaiArabic &
      54; // 54
    static +wdNoteNumberStyleThaiCardinalText: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleThaiCardinalText> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleThaiCardinalText &
      55; // 55
    static +wdNoteNumberStyleThaiLetter: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleThaiLetter> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleThaiLetter &
      53; // 53
    static +wdNoteNumberStyleTradChinNum1: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleTradChinNum1> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleTradChinNum1 &
      33; // 33
    static +wdNoteNumberStyleTradChinNum2: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleTradChinNum2> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleTradChinNum2 &
      34; // 34
    static +wdNoteNumberStyleUppercaseLetter: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleUppercaseLetter> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleUppercaseLetter &
      3; // 3
    static +wdNoteNumberStyleUppercaseRoman: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleUppercaseRoman> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleUppercaseRoman &
      1; // 1
    static +wdNoteNumberStyleVietCardinalText: Class<Word$WdNoteNumberStyle__wdNoteNumberStyleVietCardinalText> &
      Word$WdNoteNumberStyle__wdNoteNumberStyleVietCardinalText &
      56; // 56
  }

  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleArabic
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleArabicFullWidth
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleArabicLetter1
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleArabicLetter2
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleHanjaRead
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleHanjaReadDigit
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleHebrewLetter1
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleHebrewLetter2
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleHindiArabic
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleHindiCardinalText
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleHindiLetter1
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleHindiLetter2
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleKanji
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleKanjiDigit
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleKanjiTraditional
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleLowercaseLetter
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleLowercaseRoman
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleNumberInCircle
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleSimpChinNum1
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleSimpChinNum2
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleSymbol
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleThaiArabic
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleThaiCardinalText
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleThaiLetter
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleTradChinNum1
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleTradChinNum2
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleUppercaseLetter
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleUppercaseRoman
    mixins Word$WdNoteNumberStyle {}
  declare class Word$WdNoteNumberStyle__wdNoteNumberStyleVietCardinalText
    mixins Word$WdNoteNumberStyle {}

  declare class Word$WdNoteNumberStyleHID {
    constructor(...args: empty): mixed;
    static +emptyenum: Class<Word$WdNoteNumberStyleHID__emptyenum> &
      Word$WdNoteNumberStyleHID__emptyenum &
      0; // 0
  }

  declare class Word$WdNoteNumberStyleHID__emptyenum
    mixins Word$WdNoteNumberStyleHID {}

  declare class Word$WdNumberForm {
    constructor(...args: empty): mixed;
    static +wdNumberFormDefault: Class<Word$WdNumberForm__wdNumberFormDefault> &
      Word$WdNumberForm__wdNumberFormDefault &
      0; // 0
    static +wdNumberFormLining: Class<Word$WdNumberForm__wdNumberFormLining> &
      Word$WdNumberForm__wdNumberFormLining &
      1; // 1
    static +wdNumberFormOldStyle: Class<Word$WdNumberForm__wdNumberFormOldStyle> &
      Word$WdNumberForm__wdNumberFormOldStyle &
      2; // 2
  }

  declare class Word$WdNumberForm__wdNumberFormDefault
    mixins Word$WdNumberForm {}
  declare class Word$WdNumberForm__wdNumberFormLining
    mixins Word$WdNumberForm {}
  declare class Word$WdNumberForm__wdNumberFormOldStyle
    mixins Word$WdNumberForm {}

  declare class Word$WdNumberingRule {
    constructor(...args: empty): mixed;
    static +wdRestartContinuous: Class<Word$WdNumberingRule__wdRestartContinuous> &
      Word$WdNumberingRule__wdRestartContinuous &
      0; // 0
    static +wdRestartPage: Class<Word$WdNumberingRule__wdRestartPage> &
      Word$WdNumberingRule__wdRestartPage &
      2; // 2
    static +wdRestartSection: Class<Word$WdNumberingRule__wdRestartSection> &
      Word$WdNumberingRule__wdRestartSection &
      1; // 1
  }

  declare class Word$WdNumberingRule__wdRestartContinuous
    mixins Word$WdNumberingRule {}
  declare class Word$WdNumberingRule__wdRestartPage
    mixins Word$WdNumberingRule {}
  declare class Word$WdNumberingRule__wdRestartSection
    mixins Word$WdNumberingRule {}

  declare class Word$WdNumberSpacing {
    constructor(...args: empty): mixed;
    static +wdNumberSpacingDefault: Class<Word$WdNumberSpacing__wdNumberSpacingDefault> &
      Word$WdNumberSpacing__wdNumberSpacingDefault &
      0; // 0
    static +wdNumberSpacingProportional: Class<Word$WdNumberSpacing__wdNumberSpacingProportional> &
      Word$WdNumberSpacing__wdNumberSpacingProportional &
      1; // 1
    static +wdNumberSpacingTabular: Class<Word$WdNumberSpacing__wdNumberSpacingTabular> &
      Word$WdNumberSpacing__wdNumberSpacingTabular &
      2; // 2
  }

  declare class Word$WdNumberSpacing__wdNumberSpacingDefault
    mixins Word$WdNumberSpacing {}
  declare class Word$WdNumberSpacing__wdNumberSpacingProportional
    mixins Word$WdNumberSpacing {}
  declare class Word$WdNumberSpacing__wdNumberSpacingTabular
    mixins Word$WdNumberSpacing {}

  declare class Word$WdNumberStyleWordBasicBiDi {
    constructor(...args: empty): mixed;
    static +wdCaptionNumberStyleBidiLetter1: Class<Word$WdNumberStyleWordBasicBiDi__wdCaptionNumberStyleBidiLetter1> &
      Word$WdNumberStyleWordBasicBiDi__wdCaptionNumberStyleBidiLetter1 &
      49; // 49
    static +wdCaptionNumberStyleBidiLetter2: Class<Word$WdNumberStyleWordBasicBiDi__wdCaptionNumberStyleBidiLetter2> &
      Word$WdNumberStyleWordBasicBiDi__wdCaptionNumberStyleBidiLetter2 &
      50; // 50
    static +wdListNumberStyleBidi1: Class<Word$WdNumberStyleWordBasicBiDi__wdListNumberStyleBidi1> &
      Word$WdNumberStyleWordBasicBiDi__wdListNumberStyleBidi1 &
      49; // 49
    static +wdListNumberStyleBidi2: Class<Word$WdNumberStyleWordBasicBiDi__wdListNumberStyleBidi2> &
      Word$WdNumberStyleWordBasicBiDi__wdListNumberStyleBidi2 &
      50; // 50
    static +wdNoteNumberStyleBidiLetter1: Class<Word$WdNumberStyleWordBasicBiDi__wdNoteNumberStyleBidiLetter1> &
      Word$WdNumberStyleWordBasicBiDi__wdNoteNumberStyleBidiLetter1 &
      49; // 49
    static +wdNoteNumberStyleBidiLetter2: Class<Word$WdNumberStyleWordBasicBiDi__wdNoteNumberStyleBidiLetter2> &
      Word$WdNumberStyleWordBasicBiDi__wdNoteNumberStyleBidiLetter2 &
      50; // 50
    static +wdPageNumberStyleBidiLetter1: Class<Word$WdNumberStyleWordBasicBiDi__wdPageNumberStyleBidiLetter1> &
      Word$WdNumberStyleWordBasicBiDi__wdPageNumberStyleBidiLetter1 &
      49; // 49
    static +wdPageNumberStyleBidiLetter2: Class<Word$WdNumberStyleWordBasicBiDi__wdPageNumberStyleBidiLetter2> &
      Word$WdNumberStyleWordBasicBiDi__wdPageNumberStyleBidiLetter2 &
      50; // 50
  }

  declare class Word$WdNumberStyleWordBasicBiDi__wdCaptionNumberStyleBidiLetter1
    mixins Word$WdNumberStyleWordBasicBiDi {}
  declare class Word$WdNumberStyleWordBasicBiDi__wdCaptionNumberStyleBidiLetter2
    mixins Word$WdNumberStyleWordBasicBiDi {}
  declare class Word$WdNumberStyleWordBasicBiDi__wdListNumberStyleBidi1
    mixins Word$WdNumberStyleWordBasicBiDi {}
  declare class Word$WdNumberStyleWordBasicBiDi__wdListNumberStyleBidi2
    mixins Word$WdNumberStyleWordBasicBiDi {}
  declare class Word$WdNumberStyleWordBasicBiDi__wdNoteNumberStyleBidiLetter1
    mixins Word$WdNumberStyleWordBasicBiDi {}
  declare class Word$WdNumberStyleWordBasicBiDi__wdNoteNumberStyleBidiLetter2
    mixins Word$WdNumberStyleWordBasicBiDi {}
  declare class Word$WdNumberStyleWordBasicBiDi__wdPageNumberStyleBidiLetter1
    mixins Word$WdNumberStyleWordBasicBiDi {}
  declare class Word$WdNumberStyleWordBasicBiDi__wdPageNumberStyleBidiLetter2
    mixins Word$WdNumberStyleWordBasicBiDi {}

  declare class Word$WdNumberType {
    constructor(...args: empty): mixed;
    static +wdNumberAllNumbers: Class<Word$WdNumberType__wdNumberAllNumbers> &
      Word$WdNumberType__wdNumberAllNumbers &
      3; // 3
    static +wdNumberListNum: Class<Word$WdNumberType__wdNumberListNum> &
      Word$WdNumberType__wdNumberListNum &
      2; // 2
    static +wdNumberParagraph: Class<Word$WdNumberType__wdNumberParagraph> &
      Word$WdNumberType__wdNumberParagraph &
      1; // 1
  }

  declare class Word$WdNumberType__wdNumberAllNumbers
    mixins Word$WdNumberType {}
  declare class Word$WdNumberType__wdNumberListNum mixins Word$WdNumberType {}
  declare class Word$WdNumberType__wdNumberParagraph mixins Word$WdNumberType {}

  declare class Word$WdOLEPlacement {
    constructor(...args: empty): mixed;
    static +wdFloatOverText: Class<Word$WdOLEPlacement__wdFloatOverText> &
      Word$WdOLEPlacement__wdFloatOverText &
      1; // 1
    static +wdInLine: Class<Word$WdOLEPlacement__wdInLine> &
      Word$WdOLEPlacement__wdInLine &
      0; // 0
  }

  declare class Word$WdOLEPlacement__wdFloatOverText
    mixins Word$WdOLEPlacement {}
  declare class Word$WdOLEPlacement__wdInLine mixins Word$WdOLEPlacement {}

  declare class Word$WdOLEType {
    constructor(...args: empty): mixed;
    static +wdOLEControl: Class<Word$WdOLEType__wdOLEControl> &
      Word$WdOLEType__wdOLEControl &
      2; // 2
    static +wdOLEEmbed: Class<Word$WdOLEType__wdOLEEmbed> &
      Word$WdOLEType__wdOLEEmbed &
      1; // 1
    static +wdOLELink: Class<Word$WdOLEType__wdOLELink> &
      Word$WdOLEType__wdOLELink &
      0; // 0
  }

  declare class Word$WdOLEType__wdOLEControl mixins Word$WdOLEType {}
  declare class Word$WdOLEType__wdOLEEmbed mixins Word$WdOLEType {}
  declare class Word$WdOLEType__wdOLELink mixins Word$WdOLEType {}

  declare class Word$WdOLEVerb {
    constructor(...args: empty): mixed;
    static +wdOLEVerbDiscardUndoState: Class<Word$WdOLEVerb__wdOLEVerbDiscardUndoState> &
      Word$WdOLEVerb__wdOLEVerbDiscardUndoState &
      -6; // -6
    static +wdOLEVerbHide: Class<Word$WdOLEVerb__wdOLEVerbHide> &
      Word$WdOLEVerb__wdOLEVerbHide &
      -3; // -3
    static +wdOLEVerbInPlaceActivate: Class<Word$WdOLEVerb__wdOLEVerbInPlaceActivate> &
      Word$WdOLEVerb__wdOLEVerbInPlaceActivate &
      -5; // -5
    static +wdOLEVerbOpen: Class<Word$WdOLEVerb__wdOLEVerbOpen> &
      Word$WdOLEVerb__wdOLEVerbOpen &
      -2; // -2
    static +wdOLEVerbPrimary: Class<Word$WdOLEVerb__wdOLEVerbPrimary> &
      Word$WdOLEVerb__wdOLEVerbPrimary &
      0; // 0
    static +wdOLEVerbShow: Class<Word$WdOLEVerb__wdOLEVerbShow> &
      Word$WdOLEVerb__wdOLEVerbShow &
      -1; // -1
    static +wdOLEVerbUIActivate: Class<Word$WdOLEVerb__wdOLEVerbUIActivate> &
      Word$WdOLEVerb__wdOLEVerbUIActivate &
      -4; // -4
  }

  declare class Word$WdOLEVerb__wdOLEVerbDiscardUndoState
    mixins Word$WdOLEVerb {}
  declare class Word$WdOLEVerb__wdOLEVerbHide mixins Word$WdOLEVerb {}
  declare class Word$WdOLEVerb__wdOLEVerbInPlaceActivate
    mixins Word$WdOLEVerb {}
  declare class Word$WdOLEVerb__wdOLEVerbOpen mixins Word$WdOLEVerb {}
  declare class Word$WdOLEVerb__wdOLEVerbPrimary mixins Word$WdOLEVerb {}
  declare class Word$WdOLEVerb__wdOLEVerbShow mixins Word$WdOLEVerb {}
  declare class Word$WdOLEVerb__wdOLEVerbUIActivate mixins Word$WdOLEVerb {}

  declare class Word$WdOMathBreakBin {
    constructor(...args: empty): mixed;
    static +wdOMathBreakBinAfter: Class<Word$WdOMathBreakBin__wdOMathBreakBinAfter> &
      Word$WdOMathBreakBin__wdOMathBreakBinAfter &
      1; // 1
    static +wdOMathBreakBinBefore: Class<Word$WdOMathBreakBin__wdOMathBreakBinBefore> &
      Word$WdOMathBreakBin__wdOMathBreakBinBefore &
      0; // 0
    static +wdOMathBreakBinRepeat: Class<Word$WdOMathBreakBin__wdOMathBreakBinRepeat> &
      Word$WdOMathBreakBin__wdOMathBreakBinRepeat &
      2; // 2
  }

  declare class Word$WdOMathBreakBin__wdOMathBreakBinAfter
    mixins Word$WdOMathBreakBin {}
  declare class Word$WdOMathBreakBin__wdOMathBreakBinBefore
    mixins Word$WdOMathBreakBin {}
  declare class Word$WdOMathBreakBin__wdOMathBreakBinRepeat
    mixins Word$WdOMathBreakBin {}

  declare class Word$WdOMathBreakSub {
    constructor(...args: empty): mixed;
    static +wdOMathBreakSubMinusMinus: Class<Word$WdOMathBreakSub__wdOMathBreakSubMinusMinus> &
      Word$WdOMathBreakSub__wdOMathBreakSubMinusMinus &
      0; // 0
    static +wdOMathBreakSubMinusPlus: Class<Word$WdOMathBreakSub__wdOMathBreakSubMinusPlus> &
      Word$WdOMathBreakSub__wdOMathBreakSubMinusPlus &
      2; // 2
    static +wdOMathBreakSubPlusMinus: Class<Word$WdOMathBreakSub__wdOMathBreakSubPlusMinus> &
      Word$WdOMathBreakSub__wdOMathBreakSubPlusMinus &
      1; // 1
  }

  declare class Word$WdOMathBreakSub__wdOMathBreakSubMinusMinus
    mixins Word$WdOMathBreakSub {}
  declare class Word$WdOMathBreakSub__wdOMathBreakSubMinusPlus
    mixins Word$WdOMathBreakSub {}
  declare class Word$WdOMathBreakSub__wdOMathBreakSubPlusMinus
    mixins Word$WdOMathBreakSub {}

  declare class Word$WdOMathFracType {
    constructor(...args: empty): mixed;
    static +wdOMathFracBar: Class<Word$WdOMathFracType__wdOMathFracBar> &
      Word$WdOMathFracType__wdOMathFracBar &
      0; // 0
    static +wdOMathFracLin: Class<Word$WdOMathFracType__wdOMathFracLin> &
      Word$WdOMathFracType__wdOMathFracLin &
      3; // 3
    static +wdOMathFracNoBar: Class<Word$WdOMathFracType__wdOMathFracNoBar> &
      Word$WdOMathFracType__wdOMathFracNoBar &
      1; // 1
    static +wdOMathFracSkw: Class<Word$WdOMathFracType__wdOMathFracSkw> &
      Word$WdOMathFracType__wdOMathFracSkw &
      2; // 2
  }

  declare class Word$WdOMathFracType__wdOMathFracBar
    mixins Word$WdOMathFracType {}
  declare class Word$WdOMathFracType__wdOMathFracLin
    mixins Word$WdOMathFracType {}
  declare class Word$WdOMathFracType__wdOMathFracNoBar
    mixins Word$WdOMathFracType {}
  declare class Word$WdOMathFracType__wdOMathFracSkw
    mixins Word$WdOMathFracType {}

  declare class Word$WdOMathFunctionType {
    constructor(...args: empty): mixed;
    static +wdOMathFunctionAcc: Class<Word$WdOMathFunctionType__wdOMathFunctionAcc> &
      Word$WdOMathFunctionType__wdOMathFunctionAcc &
      1; // 1
    static +wdOMathFunctionBar: Class<Word$WdOMathFunctionType__wdOMathFunctionBar> &
      Word$WdOMathFunctionType__wdOMathFunctionBar &
      2; // 2
    static +wdOMathFunctionBorderBox: Class<Word$WdOMathFunctionType__wdOMathFunctionBorderBox> &
      Word$WdOMathFunctionType__wdOMathFunctionBorderBox &
      4; // 4
    static +wdOMathFunctionBox: Class<Word$WdOMathFunctionType__wdOMathFunctionBox> &
      Word$WdOMathFunctionType__wdOMathFunctionBox &
      3; // 3
    static +wdOMathFunctionDelim: Class<Word$WdOMathFunctionType__wdOMathFunctionDelim> &
      Word$WdOMathFunctionType__wdOMathFunctionDelim &
      5; // 5
    static +wdOMathFunctionEqArray: Class<Word$WdOMathFunctionType__wdOMathFunctionEqArray> &
      Word$WdOMathFunctionType__wdOMathFunctionEqArray &
      6; // 6
    static +wdOMathFunctionFrac: Class<Word$WdOMathFunctionType__wdOMathFunctionFrac> &
      Word$WdOMathFunctionType__wdOMathFunctionFrac &
      7; // 7
    static +wdOMathFunctionFunc: Class<Word$WdOMathFunctionType__wdOMathFunctionFunc> &
      Word$WdOMathFunctionType__wdOMathFunctionFunc &
      8; // 8
    static +wdOMathFunctionGroupChar: Class<Word$WdOMathFunctionType__wdOMathFunctionGroupChar> &
      Word$WdOMathFunctionType__wdOMathFunctionGroupChar &
      9; // 9
    static +wdOMathFunctionLimLow: Class<Word$WdOMathFunctionType__wdOMathFunctionLimLow> &
      Word$WdOMathFunctionType__wdOMathFunctionLimLow &
      10; // 10
    static +wdOMathFunctionLimUpp: Class<Word$WdOMathFunctionType__wdOMathFunctionLimUpp> &
      Word$WdOMathFunctionType__wdOMathFunctionLimUpp &
      11; // 11
    static +wdOMathFunctionLiteralText: Class<Word$WdOMathFunctionType__wdOMathFunctionLiteralText> &
      Word$WdOMathFunctionType__wdOMathFunctionLiteralText &
      22; // 22
    static +wdOMathFunctionMat: Class<Word$WdOMathFunctionType__wdOMathFunctionMat> &
      Word$WdOMathFunctionType__wdOMathFunctionMat &
      12; // 12
    static +wdOMathFunctionNary: Class<Word$WdOMathFunctionType__wdOMathFunctionNary> &
      Word$WdOMathFunctionType__wdOMathFunctionNary &
      13; // 13
    static +wdOMathFunctionNormalText: Class<Word$WdOMathFunctionType__wdOMathFunctionNormalText> &
      Word$WdOMathFunctionType__wdOMathFunctionNormalText &
      21; // 21
    static +wdOMathFunctionPhantom: Class<Word$WdOMathFunctionType__wdOMathFunctionPhantom> &
      Word$WdOMathFunctionType__wdOMathFunctionPhantom &
      14; // 14
    static +wdOMathFunctionRad: Class<Word$WdOMathFunctionType__wdOMathFunctionRad> &
      Word$WdOMathFunctionType__wdOMathFunctionRad &
      16; // 16
    static +wdOMathFunctionScrPre: Class<Word$WdOMathFunctionType__wdOMathFunctionScrPre> &
      Word$WdOMathFunctionType__wdOMathFunctionScrPre &
      15; // 15
    static +wdOMathFunctionScrSub: Class<Word$WdOMathFunctionType__wdOMathFunctionScrSub> &
      Word$WdOMathFunctionType__wdOMathFunctionScrSub &
      17; // 17
    static +wdOMathFunctionScrSubSup: Class<Word$WdOMathFunctionType__wdOMathFunctionScrSubSup> &
      Word$WdOMathFunctionType__wdOMathFunctionScrSubSup &
      18; // 18
    static +wdOMathFunctionScrSup: Class<Word$WdOMathFunctionType__wdOMathFunctionScrSup> &
      Word$WdOMathFunctionType__wdOMathFunctionScrSup &
      19; // 19
    static +wdOMathFunctionText: Class<Word$WdOMathFunctionType__wdOMathFunctionText> &
      Word$WdOMathFunctionType__wdOMathFunctionText &
      20; // 20
  }

  declare class Word$WdOMathFunctionType__wdOMathFunctionAcc
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionBar
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionBorderBox
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionBox
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionDelim
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionEqArray
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionFrac
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionFunc
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionGroupChar
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionLimLow
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionLimUpp
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionLiteralText
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionMat
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionNary
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionNormalText
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionPhantom
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionRad
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionScrPre
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionScrSub
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionScrSubSup
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionScrSup
    mixins Word$WdOMathFunctionType {}
  declare class Word$WdOMathFunctionType__wdOMathFunctionText
    mixins Word$WdOMathFunctionType {}

  declare class Word$WdOMathHorizAlignType {
    constructor(...args: empty): mixed;
    static +wdOMathHorizAlignCenter: Class<Word$WdOMathHorizAlignType__wdOMathHorizAlignCenter> &
      Word$WdOMathHorizAlignType__wdOMathHorizAlignCenter &
      0; // 0
    static +wdOMathHorizAlignLeft: Class<Word$WdOMathHorizAlignType__wdOMathHorizAlignLeft> &
      Word$WdOMathHorizAlignType__wdOMathHorizAlignLeft &
      1; // 1
    static +wdOMathHorizAlignRight: Class<Word$WdOMathHorizAlignType__wdOMathHorizAlignRight> &
      Word$WdOMathHorizAlignType__wdOMathHorizAlignRight &
      2; // 2
  }

  declare class Word$WdOMathHorizAlignType__wdOMathHorizAlignCenter
    mixins Word$WdOMathHorizAlignType {}
  declare class Word$WdOMathHorizAlignType__wdOMathHorizAlignLeft
    mixins Word$WdOMathHorizAlignType {}
  declare class Word$WdOMathHorizAlignType__wdOMathHorizAlignRight
    mixins Word$WdOMathHorizAlignType {}

  declare class Word$WdOMathJc {
    constructor(...args: empty): mixed;
    static +wdOMathJcCenter: Class<Word$WdOMathJc__wdOMathJcCenter> &
      Word$WdOMathJc__wdOMathJcCenter &
      2; // 2
    static +wdOMathJcCenterGroup: Class<Word$WdOMathJc__wdOMathJcCenterGroup> &
      Word$WdOMathJc__wdOMathJcCenterGroup &
      1; // 1
    static +wdOMathJcInline: Class<Word$WdOMathJc__wdOMathJcInline> &
      Word$WdOMathJc__wdOMathJcInline &
      7; // 7
    static +wdOMathJcLeft: Class<Word$WdOMathJc__wdOMathJcLeft> &
      Word$WdOMathJc__wdOMathJcLeft &
      3; // 3
    static +wdOMathJcRight: Class<Word$WdOMathJc__wdOMathJcRight> &
      Word$WdOMathJc__wdOMathJcRight &
      4; // 4
  }

  declare class Word$WdOMathJc__wdOMathJcCenter mixins Word$WdOMathJc {}
  declare class Word$WdOMathJc__wdOMathJcCenterGroup mixins Word$WdOMathJc {}
  declare class Word$WdOMathJc__wdOMathJcInline mixins Word$WdOMathJc {}
  declare class Word$WdOMathJc__wdOMathJcLeft mixins Word$WdOMathJc {}
  declare class Word$WdOMathJc__wdOMathJcRight mixins Word$WdOMathJc {}

  declare class Word$WdOMathShapeType {
    constructor(...args: empty): mixed;
    static +wdOMathShapeCentered: Class<Word$WdOMathShapeType__wdOMathShapeCentered> &
      Word$WdOMathShapeType__wdOMathShapeCentered &
      0; // 0
    static +wdOMathShapeMatch: Class<Word$WdOMathShapeType__wdOMathShapeMatch> &
      Word$WdOMathShapeType__wdOMathShapeMatch &
      1; // 1
  }

  declare class Word$WdOMathShapeType__wdOMathShapeCentered
    mixins Word$WdOMathShapeType {}
  declare class Word$WdOMathShapeType__wdOMathShapeMatch
    mixins Word$WdOMathShapeType {}

  declare class Word$WdOMathSpacingRule {
    constructor(...args: empty): mixed;
    static +wdOMathSpacing1pt5: Class<Word$WdOMathSpacingRule__wdOMathSpacing1pt5> &
      Word$WdOMathSpacingRule__wdOMathSpacing1pt5 &
      1; // 1
    static +wdOMathSpacingDouble: Class<Word$WdOMathSpacingRule__wdOMathSpacingDouble> &
      Word$WdOMathSpacingRule__wdOMathSpacingDouble &
      2; // 2
    static +wdOMathSpacingExactly: Class<Word$WdOMathSpacingRule__wdOMathSpacingExactly> &
      Word$WdOMathSpacingRule__wdOMathSpacingExactly &
      3; // 3
    static +wdOMathSpacingMultiple: Class<Word$WdOMathSpacingRule__wdOMathSpacingMultiple> &
      Word$WdOMathSpacingRule__wdOMathSpacingMultiple &
      4; // 4
    static +wdOMathSpacingSingle: Class<Word$WdOMathSpacingRule__wdOMathSpacingSingle> &
      Word$WdOMathSpacingRule__wdOMathSpacingSingle &
      0; // 0
  }

  declare class Word$WdOMathSpacingRule__wdOMathSpacing1pt5
    mixins Word$WdOMathSpacingRule {}
  declare class Word$WdOMathSpacingRule__wdOMathSpacingDouble
    mixins Word$WdOMathSpacingRule {}
  declare class Word$WdOMathSpacingRule__wdOMathSpacingExactly
    mixins Word$WdOMathSpacingRule {}
  declare class Word$WdOMathSpacingRule__wdOMathSpacingMultiple
    mixins Word$WdOMathSpacingRule {}
  declare class Word$WdOMathSpacingRule__wdOMathSpacingSingle
    mixins Word$WdOMathSpacingRule {}

  declare class Word$WdOMathType {
    constructor(...args: empty): mixed;
    static +wdOMathDisplay: Class<Word$WdOMathType__wdOMathDisplay> &
      Word$WdOMathType__wdOMathDisplay &
      0; // 0
    static +wdOMathInline: Class<Word$WdOMathType__wdOMathInline> &
      Word$WdOMathType__wdOMathInline &
      1; // 1
  }

  declare class Word$WdOMathType__wdOMathDisplay mixins Word$WdOMathType {}
  declare class Word$WdOMathType__wdOMathInline mixins Word$WdOMathType {}

  declare class Word$WdOMathVertAlignType {
    constructor(...args: empty): mixed;
    static +wdOMathVertAlignBottom: Class<Word$WdOMathVertAlignType__wdOMathVertAlignBottom> &
      Word$WdOMathVertAlignType__wdOMathVertAlignBottom &
      2; // 2
    static +wdOMathVertAlignCenter: Class<Word$WdOMathVertAlignType__wdOMathVertAlignCenter> &
      Word$WdOMathVertAlignType__wdOMathVertAlignCenter &
      0; // 0
    static +wdOMathVertAlignTop: Class<Word$WdOMathVertAlignType__wdOMathVertAlignTop> &
      Word$WdOMathVertAlignType__wdOMathVertAlignTop &
      1; // 1
  }

  declare class Word$WdOMathVertAlignType__wdOMathVertAlignBottom
    mixins Word$WdOMathVertAlignType {}
  declare class Word$WdOMathVertAlignType__wdOMathVertAlignCenter
    mixins Word$WdOMathVertAlignType {}
  declare class Word$WdOMathVertAlignType__wdOMathVertAlignTop
    mixins Word$WdOMathVertAlignType {}

  declare class Word$WdOpenFormat {
    constructor(...args: empty): mixed;
    static +wdOpenFormatAllWord: Class<Word$WdOpenFormat__wdOpenFormatAllWord> &
      Word$WdOpenFormat__wdOpenFormatAllWord &
      6; // 6
    static +wdOpenFormatAllWordTemplates: Class<Word$WdOpenFormat__wdOpenFormatAllWordTemplates> &
      Word$WdOpenFormat__wdOpenFormatAllWordTemplates &
      13; // 13
    static +wdOpenFormatAuto: Class<Word$WdOpenFormat__wdOpenFormatAuto> &
      Word$WdOpenFormat__wdOpenFormatAuto &
      0; // 0
    static +wdOpenFormatDocument: Class<Word$WdOpenFormat__wdOpenFormatDocument> &
      Word$WdOpenFormat__wdOpenFormatDocument &
      1; // 1
    static +wdOpenFormatDocument97: Class<Word$WdOpenFormat__wdOpenFormatDocument97> &
      Word$WdOpenFormat__wdOpenFormatDocument97 &
      1; // 1
    static +wdOpenFormatEncodedText: Class<Word$WdOpenFormat__wdOpenFormatEncodedText> &
      Word$WdOpenFormat__wdOpenFormatEncodedText &
      5; // 5
    static +wdOpenFormatOpenDocumentText: Class<Word$WdOpenFormat__wdOpenFormatOpenDocumentText> &
      Word$WdOpenFormat__wdOpenFormatOpenDocumentText &
      18; // 18
    static +wdOpenFormatRTF: Class<Word$WdOpenFormat__wdOpenFormatRTF> &
      Word$WdOpenFormat__wdOpenFormatRTF &
      3; // 3
    static +wdOpenFormatTemplate: Class<Word$WdOpenFormat__wdOpenFormatTemplate> &
      Word$WdOpenFormat__wdOpenFormatTemplate &
      2; // 2
    static +wdOpenFormatTemplate97: Class<Word$WdOpenFormat__wdOpenFormatTemplate97> &
      Word$WdOpenFormat__wdOpenFormatTemplate97 &
      2; // 2
    static +wdOpenFormatText: Class<Word$WdOpenFormat__wdOpenFormatText> &
      Word$WdOpenFormat__wdOpenFormatText &
      4; // 4
    static +wdOpenFormatUnicodeText: Class<Word$WdOpenFormat__wdOpenFormatUnicodeText> &
      Word$WdOpenFormat__wdOpenFormatUnicodeText &
      5; // 5
    static +wdOpenFormatWebPages: Class<Word$WdOpenFormat__wdOpenFormatWebPages> &
      Word$WdOpenFormat__wdOpenFormatWebPages &
      7; // 7
    static +wdOpenFormatXML: Class<Word$WdOpenFormat__wdOpenFormatXML> &
      Word$WdOpenFormat__wdOpenFormatXML &
      8; // 8
    static +wdOpenFormatXMLDocument: Class<Word$WdOpenFormat__wdOpenFormatXMLDocument> &
      Word$WdOpenFormat__wdOpenFormatXMLDocument &
      9; // 9
    static +wdOpenFormatXMLDocumentMacroEnabled: Class<Word$WdOpenFormat__wdOpenFormatXMLDocumentMacroEnabled> &
      Word$WdOpenFormat__wdOpenFormatXMLDocumentMacroEnabled &
      10; // 10
    static +wdOpenFormatXMLDocumentMacroEnabledSerialized: Class<Word$WdOpenFormat__wdOpenFormatXMLDocumentMacroEnabledSerialized> &
      Word$WdOpenFormat__wdOpenFormatXMLDocumentMacroEnabledSerialized &
      15; // 15
    static +wdOpenFormatXMLDocumentSerialized: Class<Word$WdOpenFormat__wdOpenFormatXMLDocumentSerialized> &
      Word$WdOpenFormat__wdOpenFormatXMLDocumentSerialized &
      14; // 14
    static +wdOpenFormatXMLTemplate: Class<Word$WdOpenFormat__wdOpenFormatXMLTemplate> &
      Word$WdOpenFormat__wdOpenFormatXMLTemplate &
      11; // 11
    static +wdOpenFormatXMLTemplateMacroEnabled: Class<Word$WdOpenFormat__wdOpenFormatXMLTemplateMacroEnabled> &
      Word$WdOpenFormat__wdOpenFormatXMLTemplateMacroEnabled &
      12; // 12
    static +wdOpenFormatXMLTemplateMacroEnabledSerialized: Class<Word$WdOpenFormat__wdOpenFormatXMLTemplateMacroEnabledSerialized> &
      Word$WdOpenFormat__wdOpenFormatXMLTemplateMacroEnabledSerialized &
      17; // 17
    static +wdOpenFormatXMLTemplateSerialized: Class<Word$WdOpenFormat__wdOpenFormatXMLTemplateSerialized> &
      Word$WdOpenFormat__wdOpenFormatXMLTemplateSerialized &
      16; // 16
  }

  declare class Word$WdOpenFormat__wdOpenFormatAllWord
    mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatAllWordTemplates
    mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatAuto mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatDocument
    mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatDocument97
    mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatEncodedText
    mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatOpenDocumentText
    mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatRTF mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatTemplate
    mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatTemplate97
    mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatText mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatUnicodeText
    mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatWebPages
    mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatXML mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatXMLDocument
    mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatXMLDocumentMacroEnabled
    mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatXMLDocumentMacroEnabledSerialized
    mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatXMLDocumentSerialized
    mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatXMLTemplate
    mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatXMLTemplateMacroEnabled
    mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatXMLTemplateMacroEnabledSerialized
    mixins Word$WdOpenFormat {}
  declare class Word$WdOpenFormat__wdOpenFormatXMLTemplateSerialized
    mixins Word$WdOpenFormat {}

  declare class Word$WdOrganizerObject {
    constructor(...args: empty): mixed;
    static +wdOrganizerObjectAutoText: Class<Word$WdOrganizerObject__wdOrganizerObjectAutoText> &
      Word$WdOrganizerObject__wdOrganizerObjectAutoText &
      1; // 1
    static +wdOrganizerObjectCommandBars: Class<Word$WdOrganizerObject__wdOrganizerObjectCommandBars> &
      Word$WdOrganizerObject__wdOrganizerObjectCommandBars &
      2; // 2
    static +wdOrganizerObjectProjectItems: Class<Word$WdOrganizerObject__wdOrganizerObjectProjectItems> &
      Word$WdOrganizerObject__wdOrganizerObjectProjectItems &
      3; // 3
    static +wdOrganizerObjectStyles: Class<Word$WdOrganizerObject__wdOrganizerObjectStyles> &
      Word$WdOrganizerObject__wdOrganizerObjectStyles &
      0; // 0
  }

  declare class Word$WdOrganizerObject__wdOrganizerObjectAutoText
    mixins Word$WdOrganizerObject {}
  declare class Word$WdOrganizerObject__wdOrganizerObjectCommandBars
    mixins Word$WdOrganizerObject {}
  declare class Word$WdOrganizerObject__wdOrganizerObjectProjectItems
    mixins Word$WdOrganizerObject {}
  declare class Word$WdOrganizerObject__wdOrganizerObjectStyles
    mixins Word$WdOrganizerObject {}

  declare class Word$WdOrientation {
    constructor(...args: empty): mixed;
    static +wdOrientLandscape: Class<Word$WdOrientation__wdOrientLandscape> &
      Word$WdOrientation__wdOrientLandscape &
      1; // 1
    static +wdOrientPortrait: Class<Word$WdOrientation__wdOrientPortrait> &
      Word$WdOrientation__wdOrientPortrait &
      0; // 0
  }

  declare class Word$WdOrientation__wdOrientLandscape
    mixins Word$WdOrientation {}
  declare class Word$WdOrientation__wdOrientPortrait
    mixins Word$WdOrientation {}

  declare class Word$WdOriginalFormat {
    constructor(...args: empty): mixed;
    static +wdOriginalDocumentFormat: Class<Word$WdOriginalFormat__wdOriginalDocumentFormat> &
      Word$WdOriginalFormat__wdOriginalDocumentFormat &
      1; // 1
    static +wdPromptUser: Class<Word$WdOriginalFormat__wdPromptUser> &
      Word$WdOriginalFormat__wdPromptUser &
      2; // 2
    static +wdWordDocument: Class<Word$WdOriginalFormat__wdWordDocument> &
      Word$WdOriginalFormat__wdWordDocument &
      0; // 0
  }

  declare class Word$WdOriginalFormat__wdOriginalDocumentFormat
    mixins Word$WdOriginalFormat {}
  declare class Word$WdOriginalFormat__wdPromptUser
    mixins Word$WdOriginalFormat {}
  declare class Word$WdOriginalFormat__wdWordDocument
    mixins Word$WdOriginalFormat {}

  declare class Word$WdOutlineLevel {
    constructor(...args: empty): mixed;
    static +wdOutlineLevel1: Class<Word$WdOutlineLevel__wdOutlineLevel1> &
      Word$WdOutlineLevel__wdOutlineLevel1 &
      1; // 1
    static +wdOutlineLevel2: Class<Word$WdOutlineLevel__wdOutlineLevel2> &
      Word$WdOutlineLevel__wdOutlineLevel2 &
      2; // 2
    static +wdOutlineLevel3: Class<Word$WdOutlineLevel__wdOutlineLevel3> &
      Word$WdOutlineLevel__wdOutlineLevel3 &
      3; // 3
    static +wdOutlineLevel4: Class<Word$WdOutlineLevel__wdOutlineLevel4> &
      Word$WdOutlineLevel__wdOutlineLevel4 &
      4; // 4
    static +wdOutlineLevel5: Class<Word$WdOutlineLevel__wdOutlineLevel5> &
      Word$WdOutlineLevel__wdOutlineLevel5 &
      5; // 5
    static +wdOutlineLevel6: Class<Word$WdOutlineLevel__wdOutlineLevel6> &
      Word$WdOutlineLevel__wdOutlineLevel6 &
      6; // 6
    static +wdOutlineLevel7: Class<Word$WdOutlineLevel__wdOutlineLevel7> &
      Word$WdOutlineLevel__wdOutlineLevel7 &
      7; // 7
    static +wdOutlineLevel8: Class<Word$WdOutlineLevel__wdOutlineLevel8> &
      Word$WdOutlineLevel__wdOutlineLevel8 &
      8; // 8
    static +wdOutlineLevel9: Class<Word$WdOutlineLevel__wdOutlineLevel9> &
      Word$WdOutlineLevel__wdOutlineLevel9 &
      9; // 9
    static +wdOutlineLevelBodyText: Class<Word$WdOutlineLevel__wdOutlineLevelBodyText> &
      Word$WdOutlineLevel__wdOutlineLevelBodyText &
      10; // 10
  }

  declare class Word$WdOutlineLevel__wdOutlineLevel1
    mixins Word$WdOutlineLevel {}
  declare class Word$WdOutlineLevel__wdOutlineLevel2
    mixins Word$WdOutlineLevel {}
  declare class Word$WdOutlineLevel__wdOutlineLevel3
    mixins Word$WdOutlineLevel {}
  declare class Word$WdOutlineLevel__wdOutlineLevel4
    mixins Word$WdOutlineLevel {}
  declare class Word$WdOutlineLevel__wdOutlineLevel5
    mixins Word$WdOutlineLevel {}
  declare class Word$WdOutlineLevel__wdOutlineLevel6
    mixins Word$WdOutlineLevel {}
  declare class Word$WdOutlineLevel__wdOutlineLevel7
    mixins Word$WdOutlineLevel {}
  declare class Word$WdOutlineLevel__wdOutlineLevel8
    mixins Word$WdOutlineLevel {}
  declare class Word$WdOutlineLevel__wdOutlineLevel9
    mixins Word$WdOutlineLevel {}
  declare class Word$WdOutlineLevel__wdOutlineLevelBodyText
    mixins Word$WdOutlineLevel {}

  declare class Word$WdPageBorderArt {
    constructor(...args: empty): mixed;
    static +wdArtApples: Class<Word$WdPageBorderArt__wdArtApples> &
      Word$WdPageBorderArt__wdArtApples &
      1; // 1
    static +wdArtArchedScallops: Class<Word$WdPageBorderArt__wdArtArchedScallops> &
      Word$WdPageBorderArt__wdArtArchedScallops &
      97; // 97
    static +wdArtBabyPacifier: Class<Word$WdPageBorderArt__wdArtBabyPacifier> &
      Word$WdPageBorderArt__wdArtBabyPacifier &
      70; // 70
    static +wdArtBabyRattle: Class<Word$WdPageBorderArt__wdArtBabyRattle> &
      Word$WdPageBorderArt__wdArtBabyRattle &
      71; // 71
    static +wdArtBalloons3Colors: Class<Word$WdPageBorderArt__wdArtBalloons3Colors> &
      Word$WdPageBorderArt__wdArtBalloons3Colors &
      11; // 11
    static +wdArtBalloonsHotAir: Class<Word$WdPageBorderArt__wdArtBalloonsHotAir> &
      Word$WdPageBorderArt__wdArtBalloonsHotAir &
      12; // 12
    static +wdArtBasicBlackDashes: Class<Word$WdPageBorderArt__wdArtBasicBlackDashes> &
      Word$WdPageBorderArt__wdArtBasicBlackDashes &
      155; // 155
    static +wdArtBasicBlackDots: Class<Word$WdPageBorderArt__wdArtBasicBlackDots> &
      Word$WdPageBorderArt__wdArtBasicBlackDots &
      156; // 156
    static +wdArtBasicBlackSquares: Class<Word$WdPageBorderArt__wdArtBasicBlackSquares> &
      Word$WdPageBorderArt__wdArtBasicBlackSquares &
      154; // 154
    static +wdArtBasicThinLines: Class<Word$WdPageBorderArt__wdArtBasicThinLines> &
      Word$WdPageBorderArt__wdArtBasicThinLines &
      151; // 151
    static +wdArtBasicWhiteDashes: Class<Word$WdPageBorderArt__wdArtBasicWhiteDashes> &
      Word$WdPageBorderArt__wdArtBasicWhiteDashes &
      152; // 152
    static +wdArtBasicWhiteDots: Class<Word$WdPageBorderArt__wdArtBasicWhiteDots> &
      Word$WdPageBorderArt__wdArtBasicWhiteDots &
      147; // 147
    static +wdArtBasicWhiteSquares: Class<Word$WdPageBorderArt__wdArtBasicWhiteSquares> &
      Word$WdPageBorderArt__wdArtBasicWhiteSquares &
      153; // 153
    static +wdArtBasicWideInline: Class<Word$WdPageBorderArt__wdArtBasicWideInline> &
      Word$WdPageBorderArt__wdArtBasicWideInline &
      150; // 150
    static +wdArtBasicWideMidline: Class<Word$WdPageBorderArt__wdArtBasicWideMidline> &
      Word$WdPageBorderArt__wdArtBasicWideMidline &
      148; // 148
    static +wdArtBasicWideOutline: Class<Word$WdPageBorderArt__wdArtBasicWideOutline> &
      Word$WdPageBorderArt__wdArtBasicWideOutline &
      149; // 149
    static +wdArtBats: Class<Word$WdPageBorderArt__wdArtBats> &
      Word$WdPageBorderArt__wdArtBats &
      37; // 37
    static +wdArtBirds: Class<Word$WdPageBorderArt__wdArtBirds> &
      Word$WdPageBorderArt__wdArtBirds &
      102; // 102
    static +wdArtBirdsFlight: Class<Word$WdPageBorderArt__wdArtBirdsFlight> &
      Word$WdPageBorderArt__wdArtBirdsFlight &
      35; // 35
    static +wdArtCabins: Class<Word$WdPageBorderArt__wdArtCabins> &
      Word$WdPageBorderArt__wdArtCabins &
      72; // 72
    static +wdArtCakeSlice: Class<Word$WdPageBorderArt__wdArtCakeSlice> &
      Word$WdPageBorderArt__wdArtCakeSlice &
      3; // 3
    static +wdArtCandyCorn: Class<Word$WdPageBorderArt__wdArtCandyCorn> &
      Word$WdPageBorderArt__wdArtCandyCorn &
      4; // 4
    static +wdArtCelticKnotwork: Class<Word$WdPageBorderArt__wdArtCelticKnotwork> &
      Word$WdPageBorderArt__wdArtCelticKnotwork &
      99; // 99
    static +wdArtCertificateBanner: Class<Word$WdPageBorderArt__wdArtCertificateBanner> &
      Word$WdPageBorderArt__wdArtCertificateBanner &
      158; // 158
    static +wdArtChainLink: Class<Word$WdPageBorderArt__wdArtChainLink> &
      Word$WdPageBorderArt__wdArtChainLink &
      128; // 128
    static +wdArtChampagneBottle: Class<Word$WdPageBorderArt__wdArtChampagneBottle> &
      Word$WdPageBorderArt__wdArtChampagneBottle &
      6; // 6
    static +wdArtCheckedBarBlack: Class<Word$WdPageBorderArt__wdArtCheckedBarBlack> &
      Word$WdPageBorderArt__wdArtCheckedBarBlack &
      145; // 145
    static +wdArtCheckedBarColor: Class<Word$WdPageBorderArt__wdArtCheckedBarColor> &
      Word$WdPageBorderArt__wdArtCheckedBarColor &
      61; // 61
    static +wdArtCheckered: Class<Word$WdPageBorderArt__wdArtCheckered> &
      Word$WdPageBorderArt__wdArtCheckered &
      144; // 144
    static +wdArtChristmasTree: Class<Word$WdPageBorderArt__wdArtChristmasTree> &
      Word$WdPageBorderArt__wdArtChristmasTree &
      8; // 8
    static +wdArtCirclesLines: Class<Word$WdPageBorderArt__wdArtCirclesLines> &
      Word$WdPageBorderArt__wdArtCirclesLines &
      91; // 91
    static +wdArtCirclesRectangles: Class<Word$WdPageBorderArt__wdArtCirclesRectangles> &
      Word$WdPageBorderArt__wdArtCirclesRectangles &
      140; // 140
    static +wdArtClassicalWave: Class<Word$WdPageBorderArt__wdArtClassicalWave> &
      Word$WdPageBorderArt__wdArtClassicalWave &
      56; // 56
    static +wdArtClocks: Class<Word$WdPageBorderArt__wdArtClocks> &
      Word$WdPageBorderArt__wdArtClocks &
      27; // 27
    static +wdArtCompass: Class<Word$WdPageBorderArt__wdArtCompass> &
      Word$WdPageBorderArt__wdArtCompass &
      54; // 54
    static +wdArtConfetti: Class<Word$WdPageBorderArt__wdArtConfetti> &
      Word$WdPageBorderArt__wdArtConfetti &
      31; // 31
    static +wdArtConfettiGrays: Class<Word$WdPageBorderArt__wdArtConfettiGrays> &
      Word$WdPageBorderArt__wdArtConfettiGrays &
      115; // 115
    static +wdArtConfettiOutline: Class<Word$WdPageBorderArt__wdArtConfettiOutline> &
      Word$WdPageBorderArt__wdArtConfettiOutline &
      116; // 116
    static +wdArtConfettiStreamers: Class<Word$WdPageBorderArt__wdArtConfettiStreamers> &
      Word$WdPageBorderArt__wdArtConfettiStreamers &
      14; // 14
    static +wdArtConfettiWhite: Class<Word$WdPageBorderArt__wdArtConfettiWhite> &
      Word$WdPageBorderArt__wdArtConfettiWhite &
      117; // 117
    static +wdArtCornerTriangles: Class<Word$WdPageBorderArt__wdArtCornerTriangles> &
      Word$WdPageBorderArt__wdArtCornerTriangles &
      141; // 141
    static +wdArtCouponCutoutDashes: Class<Word$WdPageBorderArt__wdArtCouponCutoutDashes> &
      Word$WdPageBorderArt__wdArtCouponCutoutDashes &
      163; // 163
    static +wdArtCouponCutoutDots: Class<Word$WdPageBorderArt__wdArtCouponCutoutDots> &
      Word$WdPageBorderArt__wdArtCouponCutoutDots &
      164; // 164
    static +wdArtCrazyMaze: Class<Word$WdPageBorderArt__wdArtCrazyMaze> &
      Word$WdPageBorderArt__wdArtCrazyMaze &
      100; // 100
    static +wdArtCreaturesButterfly: Class<Word$WdPageBorderArt__wdArtCreaturesButterfly> &
      Word$WdPageBorderArt__wdArtCreaturesButterfly &
      32; // 32
    static +wdArtCreaturesFish: Class<Word$WdPageBorderArt__wdArtCreaturesFish> &
      Word$WdPageBorderArt__wdArtCreaturesFish &
      34; // 34
    static +wdArtCreaturesInsects: Class<Word$WdPageBorderArt__wdArtCreaturesInsects> &
      Word$WdPageBorderArt__wdArtCreaturesInsects &
      142; // 142
    static +wdArtCreaturesLadyBug: Class<Word$WdPageBorderArt__wdArtCreaturesLadyBug> &
      Word$WdPageBorderArt__wdArtCreaturesLadyBug &
      33; // 33
    static +wdArtCrossStitch: Class<Word$WdPageBorderArt__wdArtCrossStitch> &
      Word$WdPageBorderArt__wdArtCrossStitch &
      138; // 138
    static +wdArtCup: Class<Word$WdPageBorderArt__wdArtCup> &
      Word$WdPageBorderArt__wdArtCup &
      67; // 67
    static +wdArtDecoArch: Class<Word$WdPageBorderArt__wdArtDecoArch> &
      Word$WdPageBorderArt__wdArtDecoArch &
      89; // 89
    static +wdArtDecoArchColor: Class<Word$WdPageBorderArt__wdArtDecoArchColor> &
      Word$WdPageBorderArt__wdArtDecoArchColor &
      50; // 50
    static +wdArtDecoBlocks: Class<Word$WdPageBorderArt__wdArtDecoBlocks> &
      Word$WdPageBorderArt__wdArtDecoBlocks &
      90; // 90
    static +wdArtDiamondsGray: Class<Word$WdPageBorderArt__wdArtDiamondsGray> &
      Word$WdPageBorderArt__wdArtDiamondsGray &
      88; // 88
    static +wdArtDoubleD: Class<Word$WdPageBorderArt__wdArtDoubleD> &
      Word$WdPageBorderArt__wdArtDoubleD &
      55; // 55
    static +wdArtDoubleDiamonds: Class<Word$WdPageBorderArt__wdArtDoubleDiamonds> &
      Word$WdPageBorderArt__wdArtDoubleDiamonds &
      127; // 127
    static +wdArtEarth1: Class<Word$WdPageBorderArt__wdArtEarth1> &
      Word$WdPageBorderArt__wdArtEarth1 &
      22; // 22
    static +wdArtEarth2: Class<Word$WdPageBorderArt__wdArtEarth2> &
      Word$WdPageBorderArt__wdArtEarth2 &
      21; // 21
    static +wdArtEclipsingSquares1: Class<Word$WdPageBorderArt__wdArtEclipsingSquares1> &
      Word$WdPageBorderArt__wdArtEclipsingSquares1 &
      101; // 101
    static +wdArtEclipsingSquares2: Class<Word$WdPageBorderArt__wdArtEclipsingSquares2> &
      Word$WdPageBorderArt__wdArtEclipsingSquares2 &
      86; // 86
    static +wdArtEggsBlack: Class<Word$WdPageBorderArt__wdArtEggsBlack> &
      Word$WdPageBorderArt__wdArtEggsBlack &
      66; // 66
    static +wdArtFans: Class<Word$WdPageBorderArt__wdArtFans> &
      Word$WdPageBorderArt__wdArtFans &
      51; // 51
    static +wdArtFilm: Class<Word$WdPageBorderArt__wdArtFilm> &
      Word$WdPageBorderArt__wdArtFilm &
      52; // 52
    static +wdArtFirecrackers: Class<Word$WdPageBorderArt__wdArtFirecrackers> &
      Word$WdPageBorderArt__wdArtFirecrackers &
      28; // 28
    static +wdArtFlowersBlockPrint: Class<Word$WdPageBorderArt__wdArtFlowersBlockPrint> &
      Word$WdPageBorderArt__wdArtFlowersBlockPrint &
      49; // 49
    static +wdArtFlowersDaisies: Class<Word$WdPageBorderArt__wdArtFlowersDaisies> &
      Word$WdPageBorderArt__wdArtFlowersDaisies &
      48; // 48
    static +wdArtFlowersModern1: Class<Word$WdPageBorderArt__wdArtFlowersModern1> &
      Word$WdPageBorderArt__wdArtFlowersModern1 &
      45; // 45
    static +wdArtFlowersModern2: Class<Word$WdPageBorderArt__wdArtFlowersModern2> &
      Word$WdPageBorderArt__wdArtFlowersModern2 &
      44; // 44
    static +wdArtFlowersPansy: Class<Word$WdPageBorderArt__wdArtFlowersPansy> &
      Word$WdPageBorderArt__wdArtFlowersPansy &
      43; // 43
    static +wdArtFlowersRedRose: Class<Word$WdPageBorderArt__wdArtFlowersRedRose> &
      Word$WdPageBorderArt__wdArtFlowersRedRose &
      39; // 39
    static +wdArtFlowersRoses: Class<Word$WdPageBorderArt__wdArtFlowersRoses> &
      Word$WdPageBorderArt__wdArtFlowersRoses &
      38; // 38
    static +wdArtFlowersTeacup: Class<Word$WdPageBorderArt__wdArtFlowersTeacup> &
      Word$WdPageBorderArt__wdArtFlowersTeacup &
      103; // 103
    static +wdArtFlowersTiny: Class<Word$WdPageBorderArt__wdArtFlowersTiny> &
      Word$WdPageBorderArt__wdArtFlowersTiny &
      42; // 42
    static +wdArtGems: Class<Word$WdPageBorderArt__wdArtGems> &
      Word$WdPageBorderArt__wdArtGems &
      139; // 139
    static +wdArtGingerbreadMan: Class<Word$WdPageBorderArt__wdArtGingerbreadMan> &
      Word$WdPageBorderArt__wdArtGingerbreadMan &
      69; // 69
    static +wdArtGradient: Class<Word$WdPageBorderArt__wdArtGradient> &
      Word$WdPageBorderArt__wdArtGradient &
      122; // 122
    static +wdArtHandmade1: Class<Word$WdPageBorderArt__wdArtHandmade1> &
      Word$WdPageBorderArt__wdArtHandmade1 &
      159; // 159
    static +wdArtHandmade2: Class<Word$WdPageBorderArt__wdArtHandmade2> &
      Word$WdPageBorderArt__wdArtHandmade2 &
      160; // 160
    static +wdArtHeartBalloon: Class<Word$WdPageBorderArt__wdArtHeartBalloon> &
      Word$WdPageBorderArt__wdArtHeartBalloon &
      16; // 16
    static +wdArtHeartGray: Class<Word$WdPageBorderArt__wdArtHeartGray> &
      Word$WdPageBorderArt__wdArtHeartGray &
      68; // 68
    static +wdArtHearts: Class<Word$WdPageBorderArt__wdArtHearts> &
      Word$WdPageBorderArt__wdArtHearts &
      15; // 15
    static +wdArtHeebieJeebies: Class<Word$WdPageBorderArt__wdArtHeebieJeebies> &
      Word$WdPageBorderArt__wdArtHeebieJeebies &
      120; // 120
    static +wdArtHolly: Class<Word$WdPageBorderArt__wdArtHolly> &
      Word$WdPageBorderArt__wdArtHolly &
      41; // 41
    static +wdArtHouseFunky: Class<Word$WdPageBorderArt__wdArtHouseFunky> &
      Word$WdPageBorderArt__wdArtHouseFunky &
      73; // 73
    static +wdArtHypnotic: Class<Word$WdPageBorderArt__wdArtHypnotic> &
      Word$WdPageBorderArt__wdArtHypnotic &
      87; // 87
    static +wdArtIceCreamCones: Class<Word$WdPageBorderArt__wdArtIceCreamCones> &
      Word$WdPageBorderArt__wdArtIceCreamCones &
      5; // 5
    static +wdArtLightBulb: Class<Word$WdPageBorderArt__wdArtLightBulb> &
      Word$WdPageBorderArt__wdArtLightBulb &
      121; // 121
    static +wdArtLightning1: Class<Word$WdPageBorderArt__wdArtLightning1> &
      Word$WdPageBorderArt__wdArtLightning1 &
      53; // 53
    static +wdArtLightning2: Class<Word$WdPageBorderArt__wdArtLightning2> &
      Word$WdPageBorderArt__wdArtLightning2 &
      119; // 119
    static +wdArtMapleLeaf: Class<Word$WdPageBorderArt__wdArtMapleLeaf> &
      Word$WdPageBorderArt__wdArtMapleLeaf &
      81; // 81
    static +wdArtMapleMuffins: Class<Word$WdPageBorderArt__wdArtMapleMuffins> &
      Word$WdPageBorderArt__wdArtMapleMuffins &
      2; // 2
    static +wdArtMapPins: Class<Word$WdPageBorderArt__wdArtMapPins> &
      Word$WdPageBorderArt__wdArtMapPins &
      30; // 30
    static +wdArtMarquee: Class<Word$WdPageBorderArt__wdArtMarquee> &
      Word$WdPageBorderArt__wdArtMarquee &
      146; // 146
    static +wdArtMarqueeToothed: Class<Word$WdPageBorderArt__wdArtMarqueeToothed> &
      Word$WdPageBorderArt__wdArtMarqueeToothed &
      131; // 131
    static +wdArtMoons: Class<Word$WdPageBorderArt__wdArtMoons> &
      Word$WdPageBorderArt__wdArtMoons &
      125; // 125
    static +wdArtMosaic: Class<Word$WdPageBorderArt__wdArtMosaic> &
      Word$WdPageBorderArt__wdArtMosaic &
      118; // 118
    static +wdArtMusicNotes: Class<Word$WdPageBorderArt__wdArtMusicNotes> &
      Word$WdPageBorderArt__wdArtMusicNotes &
      79; // 79
    static +wdArtNorthwest: Class<Word$WdPageBorderArt__wdArtNorthwest> &
      Word$WdPageBorderArt__wdArtNorthwest &
      104; // 104
    static +wdArtOvals: Class<Word$WdPageBorderArt__wdArtOvals> &
      Word$WdPageBorderArt__wdArtOvals &
      126; // 126
    static +wdArtPackages: Class<Word$WdPageBorderArt__wdArtPackages> &
      Word$WdPageBorderArt__wdArtPackages &
      26; // 26
    static +wdArtPalmsBlack: Class<Word$WdPageBorderArt__wdArtPalmsBlack> &
      Word$WdPageBorderArt__wdArtPalmsBlack &
      80; // 80
    static +wdArtPalmsColor: Class<Word$WdPageBorderArt__wdArtPalmsColor> &
      Word$WdPageBorderArt__wdArtPalmsColor &
      10; // 10
    static +wdArtPaperClips: Class<Word$WdPageBorderArt__wdArtPaperClips> &
      Word$WdPageBorderArt__wdArtPaperClips &
      82; // 82
    static +wdArtPapyrus: Class<Word$WdPageBorderArt__wdArtPapyrus> &
      Word$WdPageBorderArt__wdArtPapyrus &
      92; // 92
    static +wdArtPartyFavor: Class<Word$WdPageBorderArt__wdArtPartyFavor> &
      Word$WdPageBorderArt__wdArtPartyFavor &
      13; // 13
    static +wdArtPartyGlass: Class<Word$WdPageBorderArt__wdArtPartyGlass> &
      Word$WdPageBorderArt__wdArtPartyGlass &
      7; // 7
    static +wdArtPencils: Class<Word$WdPageBorderArt__wdArtPencils> &
      Word$WdPageBorderArt__wdArtPencils &
      25; // 25
    static +wdArtPeople: Class<Word$WdPageBorderArt__wdArtPeople> &
      Word$WdPageBorderArt__wdArtPeople &
      84; // 84
    static +wdArtPeopleHats: Class<Word$WdPageBorderArt__wdArtPeopleHats> &
      Word$WdPageBorderArt__wdArtPeopleHats &
      23; // 23
    static +wdArtPeopleWaving: Class<Word$WdPageBorderArt__wdArtPeopleWaving> &
      Word$WdPageBorderArt__wdArtPeopleWaving &
      85; // 85
    static +wdArtPoinsettias: Class<Word$WdPageBorderArt__wdArtPoinsettias> &
      Word$WdPageBorderArt__wdArtPoinsettias &
      40; // 40
    static +wdArtPostageStamp: Class<Word$WdPageBorderArt__wdArtPostageStamp> &
      Word$WdPageBorderArt__wdArtPostageStamp &
      135; // 135
    static +wdArtPumpkin1: Class<Word$WdPageBorderArt__wdArtPumpkin1> &
      Word$WdPageBorderArt__wdArtPumpkin1 &
      65; // 65
    static +wdArtPushPinNote1: Class<Word$WdPageBorderArt__wdArtPushPinNote1> &
      Word$WdPageBorderArt__wdArtPushPinNote1 &
      63; // 63
    static +wdArtPushPinNote2: Class<Word$WdPageBorderArt__wdArtPushPinNote2> &
      Word$WdPageBorderArt__wdArtPushPinNote2 &
      64; // 64
    static +wdArtPyramids: Class<Word$WdPageBorderArt__wdArtPyramids> &
      Word$WdPageBorderArt__wdArtPyramids &
      113; // 113
    static +wdArtPyramidsAbove: Class<Word$WdPageBorderArt__wdArtPyramidsAbove> &
      Word$WdPageBorderArt__wdArtPyramidsAbove &
      114; // 114
    static +wdArtQuadrants: Class<Word$WdPageBorderArt__wdArtQuadrants> &
      Word$WdPageBorderArt__wdArtQuadrants &
      60; // 60
    static +wdArtRings: Class<Word$WdPageBorderArt__wdArtRings> &
      Word$WdPageBorderArt__wdArtRings &
      29; // 29
    static +wdArtSafari: Class<Word$WdPageBorderArt__wdArtSafari> &
      Word$WdPageBorderArt__wdArtSafari &
      98; // 98
    static +wdArtSawtooth: Class<Word$WdPageBorderArt__wdArtSawtooth> &
      Word$WdPageBorderArt__wdArtSawtooth &
      133; // 133
    static +wdArtSawtoothGray: Class<Word$WdPageBorderArt__wdArtSawtoothGray> &
      Word$WdPageBorderArt__wdArtSawtoothGray &
      134; // 134
    static +wdArtScaredCat: Class<Word$WdPageBorderArt__wdArtScaredCat> &
      Word$WdPageBorderArt__wdArtScaredCat &
      36; // 36
    static +wdArtSeattle: Class<Word$WdPageBorderArt__wdArtSeattle> &
      Word$WdPageBorderArt__wdArtSeattle &
      78; // 78
    static +wdArtShadowedSquares: Class<Word$WdPageBorderArt__wdArtShadowedSquares> &
      Word$WdPageBorderArt__wdArtShadowedSquares &
      57; // 57
    static +wdArtSharksTeeth: Class<Word$WdPageBorderArt__wdArtSharksTeeth> &
      Word$WdPageBorderArt__wdArtSharksTeeth &
      132; // 132
    static +wdArtShorebirdTracks: Class<Word$WdPageBorderArt__wdArtShorebirdTracks> &
      Word$WdPageBorderArt__wdArtShorebirdTracks &
      83; // 83
    static +wdArtSkyrocket: Class<Word$WdPageBorderArt__wdArtSkyrocket> &
      Word$WdPageBorderArt__wdArtSkyrocket &
      77; // 77
    static +wdArtSnowflakeFancy: Class<Word$WdPageBorderArt__wdArtSnowflakeFancy> &
      Word$WdPageBorderArt__wdArtSnowflakeFancy &
      76; // 76
    static +wdArtSnowflakes: Class<Word$WdPageBorderArt__wdArtSnowflakes> &
      Word$WdPageBorderArt__wdArtSnowflakes &
      75; // 75
    static +wdArtSombrero: Class<Word$WdPageBorderArt__wdArtSombrero> &
      Word$WdPageBorderArt__wdArtSombrero &
      24; // 24
    static +wdArtSouthwest: Class<Word$WdPageBorderArt__wdArtSouthwest> &
      Word$WdPageBorderArt__wdArtSouthwest &
      105; // 105
    static +wdArtStars: Class<Word$WdPageBorderArt__wdArtStars> &
      Word$WdPageBorderArt__wdArtStars &
      19; // 19
    static +wdArtStars3D: Class<Word$WdPageBorderArt__wdArtStars3D> &
      Word$WdPageBorderArt__wdArtStars3D &
      17; // 17
    static +wdArtStarsBlack: Class<Word$WdPageBorderArt__wdArtStarsBlack> &
      Word$WdPageBorderArt__wdArtStarsBlack &
      74; // 74
    static +wdArtStarsShadowed: Class<Word$WdPageBorderArt__wdArtStarsShadowed> &
      Word$WdPageBorderArt__wdArtStarsShadowed &
      18; // 18
    static +wdArtStarsTop: Class<Word$WdPageBorderArt__wdArtStarsTop> &
      Word$WdPageBorderArt__wdArtStarsTop &
      157; // 157
    static +wdArtSun: Class<Word$WdPageBorderArt__wdArtSun> &
      Word$WdPageBorderArt__wdArtSun &
      20; // 20
    static +wdArtSwirligig: Class<Word$WdPageBorderArt__wdArtSwirligig> &
      Word$WdPageBorderArt__wdArtSwirligig &
      62; // 62
    static +wdArtTornPaper: Class<Word$WdPageBorderArt__wdArtTornPaper> &
      Word$WdPageBorderArt__wdArtTornPaper &
      161; // 161
    static +wdArtTornPaperBlack: Class<Word$WdPageBorderArt__wdArtTornPaperBlack> &
      Word$WdPageBorderArt__wdArtTornPaperBlack &
      162; // 162
    static +wdArtTrees: Class<Word$WdPageBorderArt__wdArtTrees> &
      Word$WdPageBorderArt__wdArtTrees &
      9; // 9
    static +wdArtTriangleParty: Class<Word$WdPageBorderArt__wdArtTriangleParty> &
      Word$WdPageBorderArt__wdArtTriangleParty &
      123; // 123
    static +wdArtTriangles: Class<Word$WdPageBorderArt__wdArtTriangles> &
      Word$WdPageBorderArt__wdArtTriangles &
      129; // 129
    static +wdArtTribal1: Class<Word$WdPageBorderArt__wdArtTribal1> &
      Word$WdPageBorderArt__wdArtTribal1 &
      130; // 130
    static +wdArtTribal2: Class<Word$WdPageBorderArt__wdArtTribal2> &
      Word$WdPageBorderArt__wdArtTribal2 &
      109; // 109
    static +wdArtTribal3: Class<Word$WdPageBorderArt__wdArtTribal3> &
      Word$WdPageBorderArt__wdArtTribal3 &
      108; // 108
    static +wdArtTribal4: Class<Word$WdPageBorderArt__wdArtTribal4> &
      Word$WdPageBorderArt__wdArtTribal4 &
      107; // 107
    static +wdArtTribal5: Class<Word$WdPageBorderArt__wdArtTribal5> &
      Word$WdPageBorderArt__wdArtTribal5 &
      110; // 110
    static +wdArtTribal6: Class<Word$WdPageBorderArt__wdArtTribal6> &
      Word$WdPageBorderArt__wdArtTribal6 &
      106; // 106
    static +wdArtTwistedLines1: Class<Word$WdPageBorderArt__wdArtTwistedLines1> &
      Word$WdPageBorderArt__wdArtTwistedLines1 &
      58; // 58
    static +wdArtTwistedLines2: Class<Word$WdPageBorderArt__wdArtTwistedLines2> &
      Word$WdPageBorderArt__wdArtTwistedLines2 &
      124; // 124
    static +wdArtVine: Class<Word$WdPageBorderArt__wdArtVine> &
      Word$WdPageBorderArt__wdArtVine &
      47; // 47
    static +wdArtWaveline: Class<Word$WdPageBorderArt__wdArtWaveline> &
      Word$WdPageBorderArt__wdArtWaveline &
      59; // 59
    static +wdArtWeavingAngles: Class<Word$WdPageBorderArt__wdArtWeavingAngles> &
      Word$WdPageBorderArt__wdArtWeavingAngles &
      96; // 96
    static +wdArtWeavingBraid: Class<Word$WdPageBorderArt__wdArtWeavingBraid> &
      Word$WdPageBorderArt__wdArtWeavingBraid &
      94; // 94
    static +wdArtWeavingRibbon: Class<Word$WdPageBorderArt__wdArtWeavingRibbon> &
      Word$WdPageBorderArt__wdArtWeavingRibbon &
      95; // 95
    static +wdArtWeavingStrips: Class<Word$WdPageBorderArt__wdArtWeavingStrips> &
      Word$WdPageBorderArt__wdArtWeavingStrips &
      136; // 136
    static +wdArtWhiteFlowers: Class<Word$WdPageBorderArt__wdArtWhiteFlowers> &
      Word$WdPageBorderArt__wdArtWhiteFlowers &
      46; // 46
    static +wdArtWoodwork: Class<Word$WdPageBorderArt__wdArtWoodwork> &
      Word$WdPageBorderArt__wdArtWoodwork &
      93; // 93
    static +wdArtXIllusions: Class<Word$WdPageBorderArt__wdArtXIllusions> &
      Word$WdPageBorderArt__wdArtXIllusions &
      111; // 111
    static +wdArtZanyTriangles: Class<Word$WdPageBorderArt__wdArtZanyTriangles> &
      Word$WdPageBorderArt__wdArtZanyTriangles &
      112; // 112
    static +wdArtZigZag: Class<Word$WdPageBorderArt__wdArtZigZag> &
      Word$WdPageBorderArt__wdArtZigZag &
      137; // 137
    static +wdArtZigZagStitch: Class<Word$WdPageBorderArt__wdArtZigZagStitch> &
      Word$WdPageBorderArt__wdArtZigZagStitch &
      143; // 143
  }

  declare class Word$WdPageBorderArt__wdArtApples mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtArchedScallops
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtBabyPacifier
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtBabyRattle
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtBalloons3Colors
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtBalloonsHotAir
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtBasicBlackDashes
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtBasicBlackDots
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtBasicBlackSquares
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtBasicThinLines
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtBasicWhiteDashes
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtBasicWhiteDots
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtBasicWhiteSquares
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtBasicWideInline
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtBasicWideMidline
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtBasicWideOutline
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtBats mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtBirds mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtBirdsFlight
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCabins mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCakeSlice
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCandyCorn
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCelticKnotwork
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCertificateBanner
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtChainLink
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtChampagneBottle
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCheckedBarBlack
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCheckedBarColor
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCheckered
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtChristmasTree
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCirclesLines
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCirclesRectangles
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtClassicalWave
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtClocks mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCompass
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtConfetti
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtConfettiGrays
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtConfettiOutline
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtConfettiStreamers
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtConfettiWhite
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCornerTriangles
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCouponCutoutDashes
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCouponCutoutDots
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCrazyMaze
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCreaturesButterfly
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCreaturesFish
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCreaturesInsects
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCreaturesLadyBug
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCrossStitch
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtCup mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtDecoArch
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtDecoArchColor
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtDecoBlocks
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtDiamondsGray
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtDoubleD
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtDoubleDiamonds
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtEarth1 mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtEarth2 mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtEclipsingSquares1
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtEclipsingSquares2
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtEggsBlack
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtFans mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtFilm mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtFirecrackers
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtFlowersBlockPrint
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtFlowersDaisies
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtFlowersModern1
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtFlowersModern2
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtFlowersPansy
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtFlowersRedRose
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtFlowersRoses
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtFlowersTeacup
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtFlowersTiny
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtGems mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtGingerbreadMan
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtGradient
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtHandmade1
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtHandmade2
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtHeartBalloon
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtHeartGray
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtHearts mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtHeebieJeebies
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtHolly mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtHouseFunky
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtHypnotic
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtIceCreamCones
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtLightBulb
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtLightning1
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtLightning2
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtMapleLeaf
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtMapleMuffins
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtMapPins
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtMarquee
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtMarqueeToothed
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtMoons mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtMosaic mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtMusicNotes
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtNorthwest
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtOvals mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtPackages
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtPalmsBlack
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtPalmsColor
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtPaperClips
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtPapyrus
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtPartyFavor
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtPartyGlass
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtPencils
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtPeople mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtPeopleHats
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtPeopleWaving
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtPoinsettias
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtPostageStamp
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtPumpkin1
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtPushPinNote1
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtPushPinNote2
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtPyramids
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtPyramidsAbove
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtQuadrants
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtRings mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtSafari mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtSawtooth
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtSawtoothGray
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtScaredCat
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtSeattle
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtShadowedSquares
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtSharksTeeth
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtShorebirdTracks
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtSkyrocket
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtSnowflakeFancy
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtSnowflakes
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtSombrero
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtSouthwest
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtStars mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtStars3D
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtStarsBlack
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtStarsShadowed
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtStarsTop
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtSun mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtSwirligig
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtTornPaper
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtTornPaperBlack
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtTrees mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtTriangleParty
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtTriangles
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtTribal1
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtTribal2
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtTribal3
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtTribal4
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtTribal5
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtTribal6
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtTwistedLines1
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtTwistedLines2
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtVine mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtWaveline
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtWeavingAngles
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtWeavingBraid
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtWeavingRibbon
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtWeavingStrips
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtWhiteFlowers
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtWoodwork
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtXIllusions
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtZanyTriangles
    mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtZigZag mixins Word$WdPageBorderArt {}
  declare class Word$WdPageBorderArt__wdArtZigZagStitch
    mixins Word$WdPageBorderArt {}

  declare class Word$WdPageFit {
    constructor(...args: empty): mixed;
    static +wdPageFitBestFit: Class<Word$WdPageFit__wdPageFitBestFit> &
      Word$WdPageFit__wdPageFitBestFit &
      2; // 2
    static +wdPageFitFullPage: Class<Word$WdPageFit__wdPageFitFullPage> &
      Word$WdPageFit__wdPageFitFullPage &
      1; // 1
    static +wdPageFitNone: Class<Word$WdPageFit__wdPageFitNone> &
      Word$WdPageFit__wdPageFitNone &
      0; // 0
    static +wdPageFitTextFit: Class<Word$WdPageFit__wdPageFitTextFit> &
      Word$WdPageFit__wdPageFitTextFit &
      3; // 3
  }

  declare class Word$WdPageFit__wdPageFitBestFit mixins Word$WdPageFit {}
  declare class Word$WdPageFit__wdPageFitFullPage mixins Word$WdPageFit {}
  declare class Word$WdPageFit__wdPageFitNone mixins Word$WdPageFit {}
  declare class Word$WdPageFit__wdPageFitTextFit mixins Word$WdPageFit {}

  declare class Word$WdPageNumberAlignment {
    constructor(...args: empty): mixed;
    static +wdAlignPageNumberCenter: Class<Word$WdPageNumberAlignment__wdAlignPageNumberCenter> &
      Word$WdPageNumberAlignment__wdAlignPageNumberCenter &
      1; // 1
    static +wdAlignPageNumberInside: Class<Word$WdPageNumberAlignment__wdAlignPageNumberInside> &
      Word$WdPageNumberAlignment__wdAlignPageNumberInside &
      3; // 3
    static +wdAlignPageNumberLeft: Class<Word$WdPageNumberAlignment__wdAlignPageNumberLeft> &
      Word$WdPageNumberAlignment__wdAlignPageNumberLeft &
      0; // 0
    static +wdAlignPageNumberOutside: Class<Word$WdPageNumberAlignment__wdAlignPageNumberOutside> &
      Word$WdPageNumberAlignment__wdAlignPageNumberOutside &
      4; // 4
    static +wdAlignPageNumberRight: Class<Word$WdPageNumberAlignment__wdAlignPageNumberRight> &
      Word$WdPageNumberAlignment__wdAlignPageNumberRight &
      2; // 2
  }

  declare class Word$WdPageNumberAlignment__wdAlignPageNumberCenter
    mixins Word$WdPageNumberAlignment {}
  declare class Word$WdPageNumberAlignment__wdAlignPageNumberInside
    mixins Word$WdPageNumberAlignment {}
  declare class Word$WdPageNumberAlignment__wdAlignPageNumberLeft
    mixins Word$WdPageNumberAlignment {}
  declare class Word$WdPageNumberAlignment__wdAlignPageNumberOutside
    mixins Word$WdPageNumberAlignment {}
  declare class Word$WdPageNumberAlignment__wdAlignPageNumberRight
    mixins Word$WdPageNumberAlignment {}

  declare class Word$WdPageNumberStyle {
    constructor(...args: empty): mixed;
    static +wdPageNumberStyleArabic: Class<Word$WdPageNumberStyle__wdPageNumberStyleArabic> &
      Word$WdPageNumberStyle__wdPageNumberStyleArabic &
      0; // 0
    static +wdPageNumberStyleArabicFullWidth: Class<Word$WdPageNumberStyle__wdPageNumberStyleArabicFullWidth> &
      Word$WdPageNumberStyle__wdPageNumberStyleArabicFullWidth &
      14; // 14
    static +wdPageNumberStyleArabicLetter1: Class<Word$WdPageNumberStyle__wdPageNumberStyleArabicLetter1> &
      Word$WdPageNumberStyle__wdPageNumberStyleArabicLetter1 &
      46; // 46
    static +wdPageNumberStyleArabicLetter2: Class<Word$WdPageNumberStyle__wdPageNumberStyleArabicLetter2> &
      Word$WdPageNumberStyle__wdPageNumberStyleArabicLetter2 &
      48; // 48
    static +wdPageNumberStyleHanjaRead: Class<Word$WdPageNumberStyle__wdPageNumberStyleHanjaRead> &
      Word$WdPageNumberStyle__wdPageNumberStyleHanjaRead &
      41; // 41
    static +wdPageNumberStyleHanjaReadDigit: Class<Word$WdPageNumberStyle__wdPageNumberStyleHanjaReadDigit> &
      Word$WdPageNumberStyle__wdPageNumberStyleHanjaReadDigit &
      42; // 42
    static +wdPageNumberStyleHebrewLetter1: Class<Word$WdPageNumberStyle__wdPageNumberStyleHebrewLetter1> &
      Word$WdPageNumberStyle__wdPageNumberStyleHebrewLetter1 &
      45; // 45
    static +wdPageNumberStyleHebrewLetter2: Class<Word$WdPageNumberStyle__wdPageNumberStyleHebrewLetter2> &
      Word$WdPageNumberStyle__wdPageNumberStyleHebrewLetter2 &
      47; // 47
    static +wdPageNumberStyleHindiArabic: Class<Word$WdPageNumberStyle__wdPageNumberStyleHindiArabic> &
      Word$WdPageNumberStyle__wdPageNumberStyleHindiArabic &
      51; // 51
    static +wdPageNumberStyleHindiCardinalText: Class<Word$WdPageNumberStyle__wdPageNumberStyleHindiCardinalText> &
      Word$WdPageNumberStyle__wdPageNumberStyleHindiCardinalText &
      52; // 52
    static +wdPageNumberStyleHindiLetter1: Class<Word$WdPageNumberStyle__wdPageNumberStyleHindiLetter1> &
      Word$WdPageNumberStyle__wdPageNumberStyleHindiLetter1 &
      49; // 49
    static +wdPageNumberStyleHindiLetter2: Class<Word$WdPageNumberStyle__wdPageNumberStyleHindiLetter2> &
      Word$WdPageNumberStyle__wdPageNumberStyleHindiLetter2 &
      50; // 50
    static +wdPageNumberStyleKanji: Class<Word$WdPageNumberStyle__wdPageNumberStyleKanji> &
      Word$WdPageNumberStyle__wdPageNumberStyleKanji &
      10; // 10
    static +wdPageNumberStyleKanjiDigit: Class<Word$WdPageNumberStyle__wdPageNumberStyleKanjiDigit> &
      Word$WdPageNumberStyle__wdPageNumberStyleKanjiDigit &
      11; // 11
    static +wdPageNumberStyleKanjiTraditional: Class<Word$WdPageNumberStyle__wdPageNumberStyleKanjiTraditional> &
      Word$WdPageNumberStyle__wdPageNumberStyleKanjiTraditional &
      16; // 16
    static +wdPageNumberStyleLowercaseLetter: Class<Word$WdPageNumberStyle__wdPageNumberStyleLowercaseLetter> &
      Word$WdPageNumberStyle__wdPageNumberStyleLowercaseLetter &
      4; // 4
    static +wdPageNumberStyleLowercaseRoman: Class<Word$WdPageNumberStyle__wdPageNumberStyleLowercaseRoman> &
      Word$WdPageNumberStyle__wdPageNumberStyleLowercaseRoman &
      2; // 2
    static +wdPageNumberStyleNumberInCircle: Class<Word$WdPageNumberStyle__wdPageNumberStyleNumberInCircle> &
      Word$WdPageNumberStyle__wdPageNumberStyleNumberInCircle &
      18; // 18
    static +wdPageNumberStyleNumberInDash: Class<Word$WdPageNumberStyle__wdPageNumberStyleNumberInDash> &
      Word$WdPageNumberStyle__wdPageNumberStyleNumberInDash &
      57; // 57
    static +wdPageNumberStyleSimpChinNum1: Class<Word$WdPageNumberStyle__wdPageNumberStyleSimpChinNum1> &
      Word$WdPageNumberStyle__wdPageNumberStyleSimpChinNum1 &
      37; // 37
    static +wdPageNumberStyleSimpChinNum2: Class<Word$WdPageNumberStyle__wdPageNumberStyleSimpChinNum2> &
      Word$WdPageNumberStyle__wdPageNumberStyleSimpChinNum2 &
      38; // 38
    static +wdPageNumberStyleThaiArabic: Class<Word$WdPageNumberStyle__wdPageNumberStyleThaiArabic> &
      Word$WdPageNumberStyle__wdPageNumberStyleThaiArabic &
      54; // 54
    static +wdPageNumberStyleThaiCardinalText: Class<Word$WdPageNumberStyle__wdPageNumberStyleThaiCardinalText> &
      Word$WdPageNumberStyle__wdPageNumberStyleThaiCardinalText &
      55; // 55
    static +wdPageNumberStyleThaiLetter: Class<Word$WdPageNumberStyle__wdPageNumberStyleThaiLetter> &
      Word$WdPageNumberStyle__wdPageNumberStyleThaiLetter &
      53; // 53
    static +wdPageNumberStyleTradChinNum1: Class<Word$WdPageNumberStyle__wdPageNumberStyleTradChinNum1> &
      Word$WdPageNumberStyle__wdPageNumberStyleTradChinNum1 &
      33; // 33
    static +wdPageNumberStyleTradChinNum2: Class<Word$WdPageNumberStyle__wdPageNumberStyleTradChinNum2> &
      Word$WdPageNumberStyle__wdPageNumberStyleTradChinNum2 &
      34; // 34
    static +wdPageNumberStyleUppercaseLetter: Class<Word$WdPageNumberStyle__wdPageNumberStyleUppercaseLetter> &
      Word$WdPageNumberStyle__wdPageNumberStyleUppercaseLetter &
      3; // 3
    static +wdPageNumberStyleUppercaseRoman: Class<Word$WdPageNumberStyle__wdPageNumberStyleUppercaseRoman> &
      Word$WdPageNumberStyle__wdPageNumberStyleUppercaseRoman &
      1; // 1
    static +wdPageNumberStyleVietCardinalText: Class<Word$WdPageNumberStyle__wdPageNumberStyleVietCardinalText> &
      Word$WdPageNumberStyle__wdPageNumberStyleVietCardinalText &
      56; // 56
  }

  declare class Word$WdPageNumberStyle__wdPageNumberStyleArabic
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleArabicFullWidth
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleArabicLetter1
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleArabicLetter2
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleHanjaRead
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleHanjaReadDigit
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleHebrewLetter1
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleHebrewLetter2
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleHindiArabic
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleHindiCardinalText
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleHindiLetter1
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleHindiLetter2
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleKanji
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleKanjiDigit
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleKanjiTraditional
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleLowercaseLetter
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleLowercaseRoman
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleNumberInCircle
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleNumberInDash
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleSimpChinNum1
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleSimpChinNum2
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleThaiArabic
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleThaiCardinalText
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleThaiLetter
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleTradChinNum1
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleTradChinNum2
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleUppercaseLetter
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleUppercaseRoman
    mixins Word$WdPageNumberStyle {}
  declare class Word$WdPageNumberStyle__wdPageNumberStyleVietCardinalText
    mixins Word$WdPageNumberStyle {}

  declare class Word$WdPageNumberStyleHID {
    constructor(...args: empty): mixed;
    static +emptyenum: Class<Word$WdPageNumberStyleHID__emptyenum> &
      Word$WdPageNumberStyleHID__emptyenum &
      0; // 0
  }

  declare class Word$WdPageNumberStyleHID__emptyenum
    mixins Word$WdPageNumberStyleHID {}

  declare class Word$WdPaperSize {
    constructor(...args: empty): mixed;
    static +wdPaper10x14: Class<Word$WdPaperSize__wdPaper10x14> &
      Word$WdPaperSize__wdPaper10x14 &
      0; // 0
    static +wdPaper11x17: Class<Word$WdPaperSize__wdPaper11x17> &
      Word$WdPaperSize__wdPaper11x17 &
      1; // 1
    static +wdPaperA3: Class<Word$WdPaperSize__wdPaperA3> &
      Word$WdPaperSize__wdPaperA3 &
      6; // 6
    static +wdPaperA4: Class<Word$WdPaperSize__wdPaperA4> &
      Word$WdPaperSize__wdPaperA4 &
      7; // 7
    static +wdPaperA4Small: Class<Word$WdPaperSize__wdPaperA4Small> &
      Word$WdPaperSize__wdPaperA4Small &
      8; // 8
    static +wdPaperA5: Class<Word$WdPaperSize__wdPaperA5> &
      Word$WdPaperSize__wdPaperA5 &
      9; // 9
    static +wdPaperB4: Class<Word$WdPaperSize__wdPaperB4> &
      Word$WdPaperSize__wdPaperB4 &
      10; // 10
    static +wdPaperB5: Class<Word$WdPaperSize__wdPaperB5> &
      Word$WdPaperSize__wdPaperB5 &
      11; // 11
    static +wdPaperCSheet: Class<Word$WdPaperSize__wdPaperCSheet> &
      Word$WdPaperSize__wdPaperCSheet &
      12; // 12
    static +wdPaperCustom: Class<Word$WdPaperSize__wdPaperCustom> &
      Word$WdPaperSize__wdPaperCustom &
      41; // 41
    static +wdPaperDSheet: Class<Word$WdPaperSize__wdPaperDSheet> &
      Word$WdPaperSize__wdPaperDSheet &
      13; // 13
    static +wdPaperEnvelope10: Class<Word$WdPaperSize__wdPaperEnvelope10> &
      Word$WdPaperSize__wdPaperEnvelope10 &
      25; // 25
    static +wdPaperEnvelope11: Class<Word$WdPaperSize__wdPaperEnvelope11> &
      Word$WdPaperSize__wdPaperEnvelope11 &
      26; // 26
    static +wdPaperEnvelope12: Class<Word$WdPaperSize__wdPaperEnvelope12> &
      Word$WdPaperSize__wdPaperEnvelope12 &
      27; // 27
    static +wdPaperEnvelope14: Class<Word$WdPaperSize__wdPaperEnvelope14> &
      Word$WdPaperSize__wdPaperEnvelope14 &
      28; // 28
    static +wdPaperEnvelope9: Class<Word$WdPaperSize__wdPaperEnvelope9> &
      Word$WdPaperSize__wdPaperEnvelope9 &
      24; // 24
    static +wdPaperEnvelopeB4: Class<Word$WdPaperSize__wdPaperEnvelopeB4> &
      Word$WdPaperSize__wdPaperEnvelopeB4 &
      29; // 29
    static +wdPaperEnvelopeB5: Class<Word$WdPaperSize__wdPaperEnvelopeB5> &
      Word$WdPaperSize__wdPaperEnvelopeB5 &
      30; // 30
    static +wdPaperEnvelopeB6: Class<Word$WdPaperSize__wdPaperEnvelopeB6> &
      Word$WdPaperSize__wdPaperEnvelopeB6 &
      31; // 31
    static +wdPaperEnvelopeC3: Class<Word$WdPaperSize__wdPaperEnvelopeC3> &
      Word$WdPaperSize__wdPaperEnvelopeC3 &
      32; // 32
    static +wdPaperEnvelopeC4: Class<Word$WdPaperSize__wdPaperEnvelopeC4> &
      Word$WdPaperSize__wdPaperEnvelopeC4 &
      33; // 33
    static +wdPaperEnvelopeC5: Class<Word$WdPaperSize__wdPaperEnvelopeC5> &
      Word$WdPaperSize__wdPaperEnvelopeC5 &
      34; // 34
    static +wdPaperEnvelopeC6: Class<Word$WdPaperSize__wdPaperEnvelopeC6> &
      Word$WdPaperSize__wdPaperEnvelopeC6 &
      35; // 35
    static +wdPaperEnvelopeC65: Class<Word$WdPaperSize__wdPaperEnvelopeC65> &
      Word$WdPaperSize__wdPaperEnvelopeC65 &
      36; // 36
    static +wdPaperEnvelopeDL: Class<Word$WdPaperSize__wdPaperEnvelopeDL> &
      Word$WdPaperSize__wdPaperEnvelopeDL &
      37; // 37
    static +wdPaperEnvelopeItaly: Class<Word$WdPaperSize__wdPaperEnvelopeItaly> &
      Word$WdPaperSize__wdPaperEnvelopeItaly &
      38; // 38
    static +wdPaperEnvelopeMonarch: Class<Word$WdPaperSize__wdPaperEnvelopeMonarch> &
      Word$WdPaperSize__wdPaperEnvelopeMonarch &
      39; // 39
    static +wdPaperEnvelopePersonal: Class<Word$WdPaperSize__wdPaperEnvelopePersonal> &
      Word$WdPaperSize__wdPaperEnvelopePersonal &
      40; // 40
    static +wdPaperESheet: Class<Word$WdPaperSize__wdPaperESheet> &
      Word$WdPaperSize__wdPaperESheet &
      14; // 14
    static +wdPaperExecutive: Class<Word$WdPaperSize__wdPaperExecutive> &
      Word$WdPaperSize__wdPaperExecutive &
      5; // 5
    static +wdPaperFanfoldLegalGerman: Class<Word$WdPaperSize__wdPaperFanfoldLegalGerman> &
      Word$WdPaperSize__wdPaperFanfoldLegalGerman &
      15; // 15
    static +wdPaperFanfoldStdGerman: Class<Word$WdPaperSize__wdPaperFanfoldStdGerman> &
      Word$WdPaperSize__wdPaperFanfoldStdGerman &
      16; // 16
    static +wdPaperFanfoldUS: Class<Word$WdPaperSize__wdPaperFanfoldUS> &
      Word$WdPaperSize__wdPaperFanfoldUS &
      17; // 17
    static +wdPaperFolio: Class<Word$WdPaperSize__wdPaperFolio> &
      Word$WdPaperSize__wdPaperFolio &
      18; // 18
    static +wdPaperLedger: Class<Word$WdPaperSize__wdPaperLedger> &
      Word$WdPaperSize__wdPaperLedger &
      19; // 19
    static +wdPaperLegal: Class<Word$WdPaperSize__wdPaperLegal> &
      Word$WdPaperSize__wdPaperLegal &
      4; // 4
    static +wdPaperLetter: Class<Word$WdPaperSize__wdPaperLetter> &
      Word$WdPaperSize__wdPaperLetter &
      2; // 2
    static +wdPaperLetterSmall: Class<Word$WdPaperSize__wdPaperLetterSmall> &
      Word$WdPaperSize__wdPaperLetterSmall &
      3; // 3
    static +wdPaperNote: Class<Word$WdPaperSize__wdPaperNote> &
      Word$WdPaperSize__wdPaperNote &
      20; // 20
    static +wdPaperQuarto: Class<Word$WdPaperSize__wdPaperQuarto> &
      Word$WdPaperSize__wdPaperQuarto &
      21; // 21
    static +wdPaperStatement: Class<Word$WdPaperSize__wdPaperStatement> &
      Word$WdPaperSize__wdPaperStatement &
      22; // 22
    static +wdPaperTabloid: Class<Word$WdPaperSize__wdPaperTabloid> &
      Word$WdPaperSize__wdPaperTabloid &
      23; // 23
  }

  declare class Word$WdPaperSize__wdPaper10x14 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaper11x17 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperA3 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperA4 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperA4Small mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperA5 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperB4 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperB5 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperCSheet mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperCustom mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperDSheet mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperEnvelope10 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperEnvelope11 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperEnvelope12 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperEnvelope14 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperEnvelope9 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperEnvelopeB4 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperEnvelopeB5 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperEnvelopeB6 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperEnvelopeC3 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperEnvelopeC4 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperEnvelopeC5 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperEnvelopeC6 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperEnvelopeC65 mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperEnvelopeDL mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperEnvelopeItaly
    mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperEnvelopeMonarch
    mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperEnvelopePersonal
    mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperESheet mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperExecutive mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperFanfoldLegalGerman
    mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperFanfoldStdGerman
    mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperFanfoldUS mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperFolio mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperLedger mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperLegal mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperLetter mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperLetterSmall mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperNote mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperQuarto mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperStatement mixins Word$WdPaperSize {}
  declare class Word$WdPaperSize__wdPaperTabloid mixins Word$WdPaperSize {}

  declare class Word$WdPaperTray {
    constructor(...args: empty): mixed;
    static +wdPrinterAutomaticSheetFeed: Class<Word$WdPaperTray__wdPrinterAutomaticSheetFeed> &
      Word$WdPaperTray__wdPrinterAutomaticSheetFeed &
      7; // 7
    static +wdPrinterDefaultBin: Class<Word$WdPaperTray__wdPrinterDefaultBin> &
      Word$WdPaperTray__wdPrinterDefaultBin &
      0; // 0
    static +wdPrinterEnvelopeFeed: Class<Word$WdPaperTray__wdPrinterEnvelopeFeed> &
      Word$WdPaperTray__wdPrinterEnvelopeFeed &
      5; // 5
    static +wdPrinterFormSource: Class<Word$WdPaperTray__wdPrinterFormSource> &
      Word$WdPaperTray__wdPrinterFormSource &
      15; // 15
    static +wdPrinterLargeCapacityBin: Class<Word$WdPaperTray__wdPrinterLargeCapacityBin> &
      Word$WdPaperTray__wdPrinterLargeCapacityBin &
      11; // 11
    static +wdPrinterLargeFormatBin: Class<Word$WdPaperTray__wdPrinterLargeFormatBin> &
      Word$WdPaperTray__wdPrinterLargeFormatBin &
      10; // 10
    static +wdPrinterLowerBin: Class<Word$WdPaperTray__wdPrinterLowerBin> &
      Word$WdPaperTray__wdPrinterLowerBin &
      2; // 2
    static +wdPrinterManualEnvelopeFeed: Class<Word$WdPaperTray__wdPrinterManualEnvelopeFeed> &
      Word$WdPaperTray__wdPrinterManualEnvelopeFeed &
      6; // 6
    static +wdPrinterManualFeed: Class<Word$WdPaperTray__wdPrinterManualFeed> &
      Word$WdPaperTray__wdPrinterManualFeed &
      4; // 4
    static +wdPrinterMiddleBin: Class<Word$WdPaperTray__wdPrinterMiddleBin> &
      Word$WdPaperTray__wdPrinterMiddleBin &
      3; // 3
    static +wdPrinterOnlyBin: Class<Word$WdPaperTray__wdPrinterOnlyBin> &
      Word$WdPaperTray__wdPrinterOnlyBin &
      1; // 1
    static +wdPrinterPaperCassette: Class<Word$WdPaperTray__wdPrinterPaperCassette> &
      Word$WdPaperTray__wdPrinterPaperCassette &
      14; // 14
    static +wdPrinterSmallFormatBin: Class<Word$WdPaperTray__wdPrinterSmallFormatBin> &
      Word$WdPaperTray__wdPrinterSmallFormatBin &
      9; // 9
    static +wdPrinterTractorFeed: Class<Word$WdPaperTray__wdPrinterTractorFeed> &
      Word$WdPaperTray__wdPrinterTractorFeed &
      8; // 8
    static +wdPrinterUpperBin: Class<Word$WdPaperTray__wdPrinterUpperBin> &
      Word$WdPaperTray__wdPrinterUpperBin &
      1; // 1
  }

  declare class Word$WdPaperTray__wdPrinterAutomaticSheetFeed
    mixins Word$WdPaperTray {}
  declare class Word$WdPaperTray__wdPrinterDefaultBin mixins Word$WdPaperTray {}
  declare class Word$WdPaperTray__wdPrinterEnvelopeFeed
    mixins Word$WdPaperTray {}
  declare class Word$WdPaperTray__wdPrinterFormSource mixins Word$WdPaperTray {}
  declare class Word$WdPaperTray__wdPrinterLargeCapacityBin
    mixins Word$WdPaperTray {}
  declare class Word$WdPaperTray__wdPrinterLargeFormatBin
    mixins Word$WdPaperTray {}
  declare class Word$WdPaperTray__wdPrinterLowerBin mixins Word$WdPaperTray {}
  declare class Word$WdPaperTray__wdPrinterManualEnvelopeFeed
    mixins Word$WdPaperTray {}
  declare class Word$WdPaperTray__wdPrinterManualFeed mixins Word$WdPaperTray {}
  declare class Word$WdPaperTray__wdPrinterMiddleBin mixins Word$WdPaperTray {}
  declare class Word$WdPaperTray__wdPrinterOnlyBin mixins Word$WdPaperTray {}
  declare class Word$WdPaperTray__wdPrinterPaperCassette
    mixins Word$WdPaperTray {}
  declare class Word$WdPaperTray__wdPrinterSmallFormatBin
    mixins Word$WdPaperTray {}
  declare class Word$WdPaperTray__wdPrinterTractorFeed
    mixins Word$WdPaperTray {}
  declare class Word$WdPaperTray__wdPrinterUpperBin mixins Word$WdPaperTray {}

  declare class Word$WdParagraphAlignment {
    constructor(...args: empty): mixed;
    static +wdAlignParagraphCenter: Class<Word$WdParagraphAlignment__wdAlignParagraphCenter> &
      Word$WdParagraphAlignment__wdAlignParagraphCenter &
      1; // 1
    static +wdAlignParagraphDistribute: Class<Word$WdParagraphAlignment__wdAlignParagraphDistribute> &
      Word$WdParagraphAlignment__wdAlignParagraphDistribute &
      4; // 4
    static +wdAlignParagraphJustify: Class<Word$WdParagraphAlignment__wdAlignParagraphJustify> &
      Word$WdParagraphAlignment__wdAlignParagraphJustify &
      3; // 3
    static +wdAlignParagraphJustifyHi: Class<Word$WdParagraphAlignment__wdAlignParagraphJustifyHi> &
      Word$WdParagraphAlignment__wdAlignParagraphJustifyHi &
      7; // 7
    static +wdAlignParagraphJustifyLow: Class<Word$WdParagraphAlignment__wdAlignParagraphJustifyLow> &
      Word$WdParagraphAlignment__wdAlignParagraphJustifyLow &
      8; // 8
    static +wdAlignParagraphJustifyMed: Class<Word$WdParagraphAlignment__wdAlignParagraphJustifyMed> &
      Word$WdParagraphAlignment__wdAlignParagraphJustifyMed &
      5; // 5
    static +wdAlignParagraphLeft: Class<Word$WdParagraphAlignment__wdAlignParagraphLeft> &
      Word$WdParagraphAlignment__wdAlignParagraphLeft &
      0; // 0
    static +wdAlignParagraphRight: Class<Word$WdParagraphAlignment__wdAlignParagraphRight> &
      Word$WdParagraphAlignment__wdAlignParagraphRight &
      2; // 2
    static +wdAlignParagraphThaiJustify: Class<Word$WdParagraphAlignment__wdAlignParagraphThaiJustify> &
      Word$WdParagraphAlignment__wdAlignParagraphThaiJustify &
      9; // 9
  }

  declare class Word$WdParagraphAlignment__wdAlignParagraphCenter
    mixins Word$WdParagraphAlignment {}
  declare class Word$WdParagraphAlignment__wdAlignParagraphDistribute
    mixins Word$WdParagraphAlignment {}
  declare class Word$WdParagraphAlignment__wdAlignParagraphJustify
    mixins Word$WdParagraphAlignment {}
  declare class Word$WdParagraphAlignment__wdAlignParagraphJustifyHi
    mixins Word$WdParagraphAlignment {}
  declare class Word$WdParagraphAlignment__wdAlignParagraphJustifyLow
    mixins Word$WdParagraphAlignment {}
  declare class Word$WdParagraphAlignment__wdAlignParagraphJustifyMed
    mixins Word$WdParagraphAlignment {}
  declare class Word$WdParagraphAlignment__wdAlignParagraphLeft
    mixins Word$WdParagraphAlignment {}
  declare class Word$WdParagraphAlignment__wdAlignParagraphRight
    mixins Word$WdParagraphAlignment {}
  declare class Word$WdParagraphAlignment__wdAlignParagraphThaiJustify
    mixins Word$WdParagraphAlignment {}

  declare class Word$WdParagraphAlignmentHID {
    constructor(...args: empty): mixed;
    static +emptyenum: Class<Word$WdParagraphAlignmentHID__emptyenum> &
      Word$WdParagraphAlignmentHID__emptyenum &
      0; // 0
  }

  declare class Word$WdParagraphAlignmentHID__emptyenum
    mixins Word$WdParagraphAlignmentHID {}

  declare class Word$WdPartOfSpeech {
    constructor(...args: empty): mixed;
    static +wdAdjective: Class<Word$WdPartOfSpeech__wdAdjective> &
      Word$WdPartOfSpeech__wdAdjective &
      0; // 0
    static +wdAdverb: Class<Word$WdPartOfSpeech__wdAdverb> &
      Word$WdPartOfSpeech__wdAdverb &
      2; // 2
    static +wdConjunction: Class<Word$WdPartOfSpeech__wdConjunction> &
      Word$WdPartOfSpeech__wdConjunction &
      5; // 5
    static +wdIdiom: Class<Word$WdPartOfSpeech__wdIdiom> &
      Word$WdPartOfSpeech__wdIdiom &
      8; // 8
    static +wdInterjection: Class<Word$WdPartOfSpeech__wdInterjection> &
      Word$WdPartOfSpeech__wdInterjection &
      7; // 7
    static +wdNoun: Class<Word$WdPartOfSpeech__wdNoun> &
      Word$WdPartOfSpeech__wdNoun &
      1; // 1
    static +wdOther: Class<Word$WdPartOfSpeech__wdOther> &
      Word$WdPartOfSpeech__wdOther &
      9; // 9
    static +wdPreposition: Class<Word$WdPartOfSpeech__wdPreposition> &
      Word$WdPartOfSpeech__wdPreposition &
      6; // 6
    static +wdPronoun: Class<Word$WdPartOfSpeech__wdPronoun> &
      Word$WdPartOfSpeech__wdPronoun &
      4; // 4
    static +wdVerb: Class<Word$WdPartOfSpeech__wdVerb> &
      Word$WdPartOfSpeech__wdVerb &
      3; // 3
  }

  declare class Word$WdPartOfSpeech__wdAdjective mixins Word$WdPartOfSpeech {}
  declare class Word$WdPartOfSpeech__wdAdverb mixins Word$WdPartOfSpeech {}
  declare class Word$WdPartOfSpeech__wdConjunction mixins Word$WdPartOfSpeech {}
  declare class Word$WdPartOfSpeech__wdIdiom mixins Word$WdPartOfSpeech {}
  declare class Word$WdPartOfSpeech__wdInterjection
    mixins Word$WdPartOfSpeech {}
  declare class Word$WdPartOfSpeech__wdNoun mixins Word$WdPartOfSpeech {}
  declare class Word$WdPartOfSpeech__wdOther mixins Word$WdPartOfSpeech {}
  declare class Word$WdPartOfSpeech__wdPreposition mixins Word$WdPartOfSpeech {}
  declare class Word$WdPartOfSpeech__wdPronoun mixins Word$WdPartOfSpeech {}
  declare class Word$WdPartOfSpeech__wdVerb mixins Word$WdPartOfSpeech {}

  declare class Word$WdPasteDataType {
    constructor(...args: empty): mixed;
    static +wdPasteBitmap: Class<Word$WdPasteDataType__wdPasteBitmap> &
      Word$WdPasteDataType__wdPasteBitmap &
      4; // 4
    static +wdPasteDeviceIndependentBitmap: Class<Word$WdPasteDataType__wdPasteDeviceIndependentBitmap> &
      Word$WdPasteDataType__wdPasteDeviceIndependentBitmap &
      5; // 5
    static +wdPasteEnhancedMetafile: Class<Word$WdPasteDataType__wdPasteEnhancedMetafile> &
      Word$WdPasteDataType__wdPasteEnhancedMetafile &
      9; // 9
    static +wdPasteHTML: Class<Word$WdPasteDataType__wdPasteHTML> &
      Word$WdPasteDataType__wdPasteHTML &
      10; // 10
    static +wdPasteHyperlink: Class<Word$WdPasteDataType__wdPasteHyperlink> &
      Word$WdPasteDataType__wdPasteHyperlink &
      7; // 7
    static +wdPasteMetafilePicture: Class<Word$WdPasteDataType__wdPasteMetafilePicture> &
      Word$WdPasteDataType__wdPasteMetafilePicture &
      3; // 3
    static +wdPasteOLEObject: Class<Word$WdPasteDataType__wdPasteOLEObject> &
      Word$WdPasteDataType__wdPasteOLEObject &
      0; // 0
    static +wdPasteRTF: Class<Word$WdPasteDataType__wdPasteRTF> &
      Word$WdPasteDataType__wdPasteRTF &
      1; // 1
    static +wdPasteShape: Class<Word$WdPasteDataType__wdPasteShape> &
      Word$WdPasteDataType__wdPasteShape &
      8; // 8
    static +wdPasteText: Class<Word$WdPasteDataType__wdPasteText> &
      Word$WdPasteDataType__wdPasteText &
      2; // 2
  }

  declare class Word$WdPasteDataType__wdPasteBitmap
    mixins Word$WdPasteDataType {}
  declare class Word$WdPasteDataType__wdPasteDeviceIndependentBitmap
    mixins Word$WdPasteDataType {}
  declare class Word$WdPasteDataType__wdPasteEnhancedMetafile
    mixins Word$WdPasteDataType {}
  declare class Word$WdPasteDataType__wdPasteHTML mixins Word$WdPasteDataType {}
  declare class Word$WdPasteDataType__wdPasteHyperlink
    mixins Word$WdPasteDataType {}
  declare class Word$WdPasteDataType__wdPasteMetafilePicture
    mixins Word$WdPasteDataType {}
  declare class Word$WdPasteDataType__wdPasteOLEObject
    mixins Word$WdPasteDataType {}
  declare class Word$WdPasteDataType__wdPasteRTF mixins Word$WdPasteDataType {}
  declare class Word$WdPasteDataType__wdPasteShape
    mixins Word$WdPasteDataType {}
  declare class Word$WdPasteDataType__wdPasteText mixins Word$WdPasteDataType {}

  declare class Word$WdPasteOptions {
    constructor(...args: empty): mixed;
    static +wdKeepSourceFormatting: Class<Word$WdPasteOptions__wdKeepSourceFormatting> &
      Word$WdPasteOptions__wdKeepSourceFormatting &
      0; // 0
    static +wdKeepTextOnly: Class<Word$WdPasteOptions__wdKeepTextOnly> &
      Word$WdPasteOptions__wdKeepTextOnly &
      2; // 2
    static +wdMatchDestinationFormatting: Class<Word$WdPasteOptions__wdMatchDestinationFormatting> &
      Word$WdPasteOptions__wdMatchDestinationFormatting &
      1; // 1
    static +wdUseDestinationStyles: Class<Word$WdPasteOptions__wdUseDestinationStyles> &
      Word$WdPasteOptions__wdUseDestinationStyles &
      3; // 3
  }

  declare class Word$WdPasteOptions__wdKeepSourceFormatting
    mixins Word$WdPasteOptions {}
  declare class Word$WdPasteOptions__wdKeepTextOnly
    mixins Word$WdPasteOptions {}
  declare class Word$WdPasteOptions__wdMatchDestinationFormatting
    mixins Word$WdPasteOptions {}
  declare class Word$WdPasteOptions__wdUseDestinationStyles
    mixins Word$WdPasteOptions {}

  declare class Word$WdPhoneticGuideAlignmentType {
    constructor(...args: empty): mixed;
    static +wdPhoneticGuideAlignmentCenter: Class<Word$WdPhoneticGuideAlignmentType__wdPhoneticGuideAlignmentCenter> &
      Word$WdPhoneticGuideAlignmentType__wdPhoneticGuideAlignmentCenter &
      0; // 0
    static +wdPhoneticGuideAlignmentLeft: Class<Word$WdPhoneticGuideAlignmentType__wdPhoneticGuideAlignmentLeft> &
      Word$WdPhoneticGuideAlignmentType__wdPhoneticGuideAlignmentLeft &
      3; // 3
    static +wdPhoneticGuideAlignmentOneTwoOne: Class<Word$WdPhoneticGuideAlignmentType__wdPhoneticGuideAlignmentOneTwoOne> &
      Word$WdPhoneticGuideAlignmentType__wdPhoneticGuideAlignmentOneTwoOne &
      2; // 2
    static +wdPhoneticGuideAlignmentRight: Class<Word$WdPhoneticGuideAlignmentType__wdPhoneticGuideAlignmentRight> &
      Word$WdPhoneticGuideAlignmentType__wdPhoneticGuideAlignmentRight &
      4; // 4
    static +wdPhoneticGuideAlignmentRightVertical: Class<Word$WdPhoneticGuideAlignmentType__wdPhoneticGuideAlignmentRightVertical> &
      Word$WdPhoneticGuideAlignmentType__wdPhoneticGuideAlignmentRightVertical &
      5; // 5
    static +wdPhoneticGuideAlignmentZeroOneZero: Class<Word$WdPhoneticGuideAlignmentType__wdPhoneticGuideAlignmentZeroOneZero> &
      Word$WdPhoneticGuideAlignmentType__wdPhoneticGuideAlignmentZeroOneZero &
      1; // 1
  }

  declare class Word$WdPhoneticGuideAlignmentType__wdPhoneticGuideAlignmentCenter
    mixins Word$WdPhoneticGuideAlignmentType {}
  declare class Word$WdPhoneticGuideAlignmentType__wdPhoneticGuideAlignmentLeft
    mixins Word$WdPhoneticGuideAlignmentType {}
  declare class Word$WdPhoneticGuideAlignmentType__wdPhoneticGuideAlignmentOneTwoOne
    mixins Word$WdPhoneticGuideAlignmentType {}
  declare class Word$WdPhoneticGuideAlignmentType__wdPhoneticGuideAlignmentRight
    mixins Word$WdPhoneticGuideAlignmentType {}
  declare class Word$WdPhoneticGuideAlignmentType__wdPhoneticGuideAlignmentRightVertical
    mixins Word$WdPhoneticGuideAlignmentType {}
  declare class Word$WdPhoneticGuideAlignmentType__wdPhoneticGuideAlignmentZeroOneZero
    mixins Word$WdPhoneticGuideAlignmentType {}

  declare class Word$WdPictureLinkType {
    constructor(...args: empty): mixed;
    static +wdLinkDataInDoc: Class<Word$WdPictureLinkType__wdLinkDataInDoc> &
      Word$WdPictureLinkType__wdLinkDataInDoc &
      1; // 1
    static +wdLinkDataOnDisk: Class<Word$WdPictureLinkType__wdLinkDataOnDisk> &
      Word$WdPictureLinkType__wdLinkDataOnDisk &
      2; // 2
    static +wdLinkNone: Class<Word$WdPictureLinkType__wdLinkNone> &
      Word$WdPictureLinkType__wdLinkNone &
      0; // 0
  }

  declare class Word$WdPictureLinkType__wdLinkDataInDoc
    mixins Word$WdPictureLinkType {}
  declare class Word$WdPictureLinkType__wdLinkDataOnDisk
    mixins Word$WdPictureLinkType {}
  declare class Word$WdPictureLinkType__wdLinkNone
    mixins Word$WdPictureLinkType {}

  declare class Word$WdPortugueseReform {
    constructor(...args: empty): mixed;
    static +wdPortugueseBoth: Class<Word$WdPortugueseReform__wdPortugueseBoth> &
      Word$WdPortugueseReform__wdPortugueseBoth &
      3; // 3
    static +wdPortuguesePostReform: Class<Word$WdPortugueseReform__wdPortuguesePostReform> &
      Word$WdPortugueseReform__wdPortuguesePostReform &
      2; // 2
    static +wdPortuguesePreReform: Class<Word$WdPortugueseReform__wdPortuguesePreReform> &
      Word$WdPortugueseReform__wdPortuguesePreReform &
      1; // 1
  }

  declare class Word$WdPortugueseReform__wdPortugueseBoth
    mixins Word$WdPortugueseReform {}
  declare class Word$WdPortugueseReform__wdPortuguesePostReform
    mixins Word$WdPortugueseReform {}
  declare class Word$WdPortugueseReform__wdPortuguesePreReform
    mixins Word$WdPortugueseReform {}

  declare class Word$WdPreferredWidthType {
    constructor(...args: empty): mixed;
    static +wdPreferredWidthAuto: Class<Word$WdPreferredWidthType__wdPreferredWidthAuto> &
      Word$WdPreferredWidthType__wdPreferredWidthAuto &
      1; // 1
    static +wdPreferredWidthPercent: Class<Word$WdPreferredWidthType__wdPreferredWidthPercent> &
      Word$WdPreferredWidthType__wdPreferredWidthPercent &
      2; // 2
    static +wdPreferredWidthPoints: Class<Word$WdPreferredWidthType__wdPreferredWidthPoints> &
      Word$WdPreferredWidthType__wdPreferredWidthPoints &
      3; // 3
  }

  declare class Word$WdPreferredWidthType__wdPreferredWidthAuto
    mixins Word$WdPreferredWidthType {}
  declare class Word$WdPreferredWidthType__wdPreferredWidthPercent
    mixins Word$WdPreferredWidthType {}
  declare class Word$WdPreferredWidthType__wdPreferredWidthPoints
    mixins Word$WdPreferredWidthType {}

  declare class Word$WdPrintOutItem {
    constructor(...args: empty): mixed;
    static +wdPrintAutoTextEntries: Class<Word$WdPrintOutItem__wdPrintAutoTextEntries> &
      Word$WdPrintOutItem__wdPrintAutoTextEntries &
      4; // 4
    static +wdPrintComments: Class<Word$WdPrintOutItem__wdPrintComments> &
      Word$WdPrintOutItem__wdPrintComments &
      2; // 2
    static +wdPrintDocumentContent: Class<Word$WdPrintOutItem__wdPrintDocumentContent> &
      Word$WdPrintOutItem__wdPrintDocumentContent &
      0; // 0
    static +wdPrintDocumentWithMarkup: Class<Word$WdPrintOutItem__wdPrintDocumentWithMarkup> &
      Word$WdPrintOutItem__wdPrintDocumentWithMarkup &
      7; // 7
    static +wdPrintEnvelope: Class<Word$WdPrintOutItem__wdPrintEnvelope> &
      Word$WdPrintOutItem__wdPrintEnvelope &
      6; // 6
    static +wdPrintKeyAssignments: Class<Word$WdPrintOutItem__wdPrintKeyAssignments> &
      Word$WdPrintOutItem__wdPrintKeyAssignments &
      5; // 5
    static +wdPrintMarkup: Class<Word$WdPrintOutItem__wdPrintMarkup> &
      Word$WdPrintOutItem__wdPrintMarkup &
      2; // 2
    static +wdPrintProperties: Class<Word$WdPrintOutItem__wdPrintProperties> &
      Word$WdPrintOutItem__wdPrintProperties &
      1; // 1
    static +wdPrintStyles: Class<Word$WdPrintOutItem__wdPrintStyles> &
      Word$WdPrintOutItem__wdPrintStyles &
      3; // 3
  }

  declare class Word$WdPrintOutItem__wdPrintAutoTextEntries
    mixins Word$WdPrintOutItem {}
  declare class Word$WdPrintOutItem__wdPrintComments
    mixins Word$WdPrintOutItem {}
  declare class Word$WdPrintOutItem__wdPrintDocumentContent
    mixins Word$WdPrintOutItem {}
  declare class Word$WdPrintOutItem__wdPrintDocumentWithMarkup
    mixins Word$WdPrintOutItem {}
  declare class Word$WdPrintOutItem__wdPrintEnvelope
    mixins Word$WdPrintOutItem {}
  declare class Word$WdPrintOutItem__wdPrintKeyAssignments
    mixins Word$WdPrintOutItem {}
  declare class Word$WdPrintOutItem__wdPrintMarkup mixins Word$WdPrintOutItem {}
  declare class Word$WdPrintOutItem__wdPrintProperties
    mixins Word$WdPrintOutItem {}
  declare class Word$WdPrintOutItem__wdPrintStyles mixins Word$WdPrintOutItem {}

  declare class Word$WdPrintOutPages {
    constructor(...args: empty): mixed;
    static +wdPrintAllPages: Class<Word$WdPrintOutPages__wdPrintAllPages> &
      Word$WdPrintOutPages__wdPrintAllPages &
      0; // 0
    static +wdPrintEvenPagesOnly: Class<Word$WdPrintOutPages__wdPrintEvenPagesOnly> &
      Word$WdPrintOutPages__wdPrintEvenPagesOnly &
      2; // 2
    static +wdPrintOddPagesOnly: Class<Word$WdPrintOutPages__wdPrintOddPagesOnly> &
      Word$WdPrintOutPages__wdPrintOddPagesOnly &
      1; // 1
  }

  declare class Word$WdPrintOutPages__wdPrintAllPages
    mixins Word$WdPrintOutPages {}
  declare class Word$WdPrintOutPages__wdPrintEvenPagesOnly
    mixins Word$WdPrintOutPages {}
  declare class Word$WdPrintOutPages__wdPrintOddPagesOnly
    mixins Word$WdPrintOutPages {}

  declare class Word$WdPrintOutRange {
    constructor(...args: empty): mixed;
    static +wdPrintAllDocument: Class<Word$WdPrintOutRange__wdPrintAllDocument> &
      Word$WdPrintOutRange__wdPrintAllDocument &
      0; // 0
    static +wdPrintCurrentPage: Class<Word$WdPrintOutRange__wdPrintCurrentPage> &
      Word$WdPrintOutRange__wdPrintCurrentPage &
      2; // 2
    static +wdPrintFromTo: Class<Word$WdPrintOutRange__wdPrintFromTo> &
      Word$WdPrintOutRange__wdPrintFromTo &
      3; // 3
    static +wdPrintRangeOfPages: Class<Word$WdPrintOutRange__wdPrintRangeOfPages> &
      Word$WdPrintOutRange__wdPrintRangeOfPages &
      4; // 4
    static +wdPrintSelection: Class<Word$WdPrintOutRange__wdPrintSelection> &
      Word$WdPrintOutRange__wdPrintSelection &
      1; // 1
  }

  declare class Word$WdPrintOutRange__wdPrintAllDocument
    mixins Word$WdPrintOutRange {}
  declare class Word$WdPrintOutRange__wdPrintCurrentPage
    mixins Word$WdPrintOutRange {}
  declare class Word$WdPrintOutRange__wdPrintFromTo
    mixins Word$WdPrintOutRange {}
  declare class Word$WdPrintOutRange__wdPrintRangeOfPages
    mixins Word$WdPrintOutRange {}
  declare class Word$WdPrintOutRange__wdPrintSelection
    mixins Word$WdPrintOutRange {}

  declare class Word$WdProofreadingErrorType {
    constructor(...args: empty): mixed;
    static +wdGrammaticalError: Class<Word$WdProofreadingErrorType__wdGrammaticalError> &
      Word$WdProofreadingErrorType__wdGrammaticalError &
      1; // 1
    static +wdSpellingError: Class<Word$WdProofreadingErrorType__wdSpellingError> &
      Word$WdProofreadingErrorType__wdSpellingError &
      0; // 0
  }

  declare class Word$WdProofreadingErrorType__wdGrammaticalError
    mixins Word$WdProofreadingErrorType {}
  declare class Word$WdProofreadingErrorType__wdSpellingError
    mixins Word$WdProofreadingErrorType {}

  declare class Word$WdProtectedViewCloseReason {
    constructor(...args: empty): mixed;
    static +wdProtectedViewCloseEdit: Class<Word$WdProtectedViewCloseReason__wdProtectedViewCloseEdit> &
      Word$WdProtectedViewCloseReason__wdProtectedViewCloseEdit &
      1; // 1
    static +wdProtectedViewCloseForced: Class<Word$WdProtectedViewCloseReason__wdProtectedViewCloseForced> &
      Word$WdProtectedViewCloseReason__wdProtectedViewCloseForced &
      2; // 2
    static +wdProtectedViewCloseNormal: Class<Word$WdProtectedViewCloseReason__wdProtectedViewCloseNormal> &
      Word$WdProtectedViewCloseReason__wdProtectedViewCloseNormal &
      0; // 0
  }

  declare class Word$WdProtectedViewCloseReason__wdProtectedViewCloseEdit
    mixins Word$WdProtectedViewCloseReason {}
  declare class Word$WdProtectedViewCloseReason__wdProtectedViewCloseForced
    mixins Word$WdProtectedViewCloseReason {}
  declare class Word$WdProtectedViewCloseReason__wdProtectedViewCloseNormal
    mixins Word$WdProtectedViewCloseReason {}

  declare class Word$WdProtectionType {
    constructor(...args: empty): mixed;
    static +wdAllowOnlyComments: Class<Word$WdProtectionType__wdAllowOnlyComments> &
      Word$WdProtectionType__wdAllowOnlyComments &
      1; // 1
    static +wdAllowOnlyFormFields: Class<Word$WdProtectionType__wdAllowOnlyFormFields> &
      Word$WdProtectionType__wdAllowOnlyFormFields &
      2; // 2
    static +wdAllowOnlyReading: Class<Word$WdProtectionType__wdAllowOnlyReading> &
      Word$WdProtectionType__wdAllowOnlyReading &
      3; // 3
    static +wdAllowOnlyRevisions: Class<Word$WdProtectionType__wdAllowOnlyRevisions> &
      Word$WdProtectionType__wdAllowOnlyRevisions &
      0; // 0
    static +wdNoProtection: Class<Word$WdProtectionType__wdNoProtection> &
      Word$WdProtectionType__wdNoProtection &
      -1; // -1
  }

  declare class Word$WdProtectionType__wdAllowOnlyComments
    mixins Word$WdProtectionType {}
  declare class Word$WdProtectionType__wdAllowOnlyFormFields
    mixins Word$WdProtectionType {}
  declare class Word$WdProtectionType__wdAllowOnlyReading
    mixins Word$WdProtectionType {}
  declare class Word$WdProtectionType__wdAllowOnlyRevisions
    mixins Word$WdProtectionType {}
  declare class Word$WdProtectionType__wdNoProtection
    mixins Word$WdProtectionType {}

  declare class Word$WdReadingLayoutMargin {
    constructor(...args: empty): mixed;
    static +wdAutomaticMargin: Class<Word$WdReadingLayoutMargin__wdAutomaticMargin> &
      Word$WdReadingLayoutMargin__wdAutomaticMargin &
      0; // 0
    static +wdFullMargin: Class<Word$WdReadingLayoutMargin__wdFullMargin> &
      Word$WdReadingLayoutMargin__wdFullMargin &
      2; // 2
    static +wdSuppressMargin: Class<Word$WdReadingLayoutMargin__wdSuppressMargin> &
      Word$WdReadingLayoutMargin__wdSuppressMargin &
      1; // 1
  }

  declare class Word$WdReadingLayoutMargin__wdAutomaticMargin
    mixins Word$WdReadingLayoutMargin {}
  declare class Word$WdReadingLayoutMargin__wdFullMargin
    mixins Word$WdReadingLayoutMargin {}
  declare class Word$WdReadingLayoutMargin__wdSuppressMargin
    mixins Word$WdReadingLayoutMargin {}

  declare class Word$WdReadingOrder {
    constructor(...args: empty): mixed;
    static +wdReadingOrderLtr: Class<Word$WdReadingOrder__wdReadingOrderLtr> &
      Word$WdReadingOrder__wdReadingOrderLtr &
      1; // 1
    static +wdReadingOrderRtl: Class<Word$WdReadingOrder__wdReadingOrderRtl> &
      Word$WdReadingOrder__wdReadingOrderRtl &
      0; // 0
  }

  declare class Word$WdReadingOrder__wdReadingOrderLtr
    mixins Word$WdReadingOrder {}
  declare class Word$WdReadingOrder__wdReadingOrderRtl
    mixins Word$WdReadingOrder {}

  declare class Word$WdRecoveryType {
    constructor(...args: empty): mixed;
    static +wdChart: Class<Word$WdRecoveryType__wdChart> &
      Word$WdRecoveryType__wdChart &
      14; // 14
    static +wdChartLinked: Class<Word$WdRecoveryType__wdChartLinked> &
      Word$WdRecoveryType__wdChartLinked &
      15; // 15
    static +wdChartPicture: Class<Word$WdRecoveryType__wdChartPicture> &
      Word$WdRecoveryType__wdChartPicture &
      13; // 13
    static +wdFormatOriginalFormatting: Class<Word$WdRecoveryType__wdFormatOriginalFormatting> &
      Word$WdRecoveryType__wdFormatOriginalFormatting &
      16; // 16
    static +wdFormatPlainText: Class<Word$WdRecoveryType__wdFormatPlainText> &
      Word$WdRecoveryType__wdFormatPlainText &
      22; // 22
    static +wdFormatSurroundingFormattingWithEmphasis: Class<Word$WdRecoveryType__wdFormatSurroundingFormattingWithEmphasis> &
      Word$WdRecoveryType__wdFormatSurroundingFormattingWithEmphasis &
      20; // 20
    static +wdListCombineWithExistingList: Class<Word$WdRecoveryType__wdListCombineWithExistingList> &
      Word$WdRecoveryType__wdListCombineWithExistingList &
      24; // 24
    static +wdListContinueNumbering: Class<Word$WdRecoveryType__wdListContinueNumbering> &
      Word$WdRecoveryType__wdListContinueNumbering &
      7; // 7
    static +wdListDontMerge: Class<Word$WdRecoveryType__wdListDontMerge> &
      Word$WdRecoveryType__wdListDontMerge &
      25; // 25
    static +wdListRestartNumbering: Class<Word$WdRecoveryType__wdListRestartNumbering> &
      Word$WdRecoveryType__wdListRestartNumbering &
      8; // 8
    static +wdPasteDefault: Class<Word$WdRecoveryType__wdPasteDefault> &
      Word$WdRecoveryType__wdPasteDefault &
      0; // 0
    static +wdSingleCellTable: Class<Word$WdRecoveryType__wdSingleCellTable> &
      Word$WdRecoveryType__wdSingleCellTable &
      6; // 6
    static +wdSingleCellText: Class<Word$WdRecoveryType__wdSingleCellText> &
      Word$WdRecoveryType__wdSingleCellText &
      5; // 5
    static +wdTableAppendTable: Class<Word$WdRecoveryType__wdTableAppendTable> &
      Word$WdRecoveryType__wdTableAppendTable &
      10; // 10
    static +wdTableInsertAsRows: Class<Word$WdRecoveryType__wdTableInsertAsRows> &
      Word$WdRecoveryType__wdTableInsertAsRows &
      11; // 11
    static +wdTableOriginalFormatting: Class<Word$WdRecoveryType__wdTableOriginalFormatting> &
      Word$WdRecoveryType__wdTableOriginalFormatting &
      12; // 12
    static +wdTableOverwriteCells: Class<Word$WdRecoveryType__wdTableOverwriteCells> &
      Word$WdRecoveryType__wdTableOverwriteCells &
      23; // 23
    static +wdUseDestinationStylesRecovery: Class<Word$WdRecoveryType__wdUseDestinationStylesRecovery> &
      Word$WdRecoveryType__wdUseDestinationStylesRecovery &
      19; // 19
  }

  declare class Word$WdRecoveryType__wdChart mixins Word$WdRecoveryType {}
  declare class Word$WdRecoveryType__wdChartLinked mixins Word$WdRecoveryType {}
  declare class Word$WdRecoveryType__wdChartPicture
    mixins Word$WdRecoveryType {}
  declare class Word$WdRecoveryType__wdFormatOriginalFormatting
    mixins Word$WdRecoveryType {}
  declare class Word$WdRecoveryType__wdFormatPlainText
    mixins Word$WdRecoveryType {}
  declare class Word$WdRecoveryType__wdFormatSurroundingFormattingWithEmphasis
    mixins Word$WdRecoveryType {}
  declare class Word$WdRecoveryType__wdListCombineWithExistingList
    mixins Word$WdRecoveryType {}
  declare class Word$WdRecoveryType__wdListContinueNumbering
    mixins Word$WdRecoveryType {}
  declare class Word$WdRecoveryType__wdListDontMerge
    mixins Word$WdRecoveryType {}
  declare class Word$WdRecoveryType__wdListRestartNumbering
    mixins Word$WdRecoveryType {}
  declare class Word$WdRecoveryType__wdPasteDefault
    mixins Word$WdRecoveryType {}
  declare class Word$WdRecoveryType__wdSingleCellTable
    mixins Word$WdRecoveryType {}
  declare class Word$WdRecoveryType__wdSingleCellText
    mixins Word$WdRecoveryType {}
  declare class Word$WdRecoveryType__wdTableAppendTable
    mixins Word$WdRecoveryType {}
  declare class Word$WdRecoveryType__wdTableInsertAsRows
    mixins Word$WdRecoveryType {}
  declare class Word$WdRecoveryType__wdTableOriginalFormatting
    mixins Word$WdRecoveryType {}
  declare class Word$WdRecoveryType__wdTableOverwriteCells
    mixins Word$WdRecoveryType {}
  declare class Word$WdRecoveryType__wdUseDestinationStylesRecovery
    mixins Word$WdRecoveryType {}

  declare class Word$WdRectangleType {
    constructor(...args: empty): mixed;
    static +wdDocumentControlRectangle: Class<Word$WdRectangleType__wdDocumentControlRectangle> &
      Word$WdRectangleType__wdDocumentControlRectangle &
      13; // 13
    static +wdLineBetweenColumnRectangle: Class<Word$WdRectangleType__wdLineBetweenColumnRectangle> &
      Word$WdRectangleType__wdLineBetweenColumnRectangle &
      5; // 5
    static +wdMailNavArea: Class<Word$WdRectangleType__wdMailNavArea> &
      Word$WdRectangleType__wdMailNavArea &
      12; // 12
    static +wdMarkupRectangle: Class<Word$WdRectangleType__wdMarkupRectangle> &
      Word$WdRectangleType__wdMarkupRectangle &
      2; // 2
    static +wdMarkupRectangleArea: Class<Word$WdRectangleType__wdMarkupRectangleArea> &
      Word$WdRectangleType__wdMarkupRectangleArea &
      8; // 8
    static +wdMarkupRectangleButton: Class<Word$WdRectangleType__wdMarkupRectangleButton> &
      Word$WdRectangleType__wdMarkupRectangleButton &
      3; // 3
    static +wdMarkupRectangleMoveMatch: Class<Word$WdRectangleType__wdMarkupRectangleMoveMatch> &
      Word$WdRectangleType__wdMarkupRectangleMoveMatch &
      10; // 10
    static +wdPageBorderRectangle: Class<Word$WdRectangleType__wdPageBorderRectangle> &
      Word$WdRectangleType__wdPageBorderRectangle &
      4; // 4
    static +wdReadingModeNavigation: Class<Word$WdRectangleType__wdReadingModeNavigation> &
      Word$WdRectangleType__wdReadingModeNavigation &
      9; // 9
    static +wdReadingModePanningArea: Class<Word$WdRectangleType__wdReadingModePanningArea> &
      Word$WdRectangleType__wdReadingModePanningArea &
      11; // 11
    static +wdSelection: Class<Word$WdRectangleType__wdSelection> &
      Word$WdRectangleType__wdSelection &
      6; // 6
    static +wdShapeRectangle: Class<Word$WdRectangleType__wdShapeRectangle> &
      Word$WdRectangleType__wdShapeRectangle &
      1; // 1
    static +wdSystem: Class<Word$WdRectangleType__wdSystem> &
      Word$WdRectangleType__wdSystem &
      7; // 7
    static +wdTextRectangle: Class<Word$WdRectangleType__wdTextRectangle> &
      Word$WdRectangleType__wdTextRectangle &
      0; // 0
  }

  declare class Word$WdRectangleType__wdDocumentControlRectangle
    mixins Word$WdRectangleType {}
  declare class Word$WdRectangleType__wdLineBetweenColumnRectangle
    mixins Word$WdRectangleType {}
  declare class Word$WdRectangleType__wdMailNavArea
    mixins Word$WdRectangleType {}
  declare class Word$WdRectangleType__wdMarkupRectangle
    mixins Word$WdRectangleType {}
  declare class Word$WdRectangleType__wdMarkupRectangleArea
    mixins Word$WdRectangleType {}
  declare class Word$WdRectangleType__wdMarkupRectangleButton
    mixins Word$WdRectangleType {}
  declare class Word$WdRectangleType__wdMarkupRectangleMoveMatch
    mixins Word$WdRectangleType {}
  declare class Word$WdRectangleType__wdPageBorderRectangle
    mixins Word$WdRectangleType {}
  declare class Word$WdRectangleType__wdReadingModeNavigation
    mixins Word$WdRectangleType {}
  declare class Word$WdRectangleType__wdReadingModePanningArea
    mixins Word$WdRectangleType {}
  declare class Word$WdRectangleType__wdSelection mixins Word$WdRectangleType {}
  declare class Word$WdRectangleType__wdShapeRectangle
    mixins Word$WdRectangleType {}
  declare class Word$WdRectangleType__wdSystem mixins Word$WdRectangleType {}
  declare class Word$WdRectangleType__wdTextRectangle
    mixins Word$WdRectangleType {}

  declare class Word$WdReferenceKind {
    constructor(...args: empty): mixed;
    static +wdContentText: Class<Word$WdReferenceKind__wdContentText> &
      Word$WdReferenceKind__wdContentText &
      -1; // -1
    static +wdEndnoteNumber: Class<Word$WdReferenceKind__wdEndnoteNumber> &
      Word$WdReferenceKind__wdEndnoteNumber &
      6; // 6
    static +wdEndnoteNumberFormatted: Class<Word$WdReferenceKind__wdEndnoteNumberFormatted> &
      Word$WdReferenceKind__wdEndnoteNumberFormatted &
      17; // 17
    static +wdEntireCaption: Class<Word$WdReferenceKind__wdEntireCaption> &
      Word$WdReferenceKind__wdEntireCaption &
      2; // 2
    static +wdFootnoteNumber: Class<Word$WdReferenceKind__wdFootnoteNumber> &
      Word$WdReferenceKind__wdFootnoteNumber &
      5; // 5
    static +wdFootnoteNumberFormatted: Class<Word$WdReferenceKind__wdFootnoteNumberFormatted> &
      Word$WdReferenceKind__wdFootnoteNumberFormatted &
      16; // 16
    static +wdNumberFullContext: Class<Word$WdReferenceKind__wdNumberFullContext> &
      Word$WdReferenceKind__wdNumberFullContext &
      -4; // -4
    static +wdNumberNoContext: Class<Word$WdReferenceKind__wdNumberNoContext> &
      Word$WdReferenceKind__wdNumberNoContext &
      -3; // -3
    static +wdNumberRelativeContext: Class<Word$WdReferenceKind__wdNumberRelativeContext> &
      Word$WdReferenceKind__wdNumberRelativeContext &
      -2; // -2
    static +wdOnlyCaptionText: Class<Word$WdReferenceKind__wdOnlyCaptionText> &
      Word$WdReferenceKind__wdOnlyCaptionText &
      4; // 4
    static +wdOnlyLabelAndNumber: Class<Word$WdReferenceKind__wdOnlyLabelAndNumber> &
      Word$WdReferenceKind__wdOnlyLabelAndNumber &
      3; // 3
    static +wdPageNumber: Class<Word$WdReferenceKind__wdPageNumber> &
      Word$WdReferenceKind__wdPageNumber &
      7; // 7
    static +wdPosition: Class<Word$WdReferenceKind__wdPosition> &
      Word$WdReferenceKind__wdPosition &
      15; // 15
  }

  declare class Word$WdReferenceKind__wdContentText
    mixins Word$WdReferenceKind {}
  declare class Word$WdReferenceKind__wdEndnoteNumber
    mixins Word$WdReferenceKind {}
  declare class Word$WdReferenceKind__wdEndnoteNumberFormatted
    mixins Word$WdReferenceKind {}
  declare class Word$WdReferenceKind__wdEntireCaption
    mixins Word$WdReferenceKind {}
  declare class Word$WdReferenceKind__wdFootnoteNumber
    mixins Word$WdReferenceKind {}
  declare class Word$WdReferenceKind__wdFootnoteNumberFormatted
    mixins Word$WdReferenceKind {}
  declare class Word$WdReferenceKind__wdNumberFullContext
    mixins Word$WdReferenceKind {}
  declare class Word$WdReferenceKind__wdNumberNoContext
    mixins Word$WdReferenceKind {}
  declare class Word$WdReferenceKind__wdNumberRelativeContext
    mixins Word$WdReferenceKind {}
  declare class Word$WdReferenceKind__wdOnlyCaptionText
    mixins Word$WdReferenceKind {}
  declare class Word$WdReferenceKind__wdOnlyLabelAndNumber
    mixins Word$WdReferenceKind {}
  declare class Word$WdReferenceKind__wdPageNumber
    mixins Word$WdReferenceKind {}
  declare class Word$WdReferenceKind__wdPosition mixins Word$WdReferenceKind {}

  declare class Word$WdReferenceType {
    constructor(...args: empty): mixed;
    static +wdRefTypeBookmark: Class<Word$WdReferenceType__wdRefTypeBookmark> &
      Word$WdReferenceType__wdRefTypeBookmark &
      2; // 2
    static +wdRefTypeEndnote: Class<Word$WdReferenceType__wdRefTypeEndnote> &
      Word$WdReferenceType__wdRefTypeEndnote &
      4; // 4
    static +wdRefTypeFootnote: Class<Word$WdReferenceType__wdRefTypeFootnote> &
      Word$WdReferenceType__wdRefTypeFootnote &
      3; // 3
    static +wdRefTypeHeading: Class<Word$WdReferenceType__wdRefTypeHeading> &
      Word$WdReferenceType__wdRefTypeHeading &
      1; // 1
    static +wdRefTypeNumberedItem: Class<Word$WdReferenceType__wdRefTypeNumberedItem> &
      Word$WdReferenceType__wdRefTypeNumberedItem &
      0; // 0
  }

  declare class Word$WdReferenceType__wdRefTypeBookmark
    mixins Word$WdReferenceType {}
  declare class Word$WdReferenceType__wdRefTypeEndnote
    mixins Word$WdReferenceType {}
  declare class Word$WdReferenceType__wdRefTypeFootnote
    mixins Word$WdReferenceType {}
  declare class Word$WdReferenceType__wdRefTypeHeading
    mixins Word$WdReferenceType {}
  declare class Word$WdReferenceType__wdRefTypeNumberedItem
    mixins Word$WdReferenceType {}

  declare class Word$WdRelativeHorizontalPosition {
    constructor(...args: empty): mixed;
    static +wdRelativeHorizontalPositionCharacter: Class<Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionCharacter> &
      Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionCharacter &
      3; // 3
    static +wdRelativeHorizontalPositionColumn: Class<Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionColumn> &
      Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionColumn &
      2; // 2
    static +wdRelativeHorizontalPositionInnerMarginArea: Class<Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionInnerMarginArea> &
      Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionInnerMarginArea &
      6; // 6
    static +wdRelativeHorizontalPositionLeftMarginArea: Class<Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionLeftMarginArea> &
      Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionLeftMarginArea &
      4; // 4
    static +wdRelativeHorizontalPositionMargin: Class<Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionMargin> &
      Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionMargin &
      0; // 0
    static +wdRelativeHorizontalPositionOuterMarginArea: Class<Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionOuterMarginArea> &
      Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionOuterMarginArea &
      7; // 7
    static +wdRelativeHorizontalPositionPage: Class<Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionPage> &
      Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionPage &
      1; // 1
    static +wdRelativeHorizontalPositionRightMarginArea: Class<Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionRightMarginArea> &
      Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionRightMarginArea &
      5; // 5
  }

  declare class Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionCharacter
    mixins Word$WdRelativeHorizontalPosition {}
  declare class Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionColumn
    mixins Word$WdRelativeHorizontalPosition {}
  declare class Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionInnerMarginArea
    mixins Word$WdRelativeHorizontalPosition {}
  declare class Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionLeftMarginArea
    mixins Word$WdRelativeHorizontalPosition {}
  declare class Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionMargin
    mixins Word$WdRelativeHorizontalPosition {}
  declare class Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionOuterMarginArea
    mixins Word$WdRelativeHorizontalPosition {}
  declare class Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionPage
    mixins Word$WdRelativeHorizontalPosition {}
  declare class Word$WdRelativeHorizontalPosition__wdRelativeHorizontalPositionRightMarginArea
    mixins Word$WdRelativeHorizontalPosition {}

  declare class Word$WdRelativeHorizontalSize {
    constructor(...args: empty): mixed;
    static +wdRelativeHorizontalSizeInnerMarginArea: Class<Word$WdRelativeHorizontalSize__wdRelativeHorizontalSizeInnerMarginArea> &
      Word$WdRelativeHorizontalSize__wdRelativeHorizontalSizeInnerMarginArea &
      4; // 4
    static +wdRelativeHorizontalSizeLeftMarginArea: Class<Word$WdRelativeHorizontalSize__wdRelativeHorizontalSizeLeftMarginArea> &
      Word$WdRelativeHorizontalSize__wdRelativeHorizontalSizeLeftMarginArea &
      2; // 2
    static +wdRelativeHorizontalSizeMargin: Class<Word$WdRelativeHorizontalSize__wdRelativeHorizontalSizeMargin> &
      Word$WdRelativeHorizontalSize__wdRelativeHorizontalSizeMargin &
      0; // 0
    static +wdRelativeHorizontalSizeOuterMarginArea: Class<Word$WdRelativeHorizontalSize__wdRelativeHorizontalSizeOuterMarginArea> &
      Word$WdRelativeHorizontalSize__wdRelativeHorizontalSizeOuterMarginArea &
      5; // 5
    static +wdRelativeHorizontalSizePage: Class<Word$WdRelativeHorizontalSize__wdRelativeHorizontalSizePage> &
      Word$WdRelativeHorizontalSize__wdRelativeHorizontalSizePage &
      1; // 1
    static +wdRelativeHorizontalSizeRightMarginArea: Class<Word$WdRelativeHorizontalSize__wdRelativeHorizontalSizeRightMarginArea> &
      Word$WdRelativeHorizontalSize__wdRelativeHorizontalSizeRightMarginArea &
      3; // 3
  }

  declare class Word$WdRelativeHorizontalSize__wdRelativeHorizontalSizeInnerMarginArea
    mixins Word$WdRelativeHorizontalSize {}
  declare class Word$WdRelativeHorizontalSize__wdRelativeHorizontalSizeLeftMarginArea
    mixins Word$WdRelativeHorizontalSize {}
  declare class Word$WdRelativeHorizontalSize__wdRelativeHorizontalSizeMargin
    mixins Word$WdRelativeHorizontalSize {}
  declare class Word$WdRelativeHorizontalSize__wdRelativeHorizontalSizeOuterMarginArea
    mixins Word$WdRelativeHorizontalSize {}
  declare class Word$WdRelativeHorizontalSize__wdRelativeHorizontalSizePage
    mixins Word$WdRelativeHorizontalSize {}
  declare class Word$WdRelativeHorizontalSize__wdRelativeHorizontalSizeRightMarginArea
    mixins Word$WdRelativeHorizontalSize {}

  declare class Word$WdRelativeVerticalPosition {
    constructor(...args: empty): mixed;
    static +wdRelativeVerticalPositionBottomMarginArea: Class<Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionBottomMarginArea> &
      Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionBottomMarginArea &
      5; // 5
    static +wdRelativeVerticalPositionInnerMarginArea: Class<Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionInnerMarginArea> &
      Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionInnerMarginArea &
      6; // 6
    static +wdRelativeVerticalPositionLine: Class<Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionLine> &
      Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionLine &
      3; // 3
    static +wdRelativeVerticalPositionMargin: Class<Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionMargin> &
      Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionMargin &
      0; // 0
    static +wdRelativeVerticalPositionOuterMarginArea: Class<Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionOuterMarginArea> &
      Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionOuterMarginArea &
      7; // 7
    static +wdRelativeVerticalPositionPage: Class<Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionPage> &
      Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionPage &
      1; // 1
    static +wdRelativeVerticalPositionParagraph: Class<Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionParagraph> &
      Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionParagraph &
      2; // 2
    static +wdRelativeVerticalPositionTopMarginArea: Class<Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionTopMarginArea> &
      Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionTopMarginArea &
      4; // 4
  }

  declare class Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionBottomMarginArea
    mixins Word$WdRelativeVerticalPosition {}
  declare class Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionInnerMarginArea
    mixins Word$WdRelativeVerticalPosition {}
  declare class Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionLine
    mixins Word$WdRelativeVerticalPosition {}
  declare class Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionMargin
    mixins Word$WdRelativeVerticalPosition {}
  declare class Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionOuterMarginArea
    mixins Word$WdRelativeVerticalPosition {}
  declare class Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionPage
    mixins Word$WdRelativeVerticalPosition {}
  declare class Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionParagraph
    mixins Word$WdRelativeVerticalPosition {}
  declare class Word$WdRelativeVerticalPosition__wdRelativeVerticalPositionTopMarginArea
    mixins Word$WdRelativeVerticalPosition {}

  declare class Word$WdRelativeVerticalSize {
    constructor(...args: empty): mixed;
    static +wdRelativeVerticalSizeBottomMarginArea: Class<Word$WdRelativeVerticalSize__wdRelativeVerticalSizeBottomMarginArea> &
      Word$WdRelativeVerticalSize__wdRelativeVerticalSizeBottomMarginArea &
      3; // 3
    static +wdRelativeVerticalSizeInnerMarginArea: Class<Word$WdRelativeVerticalSize__wdRelativeVerticalSizeInnerMarginArea> &
      Word$WdRelativeVerticalSize__wdRelativeVerticalSizeInnerMarginArea &
      4; // 4
    static +wdRelativeVerticalSizeMargin: Class<Word$WdRelativeVerticalSize__wdRelativeVerticalSizeMargin> &
      Word$WdRelativeVerticalSize__wdRelativeVerticalSizeMargin &
      0; // 0
    static +wdRelativeVerticalSizeOuterMarginArea: Class<Word$WdRelativeVerticalSize__wdRelativeVerticalSizeOuterMarginArea> &
      Word$WdRelativeVerticalSize__wdRelativeVerticalSizeOuterMarginArea &
      5; // 5
    static +wdRelativeVerticalSizePage: Class<Word$WdRelativeVerticalSize__wdRelativeVerticalSizePage> &
      Word$WdRelativeVerticalSize__wdRelativeVerticalSizePage &
      1; // 1
    static +wdRelativeVerticalSizeTopMarginArea: Class<Word$WdRelativeVerticalSize__wdRelativeVerticalSizeTopMarginArea> &
      Word$WdRelativeVerticalSize__wdRelativeVerticalSizeTopMarginArea &
      2; // 2
  }

  declare class Word$WdRelativeVerticalSize__wdRelativeVerticalSizeBottomMarginArea
    mixins Word$WdRelativeVerticalSize {}
  declare class Word$WdRelativeVerticalSize__wdRelativeVerticalSizeInnerMarginArea
    mixins Word$WdRelativeVerticalSize {}
  declare class Word$WdRelativeVerticalSize__wdRelativeVerticalSizeMargin
    mixins Word$WdRelativeVerticalSize {}
  declare class Word$WdRelativeVerticalSize__wdRelativeVerticalSizeOuterMarginArea
    mixins Word$WdRelativeVerticalSize {}
  declare class Word$WdRelativeVerticalSize__wdRelativeVerticalSizePage
    mixins Word$WdRelativeVerticalSize {}
  declare class Word$WdRelativeVerticalSize__wdRelativeVerticalSizeTopMarginArea
    mixins Word$WdRelativeVerticalSize {}

  declare class Word$WdRelocate {
    constructor(...args: empty): mixed;
    static +wdRelocateDown: Class<Word$WdRelocate__wdRelocateDown> &
      Word$WdRelocate__wdRelocateDown &
      1; // 1
    static +wdRelocateUp: Class<Word$WdRelocate__wdRelocateUp> &
      Word$WdRelocate__wdRelocateUp &
      0; // 0
  }

  declare class Word$WdRelocate__wdRelocateDown mixins Word$WdRelocate {}
  declare class Word$WdRelocate__wdRelocateUp mixins Word$WdRelocate {}

  declare class Word$WdRemoveDocInfoType {
    constructor(...args: empty): mixed;
    static +wdRDIAll: Class<Word$WdRemoveDocInfoType__wdRDIAll> &
      Word$WdRemoveDocInfoType__wdRDIAll &
      99; // 99
    static +wdRDIComments: Class<Word$WdRemoveDocInfoType__wdRDIComments> &
      Word$WdRemoveDocInfoType__wdRDIComments &
      1; // 1
    static +wdRDIContentType: Class<Word$WdRemoveDocInfoType__wdRDIContentType> &
      Word$WdRemoveDocInfoType__wdRDIContentType &
      16; // 16
    static +wdRDIDocumentManagementPolicy: Class<Word$WdRemoveDocInfoType__wdRDIDocumentManagementPolicy> &
      Word$WdRemoveDocInfoType__wdRDIDocumentManagementPolicy &
      15; // 15
    static +wdRDIDocumentProperties: Class<Word$WdRemoveDocInfoType__wdRDIDocumentProperties> &
      Word$WdRemoveDocInfoType__wdRDIDocumentProperties &
      8; // 8
    static +wdRDIDocumentServerProperties: Class<Word$WdRemoveDocInfoType__wdRDIDocumentServerProperties> &
      Word$WdRemoveDocInfoType__wdRDIDocumentServerProperties &
      14; // 14
    static +wdRDIDocumentWorkspace: Class<Word$WdRemoveDocInfoType__wdRDIDocumentWorkspace> &
      Word$WdRemoveDocInfoType__wdRDIDocumentWorkspace &
      10; // 10
    static +wdRDIEmailHeader: Class<Word$WdRemoveDocInfoType__wdRDIEmailHeader> &
      Word$WdRemoveDocInfoType__wdRDIEmailHeader &
      5; // 5
    static +wdRDIInkAnnotations: Class<Word$WdRemoveDocInfoType__wdRDIInkAnnotations> &
      Word$WdRemoveDocInfoType__wdRDIInkAnnotations &
      11; // 11
    static +wdRDIRemovePersonalInformation: Class<Word$WdRemoveDocInfoType__wdRDIRemovePersonalInformation> &
      Word$WdRemoveDocInfoType__wdRDIRemovePersonalInformation &
      4; // 4
    static +wdRDIRevisions: Class<Word$WdRemoveDocInfoType__wdRDIRevisions> &
      Word$WdRemoveDocInfoType__wdRDIRevisions &
      2; // 2
    static +wdRDIRoutingSlip: Class<Word$WdRemoveDocInfoType__wdRDIRoutingSlip> &
      Word$WdRemoveDocInfoType__wdRDIRoutingSlip &
      6; // 6
    static +wdRDISendForReview: Class<Word$WdRemoveDocInfoType__wdRDISendForReview> &
      Word$WdRemoveDocInfoType__wdRDISendForReview &
      7; // 7
    static +wdRDITemplate: Class<Word$WdRemoveDocInfoType__wdRDITemplate> &
      Word$WdRemoveDocInfoType__wdRDITemplate &
      9; // 9
    static +wdRDIVersions: Class<Word$WdRemoveDocInfoType__wdRDIVersions> &
      Word$WdRemoveDocInfoType__wdRDIVersions &
      3; // 3
  }

  declare class Word$WdRemoveDocInfoType__wdRDIAll
    mixins Word$WdRemoveDocInfoType {}
  declare class Word$WdRemoveDocInfoType__wdRDIComments
    mixins Word$WdRemoveDocInfoType {}
  declare class Word$WdRemoveDocInfoType__wdRDIContentType
    mixins Word$WdRemoveDocInfoType {}
  declare class Word$WdRemoveDocInfoType__wdRDIDocumentManagementPolicy
    mixins Word$WdRemoveDocInfoType {}
  declare class Word$WdRemoveDocInfoType__wdRDIDocumentProperties
    mixins Word$WdRemoveDocInfoType {}
  declare class Word$WdRemoveDocInfoType__wdRDIDocumentServerProperties
    mixins Word$WdRemoveDocInfoType {}
  declare class Word$WdRemoveDocInfoType__wdRDIDocumentWorkspace
    mixins Word$WdRemoveDocInfoType {}
  declare class Word$WdRemoveDocInfoType__wdRDIEmailHeader
    mixins Word$WdRemoveDocInfoType {}
  declare class Word$WdRemoveDocInfoType__wdRDIInkAnnotations
    mixins Word$WdRemoveDocInfoType {}
  declare class Word$WdRemoveDocInfoType__wdRDIRemovePersonalInformation
    mixins Word$WdRemoveDocInfoType {}
  declare class Word$WdRemoveDocInfoType__wdRDIRevisions
    mixins Word$WdRemoveDocInfoType {}
  declare class Word$WdRemoveDocInfoType__wdRDIRoutingSlip
    mixins Word$WdRemoveDocInfoType {}
  declare class Word$WdRemoveDocInfoType__wdRDISendForReview
    mixins Word$WdRemoveDocInfoType {}
  declare class Word$WdRemoveDocInfoType__wdRDITemplate
    mixins Word$WdRemoveDocInfoType {}
  declare class Word$WdRemoveDocInfoType__wdRDIVersions
    mixins Word$WdRemoveDocInfoType {}

  declare class Word$WdReplace {
    constructor(...args: empty): mixed;
    static +wdReplaceAll: Class<Word$WdReplace__wdReplaceAll> &
      Word$WdReplace__wdReplaceAll &
      2; // 2
    static +wdReplaceNone: Class<Word$WdReplace__wdReplaceNone> &
      Word$WdReplace__wdReplaceNone &
      0; // 0
    static +wdReplaceOne: Class<Word$WdReplace__wdReplaceOne> &
      Word$WdReplace__wdReplaceOne &
      1; // 1
  }

  declare class Word$WdReplace__wdReplaceAll mixins Word$WdReplace {}
  declare class Word$WdReplace__wdReplaceNone mixins Word$WdReplace {}
  declare class Word$WdReplace__wdReplaceOne mixins Word$WdReplace {}

  declare class Word$WdRevisedLinesMark {
    constructor(...args: empty): mixed;
    static +wdRevisedLinesMarkLeftBorder: Class<Word$WdRevisedLinesMark__wdRevisedLinesMarkLeftBorder> &
      Word$WdRevisedLinesMark__wdRevisedLinesMarkLeftBorder &
      1; // 1
    static +wdRevisedLinesMarkNone: Class<Word$WdRevisedLinesMark__wdRevisedLinesMarkNone> &
      Word$WdRevisedLinesMark__wdRevisedLinesMarkNone &
      0; // 0
    static +wdRevisedLinesMarkOutsideBorder: Class<Word$WdRevisedLinesMark__wdRevisedLinesMarkOutsideBorder> &
      Word$WdRevisedLinesMark__wdRevisedLinesMarkOutsideBorder &
      3; // 3
    static +wdRevisedLinesMarkRightBorder: Class<Word$WdRevisedLinesMark__wdRevisedLinesMarkRightBorder> &
      Word$WdRevisedLinesMark__wdRevisedLinesMarkRightBorder &
      2; // 2
  }

  declare class Word$WdRevisedLinesMark__wdRevisedLinesMarkLeftBorder
    mixins Word$WdRevisedLinesMark {}
  declare class Word$WdRevisedLinesMark__wdRevisedLinesMarkNone
    mixins Word$WdRevisedLinesMark {}
  declare class Word$WdRevisedLinesMark__wdRevisedLinesMarkOutsideBorder
    mixins Word$WdRevisedLinesMark {}
  declare class Word$WdRevisedLinesMark__wdRevisedLinesMarkRightBorder
    mixins Word$WdRevisedLinesMark {}

  declare class Word$WdRevisedPropertiesMark {
    constructor(...args: empty): mixed;
    static +wdRevisedPropertiesMarkBold: Class<Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkBold> &
      Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkBold &
      1; // 1
    static +wdRevisedPropertiesMarkColorOnly: Class<Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkColorOnly> &
      Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkColorOnly &
      5; // 5
    static +wdRevisedPropertiesMarkDoubleStrikeThrough: Class<Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkDoubleStrikeThrough> &
      Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkDoubleStrikeThrough &
      7; // 7
    static +wdRevisedPropertiesMarkDoubleUnderline: Class<Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkDoubleUnderline> &
      Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkDoubleUnderline &
      4; // 4
    static +wdRevisedPropertiesMarkItalic: Class<Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkItalic> &
      Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkItalic &
      2; // 2
    static +wdRevisedPropertiesMarkNone: Class<Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkNone> &
      Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkNone &
      0; // 0
    static +wdRevisedPropertiesMarkStrikeThrough: Class<Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkStrikeThrough> &
      Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkStrikeThrough &
      6; // 6
    static +wdRevisedPropertiesMarkUnderline: Class<Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkUnderline> &
      Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkUnderline &
      3; // 3
  }

  declare class Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkBold
    mixins Word$WdRevisedPropertiesMark {}
  declare class Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkColorOnly
    mixins Word$WdRevisedPropertiesMark {}
  declare class Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkDoubleStrikeThrough
    mixins Word$WdRevisedPropertiesMark {}
  declare class Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkDoubleUnderline
    mixins Word$WdRevisedPropertiesMark {}
  declare class Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkItalic
    mixins Word$WdRevisedPropertiesMark {}
  declare class Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkNone
    mixins Word$WdRevisedPropertiesMark {}
  declare class Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkStrikeThrough
    mixins Word$WdRevisedPropertiesMark {}
  declare class Word$WdRevisedPropertiesMark__wdRevisedPropertiesMarkUnderline
    mixins Word$WdRevisedPropertiesMark {}

  declare class Word$WdRevisionsBalloonMargin {
    constructor(...args: empty): mixed;
    static +wdLeftMargin: Class<Word$WdRevisionsBalloonMargin__wdLeftMargin> &
      Word$WdRevisionsBalloonMargin__wdLeftMargin &
      0; // 0
    static +wdRightMargin: Class<Word$WdRevisionsBalloonMargin__wdRightMargin> &
      Word$WdRevisionsBalloonMargin__wdRightMargin &
      1; // 1
  }

  declare class Word$WdRevisionsBalloonMargin__wdLeftMargin
    mixins Word$WdRevisionsBalloonMargin {}
  declare class Word$WdRevisionsBalloonMargin__wdRightMargin
    mixins Word$WdRevisionsBalloonMargin {}

  declare class Word$WdRevisionsBalloonPrintOrientation {
    constructor(...args: empty): mixed;
    static +wdBalloonPrintOrientationAuto: Class<Word$WdRevisionsBalloonPrintOrientation__wdBalloonPrintOrientationAuto> &
      Word$WdRevisionsBalloonPrintOrientation__wdBalloonPrintOrientationAuto &
      0; // 0
    static +wdBalloonPrintOrientationForceLandscape: Class<Word$WdRevisionsBalloonPrintOrientation__wdBalloonPrintOrientationForceLandscape> &
      Word$WdRevisionsBalloonPrintOrientation__wdBalloonPrintOrientationForceLandscape &
      2; // 2
    static +wdBalloonPrintOrientationPreserve: Class<Word$WdRevisionsBalloonPrintOrientation__wdBalloonPrintOrientationPreserve> &
      Word$WdRevisionsBalloonPrintOrientation__wdBalloonPrintOrientationPreserve &
      1; // 1
  }

  declare class Word$WdRevisionsBalloonPrintOrientation__wdBalloonPrintOrientationAuto
    mixins Word$WdRevisionsBalloonPrintOrientation {}
  declare class Word$WdRevisionsBalloonPrintOrientation__wdBalloonPrintOrientationForceLandscape
    mixins Word$WdRevisionsBalloonPrintOrientation {}
  declare class Word$WdRevisionsBalloonPrintOrientation__wdBalloonPrintOrientationPreserve
    mixins Word$WdRevisionsBalloonPrintOrientation {}

  declare class Word$WdRevisionsBalloonWidthType {
    constructor(...args: empty): mixed;
    static +wdBalloonWidthPercent: Class<Word$WdRevisionsBalloonWidthType__wdBalloonWidthPercent> &
      Word$WdRevisionsBalloonWidthType__wdBalloonWidthPercent &
      0; // 0
    static +wdBalloonWidthPoints: Class<Word$WdRevisionsBalloonWidthType__wdBalloonWidthPoints> &
      Word$WdRevisionsBalloonWidthType__wdBalloonWidthPoints &
      1; // 1
  }

  declare class Word$WdRevisionsBalloonWidthType__wdBalloonWidthPercent
    mixins Word$WdRevisionsBalloonWidthType {}
  declare class Word$WdRevisionsBalloonWidthType__wdBalloonWidthPoints
    mixins Word$WdRevisionsBalloonWidthType {}

  declare class Word$WdRevisionsMode {
    constructor(...args: empty): mixed;
    static +wdBalloonRevisions: Class<Word$WdRevisionsMode__wdBalloonRevisions> &
      Word$WdRevisionsMode__wdBalloonRevisions &
      0; // 0
    static +wdInLineRevisions: Class<Word$WdRevisionsMode__wdInLineRevisions> &
      Word$WdRevisionsMode__wdInLineRevisions &
      1; // 1
    static +wdMixedRevisions: Class<Word$WdRevisionsMode__wdMixedRevisions> &
      Word$WdRevisionsMode__wdMixedRevisions &
      2; // 2
  }

  declare class Word$WdRevisionsMode__wdBalloonRevisions
    mixins Word$WdRevisionsMode {}
  declare class Word$WdRevisionsMode__wdInLineRevisions
    mixins Word$WdRevisionsMode {}
  declare class Word$WdRevisionsMode__wdMixedRevisions
    mixins Word$WdRevisionsMode {}

  declare class Word$WdRevisionsView {
    constructor(...args: empty): mixed;
    static +wdRevisionsViewFinal: Class<Word$WdRevisionsView__wdRevisionsViewFinal> &
      Word$WdRevisionsView__wdRevisionsViewFinal &
      0; // 0
    static +wdRevisionsViewOriginal: Class<Word$WdRevisionsView__wdRevisionsViewOriginal> &
      Word$WdRevisionsView__wdRevisionsViewOriginal &
      1; // 1
  }

  declare class Word$WdRevisionsView__wdRevisionsViewFinal
    mixins Word$WdRevisionsView {}
  declare class Word$WdRevisionsView__wdRevisionsViewOriginal
    mixins Word$WdRevisionsView {}

  declare class Word$WdRevisionsWrap {
    constructor(...args: empty): mixed;
    static +wdWrapAlways: Class<Word$WdRevisionsWrap__wdWrapAlways> &
      Word$WdRevisionsWrap__wdWrapAlways &
      1; // 1
    static +wdWrapAsk: Class<Word$WdRevisionsWrap__wdWrapAsk> &
      Word$WdRevisionsWrap__wdWrapAsk &
      2; // 2
    static +wdWrapNever: Class<Word$WdRevisionsWrap__wdWrapNever> &
      Word$WdRevisionsWrap__wdWrapNever &
      0; // 0
  }

  declare class Word$WdRevisionsWrap__wdWrapAlways
    mixins Word$WdRevisionsWrap {}
  declare class Word$WdRevisionsWrap__wdWrapAsk mixins Word$WdRevisionsWrap {}
  declare class Word$WdRevisionsWrap__wdWrapNever mixins Word$WdRevisionsWrap {}

  declare class Word$WdRevisionType {
    constructor(...args: empty): mixed;
    static +wdNoRevision: Class<Word$WdRevisionType__wdNoRevision> &
      Word$WdRevisionType__wdNoRevision &
      0; // 0
    static +wdRevisionCellDeletion: Class<Word$WdRevisionType__wdRevisionCellDeletion> &
      Word$WdRevisionType__wdRevisionCellDeletion &
      17; // 17
    static +wdRevisionCellInsertion: Class<Word$WdRevisionType__wdRevisionCellInsertion> &
      Word$WdRevisionType__wdRevisionCellInsertion &
      16; // 16
    static +wdRevisionCellMerge: Class<Word$WdRevisionType__wdRevisionCellMerge> &
      Word$WdRevisionType__wdRevisionCellMerge &
      18; // 18
    static +wdRevisionCellSplit: Class<Word$WdRevisionType__wdRevisionCellSplit> &
      Word$WdRevisionType__wdRevisionCellSplit &
      19; // 19
    static +wdRevisionConflict: Class<Word$WdRevisionType__wdRevisionConflict> &
      Word$WdRevisionType__wdRevisionConflict &
      7; // 7
    static +wdRevisionConflictDelete: Class<Word$WdRevisionType__wdRevisionConflictDelete> &
      Word$WdRevisionType__wdRevisionConflictDelete &
      21; // 21
    static +wdRevisionConflictInsert: Class<Word$WdRevisionType__wdRevisionConflictInsert> &
      Word$WdRevisionType__wdRevisionConflictInsert &
      20; // 20
    static +wdRevisionDelete: Class<Word$WdRevisionType__wdRevisionDelete> &
      Word$WdRevisionType__wdRevisionDelete &
      2; // 2
    static +wdRevisionDisplayField: Class<Word$WdRevisionType__wdRevisionDisplayField> &
      Word$WdRevisionType__wdRevisionDisplayField &
      5; // 5
    static +wdRevisionInsert: Class<Word$WdRevisionType__wdRevisionInsert> &
      Word$WdRevisionType__wdRevisionInsert &
      1; // 1
    static +wdRevisionMovedFrom: Class<Word$WdRevisionType__wdRevisionMovedFrom> &
      Word$WdRevisionType__wdRevisionMovedFrom &
      14; // 14
    static +wdRevisionMovedTo: Class<Word$WdRevisionType__wdRevisionMovedTo> &
      Word$WdRevisionType__wdRevisionMovedTo &
      15; // 15
    static +wdRevisionParagraphNumber: Class<Word$WdRevisionType__wdRevisionParagraphNumber> &
      Word$WdRevisionType__wdRevisionParagraphNumber &
      4; // 4
    static +wdRevisionParagraphProperty: Class<Word$WdRevisionType__wdRevisionParagraphProperty> &
      Word$WdRevisionType__wdRevisionParagraphProperty &
      10; // 10
    static +wdRevisionProperty: Class<Word$WdRevisionType__wdRevisionProperty> &
      Word$WdRevisionType__wdRevisionProperty &
      3; // 3
    static +wdRevisionReconcile: Class<Word$WdRevisionType__wdRevisionReconcile> &
      Word$WdRevisionType__wdRevisionReconcile &
      6; // 6
    static +wdRevisionReplace: Class<Word$WdRevisionType__wdRevisionReplace> &
      Word$WdRevisionType__wdRevisionReplace &
      9; // 9
    static +wdRevisionSectionProperty: Class<Word$WdRevisionType__wdRevisionSectionProperty> &
      Word$WdRevisionType__wdRevisionSectionProperty &
      12; // 12
    static +wdRevisionStyle: Class<Word$WdRevisionType__wdRevisionStyle> &
      Word$WdRevisionType__wdRevisionStyle &
      8; // 8
    static +wdRevisionStyleDefinition: Class<Word$WdRevisionType__wdRevisionStyleDefinition> &
      Word$WdRevisionType__wdRevisionStyleDefinition &
      13; // 13
    static +wdRevisionTableProperty: Class<Word$WdRevisionType__wdRevisionTableProperty> &
      Word$WdRevisionType__wdRevisionTableProperty &
      11; // 11
  }

  declare class Word$WdRevisionType__wdNoRevision mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionCellDeletion
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionCellInsertion
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionCellMerge
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionCellSplit
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionConflict
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionConflictDelete
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionConflictInsert
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionDelete
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionDisplayField
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionInsert
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionMovedFrom
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionMovedTo
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionParagraphNumber
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionParagraphProperty
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionProperty
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionReconcile
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionReplace
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionSectionProperty
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionStyle
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionStyleDefinition
    mixins Word$WdRevisionType {}
  declare class Word$WdRevisionType__wdRevisionTableProperty
    mixins Word$WdRevisionType {}

  declare class Word$WdRoutingSlipDelivery {
    constructor(...args: empty): mixed;
    static +wdAllAtOnce: Class<Word$WdRoutingSlipDelivery__wdAllAtOnce> &
      Word$WdRoutingSlipDelivery__wdAllAtOnce &
      1; // 1
    static +wdOneAfterAnother: Class<Word$WdRoutingSlipDelivery__wdOneAfterAnother> &
      Word$WdRoutingSlipDelivery__wdOneAfterAnother &
      0; // 0
  }

  declare class Word$WdRoutingSlipDelivery__wdAllAtOnce
    mixins Word$WdRoutingSlipDelivery {}
  declare class Word$WdRoutingSlipDelivery__wdOneAfterAnother
    mixins Word$WdRoutingSlipDelivery {}

  declare class Word$WdRoutingSlipStatus {
    constructor(...args: empty): mixed;
    static +wdNotYetRouted: Class<Word$WdRoutingSlipStatus__wdNotYetRouted> &
      Word$WdRoutingSlipStatus__wdNotYetRouted &
      0; // 0
    static +wdRouteComplete: Class<Word$WdRoutingSlipStatus__wdRouteComplete> &
      Word$WdRoutingSlipStatus__wdRouteComplete &
      2; // 2
    static +wdRouteInProgress: Class<Word$WdRoutingSlipStatus__wdRouteInProgress> &
      Word$WdRoutingSlipStatus__wdRouteInProgress &
      1; // 1
  }

  declare class Word$WdRoutingSlipStatus__wdNotYetRouted
    mixins Word$WdRoutingSlipStatus {}
  declare class Word$WdRoutingSlipStatus__wdRouteComplete
    mixins Word$WdRoutingSlipStatus {}
  declare class Word$WdRoutingSlipStatus__wdRouteInProgress
    mixins Word$WdRoutingSlipStatus {}

  declare class Word$WdRowAlignment {
    constructor(...args: empty): mixed;
    static +wdAlignRowCenter: Class<Word$WdRowAlignment__wdAlignRowCenter> &
      Word$WdRowAlignment__wdAlignRowCenter &
      1; // 1
    static +wdAlignRowLeft: Class<Word$WdRowAlignment__wdAlignRowLeft> &
      Word$WdRowAlignment__wdAlignRowLeft &
      0; // 0
    static +wdAlignRowRight: Class<Word$WdRowAlignment__wdAlignRowRight> &
      Word$WdRowAlignment__wdAlignRowRight &
      2; // 2
  }

  declare class Word$WdRowAlignment__wdAlignRowCenter
    mixins Word$WdRowAlignment {}
  declare class Word$WdRowAlignment__wdAlignRowLeft
    mixins Word$WdRowAlignment {}
  declare class Word$WdRowAlignment__wdAlignRowRight
    mixins Word$WdRowAlignment {}

  declare class Word$WdRowHeightRule {
    constructor(...args: empty): mixed;
    static +wdRowHeightAtLeast: Class<Word$WdRowHeightRule__wdRowHeightAtLeast> &
      Word$WdRowHeightRule__wdRowHeightAtLeast &
      1; // 1
    static +wdRowHeightAuto: Class<Word$WdRowHeightRule__wdRowHeightAuto> &
      Word$WdRowHeightRule__wdRowHeightAuto &
      0; // 0
    static +wdRowHeightExactly: Class<Word$WdRowHeightRule__wdRowHeightExactly> &
      Word$WdRowHeightRule__wdRowHeightExactly &
      2; // 2
  }

  declare class Word$WdRowHeightRule__wdRowHeightAtLeast
    mixins Word$WdRowHeightRule {}
  declare class Word$WdRowHeightRule__wdRowHeightAuto
    mixins Word$WdRowHeightRule {}
  declare class Word$WdRowHeightRule__wdRowHeightExactly
    mixins Word$WdRowHeightRule {}

  declare class Word$WdRulerStyle {
    constructor(...args: empty): mixed;
    static +wdAdjustFirstColumn: Class<Word$WdRulerStyle__wdAdjustFirstColumn> &
      Word$WdRulerStyle__wdAdjustFirstColumn &
      2; // 2
    static +wdAdjustNone: Class<Word$WdRulerStyle__wdAdjustNone> &
      Word$WdRulerStyle__wdAdjustNone &
      0; // 0
    static +wdAdjustProportional: Class<Word$WdRulerStyle__wdAdjustProportional> &
      Word$WdRulerStyle__wdAdjustProportional &
      1; // 1
    static +wdAdjustSameWidth: Class<Word$WdRulerStyle__wdAdjustSameWidth> &
      Word$WdRulerStyle__wdAdjustSameWidth &
      3; // 3
  }

  declare class Word$WdRulerStyle__wdAdjustFirstColumn
    mixins Word$WdRulerStyle {}
  declare class Word$WdRulerStyle__wdAdjustNone mixins Word$WdRulerStyle {}
  declare class Word$WdRulerStyle__wdAdjustProportional
    mixins Word$WdRulerStyle {}
  declare class Word$WdRulerStyle__wdAdjustSameWidth mixins Word$WdRulerStyle {}

  declare class Word$WdSalutationGender {
    constructor(...args: empty): mixed;
    static +wdGenderFemale: Class<Word$WdSalutationGender__wdGenderFemale> &
      Word$WdSalutationGender__wdGenderFemale &
      0; // 0
    static +wdGenderMale: Class<Word$WdSalutationGender__wdGenderMale> &
      Word$WdSalutationGender__wdGenderMale &
      1; // 1
    static +wdGenderNeutral: Class<Word$WdSalutationGender__wdGenderNeutral> &
      Word$WdSalutationGender__wdGenderNeutral &
      2; // 2
    static +wdGenderUnknown: Class<Word$WdSalutationGender__wdGenderUnknown> &
      Word$WdSalutationGender__wdGenderUnknown &
      3; // 3
  }

  declare class Word$WdSalutationGender__wdGenderFemale
    mixins Word$WdSalutationGender {}
  declare class Word$WdSalutationGender__wdGenderMale
    mixins Word$WdSalutationGender {}
  declare class Word$WdSalutationGender__wdGenderNeutral
    mixins Word$WdSalutationGender {}
  declare class Word$WdSalutationGender__wdGenderUnknown
    mixins Word$WdSalutationGender {}

  declare class Word$WdSalutationType {
    constructor(...args: empty): mixed;
    static +wdSalutationBusiness: Class<Word$WdSalutationType__wdSalutationBusiness> &
      Word$WdSalutationType__wdSalutationBusiness &
      2; // 2
    static +wdSalutationFormal: Class<Word$WdSalutationType__wdSalutationFormal> &
      Word$WdSalutationType__wdSalutationFormal &
      1; // 1
    static +wdSalutationInformal: Class<Word$WdSalutationType__wdSalutationInformal> &
      Word$WdSalutationType__wdSalutationInformal &
      0; // 0
    static +wdSalutationOther: Class<Word$WdSalutationType__wdSalutationOther> &
      Word$WdSalutationType__wdSalutationOther &
      3; // 3
  }

  declare class Word$WdSalutationType__wdSalutationBusiness
    mixins Word$WdSalutationType {}
  declare class Word$WdSalutationType__wdSalutationFormal
    mixins Word$WdSalutationType {}
  declare class Word$WdSalutationType__wdSalutationInformal
    mixins Word$WdSalutationType {}
  declare class Word$WdSalutationType__wdSalutationOther
    mixins Word$WdSalutationType {}

  declare class Word$WdSaveFormat {
    constructor(...args: empty): mixed;
    static +wdFormatDocument: Class<Word$WdSaveFormat__wdFormatDocument> &
      Word$WdSaveFormat__wdFormatDocument &
      0; // 0
    static +wdFormatDocument97: Class<Word$WdSaveFormat__wdFormatDocument97> &
      Word$WdSaveFormat__wdFormatDocument97 &
      0; // 0
    static +wdFormatDocumentDefault: Class<Word$WdSaveFormat__wdFormatDocumentDefault> &
      Word$WdSaveFormat__wdFormatDocumentDefault &
      16; // 16
    static +wdFormatDOSText: Class<Word$WdSaveFormat__wdFormatDOSText> &
      Word$WdSaveFormat__wdFormatDOSText &
      4; // 4
    static +wdFormatDOSTextLineBreaks: Class<Word$WdSaveFormat__wdFormatDOSTextLineBreaks> &
      Word$WdSaveFormat__wdFormatDOSTextLineBreaks &
      5; // 5
    static +wdFormatEncodedText: Class<Word$WdSaveFormat__wdFormatEncodedText> &
      Word$WdSaveFormat__wdFormatEncodedText &
      7; // 7
    static +wdFormatFilteredHTML: Class<Word$WdSaveFormat__wdFormatFilteredHTML> &
      Word$WdSaveFormat__wdFormatFilteredHTML &
      10; // 10
    static +wdFormatFlatXML: Class<Word$WdSaveFormat__wdFormatFlatXML> &
      Word$WdSaveFormat__wdFormatFlatXML &
      19; // 19
    static +wdFormatFlatXMLMacroEnabled: Class<Word$WdSaveFormat__wdFormatFlatXMLMacroEnabled> &
      Word$WdSaveFormat__wdFormatFlatXMLMacroEnabled &
      20; // 20
    static +wdFormatFlatXMLTemplate: Class<Word$WdSaveFormat__wdFormatFlatXMLTemplate> &
      Word$WdSaveFormat__wdFormatFlatXMLTemplate &
      21; // 21
    static +wdFormatFlatXMLTemplateMacroEnabled: Class<Word$WdSaveFormat__wdFormatFlatXMLTemplateMacroEnabled> &
      Word$WdSaveFormat__wdFormatFlatXMLTemplateMacroEnabled &
      22; // 22
    static +wdFormatHTML: Class<Word$WdSaveFormat__wdFormatHTML> &
      Word$WdSaveFormat__wdFormatHTML &
      8; // 8
    static +wdFormatOpenDocumentText: Class<Word$WdSaveFormat__wdFormatOpenDocumentText> &
      Word$WdSaveFormat__wdFormatOpenDocumentText &
      23; // 23
    static +wdFormatPDF: Class<Word$WdSaveFormat__wdFormatPDF> &
      Word$WdSaveFormat__wdFormatPDF &
      17; // 17
    static +wdFormatRTF: Class<Word$WdSaveFormat__wdFormatRTF> &
      Word$WdSaveFormat__wdFormatRTF &
      6; // 6
    static +wdFormatTemplate: Class<Word$WdSaveFormat__wdFormatTemplate> &
      Word$WdSaveFormat__wdFormatTemplate &
      1; // 1
    static +wdFormatTemplate97: Class<Word$WdSaveFormat__wdFormatTemplate97> &
      Word$WdSaveFormat__wdFormatTemplate97 &
      1; // 1
    static +wdFormatText: Class<Word$WdSaveFormat__wdFormatText> &
      Word$WdSaveFormat__wdFormatText &
      2; // 2
    static +wdFormatTextLineBreaks: Class<Word$WdSaveFormat__wdFormatTextLineBreaks> &
      Word$WdSaveFormat__wdFormatTextLineBreaks &
      3; // 3
    static +wdFormatUnicodeText: Class<Word$WdSaveFormat__wdFormatUnicodeText> &
      Word$WdSaveFormat__wdFormatUnicodeText &
      7; // 7
    static +wdFormatWebArchive: Class<Word$WdSaveFormat__wdFormatWebArchive> &
      Word$WdSaveFormat__wdFormatWebArchive &
      9; // 9
    static +wdFormatXML: Class<Word$WdSaveFormat__wdFormatXML> &
      Word$WdSaveFormat__wdFormatXML &
      11; // 11
    static +wdFormatXMLDocument: Class<Word$WdSaveFormat__wdFormatXMLDocument> &
      Word$WdSaveFormat__wdFormatXMLDocument &
      12; // 12
    static +wdFormatXMLDocumentMacroEnabled: Class<Word$WdSaveFormat__wdFormatXMLDocumentMacroEnabled> &
      Word$WdSaveFormat__wdFormatXMLDocumentMacroEnabled &
      13; // 13
    static +wdFormatXMLTemplate: Class<Word$WdSaveFormat__wdFormatXMLTemplate> &
      Word$WdSaveFormat__wdFormatXMLTemplate &
      14; // 14
    static +wdFormatXMLTemplateMacroEnabled: Class<Word$WdSaveFormat__wdFormatXMLTemplateMacroEnabled> &
      Word$WdSaveFormat__wdFormatXMLTemplateMacroEnabled &
      15; // 15
    static +wdFormatXPS: Class<Word$WdSaveFormat__wdFormatXPS> &
      Word$WdSaveFormat__wdFormatXPS &
      18; // 18
  }

  declare class Word$WdSaveFormat__wdFormatDocument mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatDocument97
    mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatDocumentDefault
    mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatDOSText mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatDOSTextLineBreaks
    mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatEncodedText
    mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatFilteredHTML
    mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatFlatXML mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatFlatXMLMacroEnabled
    mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatFlatXMLTemplate
    mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatFlatXMLTemplateMacroEnabled
    mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatHTML mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatOpenDocumentText
    mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatPDF mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatRTF mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatTemplate mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatTemplate97
    mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatText mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatTextLineBreaks
    mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatUnicodeText
    mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatWebArchive
    mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatXML mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatXMLDocument
    mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatXMLDocumentMacroEnabled
    mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatXMLTemplate
    mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatXMLTemplateMacroEnabled
    mixins Word$WdSaveFormat {}
  declare class Word$WdSaveFormat__wdFormatXPS mixins Word$WdSaveFormat {}

  declare class Word$WdSaveOptions {
    constructor(...args: empty): mixed;
    static +wdDoNotSaveChanges: Class<Word$WdSaveOptions__wdDoNotSaveChanges> &
      Word$WdSaveOptions__wdDoNotSaveChanges &
      0; // 0
    static +wdPromptToSaveChanges: Class<Word$WdSaveOptions__wdPromptToSaveChanges> &
      Word$WdSaveOptions__wdPromptToSaveChanges &
      -2; // -2
    static +wdSaveChanges: Class<Word$WdSaveOptions__wdSaveChanges> &
      Word$WdSaveOptions__wdSaveChanges &
      -1; // -1
  }

  declare class Word$WdSaveOptions__wdDoNotSaveChanges
    mixins Word$WdSaveOptions {}
  declare class Word$WdSaveOptions__wdPromptToSaveChanges
    mixins Word$WdSaveOptions {}
  declare class Word$WdSaveOptions__wdSaveChanges mixins Word$WdSaveOptions {}

  declare class Word$WdScrollbarType {
    constructor(...args: empty): mixed;
    static +wdScrollbarTypeAuto: Class<Word$WdScrollbarType__wdScrollbarTypeAuto> &
      Word$WdScrollbarType__wdScrollbarTypeAuto &
      0; // 0
    static +wdScrollbarTypeNo: Class<Word$WdScrollbarType__wdScrollbarTypeNo> &
      Word$WdScrollbarType__wdScrollbarTypeNo &
      2; // 2
    static +wdScrollbarTypeYes: Class<Word$WdScrollbarType__wdScrollbarTypeYes> &
      Word$WdScrollbarType__wdScrollbarTypeYes &
      1; // 1
  }

  declare class Word$WdScrollbarType__wdScrollbarTypeAuto
    mixins Word$WdScrollbarType {}
  declare class Word$WdScrollbarType__wdScrollbarTypeNo
    mixins Word$WdScrollbarType {}
  declare class Word$WdScrollbarType__wdScrollbarTypeYes
    mixins Word$WdScrollbarType {}

  declare class Word$WdSectionDirection {
    constructor(...args: empty): mixed;
    static +wdSectionDirectionLtr: Class<Word$WdSectionDirection__wdSectionDirectionLtr> &
      Word$WdSectionDirection__wdSectionDirectionLtr &
      1; // 1
    static +wdSectionDirectionRtl: Class<Word$WdSectionDirection__wdSectionDirectionRtl> &
      Word$WdSectionDirection__wdSectionDirectionRtl &
      0; // 0
  }

  declare class Word$WdSectionDirection__wdSectionDirectionLtr
    mixins Word$WdSectionDirection {}
  declare class Word$WdSectionDirection__wdSectionDirectionRtl
    mixins Word$WdSectionDirection {}

  declare class Word$WdSectionStart {
    constructor(...args: empty): mixed;
    static +wdSectionContinuous: Class<Word$WdSectionStart__wdSectionContinuous> &
      Word$WdSectionStart__wdSectionContinuous &
      0; // 0
    static +wdSectionEvenPage: Class<Word$WdSectionStart__wdSectionEvenPage> &
      Word$WdSectionStart__wdSectionEvenPage &
      3; // 3
    static +wdSectionNewColumn: Class<Word$WdSectionStart__wdSectionNewColumn> &
      Word$WdSectionStart__wdSectionNewColumn &
      1; // 1
    static +wdSectionNewPage: Class<Word$WdSectionStart__wdSectionNewPage> &
      Word$WdSectionStart__wdSectionNewPage &
      2; // 2
    static +wdSectionOddPage: Class<Word$WdSectionStart__wdSectionOddPage> &
      Word$WdSectionStart__wdSectionOddPage &
      4; // 4
  }

  declare class Word$WdSectionStart__wdSectionContinuous
    mixins Word$WdSectionStart {}
  declare class Word$WdSectionStart__wdSectionEvenPage
    mixins Word$WdSectionStart {}
  declare class Word$WdSectionStart__wdSectionNewColumn
    mixins Word$WdSectionStart {}
  declare class Word$WdSectionStart__wdSectionNewPage
    mixins Word$WdSectionStart {}
  declare class Word$WdSectionStart__wdSectionOddPage
    mixins Word$WdSectionStart {}

  declare class Word$WdSeekView {
    constructor(...args: empty): mixed;
    static +wdSeekCurrentPageFooter: Class<Word$WdSeekView__wdSeekCurrentPageFooter> &
      Word$WdSeekView__wdSeekCurrentPageFooter &
      10; // 10
    static +wdSeekCurrentPageHeader: Class<Word$WdSeekView__wdSeekCurrentPageHeader> &
      Word$WdSeekView__wdSeekCurrentPageHeader &
      9; // 9
    static +wdSeekEndnotes: Class<Word$WdSeekView__wdSeekEndnotes> &
      Word$WdSeekView__wdSeekEndnotes &
      8; // 8
    static +wdSeekEvenPagesFooter: Class<Word$WdSeekView__wdSeekEvenPagesFooter> &
      Word$WdSeekView__wdSeekEvenPagesFooter &
      6; // 6
    static +wdSeekEvenPagesHeader: Class<Word$WdSeekView__wdSeekEvenPagesHeader> &
      Word$WdSeekView__wdSeekEvenPagesHeader &
      3; // 3
    static +wdSeekFirstPageFooter: Class<Word$WdSeekView__wdSeekFirstPageFooter> &
      Word$WdSeekView__wdSeekFirstPageFooter &
      5; // 5
    static +wdSeekFirstPageHeader: Class<Word$WdSeekView__wdSeekFirstPageHeader> &
      Word$WdSeekView__wdSeekFirstPageHeader &
      2; // 2
    static +wdSeekFootnotes: Class<Word$WdSeekView__wdSeekFootnotes> &
      Word$WdSeekView__wdSeekFootnotes &
      7; // 7
    static +wdSeekMainDocument: Class<Word$WdSeekView__wdSeekMainDocument> &
      Word$WdSeekView__wdSeekMainDocument &
      0; // 0
    static +wdSeekPrimaryFooter: Class<Word$WdSeekView__wdSeekPrimaryFooter> &
      Word$WdSeekView__wdSeekPrimaryFooter &
      4; // 4
    static +wdSeekPrimaryHeader: Class<Word$WdSeekView__wdSeekPrimaryHeader> &
      Word$WdSeekView__wdSeekPrimaryHeader &
      1; // 1
  }

  declare class Word$WdSeekView__wdSeekCurrentPageFooter
    mixins Word$WdSeekView {}
  declare class Word$WdSeekView__wdSeekCurrentPageHeader
    mixins Word$WdSeekView {}
  declare class Word$WdSeekView__wdSeekEndnotes mixins Word$WdSeekView {}
  declare class Word$WdSeekView__wdSeekEvenPagesFooter mixins Word$WdSeekView {}
  declare class Word$WdSeekView__wdSeekEvenPagesHeader mixins Word$WdSeekView {}
  declare class Word$WdSeekView__wdSeekFirstPageFooter mixins Word$WdSeekView {}
  declare class Word$WdSeekView__wdSeekFirstPageHeader mixins Word$WdSeekView {}
  declare class Word$WdSeekView__wdSeekFootnotes mixins Word$WdSeekView {}
  declare class Word$WdSeekView__wdSeekMainDocument mixins Word$WdSeekView {}
  declare class Word$WdSeekView__wdSeekPrimaryFooter mixins Word$WdSeekView {}
  declare class Word$WdSeekView__wdSeekPrimaryHeader mixins Word$WdSeekView {}

  declare class Word$WdSelectionFlags {
    constructor(...args: empty): mixed;
    static +wdSelActive: Class<Word$WdSelectionFlags__wdSelActive> &
      Word$WdSelectionFlags__wdSelActive &
      8; // 8
    static +wdSelAtEOL: Class<Word$WdSelectionFlags__wdSelAtEOL> &
      Word$WdSelectionFlags__wdSelAtEOL &
      2; // 2
    static +wdSelOvertype: Class<Word$WdSelectionFlags__wdSelOvertype> &
      Word$WdSelectionFlags__wdSelOvertype &
      4; // 4
    static +wdSelReplace: Class<Word$WdSelectionFlags__wdSelReplace> &
      Word$WdSelectionFlags__wdSelReplace &
      16; // 16
    static +wdSelStartActive: Class<Word$WdSelectionFlags__wdSelStartActive> &
      Word$WdSelectionFlags__wdSelStartActive &
      1; // 1
  }

  declare class Word$WdSelectionFlags__wdSelActive
    mixins Word$WdSelectionFlags {}
  declare class Word$WdSelectionFlags__wdSelAtEOL
    mixins Word$WdSelectionFlags {}
  declare class Word$WdSelectionFlags__wdSelOvertype
    mixins Word$WdSelectionFlags {}
  declare class Word$WdSelectionFlags__wdSelReplace
    mixins Word$WdSelectionFlags {}
  declare class Word$WdSelectionFlags__wdSelStartActive
    mixins Word$WdSelectionFlags {}

  declare class Word$WdSelectionType {
    constructor(...args: empty): mixed;
    static +wdNoSelection: Class<Word$WdSelectionType__wdNoSelection> &
      Word$WdSelectionType__wdNoSelection &
      0; // 0
    static +wdSelectionBlock: Class<Word$WdSelectionType__wdSelectionBlock> &
      Word$WdSelectionType__wdSelectionBlock &
      6; // 6
    static +wdSelectionColumn: Class<Word$WdSelectionType__wdSelectionColumn> &
      Word$WdSelectionType__wdSelectionColumn &
      4; // 4
    static +wdSelectionFrame: Class<Word$WdSelectionType__wdSelectionFrame> &
      Word$WdSelectionType__wdSelectionFrame &
      3; // 3
    static +wdSelectionInlineShape: Class<Word$WdSelectionType__wdSelectionInlineShape> &
      Word$WdSelectionType__wdSelectionInlineShape &
      7; // 7
    static +wdSelectionIP: Class<Word$WdSelectionType__wdSelectionIP> &
      Word$WdSelectionType__wdSelectionIP &
      1; // 1
    static +wdSelectionNormal: Class<Word$WdSelectionType__wdSelectionNormal> &
      Word$WdSelectionType__wdSelectionNormal &
      2; // 2
    static +wdSelectionRow: Class<Word$WdSelectionType__wdSelectionRow> &
      Word$WdSelectionType__wdSelectionRow &
      5; // 5
    static +wdSelectionShape: Class<Word$WdSelectionType__wdSelectionShape> &
      Word$WdSelectionType__wdSelectionShape &
      8; // 8
  }

  declare class Word$WdSelectionType__wdNoSelection
    mixins Word$WdSelectionType {}
  declare class Word$WdSelectionType__wdSelectionBlock
    mixins Word$WdSelectionType {}
  declare class Word$WdSelectionType__wdSelectionColumn
    mixins Word$WdSelectionType {}
  declare class Word$WdSelectionType__wdSelectionFrame
    mixins Word$WdSelectionType {}
  declare class Word$WdSelectionType__wdSelectionInlineShape
    mixins Word$WdSelectionType {}
  declare class Word$WdSelectionType__wdSelectionIP
    mixins Word$WdSelectionType {}
  declare class Word$WdSelectionType__wdSelectionNormal
    mixins Word$WdSelectionType {}
  declare class Word$WdSelectionType__wdSelectionRow
    mixins Word$WdSelectionType {}
  declare class Word$WdSelectionType__wdSelectionShape
    mixins Word$WdSelectionType {}

  declare class Word$WdSeparatorType {
    constructor(...args: empty): mixed;
    static +wdSeparatorColon: Class<Word$WdSeparatorType__wdSeparatorColon> &
      Word$WdSeparatorType__wdSeparatorColon &
      2; // 2
    static +wdSeparatorEmDash: Class<Word$WdSeparatorType__wdSeparatorEmDash> &
      Word$WdSeparatorType__wdSeparatorEmDash &
      3; // 3
    static +wdSeparatorEnDash: Class<Word$WdSeparatorType__wdSeparatorEnDash> &
      Word$WdSeparatorType__wdSeparatorEnDash &
      4; // 4
    static +wdSeparatorHyphen: Class<Word$WdSeparatorType__wdSeparatorHyphen> &
      Word$WdSeparatorType__wdSeparatorHyphen &
      0; // 0
    static +wdSeparatorPeriod: Class<Word$WdSeparatorType__wdSeparatorPeriod> &
      Word$WdSeparatorType__wdSeparatorPeriod &
      1; // 1
  }

  declare class Word$WdSeparatorType__wdSeparatorColon
    mixins Word$WdSeparatorType {}
  declare class Word$WdSeparatorType__wdSeparatorEmDash
    mixins Word$WdSeparatorType {}
  declare class Word$WdSeparatorType__wdSeparatorEnDash
    mixins Word$WdSeparatorType {}
  declare class Word$WdSeparatorType__wdSeparatorHyphen
    mixins Word$WdSeparatorType {}
  declare class Word$WdSeparatorType__wdSeparatorPeriod
    mixins Word$WdSeparatorType {}

  declare class Word$WdShapePosition {
    constructor(...args: empty): mixed;
    static +wdShapeBottom: Class<Word$WdShapePosition__wdShapeBottom> &
      Word$WdShapePosition__wdShapeBottom &
      -999997; // -999997
    static +wdShapeCenter: Class<Word$WdShapePosition__wdShapeCenter> &
      Word$WdShapePosition__wdShapeCenter &
      -999995; // -999995
    static +wdShapeInside: Class<Word$WdShapePosition__wdShapeInside> &
      Word$WdShapePosition__wdShapeInside &
      -999994; // -999994
    static +wdShapeLeft: Class<Word$WdShapePosition__wdShapeLeft> &
      Word$WdShapePosition__wdShapeLeft &
      -999998; // -999998
    static +wdShapeOutside: Class<Word$WdShapePosition__wdShapeOutside> &
      Word$WdShapePosition__wdShapeOutside &
      -999993; // -999993
    static +wdShapeRight: Class<Word$WdShapePosition__wdShapeRight> &
      Word$WdShapePosition__wdShapeRight &
      -999996; // -999996
    static +wdShapeTop: Class<Word$WdShapePosition__wdShapeTop> &
      Word$WdShapePosition__wdShapeTop &
      -999999; // -999999
  }

  declare class Word$WdShapePosition__wdShapeBottom
    mixins Word$WdShapePosition {}
  declare class Word$WdShapePosition__wdShapeCenter
    mixins Word$WdShapePosition {}
  declare class Word$WdShapePosition__wdShapeInside
    mixins Word$WdShapePosition {}
  declare class Word$WdShapePosition__wdShapeLeft mixins Word$WdShapePosition {}
  declare class Word$WdShapePosition__wdShapeOutside
    mixins Word$WdShapePosition {}
  declare class Word$WdShapePosition__wdShapeRight
    mixins Word$WdShapePosition {}
  declare class Word$WdShapePosition__wdShapeTop mixins Word$WdShapePosition {}

  declare class Word$WdShapePositionRelative {
    constructor(...args: empty): mixed;
    static +wdShapePositionRelativeNone: Class<Word$WdShapePositionRelative__wdShapePositionRelativeNone> &
      Word$WdShapePositionRelative__wdShapePositionRelativeNone &
      -999999; // -999999
  }

  declare class Word$WdShapePositionRelative__wdShapePositionRelativeNone
    mixins Word$WdShapePositionRelative {}

  declare class Word$WdShapeSizeRelative {
    constructor(...args: empty): mixed;
    static +wdShapeSizeRelativeNone: Class<Word$WdShapeSizeRelative__wdShapeSizeRelativeNone> &
      Word$WdShapeSizeRelative__wdShapeSizeRelativeNone &
      -999999; // -999999
  }

  declare class Word$WdShapeSizeRelative__wdShapeSizeRelativeNone
    mixins Word$WdShapeSizeRelative {}

  declare class Word$WdShowFilter {
    constructor(...args: empty): mixed;
    static +wdShowFilterFormattingAvailable: Class<Word$WdShowFilter__wdShowFilterFormattingAvailable> &
      Word$WdShowFilter__wdShowFilterFormattingAvailable &
      4; // 4
    static +wdShowFilterFormattingInUse: Class<Word$WdShowFilter__wdShowFilterFormattingInUse> &
      Word$WdShowFilter__wdShowFilterFormattingInUse &
      3; // 3
    static +wdShowFilterFormattingRecommended: Class<Word$WdShowFilter__wdShowFilterFormattingRecommended> &
      Word$WdShowFilter__wdShowFilterFormattingRecommended &
      5; // 5
    static +wdShowFilterStylesAll: Class<Word$WdShowFilter__wdShowFilterStylesAll> &
      Word$WdShowFilter__wdShowFilterStylesAll &
      2; // 2
    static +wdShowFilterStylesAvailable: Class<Word$WdShowFilter__wdShowFilterStylesAvailable> &
      Word$WdShowFilter__wdShowFilterStylesAvailable &
      0; // 0
    static +wdShowFilterStylesInUse: Class<Word$WdShowFilter__wdShowFilterStylesInUse> &
      Word$WdShowFilter__wdShowFilterStylesInUse &
      1; // 1
  }

  declare class Word$WdShowFilter__wdShowFilterFormattingAvailable
    mixins Word$WdShowFilter {}
  declare class Word$WdShowFilter__wdShowFilterFormattingInUse
    mixins Word$WdShowFilter {}
  declare class Word$WdShowFilter__wdShowFilterFormattingRecommended
    mixins Word$WdShowFilter {}
  declare class Word$WdShowFilter__wdShowFilterStylesAll
    mixins Word$WdShowFilter {}
  declare class Word$WdShowFilter__wdShowFilterStylesAvailable
    mixins Word$WdShowFilter {}
  declare class Word$WdShowFilter__wdShowFilterStylesInUse
    mixins Word$WdShowFilter {}

  declare class Word$WdShowSourceDocuments {
    constructor(...args: empty): mixed;
    static +wdShowSourceDocumentsBoth: Class<Word$WdShowSourceDocuments__wdShowSourceDocumentsBoth> &
      Word$WdShowSourceDocuments__wdShowSourceDocumentsBoth &
      3; // 3
    static +wdShowSourceDocumentsNone: Class<Word$WdShowSourceDocuments__wdShowSourceDocumentsNone> &
      Word$WdShowSourceDocuments__wdShowSourceDocumentsNone &
      0; // 0
    static +wdShowSourceDocumentsOriginal: Class<Word$WdShowSourceDocuments__wdShowSourceDocumentsOriginal> &
      Word$WdShowSourceDocuments__wdShowSourceDocumentsOriginal &
      1; // 1
    static +wdShowSourceDocumentsRevised: Class<Word$WdShowSourceDocuments__wdShowSourceDocumentsRevised> &
      Word$WdShowSourceDocuments__wdShowSourceDocumentsRevised &
      2; // 2
  }

  declare class Word$WdShowSourceDocuments__wdShowSourceDocumentsBoth
    mixins Word$WdShowSourceDocuments {}
  declare class Word$WdShowSourceDocuments__wdShowSourceDocumentsNone
    mixins Word$WdShowSourceDocuments {}
  declare class Word$WdShowSourceDocuments__wdShowSourceDocumentsOriginal
    mixins Word$WdShowSourceDocuments {}
  declare class Word$WdShowSourceDocuments__wdShowSourceDocumentsRevised
    mixins Word$WdShowSourceDocuments {}

  declare class Word$WdSmartTagControlType {
    constructor(...args: empty): mixed;
    static +wdControlActiveX: Class<Word$WdSmartTagControlType__wdControlActiveX> &
      Word$WdSmartTagControlType__wdControlActiveX &
      13; // 13
    static +wdControlButton: Class<Word$WdSmartTagControlType__wdControlButton> &
      Word$WdSmartTagControlType__wdControlButton &
      6; // 6
    static +wdControlCheckbox: Class<Word$WdSmartTagControlType__wdControlCheckbox> &
      Word$WdSmartTagControlType__wdControlCheckbox &
      9; // 9
    static +wdControlCombo: Class<Word$WdSmartTagControlType__wdControlCombo> &
      Word$WdSmartTagControlType__wdControlCombo &
      12; // 12
    static +wdControlDocumentFragment: Class<Word$WdSmartTagControlType__wdControlDocumentFragment> &
      Word$WdSmartTagControlType__wdControlDocumentFragment &
      14; // 14
    static +wdControlDocumentFragmentURL: Class<Word$WdSmartTagControlType__wdControlDocumentFragmentURL> &
      Word$WdSmartTagControlType__wdControlDocumentFragmentURL &
      15; // 15
    static +wdControlHelp: Class<Word$WdSmartTagControlType__wdControlHelp> &
      Word$WdSmartTagControlType__wdControlHelp &
      3; // 3
    static +wdControlHelpURL: Class<Word$WdSmartTagControlType__wdControlHelpURL> &
      Word$WdSmartTagControlType__wdControlHelpURL &
      4; // 4
    static +wdControlImage: Class<Word$WdSmartTagControlType__wdControlImage> &
      Word$WdSmartTagControlType__wdControlImage &
      8; // 8
    static +wdControlLabel: Class<Word$WdSmartTagControlType__wdControlLabel> &
      Word$WdSmartTagControlType__wdControlLabel &
      7; // 7
    static +wdControlLink: Class<Word$WdSmartTagControlType__wdControlLink> &
      Word$WdSmartTagControlType__wdControlLink &
      2; // 2
    static +wdControlListbox: Class<Word$WdSmartTagControlType__wdControlListbox> &
      Word$WdSmartTagControlType__wdControlListbox &
      11; // 11
    static +wdControlRadioGroup: Class<Word$WdSmartTagControlType__wdControlRadioGroup> &
      Word$WdSmartTagControlType__wdControlRadioGroup &
      16; // 16
    static +wdControlSeparator: Class<Word$WdSmartTagControlType__wdControlSeparator> &
      Word$WdSmartTagControlType__wdControlSeparator &
      5; // 5
    static +wdControlSmartTag: Class<Word$WdSmartTagControlType__wdControlSmartTag> &
      Word$WdSmartTagControlType__wdControlSmartTag &
      1; // 1
    static +wdControlTextbox: Class<Word$WdSmartTagControlType__wdControlTextbox> &
      Word$WdSmartTagControlType__wdControlTextbox &
      10; // 10
  }

  declare class Word$WdSmartTagControlType__wdControlActiveX
    mixins Word$WdSmartTagControlType {}
  declare class Word$WdSmartTagControlType__wdControlButton
    mixins Word$WdSmartTagControlType {}
  declare class Word$WdSmartTagControlType__wdControlCheckbox
    mixins Word$WdSmartTagControlType {}
  declare class Word$WdSmartTagControlType__wdControlCombo
    mixins Word$WdSmartTagControlType {}
  declare class Word$WdSmartTagControlType__wdControlDocumentFragment
    mixins Word$WdSmartTagControlType {}
  declare class Word$WdSmartTagControlType__wdControlDocumentFragmentURL
    mixins Word$WdSmartTagControlType {}
  declare class Word$WdSmartTagControlType__wdControlHelp
    mixins Word$WdSmartTagControlType {}
  declare class Word$WdSmartTagControlType__wdControlHelpURL
    mixins Word$WdSmartTagControlType {}
  declare class Word$WdSmartTagControlType__wdControlImage
    mixins Word$WdSmartTagControlType {}
  declare class Word$WdSmartTagControlType__wdControlLabel
    mixins Word$WdSmartTagControlType {}
  declare class Word$WdSmartTagControlType__wdControlLink
    mixins Word$WdSmartTagControlType {}
  declare class Word$WdSmartTagControlType__wdControlListbox
    mixins Word$WdSmartTagControlType {}
  declare class Word$WdSmartTagControlType__wdControlRadioGroup
    mixins Word$WdSmartTagControlType {}
  declare class Word$WdSmartTagControlType__wdControlSeparator
    mixins Word$WdSmartTagControlType {}
  declare class Word$WdSmartTagControlType__wdControlSmartTag
    mixins Word$WdSmartTagControlType {}
  declare class Word$WdSmartTagControlType__wdControlTextbox
    mixins Word$WdSmartTagControlType {}

  declare class Word$WdSortFieldType {
    constructor(...args: empty): mixed;
    static +wdSortFieldAlphanumeric: Class<Word$WdSortFieldType__wdSortFieldAlphanumeric> &
      Word$WdSortFieldType__wdSortFieldAlphanumeric &
      0; // 0
    static +wdSortFieldDate: Class<Word$WdSortFieldType__wdSortFieldDate> &
      Word$WdSortFieldType__wdSortFieldDate &
      2; // 2
    static +wdSortFieldJapanJIS: Class<Word$WdSortFieldType__wdSortFieldJapanJIS> &
      Word$WdSortFieldType__wdSortFieldJapanJIS &
      4; // 4
    static +wdSortFieldKoreaKS: Class<Word$WdSortFieldType__wdSortFieldKoreaKS> &
      Word$WdSortFieldType__wdSortFieldKoreaKS &
      6; // 6
    static +wdSortFieldNumeric: Class<Word$WdSortFieldType__wdSortFieldNumeric> &
      Word$WdSortFieldType__wdSortFieldNumeric &
      1; // 1
    static +wdSortFieldStroke: Class<Word$WdSortFieldType__wdSortFieldStroke> &
      Word$WdSortFieldType__wdSortFieldStroke &
      5; // 5
    static +wdSortFieldSyllable: Class<Word$WdSortFieldType__wdSortFieldSyllable> &
      Word$WdSortFieldType__wdSortFieldSyllable &
      3; // 3
  }

  declare class Word$WdSortFieldType__wdSortFieldAlphanumeric
    mixins Word$WdSortFieldType {}
  declare class Word$WdSortFieldType__wdSortFieldDate
    mixins Word$WdSortFieldType {}
  declare class Word$WdSortFieldType__wdSortFieldJapanJIS
    mixins Word$WdSortFieldType {}
  declare class Word$WdSortFieldType__wdSortFieldKoreaKS
    mixins Word$WdSortFieldType {}
  declare class Word$WdSortFieldType__wdSortFieldNumeric
    mixins Word$WdSortFieldType {}
  declare class Word$WdSortFieldType__wdSortFieldStroke
    mixins Word$WdSortFieldType {}
  declare class Word$WdSortFieldType__wdSortFieldSyllable
    mixins Word$WdSortFieldType {}

  declare class Word$WdSortFieldTypeHID {
    constructor(...args: empty): mixed;
    static +emptyenum: Class<Word$WdSortFieldTypeHID__emptyenum> &
      Word$WdSortFieldTypeHID__emptyenum &
      0; // 0
  }

  declare class Word$WdSortFieldTypeHID__emptyenum
    mixins Word$WdSortFieldTypeHID {}

  declare class Word$WdSortOrder {
    constructor(...args: empty): mixed;
    static +wdSortOrderAscending: Class<Word$WdSortOrder__wdSortOrderAscending> &
      Word$WdSortOrder__wdSortOrderAscending &
      0; // 0
    static +wdSortOrderDescending: Class<Word$WdSortOrder__wdSortOrderDescending> &
      Word$WdSortOrder__wdSortOrderDescending &
      1; // 1
  }

  declare class Word$WdSortOrder__wdSortOrderAscending
    mixins Word$WdSortOrder {}
  declare class Word$WdSortOrder__wdSortOrderDescending
    mixins Word$WdSortOrder {}

  declare class Word$WdSortSeparator {
    constructor(...args: empty): mixed;
    static +wdSortSeparateByCommas: Class<Word$WdSortSeparator__wdSortSeparateByCommas> &
      Word$WdSortSeparator__wdSortSeparateByCommas &
      1; // 1
    static +wdSortSeparateByDefaultTableSeparator: Class<Word$WdSortSeparator__wdSortSeparateByDefaultTableSeparator> &
      Word$WdSortSeparator__wdSortSeparateByDefaultTableSeparator &
      2; // 2
    static +wdSortSeparateByTabs: Class<Word$WdSortSeparator__wdSortSeparateByTabs> &
      Word$WdSortSeparator__wdSortSeparateByTabs &
      0; // 0
  }

  declare class Word$WdSortSeparator__wdSortSeparateByCommas
    mixins Word$WdSortSeparator {}
  declare class Word$WdSortSeparator__wdSortSeparateByDefaultTableSeparator
    mixins Word$WdSortSeparator {}
  declare class Word$WdSortSeparator__wdSortSeparateByTabs
    mixins Word$WdSortSeparator {}

  declare class Word$WdSpanishSpeller {
    constructor(...args: empty): mixed;
    static +wdSpanishTuteoAndVoseo: Class<Word$WdSpanishSpeller__wdSpanishTuteoAndVoseo> &
      Word$WdSpanishSpeller__wdSpanishTuteoAndVoseo &
      1; // 1
    static +wdSpanishTuteoOnly: Class<Word$WdSpanishSpeller__wdSpanishTuteoOnly> &
      Word$WdSpanishSpeller__wdSpanishTuteoOnly &
      0; // 0
    static +wdSpanishVoseoOnly: Class<Word$WdSpanishSpeller__wdSpanishVoseoOnly> &
      Word$WdSpanishSpeller__wdSpanishVoseoOnly &
      2; // 2
  }

  declare class Word$WdSpanishSpeller__wdSpanishTuteoAndVoseo
    mixins Word$WdSpanishSpeller {}
  declare class Word$WdSpanishSpeller__wdSpanishTuteoOnly
    mixins Word$WdSpanishSpeller {}
  declare class Word$WdSpanishSpeller__wdSpanishVoseoOnly
    mixins Word$WdSpanishSpeller {}

  declare class Word$WdSpecialPane {
    constructor(...args: empty): mixed;
    static +wdPaneComments: Class<Word$WdSpecialPane__wdPaneComments> &
      Word$WdSpecialPane__wdPaneComments &
      15; // 15
    static +wdPaneCurrentPageFooter: Class<Word$WdSpecialPane__wdPaneCurrentPageFooter> &
      Word$WdSpecialPane__wdPaneCurrentPageFooter &
      17; // 17
    static +wdPaneCurrentPageHeader: Class<Word$WdSpecialPane__wdPaneCurrentPageHeader> &
      Word$WdSpecialPane__wdPaneCurrentPageHeader &
      16; // 16
    static +wdPaneEndnoteContinuationNotice: Class<Word$WdSpecialPane__wdPaneEndnoteContinuationNotice> &
      Word$WdSpecialPane__wdPaneEndnoteContinuationNotice &
      12; // 12
    static +wdPaneEndnoteContinuationSeparator: Class<Word$WdSpecialPane__wdPaneEndnoteContinuationSeparator> &
      Word$WdSpecialPane__wdPaneEndnoteContinuationSeparator &
      13; // 13
    static +wdPaneEndnotes: Class<Word$WdSpecialPane__wdPaneEndnotes> &
      Word$WdSpecialPane__wdPaneEndnotes &
      8; // 8
    static +wdPaneEndnoteSeparator: Class<Word$WdSpecialPane__wdPaneEndnoteSeparator> &
      Word$WdSpecialPane__wdPaneEndnoteSeparator &
      14; // 14
    static +wdPaneEvenPagesFooter: Class<Word$WdSpecialPane__wdPaneEvenPagesFooter> &
      Word$WdSpecialPane__wdPaneEvenPagesFooter &
      6; // 6
    static +wdPaneEvenPagesHeader: Class<Word$WdSpecialPane__wdPaneEvenPagesHeader> &
      Word$WdSpecialPane__wdPaneEvenPagesHeader &
      3; // 3
    static +wdPaneFirstPageFooter: Class<Word$WdSpecialPane__wdPaneFirstPageFooter> &
      Word$WdSpecialPane__wdPaneFirstPageFooter &
      5; // 5
    static +wdPaneFirstPageHeader: Class<Word$WdSpecialPane__wdPaneFirstPageHeader> &
      Word$WdSpecialPane__wdPaneFirstPageHeader &
      2; // 2
    static +wdPaneFootnoteContinuationNotice: Class<Word$WdSpecialPane__wdPaneFootnoteContinuationNotice> &
      Word$WdSpecialPane__wdPaneFootnoteContinuationNotice &
      9; // 9
    static +wdPaneFootnoteContinuationSeparator: Class<Word$WdSpecialPane__wdPaneFootnoteContinuationSeparator> &
      Word$WdSpecialPane__wdPaneFootnoteContinuationSeparator &
      10; // 10
    static +wdPaneFootnotes: Class<Word$WdSpecialPane__wdPaneFootnotes> &
      Word$WdSpecialPane__wdPaneFootnotes &
      7; // 7
    static +wdPaneFootnoteSeparator: Class<Word$WdSpecialPane__wdPaneFootnoteSeparator> &
      Word$WdSpecialPane__wdPaneFootnoteSeparator &
      11; // 11
    static +wdPaneNone: Class<Word$WdSpecialPane__wdPaneNone> &
      Word$WdSpecialPane__wdPaneNone &
      0; // 0
    static +wdPanePrimaryFooter: Class<Word$WdSpecialPane__wdPanePrimaryFooter> &
      Word$WdSpecialPane__wdPanePrimaryFooter &
      4; // 4
    static +wdPanePrimaryHeader: Class<Word$WdSpecialPane__wdPanePrimaryHeader> &
      Word$WdSpecialPane__wdPanePrimaryHeader &
      1; // 1
    static +wdPaneRevisions: Class<Word$WdSpecialPane__wdPaneRevisions> &
      Word$WdSpecialPane__wdPaneRevisions &
      18; // 18
    static +wdPaneRevisionsHoriz: Class<Word$WdSpecialPane__wdPaneRevisionsHoriz> &
      Word$WdSpecialPane__wdPaneRevisionsHoriz &
      19; // 19
    static +wdPaneRevisionsVert: Class<Word$WdSpecialPane__wdPaneRevisionsVert> &
      Word$WdSpecialPane__wdPaneRevisionsVert &
      20; // 20
  }

  declare class Word$WdSpecialPane__wdPaneComments mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPaneCurrentPageFooter
    mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPaneCurrentPageHeader
    mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPaneEndnoteContinuationNotice
    mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPaneEndnoteContinuationSeparator
    mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPaneEndnotes mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPaneEndnoteSeparator
    mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPaneEvenPagesFooter
    mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPaneEvenPagesHeader
    mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPaneFirstPageFooter
    mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPaneFirstPageHeader
    mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPaneFootnoteContinuationNotice
    mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPaneFootnoteContinuationSeparator
    mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPaneFootnotes mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPaneFootnoteSeparator
    mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPaneNone mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPanePrimaryFooter
    mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPanePrimaryHeader
    mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPaneRevisions mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPaneRevisionsHoriz
    mixins Word$WdSpecialPane {}
  declare class Word$WdSpecialPane__wdPaneRevisionsVert
    mixins Word$WdSpecialPane {}

  declare class Word$WdSpellingErrorType {
    constructor(...args: empty): mixed;
    static +wdSpellingCapitalization: Class<Word$WdSpellingErrorType__wdSpellingCapitalization> &
      Word$WdSpellingErrorType__wdSpellingCapitalization &
      2; // 2
    static +wdSpellingCorrect: Class<Word$WdSpellingErrorType__wdSpellingCorrect> &
      Word$WdSpellingErrorType__wdSpellingCorrect &
      0; // 0
    static +wdSpellingNotInDictionary: Class<Word$WdSpellingErrorType__wdSpellingNotInDictionary> &
      Word$WdSpellingErrorType__wdSpellingNotInDictionary &
      1; // 1
  }

  declare class Word$WdSpellingErrorType__wdSpellingCapitalization
    mixins Word$WdSpellingErrorType {}
  declare class Word$WdSpellingErrorType__wdSpellingCorrect
    mixins Word$WdSpellingErrorType {}
  declare class Word$WdSpellingErrorType__wdSpellingNotInDictionary
    mixins Word$WdSpellingErrorType {}

  declare class Word$WdSpellingWordType {
    constructor(...args: empty): mixed;
    static +wdAnagram: Class<Word$WdSpellingWordType__wdAnagram> &
      Word$WdSpellingWordType__wdAnagram &
      2; // 2
    static +wdSpellword: Class<Word$WdSpellingWordType__wdSpellword> &
      Word$WdSpellingWordType__wdSpellword &
      0; // 0
    static +wdWildcard: Class<Word$WdSpellingWordType__wdWildcard> &
      Word$WdSpellingWordType__wdWildcard &
      1; // 1
  }

  declare class Word$WdSpellingWordType__wdAnagram
    mixins Word$WdSpellingWordType {}
  declare class Word$WdSpellingWordType__wdSpellword
    mixins Word$WdSpellingWordType {}
  declare class Word$WdSpellingWordType__wdWildcard
    mixins Word$WdSpellingWordType {}

  declare class Word$WdStatistic {
    constructor(...args: empty): mixed;
    static +wdStatisticCharacters: Class<Word$WdStatistic__wdStatisticCharacters> &
      Word$WdStatistic__wdStatisticCharacters &
      3; // 3
    static +wdStatisticCharactersWithSpaces: Class<Word$WdStatistic__wdStatisticCharactersWithSpaces> &
      Word$WdStatistic__wdStatisticCharactersWithSpaces &
      5; // 5
    static +wdStatisticFarEastCharacters: Class<Word$WdStatistic__wdStatisticFarEastCharacters> &
      Word$WdStatistic__wdStatisticFarEastCharacters &
      6; // 6
    static +wdStatisticLines: Class<Word$WdStatistic__wdStatisticLines> &
      Word$WdStatistic__wdStatisticLines &
      1; // 1
    static +wdStatisticPages: Class<Word$WdStatistic__wdStatisticPages> &
      Word$WdStatistic__wdStatisticPages &
      2; // 2
    static +wdStatisticParagraphs: Class<Word$WdStatistic__wdStatisticParagraphs> &
      Word$WdStatistic__wdStatisticParagraphs &
      4; // 4
    static +wdStatisticWords: Class<Word$WdStatistic__wdStatisticWords> &
      Word$WdStatistic__wdStatisticWords &
      0; // 0
  }

  declare class Word$WdStatistic__wdStatisticCharacters
    mixins Word$WdStatistic {}
  declare class Word$WdStatistic__wdStatisticCharactersWithSpaces
    mixins Word$WdStatistic {}
  declare class Word$WdStatistic__wdStatisticFarEastCharacters
    mixins Word$WdStatistic {}
  declare class Word$WdStatistic__wdStatisticLines mixins Word$WdStatistic {}
  declare class Word$WdStatistic__wdStatisticPages mixins Word$WdStatistic {}
  declare class Word$WdStatistic__wdStatisticParagraphs
    mixins Word$WdStatistic {}
  declare class Word$WdStatistic__wdStatisticWords mixins Word$WdStatistic {}

  declare class Word$WdStatisticHID {
    constructor(...args: empty): mixed;
    static +emptyenum: Class<Word$WdStatisticHID__emptyenum> &
      Word$WdStatisticHID__emptyenum &
      0; // 0
  }

  declare class Word$WdStatisticHID__emptyenum mixins Word$WdStatisticHID {}

  declare class Word$WdStoryType {
    constructor(...args: empty): mixed;
    static +wdCommentsStory: Class<Word$WdStoryType__wdCommentsStory> &
      Word$WdStoryType__wdCommentsStory &
      4; // 4
    static +wdEndnoteContinuationNoticeStory: Class<Word$WdStoryType__wdEndnoteContinuationNoticeStory> &
      Word$WdStoryType__wdEndnoteContinuationNoticeStory &
      17; // 17
    static +wdEndnoteContinuationSeparatorStory: Class<Word$WdStoryType__wdEndnoteContinuationSeparatorStory> &
      Word$WdStoryType__wdEndnoteContinuationSeparatorStory &
      16; // 16
    static +wdEndnoteSeparatorStory: Class<Word$WdStoryType__wdEndnoteSeparatorStory> &
      Word$WdStoryType__wdEndnoteSeparatorStory &
      15; // 15
    static +wdEndnotesStory: Class<Word$WdStoryType__wdEndnotesStory> &
      Word$WdStoryType__wdEndnotesStory &
      3; // 3
    static +wdEvenPagesFooterStory: Class<Word$WdStoryType__wdEvenPagesFooterStory> &
      Word$WdStoryType__wdEvenPagesFooterStory &
      8; // 8
    static +wdEvenPagesHeaderStory: Class<Word$WdStoryType__wdEvenPagesHeaderStory> &
      Word$WdStoryType__wdEvenPagesHeaderStory &
      6; // 6
    static +wdFirstPageFooterStory: Class<Word$WdStoryType__wdFirstPageFooterStory> &
      Word$WdStoryType__wdFirstPageFooterStory &
      11; // 11
    static +wdFirstPageHeaderStory: Class<Word$WdStoryType__wdFirstPageHeaderStory> &
      Word$WdStoryType__wdFirstPageHeaderStory &
      10; // 10
    static +wdFootnoteContinuationNoticeStory: Class<Word$WdStoryType__wdFootnoteContinuationNoticeStory> &
      Word$WdStoryType__wdFootnoteContinuationNoticeStory &
      14; // 14
    static +wdFootnoteContinuationSeparatorStory: Class<Word$WdStoryType__wdFootnoteContinuationSeparatorStory> &
      Word$WdStoryType__wdFootnoteContinuationSeparatorStory &
      13; // 13
    static +wdFootnoteSeparatorStory: Class<Word$WdStoryType__wdFootnoteSeparatorStory> &
      Word$WdStoryType__wdFootnoteSeparatorStory &
      12; // 12
    static +wdFootnotesStory: Class<Word$WdStoryType__wdFootnotesStory> &
      Word$WdStoryType__wdFootnotesStory &
      2; // 2
    static +wdMainTextStory: Class<Word$WdStoryType__wdMainTextStory> &
      Word$WdStoryType__wdMainTextStory &
      1; // 1
    static +wdPrimaryFooterStory: Class<Word$WdStoryType__wdPrimaryFooterStory> &
      Word$WdStoryType__wdPrimaryFooterStory &
      9; // 9
    static +wdPrimaryHeaderStory: Class<Word$WdStoryType__wdPrimaryHeaderStory> &
      Word$WdStoryType__wdPrimaryHeaderStory &
      7; // 7
    static +wdTextFrameStory: Class<Word$WdStoryType__wdTextFrameStory> &
      Word$WdStoryType__wdTextFrameStory &
      5; // 5
  }

  declare class Word$WdStoryType__wdCommentsStory mixins Word$WdStoryType {}
  declare class Word$WdStoryType__wdEndnoteContinuationNoticeStory
    mixins Word$WdStoryType {}
  declare class Word$WdStoryType__wdEndnoteContinuationSeparatorStory
    mixins Word$WdStoryType {}
  declare class Word$WdStoryType__wdEndnoteSeparatorStory
    mixins Word$WdStoryType {}
  declare class Word$WdStoryType__wdEndnotesStory mixins Word$WdStoryType {}
  declare class Word$WdStoryType__wdEvenPagesFooterStory
    mixins Word$WdStoryType {}
  declare class Word$WdStoryType__wdEvenPagesHeaderStory
    mixins Word$WdStoryType {}
  declare class Word$WdStoryType__wdFirstPageFooterStory
    mixins Word$WdStoryType {}
  declare class Word$WdStoryType__wdFirstPageHeaderStory
    mixins Word$WdStoryType {}
  declare class Word$WdStoryType__wdFootnoteContinuationNoticeStory
    mixins Word$WdStoryType {}
  declare class Word$WdStoryType__wdFootnoteContinuationSeparatorStory
    mixins Word$WdStoryType {}
  declare class Word$WdStoryType__wdFootnoteSeparatorStory
    mixins Word$WdStoryType {}
  declare class Word$WdStoryType__wdFootnotesStory mixins Word$WdStoryType {}
  declare class Word$WdStoryType__wdMainTextStory mixins Word$WdStoryType {}
  declare class Word$WdStoryType__wdPrimaryFooterStory
    mixins Word$WdStoryType {}
  declare class Word$WdStoryType__wdPrimaryHeaderStory
    mixins Word$WdStoryType {}
  declare class Word$WdStoryType__wdTextFrameStory mixins Word$WdStoryType {}

  declare class Word$WdStyleSheetLinkType {
    constructor(...args: empty): mixed;
    static +wdStyleSheetLinkTypeImported: Class<Word$WdStyleSheetLinkType__wdStyleSheetLinkTypeImported> &
      Word$WdStyleSheetLinkType__wdStyleSheetLinkTypeImported &
      1; // 1
    static +wdStyleSheetLinkTypeLinked: Class<Word$WdStyleSheetLinkType__wdStyleSheetLinkTypeLinked> &
      Word$WdStyleSheetLinkType__wdStyleSheetLinkTypeLinked &
      0; // 0
  }

  declare class Word$WdStyleSheetLinkType__wdStyleSheetLinkTypeImported
    mixins Word$WdStyleSheetLinkType {}
  declare class Word$WdStyleSheetLinkType__wdStyleSheetLinkTypeLinked
    mixins Word$WdStyleSheetLinkType {}

  declare class Word$WdStyleSheetPrecedence {
    constructor(...args: empty): mixed;
    static +wdStyleSheetPrecedenceHigher: Class<Word$WdStyleSheetPrecedence__wdStyleSheetPrecedenceHigher> &
      Word$WdStyleSheetPrecedence__wdStyleSheetPrecedenceHigher &
      -1; // -1
    static +wdStyleSheetPrecedenceHighest: Class<Word$WdStyleSheetPrecedence__wdStyleSheetPrecedenceHighest> &
      Word$WdStyleSheetPrecedence__wdStyleSheetPrecedenceHighest &
      1; // 1
    static +wdStyleSheetPrecedenceLower: Class<Word$WdStyleSheetPrecedence__wdStyleSheetPrecedenceLower> &
      Word$WdStyleSheetPrecedence__wdStyleSheetPrecedenceLower &
      -2; // -2
    static +wdStyleSheetPrecedenceLowest: Class<Word$WdStyleSheetPrecedence__wdStyleSheetPrecedenceLowest> &
      Word$WdStyleSheetPrecedence__wdStyleSheetPrecedenceLowest &
      0; // 0
  }

  declare class Word$WdStyleSheetPrecedence__wdStyleSheetPrecedenceHigher
    mixins Word$WdStyleSheetPrecedence {}
  declare class Word$WdStyleSheetPrecedence__wdStyleSheetPrecedenceHighest
    mixins Word$WdStyleSheetPrecedence {}
  declare class Word$WdStyleSheetPrecedence__wdStyleSheetPrecedenceLower
    mixins Word$WdStyleSheetPrecedence {}
  declare class Word$WdStyleSheetPrecedence__wdStyleSheetPrecedenceLowest
    mixins Word$WdStyleSheetPrecedence {}

  declare class Word$WdStyleSort {
    constructor(...args: empty): mixed;
    static +wdStyleSortByBasedOn: Class<Word$WdStyleSort__wdStyleSortByBasedOn> &
      Word$WdStyleSort__wdStyleSortByBasedOn &
      3; // 3
    static +wdStyleSortByFont: Class<Word$WdStyleSort__wdStyleSortByFont> &
      Word$WdStyleSort__wdStyleSortByFont &
      2; // 2
    static +wdStyleSortByName: Class<Word$WdStyleSort__wdStyleSortByName> &
      Word$WdStyleSort__wdStyleSortByName &
      0; // 0
    static +wdStyleSortByType: Class<Word$WdStyleSort__wdStyleSortByType> &
      Word$WdStyleSort__wdStyleSortByType &
      4; // 4
    static +wdStyleSortRecommended: Class<Word$WdStyleSort__wdStyleSortRecommended> &
      Word$WdStyleSort__wdStyleSortRecommended &
      1; // 1
  }

  declare class Word$WdStyleSort__wdStyleSortByBasedOn
    mixins Word$WdStyleSort {}
  declare class Word$WdStyleSort__wdStyleSortByFont mixins Word$WdStyleSort {}
  declare class Word$WdStyleSort__wdStyleSortByName mixins Word$WdStyleSort {}
  declare class Word$WdStyleSort__wdStyleSortByType mixins Word$WdStyleSort {}
  declare class Word$WdStyleSort__wdStyleSortRecommended
    mixins Word$WdStyleSort {}

  declare class Word$WdStyleType {
    constructor(...args: empty): mixed;
    static +wdStyleTypeCharacter: Class<Word$WdStyleType__wdStyleTypeCharacter> &
      Word$WdStyleType__wdStyleTypeCharacter &
      2; // 2
    static +wdStyleTypeLinked: Class<Word$WdStyleType__wdStyleTypeLinked> &
      Word$WdStyleType__wdStyleTypeLinked &
      6; // 6
    static +wdStyleTypeList: Class<Word$WdStyleType__wdStyleTypeList> &
      Word$WdStyleType__wdStyleTypeList &
      4; // 4
    static +wdStyleTypeParagraph: Class<Word$WdStyleType__wdStyleTypeParagraph> &
      Word$WdStyleType__wdStyleTypeParagraph &
      1; // 1
    static +wdStyleTypeParagraphOnly: Class<Word$WdStyleType__wdStyleTypeParagraphOnly> &
      Word$WdStyleType__wdStyleTypeParagraphOnly &
      5; // 5
    static +wdStyleTypeTable: Class<Word$WdStyleType__wdStyleTypeTable> &
      Word$WdStyleType__wdStyleTypeTable &
      3; // 3
  }

  declare class Word$WdStyleType__wdStyleTypeCharacter
    mixins Word$WdStyleType {}
  declare class Word$WdStyleType__wdStyleTypeLinked mixins Word$WdStyleType {}
  declare class Word$WdStyleType__wdStyleTypeList mixins Word$WdStyleType {}
  declare class Word$WdStyleType__wdStyleTypeParagraph
    mixins Word$WdStyleType {}
  declare class Word$WdStyleType__wdStyleTypeParagraphOnly
    mixins Word$WdStyleType {}
  declare class Word$WdStyleType__wdStyleTypeTable mixins Word$WdStyleType {}

  declare class Word$WdStylisticSet {
    constructor(...args: empty): mixed;
    static +wdStylisticSet01: Class<Word$WdStylisticSet__wdStylisticSet01> &
      Word$WdStylisticSet__wdStylisticSet01 &
      1; // 1
    static +wdStylisticSet02: Class<Word$WdStylisticSet__wdStylisticSet02> &
      Word$WdStylisticSet__wdStylisticSet02 &
      2; // 2
    static +wdStylisticSet03: Class<Word$WdStylisticSet__wdStylisticSet03> &
      Word$WdStylisticSet__wdStylisticSet03 &
      4; // 4
    static +wdStylisticSet04: Class<Word$WdStylisticSet__wdStylisticSet04> &
      Word$WdStylisticSet__wdStylisticSet04 &
      8; // 8
    static +wdStylisticSet05: Class<Word$WdStylisticSet__wdStylisticSet05> &
      Word$WdStylisticSet__wdStylisticSet05 &
      16; // 16
    static +wdStylisticSet06: Class<Word$WdStylisticSet__wdStylisticSet06> &
      Word$WdStylisticSet__wdStylisticSet06 &
      32; // 32
    static +wdStylisticSet07: Class<Word$WdStylisticSet__wdStylisticSet07> &
      Word$WdStylisticSet__wdStylisticSet07 &
      64; // 64
    static +wdStylisticSet08: Class<Word$WdStylisticSet__wdStylisticSet08> &
      Word$WdStylisticSet__wdStylisticSet08 &
      128; // 128
    static +wdStylisticSet09: Class<Word$WdStylisticSet__wdStylisticSet09> &
      Word$WdStylisticSet__wdStylisticSet09 &
      256; // 256
    static +wdStylisticSet10: Class<Word$WdStylisticSet__wdStylisticSet10> &
      Word$WdStylisticSet__wdStylisticSet10 &
      512; // 512
    static +wdStylisticSet11: Class<Word$WdStylisticSet__wdStylisticSet11> &
      Word$WdStylisticSet__wdStylisticSet11 &
      1024; // 1024
    static +wdStylisticSet12: Class<Word$WdStylisticSet__wdStylisticSet12> &
      Word$WdStylisticSet__wdStylisticSet12 &
      2048; // 2048
    static +wdStylisticSet13: Class<Word$WdStylisticSet__wdStylisticSet13> &
      Word$WdStylisticSet__wdStylisticSet13 &
      4096; // 4096
    static +wdStylisticSet14: Class<Word$WdStylisticSet__wdStylisticSet14> &
      Word$WdStylisticSet__wdStylisticSet14 &
      8192; // 8192
    static +wdStylisticSet15: Class<Word$WdStylisticSet__wdStylisticSet15> &
      Word$WdStylisticSet__wdStylisticSet15 &
      16384; // 16384
    static +wdStylisticSet16: Class<Word$WdStylisticSet__wdStylisticSet16> &
      Word$WdStylisticSet__wdStylisticSet16 &
      32768; // 32768
    static +wdStylisticSet17: Class<Word$WdStylisticSet__wdStylisticSet17> &
      Word$WdStylisticSet__wdStylisticSet17 &
      65536; // 65536
    static +wdStylisticSet18: Class<Word$WdStylisticSet__wdStylisticSet18> &
      Word$WdStylisticSet__wdStylisticSet18 &
      131072; // 131072
    static +wdStylisticSet19: Class<Word$WdStylisticSet__wdStylisticSet19> &
      Word$WdStylisticSet__wdStylisticSet19 &
      262144; // 262144
    static +wdStylisticSet20: Class<Word$WdStylisticSet__wdStylisticSet20> &
      Word$WdStylisticSet__wdStylisticSet20 &
      524288; // 524288
    static +wdStylisticSetDefault: Class<Word$WdStylisticSet__wdStylisticSetDefault> &
      Word$WdStylisticSet__wdStylisticSetDefault &
      0; // 0
  }

  declare class Word$WdStylisticSet__wdStylisticSet01
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet02
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet03
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet04
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet05
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet06
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet07
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet08
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet09
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet10
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet11
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet12
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet13
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet14
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet15
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet16
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet17
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet18
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet19
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSet20
    mixins Word$WdStylisticSet {}
  declare class Word$WdStylisticSet__wdStylisticSetDefault
    mixins Word$WdStylisticSet {}

  declare class Word$WdSubscriberFormats {
    constructor(...args: empty): mixed;
    static +wdSubscriberBestFormat: Class<Word$WdSubscriberFormats__wdSubscriberBestFormat> &
      Word$WdSubscriberFormats__wdSubscriberBestFormat &
      0; // 0
    static +wdSubscriberPict: Class<Word$WdSubscriberFormats__wdSubscriberPict> &
      Word$WdSubscriberFormats__wdSubscriberPict &
      4; // 4
    static +wdSubscriberRTF: Class<Word$WdSubscriberFormats__wdSubscriberRTF> &
      Word$WdSubscriberFormats__wdSubscriberRTF &
      1; // 1
    static +wdSubscriberText: Class<Word$WdSubscriberFormats__wdSubscriberText> &
      Word$WdSubscriberFormats__wdSubscriberText &
      2; // 2
  }

  declare class Word$WdSubscriberFormats__wdSubscriberBestFormat
    mixins Word$WdSubscriberFormats {}
  declare class Word$WdSubscriberFormats__wdSubscriberPict
    mixins Word$WdSubscriberFormats {}
  declare class Word$WdSubscriberFormats__wdSubscriberRTF
    mixins Word$WdSubscriberFormats {}
  declare class Word$WdSubscriberFormats__wdSubscriberText
    mixins Word$WdSubscriberFormats {}

  declare class Word$WdSummaryLength {
    constructor(...args: empty): mixed;
    static +wd100Words: Class<Word$WdSummaryLength__wd100Words> &
      Word$WdSummaryLength__wd100Words &
      -4; // -4
    static +wd10Percent: Class<Word$WdSummaryLength__wd10Percent> &
      Word$WdSummaryLength__wd10Percent &
      -6; // -6
    static +wd10Sentences: Class<Word$WdSummaryLength__wd10Sentences> &
      Word$WdSummaryLength__wd10Sentences &
      -2; // -2
    static +wd20Sentences: Class<Word$WdSummaryLength__wd20Sentences> &
      Word$WdSummaryLength__wd20Sentences &
      -3; // -3
    static +wd25Percent: Class<Word$WdSummaryLength__wd25Percent> &
      Word$WdSummaryLength__wd25Percent &
      -7; // -7
    static +wd500Words: Class<Word$WdSummaryLength__wd500Words> &
      Word$WdSummaryLength__wd500Words &
      -5; // -5
    static +wd50Percent: Class<Word$WdSummaryLength__wd50Percent> &
      Word$WdSummaryLength__wd50Percent &
      -8; // -8
    static +wd75Percent: Class<Word$WdSummaryLength__wd75Percent> &
      Word$WdSummaryLength__wd75Percent &
      -9; // -9
  }

  declare class Word$WdSummaryLength__wd100Words mixins Word$WdSummaryLength {}
  declare class Word$WdSummaryLength__wd10Percent mixins Word$WdSummaryLength {}
  declare class Word$WdSummaryLength__wd10Sentences
    mixins Word$WdSummaryLength {}
  declare class Word$WdSummaryLength__wd20Sentences
    mixins Word$WdSummaryLength {}
  declare class Word$WdSummaryLength__wd25Percent mixins Word$WdSummaryLength {}
  declare class Word$WdSummaryLength__wd500Words mixins Word$WdSummaryLength {}
  declare class Word$WdSummaryLength__wd50Percent mixins Word$WdSummaryLength {}
  declare class Word$WdSummaryLength__wd75Percent mixins Word$WdSummaryLength {}

  declare class Word$WdSummaryMode {
    constructor(...args: empty): mixed;
    static +wdSummaryModeCreateNew: Class<Word$WdSummaryMode__wdSummaryModeCreateNew> &
      Word$WdSummaryMode__wdSummaryModeCreateNew &
      3; // 3
    static +wdSummaryModeHideAllButSummary: Class<Word$WdSummaryMode__wdSummaryModeHideAllButSummary> &
      Word$WdSummaryMode__wdSummaryModeHideAllButSummary &
      1; // 1
    static +wdSummaryModeHighlight: Class<Word$WdSummaryMode__wdSummaryModeHighlight> &
      Word$WdSummaryMode__wdSummaryModeHighlight &
      0; // 0
    static +wdSummaryModeInsert: Class<Word$WdSummaryMode__wdSummaryModeInsert> &
      Word$WdSummaryMode__wdSummaryModeInsert &
      2; // 2
  }

  declare class Word$WdSummaryMode__wdSummaryModeCreateNew
    mixins Word$WdSummaryMode {}
  declare class Word$WdSummaryMode__wdSummaryModeHideAllButSummary
    mixins Word$WdSummaryMode {}
  declare class Word$WdSummaryMode__wdSummaryModeHighlight
    mixins Word$WdSummaryMode {}
  declare class Word$WdSummaryMode__wdSummaryModeInsert
    mixins Word$WdSummaryMode {}

  declare class Word$WdTabAlignment {
    constructor(...args: empty): mixed;
    static +wdAlignTabBar: Class<Word$WdTabAlignment__wdAlignTabBar> &
      Word$WdTabAlignment__wdAlignTabBar &
      4; // 4
    static +wdAlignTabCenter: Class<Word$WdTabAlignment__wdAlignTabCenter> &
      Word$WdTabAlignment__wdAlignTabCenter &
      1; // 1
    static +wdAlignTabDecimal: Class<Word$WdTabAlignment__wdAlignTabDecimal> &
      Word$WdTabAlignment__wdAlignTabDecimal &
      3; // 3
    static +wdAlignTabLeft: Class<Word$WdTabAlignment__wdAlignTabLeft> &
      Word$WdTabAlignment__wdAlignTabLeft &
      0; // 0
    static +wdAlignTabList: Class<Word$WdTabAlignment__wdAlignTabList> &
      Word$WdTabAlignment__wdAlignTabList &
      6; // 6
    static +wdAlignTabRight: Class<Word$WdTabAlignment__wdAlignTabRight> &
      Word$WdTabAlignment__wdAlignTabRight &
      2; // 2
  }

  declare class Word$WdTabAlignment__wdAlignTabBar mixins Word$WdTabAlignment {}
  declare class Word$WdTabAlignment__wdAlignTabCenter
    mixins Word$WdTabAlignment {}
  declare class Word$WdTabAlignment__wdAlignTabDecimal
    mixins Word$WdTabAlignment {}
  declare class Word$WdTabAlignment__wdAlignTabLeft
    mixins Word$WdTabAlignment {}
  declare class Word$WdTabAlignment__wdAlignTabList
    mixins Word$WdTabAlignment {}
  declare class Word$WdTabAlignment__wdAlignTabRight
    mixins Word$WdTabAlignment {}

  declare class Word$WdTabLeader {
    constructor(...args: empty): mixed;
    static +wdTabLeaderDashes: Class<Word$WdTabLeader__wdTabLeaderDashes> &
      Word$WdTabLeader__wdTabLeaderDashes &
      2; // 2
    static +wdTabLeaderDots: Class<Word$WdTabLeader__wdTabLeaderDots> &
      Word$WdTabLeader__wdTabLeaderDots &
      1; // 1
    static +wdTabLeaderHeavy: Class<Word$WdTabLeader__wdTabLeaderHeavy> &
      Word$WdTabLeader__wdTabLeaderHeavy &
      4; // 4
    static +wdTabLeaderLines: Class<Word$WdTabLeader__wdTabLeaderLines> &
      Word$WdTabLeader__wdTabLeaderLines &
      3; // 3
    static +wdTabLeaderMiddleDot: Class<Word$WdTabLeader__wdTabLeaderMiddleDot> &
      Word$WdTabLeader__wdTabLeaderMiddleDot &
      5; // 5
    static +wdTabLeaderSpaces: Class<Word$WdTabLeader__wdTabLeaderSpaces> &
      Word$WdTabLeader__wdTabLeaderSpaces &
      0; // 0
  }

  declare class Word$WdTabLeader__wdTabLeaderDashes mixins Word$WdTabLeader {}
  declare class Word$WdTabLeader__wdTabLeaderDots mixins Word$WdTabLeader {}
  declare class Word$WdTabLeader__wdTabLeaderHeavy mixins Word$WdTabLeader {}
  declare class Word$WdTabLeader__wdTabLeaderLines mixins Word$WdTabLeader {}
  declare class Word$WdTabLeader__wdTabLeaderMiddleDot
    mixins Word$WdTabLeader {}
  declare class Word$WdTabLeader__wdTabLeaderSpaces mixins Word$WdTabLeader {}

  declare class Word$WdTabLeaderHID {
    constructor(...args: empty): mixed;
    static +emptyenum: Class<Word$WdTabLeaderHID__emptyenum> &
      Word$WdTabLeaderHID__emptyenum &
      0; // 0
  }

  declare class Word$WdTabLeaderHID__emptyenum mixins Word$WdTabLeaderHID {}

  declare class Word$WdTableDirection {
    constructor(...args: empty): mixed;
    static +wdTableDirectionLtr: Class<Word$WdTableDirection__wdTableDirectionLtr> &
      Word$WdTableDirection__wdTableDirectionLtr &
      1; // 1
    static +wdTableDirectionRtl: Class<Word$WdTableDirection__wdTableDirectionRtl> &
      Word$WdTableDirection__wdTableDirectionRtl &
      0; // 0
  }

  declare class Word$WdTableDirection__wdTableDirectionLtr
    mixins Word$WdTableDirection {}
  declare class Word$WdTableDirection__wdTableDirectionRtl
    mixins Word$WdTableDirection {}

  declare class Word$WdTableFieldSeparator {
    constructor(...args: empty): mixed;
    static +wdSeparateByCommas: Class<Word$WdTableFieldSeparator__wdSeparateByCommas> &
      Word$WdTableFieldSeparator__wdSeparateByCommas &
      2; // 2
    static +wdSeparateByDefaultListSeparator: Class<Word$WdTableFieldSeparator__wdSeparateByDefaultListSeparator> &
      Word$WdTableFieldSeparator__wdSeparateByDefaultListSeparator &
      3; // 3
    static +wdSeparateByParagraphs: Class<Word$WdTableFieldSeparator__wdSeparateByParagraphs> &
      Word$WdTableFieldSeparator__wdSeparateByParagraphs &
      0; // 0
    static +wdSeparateByTabs: Class<Word$WdTableFieldSeparator__wdSeparateByTabs> &
      Word$WdTableFieldSeparator__wdSeparateByTabs &
      1; // 1
  }

  declare class Word$WdTableFieldSeparator__wdSeparateByCommas
    mixins Word$WdTableFieldSeparator {}
  declare class Word$WdTableFieldSeparator__wdSeparateByDefaultListSeparator
    mixins Word$WdTableFieldSeparator {}
  declare class Word$WdTableFieldSeparator__wdSeparateByParagraphs
    mixins Word$WdTableFieldSeparator {}
  declare class Word$WdTableFieldSeparator__wdSeparateByTabs
    mixins Word$WdTableFieldSeparator {}

  declare class Word$WdTableFormat {
    constructor(...args: empty): mixed;
    static +wdTableFormat3DEffects1: Class<Word$WdTableFormat__wdTableFormat3DEffects1> &
      Word$WdTableFormat__wdTableFormat3DEffects1 &
      32; // 32
    static +wdTableFormat3DEffects2: Class<Word$WdTableFormat__wdTableFormat3DEffects2> &
      Word$WdTableFormat__wdTableFormat3DEffects2 &
      33; // 33
    static +wdTableFormat3DEffects3: Class<Word$WdTableFormat__wdTableFormat3DEffects3> &
      Word$WdTableFormat__wdTableFormat3DEffects3 &
      34; // 34
    static +wdTableFormatClassic1: Class<Word$WdTableFormat__wdTableFormatClassic1> &
      Word$WdTableFormat__wdTableFormatClassic1 &
      4; // 4
    static +wdTableFormatClassic2: Class<Word$WdTableFormat__wdTableFormatClassic2> &
      Word$WdTableFormat__wdTableFormatClassic2 &
      5; // 5
    static +wdTableFormatClassic3: Class<Word$WdTableFormat__wdTableFormatClassic3> &
      Word$WdTableFormat__wdTableFormatClassic3 &
      6; // 6
    static +wdTableFormatClassic4: Class<Word$WdTableFormat__wdTableFormatClassic4> &
      Word$WdTableFormat__wdTableFormatClassic4 &
      7; // 7
    static +wdTableFormatColorful1: Class<Word$WdTableFormat__wdTableFormatColorful1> &
      Word$WdTableFormat__wdTableFormatColorful1 &
      8; // 8
    static +wdTableFormatColorful2: Class<Word$WdTableFormat__wdTableFormatColorful2> &
      Word$WdTableFormat__wdTableFormatColorful2 &
      9; // 9
    static +wdTableFormatColorful3: Class<Word$WdTableFormat__wdTableFormatColorful3> &
      Word$WdTableFormat__wdTableFormatColorful3 &
      10; // 10
    static +wdTableFormatColumns1: Class<Word$WdTableFormat__wdTableFormatColumns1> &
      Word$WdTableFormat__wdTableFormatColumns1 &
      11; // 11
    static +wdTableFormatColumns2: Class<Word$WdTableFormat__wdTableFormatColumns2> &
      Word$WdTableFormat__wdTableFormatColumns2 &
      12; // 12
    static +wdTableFormatColumns3: Class<Word$WdTableFormat__wdTableFormatColumns3> &
      Word$WdTableFormat__wdTableFormatColumns3 &
      13; // 13
    static +wdTableFormatColumns4: Class<Word$WdTableFormat__wdTableFormatColumns4> &
      Word$WdTableFormat__wdTableFormatColumns4 &
      14; // 14
    static +wdTableFormatColumns5: Class<Word$WdTableFormat__wdTableFormatColumns5> &
      Word$WdTableFormat__wdTableFormatColumns5 &
      15; // 15
    static +wdTableFormatContemporary: Class<Word$WdTableFormat__wdTableFormatContemporary> &
      Word$WdTableFormat__wdTableFormatContemporary &
      35; // 35
    static +wdTableFormatElegant: Class<Word$WdTableFormat__wdTableFormatElegant> &
      Word$WdTableFormat__wdTableFormatElegant &
      36; // 36
    static +wdTableFormatGrid1: Class<Word$WdTableFormat__wdTableFormatGrid1> &
      Word$WdTableFormat__wdTableFormatGrid1 &
      16; // 16
    static +wdTableFormatGrid2: Class<Word$WdTableFormat__wdTableFormatGrid2> &
      Word$WdTableFormat__wdTableFormatGrid2 &
      17; // 17
    static +wdTableFormatGrid3: Class<Word$WdTableFormat__wdTableFormatGrid3> &
      Word$WdTableFormat__wdTableFormatGrid3 &
      18; // 18
    static +wdTableFormatGrid4: Class<Word$WdTableFormat__wdTableFormatGrid4> &
      Word$WdTableFormat__wdTableFormatGrid4 &
      19; // 19
    static +wdTableFormatGrid5: Class<Word$WdTableFormat__wdTableFormatGrid5> &
      Word$WdTableFormat__wdTableFormatGrid5 &
      20; // 20
    static +wdTableFormatGrid6: Class<Word$WdTableFormat__wdTableFormatGrid6> &
      Word$WdTableFormat__wdTableFormatGrid6 &
      21; // 21
    static +wdTableFormatGrid7: Class<Word$WdTableFormat__wdTableFormatGrid7> &
      Word$WdTableFormat__wdTableFormatGrid7 &
      22; // 22
    static +wdTableFormatGrid8: Class<Word$WdTableFormat__wdTableFormatGrid8> &
      Word$WdTableFormat__wdTableFormatGrid8 &
      23; // 23
    static +wdTableFormatList1: Class<Word$WdTableFormat__wdTableFormatList1> &
      Word$WdTableFormat__wdTableFormatList1 &
      24; // 24
    static +wdTableFormatList2: Class<Word$WdTableFormat__wdTableFormatList2> &
      Word$WdTableFormat__wdTableFormatList2 &
      25; // 25
    static +wdTableFormatList3: Class<Word$WdTableFormat__wdTableFormatList3> &
      Word$WdTableFormat__wdTableFormatList3 &
      26; // 26
    static +wdTableFormatList4: Class<Word$WdTableFormat__wdTableFormatList4> &
      Word$WdTableFormat__wdTableFormatList4 &
      27; // 27
    static +wdTableFormatList5: Class<Word$WdTableFormat__wdTableFormatList5> &
      Word$WdTableFormat__wdTableFormatList5 &
      28; // 28
    static +wdTableFormatList6: Class<Word$WdTableFormat__wdTableFormatList6> &
      Word$WdTableFormat__wdTableFormatList6 &
      29; // 29
    static +wdTableFormatList7: Class<Word$WdTableFormat__wdTableFormatList7> &
      Word$WdTableFormat__wdTableFormatList7 &
      30; // 30
    static +wdTableFormatList8: Class<Word$WdTableFormat__wdTableFormatList8> &
      Word$WdTableFormat__wdTableFormatList8 &
      31; // 31
    static +wdTableFormatNone: Class<Word$WdTableFormat__wdTableFormatNone> &
      Word$WdTableFormat__wdTableFormatNone &
      0; // 0
    static +wdTableFormatProfessional: Class<Word$WdTableFormat__wdTableFormatProfessional> &
      Word$WdTableFormat__wdTableFormatProfessional &
      37; // 37
    static +wdTableFormatSimple1: Class<Word$WdTableFormat__wdTableFormatSimple1> &
      Word$WdTableFormat__wdTableFormatSimple1 &
      1; // 1
    static +wdTableFormatSimple2: Class<Word$WdTableFormat__wdTableFormatSimple2> &
      Word$WdTableFormat__wdTableFormatSimple2 &
      2; // 2
    static +wdTableFormatSimple3: Class<Word$WdTableFormat__wdTableFormatSimple3> &
      Word$WdTableFormat__wdTableFormatSimple3 &
      3; // 3
    static +wdTableFormatSubtle1: Class<Word$WdTableFormat__wdTableFormatSubtle1> &
      Word$WdTableFormat__wdTableFormatSubtle1 &
      38; // 38
    static +wdTableFormatSubtle2: Class<Word$WdTableFormat__wdTableFormatSubtle2> &
      Word$WdTableFormat__wdTableFormatSubtle2 &
      39; // 39
    static +wdTableFormatWeb1: Class<Word$WdTableFormat__wdTableFormatWeb1> &
      Word$WdTableFormat__wdTableFormatWeb1 &
      40; // 40
    static +wdTableFormatWeb2: Class<Word$WdTableFormat__wdTableFormatWeb2> &
      Word$WdTableFormat__wdTableFormatWeb2 &
      41; // 41
    static +wdTableFormatWeb3: Class<Word$WdTableFormat__wdTableFormatWeb3> &
      Word$WdTableFormat__wdTableFormatWeb3 &
      42; // 42
  }

  declare class Word$WdTableFormat__wdTableFormat3DEffects1
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormat3DEffects2
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormat3DEffects3
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatClassic1
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatClassic2
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatClassic3
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatClassic4
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatColorful1
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatColorful2
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatColorful3
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatColumns1
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatColumns2
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatColumns3
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatColumns4
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatColumns5
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatContemporary
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatElegant
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatGrid1
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatGrid2
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatGrid3
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatGrid4
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatGrid5
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatGrid6
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatGrid7
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatGrid8
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatList1
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatList2
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatList3
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatList4
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatList5
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatList6
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatList7
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatList8
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatNone
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatProfessional
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatSimple1
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatSimple2
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatSimple3
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatSubtle1
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatSubtle2
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatWeb1
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatWeb2
    mixins Word$WdTableFormat {}
  declare class Word$WdTableFormat__wdTableFormatWeb3
    mixins Word$WdTableFormat {}

  declare class Word$WdTableFormatApply {
    constructor(...args: empty): mixed;
    static +wdTableFormatApplyAutoFit: Class<Word$WdTableFormatApply__wdTableFormatApplyAutoFit> &
      Word$WdTableFormatApply__wdTableFormatApplyAutoFit &
      16; // 16
    static +wdTableFormatApplyBorders: Class<Word$WdTableFormatApply__wdTableFormatApplyBorders> &
      Word$WdTableFormatApply__wdTableFormatApplyBorders &
      1; // 1
    static +wdTableFormatApplyColor: Class<Word$WdTableFormatApply__wdTableFormatApplyColor> &
      Word$WdTableFormatApply__wdTableFormatApplyColor &
      8; // 8
    static +wdTableFormatApplyFirstColumn: Class<Word$WdTableFormatApply__wdTableFormatApplyFirstColumn> &
      Word$WdTableFormatApply__wdTableFormatApplyFirstColumn &
      128; // 128
    static +wdTableFormatApplyFont: Class<Word$WdTableFormatApply__wdTableFormatApplyFont> &
      Word$WdTableFormatApply__wdTableFormatApplyFont &
      4; // 4
    static +wdTableFormatApplyHeadingRows: Class<Word$WdTableFormatApply__wdTableFormatApplyHeadingRows> &
      Word$WdTableFormatApply__wdTableFormatApplyHeadingRows &
      32; // 32
    static +wdTableFormatApplyLastColumn: Class<Word$WdTableFormatApply__wdTableFormatApplyLastColumn> &
      Word$WdTableFormatApply__wdTableFormatApplyLastColumn &
      256; // 256
    static +wdTableFormatApplyLastRow: Class<Word$WdTableFormatApply__wdTableFormatApplyLastRow> &
      Word$WdTableFormatApply__wdTableFormatApplyLastRow &
      64; // 64
    static +wdTableFormatApplyShading: Class<Word$WdTableFormatApply__wdTableFormatApplyShading> &
      Word$WdTableFormatApply__wdTableFormatApplyShading &
      2; // 2
  }

  declare class Word$WdTableFormatApply__wdTableFormatApplyAutoFit
    mixins Word$WdTableFormatApply {}
  declare class Word$WdTableFormatApply__wdTableFormatApplyBorders
    mixins Word$WdTableFormatApply {}
  declare class Word$WdTableFormatApply__wdTableFormatApplyColor
    mixins Word$WdTableFormatApply {}
  declare class Word$WdTableFormatApply__wdTableFormatApplyFirstColumn
    mixins Word$WdTableFormatApply {}
  declare class Word$WdTableFormatApply__wdTableFormatApplyFont
    mixins Word$WdTableFormatApply {}
  declare class Word$WdTableFormatApply__wdTableFormatApplyHeadingRows
    mixins Word$WdTableFormatApply {}
  declare class Word$WdTableFormatApply__wdTableFormatApplyLastColumn
    mixins Word$WdTableFormatApply {}
  declare class Word$WdTableFormatApply__wdTableFormatApplyLastRow
    mixins Word$WdTableFormatApply {}
  declare class Word$WdTableFormatApply__wdTableFormatApplyShading
    mixins Word$WdTableFormatApply {}

  declare class Word$WdTablePosition {
    constructor(...args: empty): mixed;
    static +wdTableBottom: Class<Word$WdTablePosition__wdTableBottom> &
      Word$WdTablePosition__wdTableBottom &
      -999997; // -999997
    static +wdTableCenter: Class<Word$WdTablePosition__wdTableCenter> &
      Word$WdTablePosition__wdTableCenter &
      -999995; // -999995
    static +wdTableInside: Class<Word$WdTablePosition__wdTableInside> &
      Word$WdTablePosition__wdTableInside &
      -999994; // -999994
    static +wdTableLeft: Class<Word$WdTablePosition__wdTableLeft> &
      Word$WdTablePosition__wdTableLeft &
      -999998; // -999998
    static +wdTableOutside: Class<Word$WdTablePosition__wdTableOutside> &
      Word$WdTablePosition__wdTableOutside &
      -999993; // -999993
    static +wdTableRight: Class<Word$WdTablePosition__wdTableRight> &
      Word$WdTablePosition__wdTableRight &
      -999996; // -999996
    static +wdTableTop: Class<Word$WdTablePosition__wdTableTop> &
      Word$WdTablePosition__wdTableTop &
      -999999; // -999999
  }

  declare class Word$WdTablePosition__wdTableBottom
    mixins Word$WdTablePosition {}
  declare class Word$WdTablePosition__wdTableCenter
    mixins Word$WdTablePosition {}
  declare class Word$WdTablePosition__wdTableInside
    mixins Word$WdTablePosition {}
  declare class Word$WdTablePosition__wdTableLeft mixins Word$WdTablePosition {}
  declare class Word$WdTablePosition__wdTableOutside
    mixins Word$WdTablePosition {}
  declare class Word$WdTablePosition__wdTableRight
    mixins Word$WdTablePosition {}
  declare class Word$WdTablePosition__wdTableTop mixins Word$WdTablePosition {}

  declare class Word$WdTaskPanes {
    constructor(...args: empty): mixed;
    static +wdTaskPaneApplyStyles: Class<Word$WdTaskPanes__wdTaskPaneApplyStyles> &
      Word$WdTaskPanes__wdTaskPaneApplyStyles &
      17; // 17
    static +wdTaskPaneDocumentActions: Class<Word$WdTaskPanes__wdTaskPaneDocumentActions> &
      Word$WdTaskPanes__wdTaskPaneDocumentActions &
      7; // 7
    static +wdTaskPaneDocumentManagement: Class<Word$WdTaskPanes__wdTaskPaneDocumentManagement> &
      Word$WdTaskPanes__wdTaskPaneDocumentManagement &
      16; // 16
    static +wdTaskPaneDocumentProtection: Class<Word$WdTaskPanes__wdTaskPaneDocumentProtection> &
      Word$WdTaskPanes__wdTaskPaneDocumentProtection &
      6; // 6
    static +wdTaskPaneDocumentUpdates: Class<Word$WdTaskPanes__wdTaskPaneDocumentUpdates> &
      Word$WdTaskPanes__wdTaskPaneDocumentUpdates &
      13; // 13
    static +wdTaskPaneFaxService: Class<Word$WdTaskPanes__wdTaskPaneFaxService> &
      Word$WdTaskPanes__wdTaskPaneFaxService &
      11; // 11
    static +wdTaskPaneFormatting: Class<Word$WdTaskPanes__wdTaskPaneFormatting> &
      Word$WdTaskPanes__wdTaskPaneFormatting &
      0; // 0
    static +wdTaskPaneHelp: Class<Word$WdTaskPanes__wdTaskPaneHelp> &
      Word$WdTaskPanes__wdTaskPaneHelp &
      9; // 9
    static +wdTaskPaneMailMerge: Class<Word$WdTaskPanes__wdTaskPaneMailMerge> &
      Word$WdTaskPanes__wdTaskPaneMailMerge &
      2; // 2
    static +wdTaskPaneNav: Class<Word$WdTaskPanes__wdTaskPaneNav> &
      Word$WdTaskPanes__wdTaskPaneNav &
      18; // 18
    static +wdTaskPaneResearch: Class<Word$WdTaskPanes__wdTaskPaneResearch> &
      Word$WdTaskPanes__wdTaskPaneResearch &
      10; // 10
    static +wdTaskPaneRevealFormatting: Class<Word$WdTaskPanes__wdTaskPaneRevealFormatting> &
      Word$WdTaskPanes__wdTaskPaneRevealFormatting &
      1; // 1
    static +wdTaskPaneSearch: Class<Word$WdTaskPanes__wdTaskPaneSearch> &
      Word$WdTaskPanes__wdTaskPaneSearch &
      4; // 4
    static +wdTaskPaneSelection: Class<Word$WdTaskPanes__wdTaskPaneSelection> &
      Word$WdTaskPanes__wdTaskPaneSelection &
      19; // 19
    static +wdTaskPaneSharedWorkspace: Class<Word$WdTaskPanes__wdTaskPaneSharedWorkspace> &
      Word$WdTaskPanes__wdTaskPaneSharedWorkspace &
      8; // 8
    static +wdTaskPaneSignature: Class<Word$WdTaskPanes__wdTaskPaneSignature> &
      Word$WdTaskPanes__wdTaskPaneSignature &
      14; // 14
    static +wdTaskPaneStyleInspector: Class<Word$WdTaskPanes__wdTaskPaneStyleInspector> &
      Word$WdTaskPanes__wdTaskPaneStyleInspector &
      15; // 15
    static +wdTaskPaneTranslate: Class<Word$WdTaskPanes__wdTaskPaneTranslate> &
      Word$WdTaskPanes__wdTaskPaneTranslate &
      3; // 3
    static +wdTaskPaneXMLDocument: Class<Word$WdTaskPanes__wdTaskPaneXMLDocument> &
      Word$WdTaskPanes__wdTaskPaneXMLDocument &
      12; // 12
    static +wdTaskPaneXMLStructure: Class<Word$WdTaskPanes__wdTaskPaneXMLStructure> &
      Word$WdTaskPanes__wdTaskPaneXMLStructure &
      5; // 5
  }

  declare class Word$WdTaskPanes__wdTaskPaneApplyStyles
    mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneDocumentActions
    mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneDocumentManagement
    mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneDocumentProtection
    mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneDocumentUpdates
    mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneFaxService
    mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneFormatting
    mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneHelp mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneMailMerge mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneNav mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneResearch mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneRevealFormatting
    mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneSearch mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneSelection mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneSharedWorkspace
    mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneSignature mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneStyleInspector
    mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneTranslate mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneXMLDocument
    mixins Word$WdTaskPanes {}
  declare class Word$WdTaskPanes__wdTaskPaneXMLStructure
    mixins Word$WdTaskPanes {}

  declare class Word$WdTCSCConverterDirection {
    constructor(...args: empty): mixed;
    static +wdTCSCConverterDirectionAuto: Class<Word$WdTCSCConverterDirection__wdTCSCConverterDirectionAuto> &
      Word$WdTCSCConverterDirection__wdTCSCConverterDirectionAuto &
      2; // 2
    static +wdTCSCConverterDirectionSCTC: Class<Word$WdTCSCConverterDirection__wdTCSCConverterDirectionSCTC> &
      Word$WdTCSCConverterDirection__wdTCSCConverterDirectionSCTC &
      0; // 0
    static +wdTCSCConverterDirectionTCSC: Class<Word$WdTCSCConverterDirection__wdTCSCConverterDirectionTCSC> &
      Word$WdTCSCConverterDirection__wdTCSCConverterDirectionTCSC &
      1; // 1
  }

  declare class Word$WdTCSCConverterDirection__wdTCSCConverterDirectionAuto
    mixins Word$WdTCSCConverterDirection {}
  declare class Word$WdTCSCConverterDirection__wdTCSCConverterDirectionSCTC
    mixins Word$WdTCSCConverterDirection {}
  declare class Word$WdTCSCConverterDirection__wdTCSCConverterDirectionTCSC
    mixins Word$WdTCSCConverterDirection {}

  declare class Word$WdTemplateType {
    constructor(...args: empty): mixed;
    static +wdAttachedTemplate: Class<Word$WdTemplateType__wdAttachedTemplate> &
      Word$WdTemplateType__wdAttachedTemplate &
      2; // 2
    static +wdGlobalTemplate: Class<Word$WdTemplateType__wdGlobalTemplate> &
      Word$WdTemplateType__wdGlobalTemplate &
      1; // 1
    static +wdNormalTemplate: Class<Word$WdTemplateType__wdNormalTemplate> &
      Word$WdTemplateType__wdNormalTemplate &
      0; // 0
  }

  declare class Word$WdTemplateType__wdAttachedTemplate
    mixins Word$WdTemplateType {}
  declare class Word$WdTemplateType__wdGlobalTemplate
    mixins Word$WdTemplateType {}
  declare class Word$WdTemplateType__wdNormalTemplate
    mixins Word$WdTemplateType {}

  declare class Word$WdTextboxTightWrap {
    constructor(...args: empty): mixed;
    static +wdTightAll: Class<Word$WdTextboxTightWrap__wdTightAll> &
      Word$WdTextboxTightWrap__wdTightAll &
      1; // 1
    static +wdTightFirstAndLastLines: Class<Word$WdTextboxTightWrap__wdTightFirstAndLastLines> &
      Word$WdTextboxTightWrap__wdTightFirstAndLastLines &
      2; // 2
    static +wdTightFirstLineOnly: Class<Word$WdTextboxTightWrap__wdTightFirstLineOnly> &
      Word$WdTextboxTightWrap__wdTightFirstLineOnly &
      3; // 3
    static +wdTightLastLineOnly: Class<Word$WdTextboxTightWrap__wdTightLastLineOnly> &
      Word$WdTextboxTightWrap__wdTightLastLineOnly &
      4; // 4
    static +wdTightNone: Class<Word$WdTextboxTightWrap__wdTightNone> &
      Word$WdTextboxTightWrap__wdTightNone &
      0; // 0
  }

  declare class Word$WdTextboxTightWrap__wdTightAll
    mixins Word$WdTextboxTightWrap {}
  declare class Word$WdTextboxTightWrap__wdTightFirstAndLastLines
    mixins Word$WdTextboxTightWrap {}
  declare class Word$WdTextboxTightWrap__wdTightFirstLineOnly
    mixins Word$WdTextboxTightWrap {}
  declare class Word$WdTextboxTightWrap__wdTightLastLineOnly
    mixins Word$WdTextboxTightWrap {}
  declare class Word$WdTextboxTightWrap__wdTightNone
    mixins Word$WdTextboxTightWrap {}

  declare class Word$WdTextFormFieldType {
    constructor(...args: empty): mixed;
    static +wdCalculationText: Class<Word$WdTextFormFieldType__wdCalculationText> &
      Word$WdTextFormFieldType__wdCalculationText &
      5; // 5
    static +wdCurrentDateText: Class<Word$WdTextFormFieldType__wdCurrentDateText> &
      Word$WdTextFormFieldType__wdCurrentDateText &
      3; // 3
    static +wdCurrentTimeText: Class<Word$WdTextFormFieldType__wdCurrentTimeText> &
      Word$WdTextFormFieldType__wdCurrentTimeText &
      4; // 4
    static +wdDateText: Class<Word$WdTextFormFieldType__wdDateText> &
      Word$WdTextFormFieldType__wdDateText &
      2; // 2
    static +wdNumberText: Class<Word$WdTextFormFieldType__wdNumberText> &
      Word$WdTextFormFieldType__wdNumberText &
      1; // 1
    static +wdRegularText: Class<Word$WdTextFormFieldType__wdRegularText> &
      Word$WdTextFormFieldType__wdRegularText &
      0; // 0
  }

  declare class Word$WdTextFormFieldType__wdCalculationText
    mixins Word$WdTextFormFieldType {}
  declare class Word$WdTextFormFieldType__wdCurrentDateText
    mixins Word$WdTextFormFieldType {}
  declare class Word$WdTextFormFieldType__wdCurrentTimeText
    mixins Word$WdTextFormFieldType {}
  declare class Word$WdTextFormFieldType__wdDateText
    mixins Word$WdTextFormFieldType {}
  declare class Word$WdTextFormFieldType__wdNumberText
    mixins Word$WdTextFormFieldType {}
  declare class Word$WdTextFormFieldType__wdRegularText
    mixins Word$WdTextFormFieldType {}

  declare class Word$WdTextOrientation {
    constructor(...args: empty): mixed;
    static +wdTextOrientationDownward: Class<Word$WdTextOrientation__wdTextOrientationDownward> &
      Word$WdTextOrientation__wdTextOrientationDownward &
      3; // 3
    static +wdTextOrientationHorizontal: Class<Word$WdTextOrientation__wdTextOrientationHorizontal> &
      Word$WdTextOrientation__wdTextOrientationHorizontal &
      0; // 0
    static +wdTextOrientationHorizontalRotatedFarEast: Class<Word$WdTextOrientation__wdTextOrientationHorizontalRotatedFarEast> &
      Word$WdTextOrientation__wdTextOrientationHorizontalRotatedFarEast &
      4; // 4
    static +wdTextOrientationUpward: Class<Word$WdTextOrientation__wdTextOrientationUpward> &
      Word$WdTextOrientation__wdTextOrientationUpward &
      2; // 2
    static +wdTextOrientationVertical: Class<Word$WdTextOrientation__wdTextOrientationVertical> &
      Word$WdTextOrientation__wdTextOrientationVertical &
      5; // 5
    static +wdTextOrientationVerticalFarEast: Class<Word$WdTextOrientation__wdTextOrientationVerticalFarEast> &
      Word$WdTextOrientation__wdTextOrientationVerticalFarEast &
      1; // 1
  }

  declare class Word$WdTextOrientation__wdTextOrientationDownward
    mixins Word$WdTextOrientation {}
  declare class Word$WdTextOrientation__wdTextOrientationHorizontal
    mixins Word$WdTextOrientation {}
  declare class Word$WdTextOrientation__wdTextOrientationHorizontalRotatedFarEast
    mixins Word$WdTextOrientation {}
  declare class Word$WdTextOrientation__wdTextOrientationUpward
    mixins Word$WdTextOrientation {}
  declare class Word$WdTextOrientation__wdTextOrientationVertical
    mixins Word$WdTextOrientation {}
  declare class Word$WdTextOrientation__wdTextOrientationVerticalFarEast
    mixins Word$WdTextOrientation {}

  declare class Word$WdTextOrientationHID {
    constructor(...args: empty): mixed;
    static +emptyenum: Class<Word$WdTextOrientationHID__emptyenum> &
      Word$WdTextOrientationHID__emptyenum &
      0; // 0
  }

  declare class Word$WdTextOrientationHID__emptyenum
    mixins Word$WdTextOrientationHID {}

  declare class Word$WdTextureIndex {
    constructor(...args: empty): mixed;
    static +wdTexture10Percent: Class<Word$WdTextureIndex__wdTexture10Percent> &
      Word$WdTextureIndex__wdTexture10Percent &
      100; // 100
    static +wdTexture12Pt5Percent: Class<Word$WdTextureIndex__wdTexture12Pt5Percent> &
      Word$WdTextureIndex__wdTexture12Pt5Percent &
      125; // 125
    static +wdTexture15Percent: Class<Word$WdTextureIndex__wdTexture15Percent> &
      Word$WdTextureIndex__wdTexture15Percent &
      150; // 150
    static +wdTexture17Pt5Percent: Class<Word$WdTextureIndex__wdTexture17Pt5Percent> &
      Word$WdTextureIndex__wdTexture17Pt5Percent &
      175; // 175
    static +wdTexture20Percent: Class<Word$WdTextureIndex__wdTexture20Percent> &
      Word$WdTextureIndex__wdTexture20Percent &
      200; // 200
    static +wdTexture22Pt5Percent: Class<Word$WdTextureIndex__wdTexture22Pt5Percent> &
      Word$WdTextureIndex__wdTexture22Pt5Percent &
      225; // 225
    static +wdTexture25Percent: Class<Word$WdTextureIndex__wdTexture25Percent> &
      Word$WdTextureIndex__wdTexture25Percent &
      250; // 250
    static +wdTexture27Pt5Percent: Class<Word$WdTextureIndex__wdTexture27Pt5Percent> &
      Word$WdTextureIndex__wdTexture27Pt5Percent &
      275; // 275
    static +wdTexture2Pt5Percent: Class<Word$WdTextureIndex__wdTexture2Pt5Percent> &
      Word$WdTextureIndex__wdTexture2Pt5Percent &
      25; // 25
    static +wdTexture30Percent: Class<Word$WdTextureIndex__wdTexture30Percent> &
      Word$WdTextureIndex__wdTexture30Percent &
      300; // 300
    static +wdTexture32Pt5Percent: Class<Word$WdTextureIndex__wdTexture32Pt5Percent> &
      Word$WdTextureIndex__wdTexture32Pt5Percent &
      325; // 325
    static +wdTexture35Percent: Class<Word$WdTextureIndex__wdTexture35Percent> &
      Word$WdTextureIndex__wdTexture35Percent &
      350; // 350
    static +wdTexture37Pt5Percent: Class<Word$WdTextureIndex__wdTexture37Pt5Percent> &
      Word$WdTextureIndex__wdTexture37Pt5Percent &
      375; // 375
    static +wdTexture40Percent: Class<Word$WdTextureIndex__wdTexture40Percent> &
      Word$WdTextureIndex__wdTexture40Percent &
      400; // 400
    static +wdTexture42Pt5Percent: Class<Word$WdTextureIndex__wdTexture42Pt5Percent> &
      Word$WdTextureIndex__wdTexture42Pt5Percent &
      425; // 425
    static +wdTexture45Percent: Class<Word$WdTextureIndex__wdTexture45Percent> &
      Word$WdTextureIndex__wdTexture45Percent &
      450; // 450
    static +wdTexture47Pt5Percent: Class<Word$WdTextureIndex__wdTexture47Pt5Percent> &
      Word$WdTextureIndex__wdTexture47Pt5Percent &
      475; // 475
    static +wdTexture50Percent: Class<Word$WdTextureIndex__wdTexture50Percent> &
      Word$WdTextureIndex__wdTexture50Percent &
      500; // 500
    static +wdTexture52Pt5Percent: Class<Word$WdTextureIndex__wdTexture52Pt5Percent> &
      Word$WdTextureIndex__wdTexture52Pt5Percent &
      525; // 525
    static +wdTexture55Percent: Class<Word$WdTextureIndex__wdTexture55Percent> &
      Word$WdTextureIndex__wdTexture55Percent &
      550; // 550
    static +wdTexture57Pt5Percent: Class<Word$WdTextureIndex__wdTexture57Pt5Percent> &
      Word$WdTextureIndex__wdTexture57Pt5Percent &
      575; // 575
    static +wdTexture5Percent: Class<Word$WdTextureIndex__wdTexture5Percent> &
      Word$WdTextureIndex__wdTexture5Percent &
      50; // 50
    static +wdTexture60Percent: Class<Word$WdTextureIndex__wdTexture60Percent> &
      Word$WdTextureIndex__wdTexture60Percent &
      600; // 600
    static +wdTexture62Pt5Percent: Class<Word$WdTextureIndex__wdTexture62Pt5Percent> &
      Word$WdTextureIndex__wdTexture62Pt5Percent &
      625; // 625
    static +wdTexture65Percent: Class<Word$WdTextureIndex__wdTexture65Percent> &
      Word$WdTextureIndex__wdTexture65Percent &
      650; // 650
    static +wdTexture67Pt5Percent: Class<Word$WdTextureIndex__wdTexture67Pt5Percent> &
      Word$WdTextureIndex__wdTexture67Pt5Percent &
      675; // 675
    static +wdTexture70Percent: Class<Word$WdTextureIndex__wdTexture70Percent> &
      Word$WdTextureIndex__wdTexture70Percent &
      700; // 700
    static +wdTexture72Pt5Percent: Class<Word$WdTextureIndex__wdTexture72Pt5Percent> &
      Word$WdTextureIndex__wdTexture72Pt5Percent &
      725; // 725
    static +wdTexture75Percent: Class<Word$WdTextureIndex__wdTexture75Percent> &
      Word$WdTextureIndex__wdTexture75Percent &
      750; // 750
    static +wdTexture77Pt5Percent: Class<Word$WdTextureIndex__wdTexture77Pt5Percent> &
      Word$WdTextureIndex__wdTexture77Pt5Percent &
      775; // 775
    static +wdTexture7Pt5Percent: Class<Word$WdTextureIndex__wdTexture7Pt5Percent> &
      Word$WdTextureIndex__wdTexture7Pt5Percent &
      75; // 75
    static +wdTexture80Percent: Class<Word$WdTextureIndex__wdTexture80Percent> &
      Word$WdTextureIndex__wdTexture80Percent &
      800; // 800
    static +wdTexture82Pt5Percent: Class<Word$WdTextureIndex__wdTexture82Pt5Percent> &
      Word$WdTextureIndex__wdTexture82Pt5Percent &
      825; // 825
    static +wdTexture85Percent: Class<Word$WdTextureIndex__wdTexture85Percent> &
      Word$WdTextureIndex__wdTexture85Percent &
      850; // 850
    static +wdTexture87Pt5Percent: Class<Word$WdTextureIndex__wdTexture87Pt5Percent> &
      Word$WdTextureIndex__wdTexture87Pt5Percent &
      875; // 875
    static +wdTexture90Percent: Class<Word$WdTextureIndex__wdTexture90Percent> &
      Word$WdTextureIndex__wdTexture90Percent &
      900; // 900
    static +wdTexture92Pt5Percent: Class<Word$WdTextureIndex__wdTexture92Pt5Percent> &
      Word$WdTextureIndex__wdTexture92Pt5Percent &
      925; // 925
    static +wdTexture95Percent: Class<Word$WdTextureIndex__wdTexture95Percent> &
      Word$WdTextureIndex__wdTexture95Percent &
      950; // 950
    static +wdTexture97Pt5Percent: Class<Word$WdTextureIndex__wdTexture97Pt5Percent> &
      Word$WdTextureIndex__wdTexture97Pt5Percent &
      975; // 975
    static +wdTextureCross: Class<Word$WdTextureIndex__wdTextureCross> &
      Word$WdTextureIndex__wdTextureCross &
      -11; // -11
    static +wdTextureDarkCross: Class<Word$WdTextureIndex__wdTextureDarkCross> &
      Word$WdTextureIndex__wdTextureDarkCross &
      -5; // -5
    static +wdTextureDarkDiagonalCross: Class<Word$WdTextureIndex__wdTextureDarkDiagonalCross> &
      Word$WdTextureIndex__wdTextureDarkDiagonalCross &
      -6; // -6
    static +wdTextureDarkDiagonalDown: Class<Word$WdTextureIndex__wdTextureDarkDiagonalDown> &
      Word$WdTextureIndex__wdTextureDarkDiagonalDown &
      -3; // -3
    static +wdTextureDarkDiagonalUp: Class<Word$WdTextureIndex__wdTextureDarkDiagonalUp> &
      Word$WdTextureIndex__wdTextureDarkDiagonalUp &
      -4; // -4
    static +wdTextureDarkHorizontal: Class<Word$WdTextureIndex__wdTextureDarkHorizontal> &
      Word$WdTextureIndex__wdTextureDarkHorizontal &
      -1; // -1
    static +wdTextureDarkVertical: Class<Word$WdTextureIndex__wdTextureDarkVertical> &
      Word$WdTextureIndex__wdTextureDarkVertical &
      -2; // -2
    static +wdTextureDiagonalCross: Class<Word$WdTextureIndex__wdTextureDiagonalCross> &
      Word$WdTextureIndex__wdTextureDiagonalCross &
      -12; // -12
    static +wdTextureDiagonalDown: Class<Word$WdTextureIndex__wdTextureDiagonalDown> &
      Word$WdTextureIndex__wdTextureDiagonalDown &
      -9; // -9
    static +wdTextureDiagonalUp: Class<Word$WdTextureIndex__wdTextureDiagonalUp> &
      Word$WdTextureIndex__wdTextureDiagonalUp &
      -10; // -10
    static +wdTextureHorizontal: Class<Word$WdTextureIndex__wdTextureHorizontal> &
      Word$WdTextureIndex__wdTextureHorizontal &
      -7; // -7
    static +wdTextureNone: Class<Word$WdTextureIndex__wdTextureNone> &
      Word$WdTextureIndex__wdTextureNone &
      0; // 0
    static +wdTextureSolid: Class<Word$WdTextureIndex__wdTextureSolid> &
      Word$WdTextureIndex__wdTextureSolid &
      1000; // 1000
    static +wdTextureVertical: Class<Word$WdTextureIndex__wdTextureVertical> &
      Word$WdTextureIndex__wdTextureVertical &
      -8; // -8
  }

  declare class Word$WdTextureIndex__wdTexture10Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture12Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture15Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture17Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture20Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture22Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture25Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture27Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture2Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture30Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture32Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture35Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture37Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture40Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture42Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture45Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture47Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture50Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture52Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture55Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture57Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture60Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture62Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture65Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture67Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture70Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture72Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture75Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture77Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture7Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture80Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture82Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture85Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture87Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture90Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture92Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture95Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTexture97Pt5Percent
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTextureCross
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTextureDarkCross
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTextureDarkDiagonalCross
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTextureDarkDiagonalDown
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTextureDarkDiagonalUp
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTextureDarkHorizontal
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTextureDarkVertical
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTextureDiagonalCross
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTextureDiagonalDown
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTextureDiagonalUp
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTextureHorizontal
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTextureNone mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTextureSolid
    mixins Word$WdTextureIndex {}
  declare class Word$WdTextureIndex__wdTextureVertical
    mixins Word$WdTextureIndex {}

  declare class Word$WdThemeColorIndex {
    constructor(...args: empty): mixed;
    static +wdNotThemeColor: Class<Word$WdThemeColorIndex__wdNotThemeColor> &
      Word$WdThemeColorIndex__wdNotThemeColor &
      -1; // -1
    static +wdThemeColorAccent1: Class<Word$WdThemeColorIndex__wdThemeColorAccent1> &
      Word$WdThemeColorIndex__wdThemeColorAccent1 &
      4; // 4
    static +wdThemeColorAccent2: Class<Word$WdThemeColorIndex__wdThemeColorAccent2> &
      Word$WdThemeColorIndex__wdThemeColorAccent2 &
      5; // 5
    static +wdThemeColorAccent3: Class<Word$WdThemeColorIndex__wdThemeColorAccent3> &
      Word$WdThemeColorIndex__wdThemeColorAccent3 &
      6; // 6
    static +wdThemeColorAccent4: Class<Word$WdThemeColorIndex__wdThemeColorAccent4> &
      Word$WdThemeColorIndex__wdThemeColorAccent4 &
      7; // 7
    static +wdThemeColorAccent5: Class<Word$WdThemeColorIndex__wdThemeColorAccent5> &
      Word$WdThemeColorIndex__wdThemeColorAccent5 &
      8; // 8
    static +wdThemeColorAccent6: Class<Word$WdThemeColorIndex__wdThemeColorAccent6> &
      Word$WdThemeColorIndex__wdThemeColorAccent6 &
      9; // 9
    static +wdThemeColorBackground1: Class<Word$WdThemeColorIndex__wdThemeColorBackground1> &
      Word$WdThemeColorIndex__wdThemeColorBackground1 &
      12; // 12
    static +wdThemeColorBackground2: Class<Word$WdThemeColorIndex__wdThemeColorBackground2> &
      Word$WdThemeColorIndex__wdThemeColorBackground2 &
      14; // 14
    static +wdThemeColorHyperlink: Class<Word$WdThemeColorIndex__wdThemeColorHyperlink> &
      Word$WdThemeColorIndex__wdThemeColorHyperlink &
      10; // 10
    static +wdThemeColorHyperlinkFollowed: Class<Word$WdThemeColorIndex__wdThemeColorHyperlinkFollowed> &
      Word$WdThemeColorIndex__wdThemeColorHyperlinkFollowed &
      11; // 11
    static +wdThemeColorMainDark1: Class<Word$WdThemeColorIndex__wdThemeColorMainDark1> &
      Word$WdThemeColorIndex__wdThemeColorMainDark1 &
      0; // 0
    static +wdThemeColorMainDark2: Class<Word$WdThemeColorIndex__wdThemeColorMainDark2> &
      Word$WdThemeColorIndex__wdThemeColorMainDark2 &
      2; // 2
    static +wdThemeColorMainLight1: Class<Word$WdThemeColorIndex__wdThemeColorMainLight1> &
      Word$WdThemeColorIndex__wdThemeColorMainLight1 &
      1; // 1
    static +wdThemeColorMainLight2: Class<Word$WdThemeColorIndex__wdThemeColorMainLight2> &
      Word$WdThemeColorIndex__wdThemeColorMainLight2 &
      3; // 3
    static +wdThemeColorText1: Class<Word$WdThemeColorIndex__wdThemeColorText1> &
      Word$WdThemeColorIndex__wdThemeColorText1 &
      13; // 13
    static +wdThemeColorText2: Class<Word$WdThemeColorIndex__wdThemeColorText2> &
      Word$WdThemeColorIndex__wdThemeColorText2 &
      15; // 15
  }

  declare class Word$WdThemeColorIndex__wdNotThemeColor
    mixins Word$WdThemeColorIndex {}
  declare class Word$WdThemeColorIndex__wdThemeColorAccent1
    mixins Word$WdThemeColorIndex {}
  declare class Word$WdThemeColorIndex__wdThemeColorAccent2
    mixins Word$WdThemeColorIndex {}
  declare class Word$WdThemeColorIndex__wdThemeColorAccent3
    mixins Word$WdThemeColorIndex {}
  declare class Word$WdThemeColorIndex__wdThemeColorAccent4
    mixins Word$WdThemeColorIndex {}
  declare class Word$WdThemeColorIndex__wdThemeColorAccent5
    mixins Word$WdThemeColorIndex {}
  declare class Word$WdThemeColorIndex__wdThemeColorAccent6
    mixins Word$WdThemeColorIndex {}
  declare class Word$WdThemeColorIndex__wdThemeColorBackground1
    mixins Word$WdThemeColorIndex {}
  declare class Word$WdThemeColorIndex__wdThemeColorBackground2
    mixins Word$WdThemeColorIndex {}
  declare class Word$WdThemeColorIndex__wdThemeColorHyperlink
    mixins Word$WdThemeColorIndex {}
  declare class Word$WdThemeColorIndex__wdThemeColorHyperlinkFollowed
    mixins Word$WdThemeColorIndex {}
  declare class Word$WdThemeColorIndex__wdThemeColorMainDark1
    mixins Word$WdThemeColorIndex {}
  declare class Word$WdThemeColorIndex__wdThemeColorMainDark2
    mixins Word$WdThemeColorIndex {}
  declare class Word$WdThemeColorIndex__wdThemeColorMainLight1
    mixins Word$WdThemeColorIndex {}
  declare class Word$WdThemeColorIndex__wdThemeColorMainLight2
    mixins Word$WdThemeColorIndex {}
  declare class Word$WdThemeColorIndex__wdThemeColorText1
    mixins Word$WdThemeColorIndex {}
  declare class Word$WdThemeColorIndex__wdThemeColorText2
    mixins Word$WdThemeColorIndex {}

  declare class Word$WdToaFormat {
    constructor(...args: empty): mixed;
    static +wdTOAClassic: Class<Word$WdToaFormat__wdTOAClassic> &
      Word$WdToaFormat__wdTOAClassic &
      1; // 1
    static +wdTOADistinctive: Class<Word$WdToaFormat__wdTOADistinctive> &
      Word$WdToaFormat__wdTOADistinctive &
      2; // 2
    static +wdTOAFormal: Class<Word$WdToaFormat__wdTOAFormal> &
      Word$WdToaFormat__wdTOAFormal &
      3; // 3
    static +wdTOASimple: Class<Word$WdToaFormat__wdTOASimple> &
      Word$WdToaFormat__wdTOASimple &
      4; // 4
    static +wdTOATemplate: Class<Word$WdToaFormat__wdTOATemplate> &
      Word$WdToaFormat__wdTOATemplate &
      0; // 0
  }

  declare class Word$WdToaFormat__wdTOAClassic mixins Word$WdToaFormat {}
  declare class Word$WdToaFormat__wdTOADistinctive mixins Word$WdToaFormat {}
  declare class Word$WdToaFormat__wdTOAFormal mixins Word$WdToaFormat {}
  declare class Word$WdToaFormat__wdTOASimple mixins Word$WdToaFormat {}
  declare class Word$WdToaFormat__wdTOATemplate mixins Word$WdToaFormat {}

  declare class Word$WdTocFormat {
    constructor(...args: empty): mixed;
    static +wdTOCClassic: Class<Word$WdTocFormat__wdTOCClassic> &
      Word$WdTocFormat__wdTOCClassic &
      1; // 1
    static +wdTOCDistinctive: Class<Word$WdTocFormat__wdTOCDistinctive> &
      Word$WdTocFormat__wdTOCDistinctive &
      2; // 2
    static +wdTOCFancy: Class<Word$WdTocFormat__wdTOCFancy> &
      Word$WdTocFormat__wdTOCFancy &
      3; // 3
    static +wdTOCFormal: Class<Word$WdTocFormat__wdTOCFormal> &
      Word$WdTocFormat__wdTOCFormal &
      5; // 5
    static +wdTOCModern: Class<Word$WdTocFormat__wdTOCModern> &
      Word$WdTocFormat__wdTOCModern &
      4; // 4
    static +wdTOCSimple: Class<Word$WdTocFormat__wdTOCSimple> &
      Word$WdTocFormat__wdTOCSimple &
      6; // 6
    static +wdTOCTemplate: Class<Word$WdTocFormat__wdTOCTemplate> &
      Word$WdTocFormat__wdTOCTemplate &
      0; // 0
  }

  declare class Word$WdTocFormat__wdTOCClassic mixins Word$WdTocFormat {}
  declare class Word$WdTocFormat__wdTOCDistinctive mixins Word$WdTocFormat {}
  declare class Word$WdTocFormat__wdTOCFancy mixins Word$WdTocFormat {}
  declare class Word$WdTocFormat__wdTOCFormal mixins Word$WdTocFormat {}
  declare class Word$WdTocFormat__wdTOCModern mixins Word$WdTocFormat {}
  declare class Word$WdTocFormat__wdTOCSimple mixins Word$WdTocFormat {}
  declare class Word$WdTocFormat__wdTOCTemplate mixins Word$WdTocFormat {}

  declare class Word$WdTofFormat {
    constructor(...args: empty): mixed;
    static +wdTOFCentered: Class<Word$WdTofFormat__wdTOFCentered> &
      Word$WdTofFormat__wdTOFCentered &
      3; // 3
    static +wdTOFClassic: Class<Word$WdTofFormat__wdTOFClassic> &
      Word$WdTofFormat__wdTOFClassic &
      1; // 1
    static +wdTOFDistinctive: Class<Word$WdTofFormat__wdTOFDistinctive> &
      Word$WdTofFormat__wdTOFDistinctive &
      2; // 2
    static +wdTOFFormal: Class<Word$WdTofFormat__wdTOFFormal> &
      Word$WdTofFormat__wdTOFFormal &
      4; // 4
    static +wdTOFSimple: Class<Word$WdTofFormat__wdTOFSimple> &
      Word$WdTofFormat__wdTOFSimple &
      5; // 5
    static +wdTOFTemplate: Class<Word$WdTofFormat__wdTOFTemplate> &
      Word$WdTofFormat__wdTOFTemplate &
      0; // 0
  }

  declare class Word$WdTofFormat__wdTOFCentered mixins Word$WdTofFormat {}
  declare class Word$WdTofFormat__wdTOFClassic mixins Word$WdTofFormat {}
  declare class Word$WdTofFormat__wdTOFDistinctive mixins Word$WdTofFormat {}
  declare class Word$WdTofFormat__wdTOFFormal mixins Word$WdTofFormat {}
  declare class Word$WdTofFormat__wdTOFSimple mixins Word$WdTofFormat {}
  declare class Word$WdTofFormat__wdTOFTemplate mixins Word$WdTofFormat {}

  declare class Word$WdTrailingCharacter {
    constructor(...args: empty): mixed;
    static +wdTrailingNone: Class<Word$WdTrailingCharacter__wdTrailingNone> &
      Word$WdTrailingCharacter__wdTrailingNone &
      2; // 2
    static +wdTrailingSpace: Class<Word$WdTrailingCharacter__wdTrailingSpace> &
      Word$WdTrailingCharacter__wdTrailingSpace &
      1; // 1
    static +wdTrailingTab: Class<Word$WdTrailingCharacter__wdTrailingTab> &
      Word$WdTrailingCharacter__wdTrailingTab &
      0; // 0
  }

  declare class Word$WdTrailingCharacter__wdTrailingNone
    mixins Word$WdTrailingCharacter {}
  declare class Word$WdTrailingCharacter__wdTrailingSpace
    mixins Word$WdTrailingCharacter {}
  declare class Word$WdTrailingCharacter__wdTrailingTab
    mixins Word$WdTrailingCharacter {}

  declare class Word$WdTwoLinesInOneType {
    constructor(...args: empty): mixed;
    static +wdTwoLinesInOneAngleBrackets: Class<Word$WdTwoLinesInOneType__wdTwoLinesInOneAngleBrackets> &
      Word$WdTwoLinesInOneType__wdTwoLinesInOneAngleBrackets &
      4; // 4
    static +wdTwoLinesInOneCurlyBrackets: Class<Word$WdTwoLinesInOneType__wdTwoLinesInOneCurlyBrackets> &
      Word$WdTwoLinesInOneType__wdTwoLinesInOneCurlyBrackets &
      5; // 5
    static +wdTwoLinesInOneNoBrackets: Class<Word$WdTwoLinesInOneType__wdTwoLinesInOneNoBrackets> &
      Word$WdTwoLinesInOneType__wdTwoLinesInOneNoBrackets &
      1; // 1
    static +wdTwoLinesInOneNone: Class<Word$WdTwoLinesInOneType__wdTwoLinesInOneNone> &
      Word$WdTwoLinesInOneType__wdTwoLinesInOneNone &
      0; // 0
    static +wdTwoLinesInOneParentheses: Class<Word$WdTwoLinesInOneType__wdTwoLinesInOneParentheses> &
      Word$WdTwoLinesInOneType__wdTwoLinesInOneParentheses &
      2; // 2
    static +wdTwoLinesInOneSquareBrackets: Class<Word$WdTwoLinesInOneType__wdTwoLinesInOneSquareBrackets> &
      Word$WdTwoLinesInOneType__wdTwoLinesInOneSquareBrackets &
      3; // 3
  }

  declare class Word$WdTwoLinesInOneType__wdTwoLinesInOneAngleBrackets
    mixins Word$WdTwoLinesInOneType {}
  declare class Word$WdTwoLinesInOneType__wdTwoLinesInOneCurlyBrackets
    mixins Word$WdTwoLinesInOneType {}
  declare class Word$WdTwoLinesInOneType__wdTwoLinesInOneNoBrackets
    mixins Word$WdTwoLinesInOneType {}
  declare class Word$WdTwoLinesInOneType__wdTwoLinesInOneNone
    mixins Word$WdTwoLinesInOneType {}
  declare class Word$WdTwoLinesInOneType__wdTwoLinesInOneParentheses
    mixins Word$WdTwoLinesInOneType {}
  declare class Word$WdTwoLinesInOneType__wdTwoLinesInOneSquareBrackets
    mixins Word$WdTwoLinesInOneType {}

  declare class Word$WdUnderline {
    constructor(...args: empty): mixed;
    static +wdUnderlineDash: Class<Word$WdUnderline__wdUnderlineDash> &
      Word$WdUnderline__wdUnderlineDash &
      7; // 7
    static +wdUnderlineDashHeavy: Class<Word$WdUnderline__wdUnderlineDashHeavy> &
      Word$WdUnderline__wdUnderlineDashHeavy &
      23; // 23
    static +wdUnderlineDashLong: Class<Word$WdUnderline__wdUnderlineDashLong> &
      Word$WdUnderline__wdUnderlineDashLong &
      39; // 39
    static +wdUnderlineDashLongHeavy: Class<Word$WdUnderline__wdUnderlineDashLongHeavy> &
      Word$WdUnderline__wdUnderlineDashLongHeavy &
      55; // 55
    static +wdUnderlineDotDash: Class<Word$WdUnderline__wdUnderlineDotDash> &
      Word$WdUnderline__wdUnderlineDotDash &
      9; // 9
    static +wdUnderlineDotDashHeavy: Class<Word$WdUnderline__wdUnderlineDotDashHeavy> &
      Word$WdUnderline__wdUnderlineDotDashHeavy &
      25; // 25
    static +wdUnderlineDotDotDash: Class<Word$WdUnderline__wdUnderlineDotDotDash> &
      Word$WdUnderline__wdUnderlineDotDotDash &
      10; // 10
    static +wdUnderlineDotDotDashHeavy: Class<Word$WdUnderline__wdUnderlineDotDotDashHeavy> &
      Word$WdUnderline__wdUnderlineDotDotDashHeavy &
      26; // 26
    static +wdUnderlineDotted: Class<Word$WdUnderline__wdUnderlineDotted> &
      Word$WdUnderline__wdUnderlineDotted &
      4; // 4
    static +wdUnderlineDottedHeavy: Class<Word$WdUnderline__wdUnderlineDottedHeavy> &
      Word$WdUnderline__wdUnderlineDottedHeavy &
      20; // 20
    static +wdUnderlineDouble: Class<Word$WdUnderline__wdUnderlineDouble> &
      Word$WdUnderline__wdUnderlineDouble &
      3; // 3
    static +wdUnderlineNone: Class<Word$WdUnderline__wdUnderlineNone> &
      Word$WdUnderline__wdUnderlineNone &
      0; // 0
    static +wdUnderlineSingle: Class<Word$WdUnderline__wdUnderlineSingle> &
      Word$WdUnderline__wdUnderlineSingle &
      1; // 1
    static +wdUnderlineThick: Class<Word$WdUnderline__wdUnderlineThick> &
      Word$WdUnderline__wdUnderlineThick &
      6; // 6
    static +wdUnderlineWavy: Class<Word$WdUnderline__wdUnderlineWavy> &
      Word$WdUnderline__wdUnderlineWavy &
      11; // 11
    static +wdUnderlineWavyDouble: Class<Word$WdUnderline__wdUnderlineWavyDouble> &
      Word$WdUnderline__wdUnderlineWavyDouble &
      43; // 43
    static +wdUnderlineWavyHeavy: Class<Word$WdUnderline__wdUnderlineWavyHeavy> &
      Word$WdUnderline__wdUnderlineWavyHeavy &
      27; // 27
    static +wdUnderlineWords: Class<Word$WdUnderline__wdUnderlineWords> &
      Word$WdUnderline__wdUnderlineWords &
      2; // 2
  }

  declare class Word$WdUnderline__wdUnderlineDash mixins Word$WdUnderline {}
  declare class Word$WdUnderline__wdUnderlineDashHeavy
    mixins Word$WdUnderline {}
  declare class Word$WdUnderline__wdUnderlineDashLong mixins Word$WdUnderline {}
  declare class Word$WdUnderline__wdUnderlineDashLongHeavy
    mixins Word$WdUnderline {}
  declare class Word$WdUnderline__wdUnderlineDotDash mixins Word$WdUnderline {}
  declare class Word$WdUnderline__wdUnderlineDotDashHeavy
    mixins Word$WdUnderline {}
  declare class Word$WdUnderline__wdUnderlineDotDotDash
    mixins Word$WdUnderline {}
  declare class Word$WdUnderline__wdUnderlineDotDotDashHeavy
    mixins Word$WdUnderline {}
  declare class Word$WdUnderline__wdUnderlineDotted mixins Word$WdUnderline {}
  declare class Word$WdUnderline__wdUnderlineDottedHeavy
    mixins Word$WdUnderline {}
  declare class Word$WdUnderline__wdUnderlineDouble mixins Word$WdUnderline {}
  declare class Word$WdUnderline__wdUnderlineNone mixins Word$WdUnderline {}
  declare class Word$WdUnderline__wdUnderlineSingle mixins Word$WdUnderline {}
  declare class Word$WdUnderline__wdUnderlineThick mixins Word$WdUnderline {}
  declare class Word$WdUnderline__wdUnderlineWavy mixins Word$WdUnderline {}
  declare class Word$WdUnderline__wdUnderlineWavyDouble
    mixins Word$WdUnderline {}
  declare class Word$WdUnderline__wdUnderlineWavyHeavy
    mixins Word$WdUnderline {}
  declare class Word$WdUnderline__wdUnderlineWords mixins Word$WdUnderline {}

  declare class Word$WdUnits {
    constructor(...args: empty): mixed;
    static +wdCell: Class<Word$WdUnits__wdCell> & Word$WdUnits__wdCell & 12; // 12
    static +wdCharacter: Class<Word$WdUnits__wdCharacter> &
      Word$WdUnits__wdCharacter &
      1; // 1
    static +wdCharacterFormatting: Class<Word$WdUnits__wdCharacterFormatting> &
      Word$WdUnits__wdCharacterFormatting &
      13; // 13
    static +wdColumn: Class<Word$WdUnits__wdColumn> &
      Word$WdUnits__wdColumn &
      9; // 9
    static +wdItem: Class<Word$WdUnits__wdItem> & Word$WdUnits__wdItem & 16; // 16
    static +wdLine: Class<Word$WdUnits__wdLine> & Word$WdUnits__wdLine & 5; // 5
    static +wdParagraph: Class<Word$WdUnits__wdParagraph> &
      Word$WdUnits__wdParagraph &
      4; // 4
    static +wdParagraphFormatting: Class<Word$WdUnits__wdParagraphFormatting> &
      Word$WdUnits__wdParagraphFormatting &
      14; // 14
    static +wdRow: Class<Word$WdUnits__wdRow> & Word$WdUnits__wdRow & 10; // 10
    static +wdScreen: Class<Word$WdUnits__wdScreen> &
      Word$WdUnits__wdScreen &
      7; // 7
    static +wdSection: Class<Word$WdUnits__wdSection> &
      Word$WdUnits__wdSection &
      8; // 8
    static +wdSentence: Class<Word$WdUnits__wdSentence> &
      Word$WdUnits__wdSentence &
      3; // 3
    static +wdStory: Class<Word$WdUnits__wdStory> & Word$WdUnits__wdStory & 6; // 6
    static +wdTable: Class<Word$WdUnits__wdTable> & Word$WdUnits__wdTable & 15; // 15
    static +wdWindow: Class<Word$WdUnits__wdWindow> &
      Word$WdUnits__wdWindow &
      11; // 11
    static +wdWord: Class<Word$WdUnits__wdWord> & Word$WdUnits__wdWord & 2; // 2
  }

  declare class Word$WdUnits__wdCell mixins Word$WdUnits {}
  declare class Word$WdUnits__wdCharacter mixins Word$WdUnits {}
  declare class Word$WdUnits__wdCharacterFormatting mixins Word$WdUnits {}
  declare class Word$WdUnits__wdColumn mixins Word$WdUnits {}
  declare class Word$WdUnits__wdItem mixins Word$WdUnits {}
  declare class Word$WdUnits__wdLine mixins Word$WdUnits {}
  declare class Word$WdUnits__wdParagraph mixins Word$WdUnits {}
  declare class Word$WdUnits__wdParagraphFormatting mixins Word$WdUnits {}
  declare class Word$WdUnits__wdRow mixins Word$WdUnits {}
  declare class Word$WdUnits__wdScreen mixins Word$WdUnits {}
  declare class Word$WdUnits__wdSection mixins Word$WdUnits {}
  declare class Word$WdUnits__wdSentence mixins Word$WdUnits {}
  declare class Word$WdUnits__wdStory mixins Word$WdUnits {}
  declare class Word$WdUnits__wdTable mixins Word$WdUnits {}
  declare class Word$WdUnits__wdWindow mixins Word$WdUnits {}
  declare class Word$WdUnits__wdWord mixins Word$WdUnits {}

  declare class Word$WdUpdateStyleListBehavior {
    constructor(...args: empty): mixed;
    static +wdListBehaviorAddBulletsNumbering: Class<Word$WdUpdateStyleListBehavior__wdListBehaviorAddBulletsNumbering> &
      Word$WdUpdateStyleListBehavior__wdListBehaviorAddBulletsNumbering &
      1; // 1
    static +wdListBehaviorKeepPreviousPattern: Class<Word$WdUpdateStyleListBehavior__wdListBehaviorKeepPreviousPattern> &
      Word$WdUpdateStyleListBehavior__wdListBehaviorKeepPreviousPattern &
      0; // 0
  }

  declare class Word$WdUpdateStyleListBehavior__wdListBehaviorAddBulletsNumbering
    mixins Word$WdUpdateStyleListBehavior {}
  declare class Word$WdUpdateStyleListBehavior__wdListBehaviorKeepPreviousPattern
    mixins Word$WdUpdateStyleListBehavior {}

  declare class Word$WdUseFormattingFrom {
    constructor(...args: empty): mixed;
    static +wdFormattingFromCurrent: Class<Word$WdUseFormattingFrom__wdFormattingFromCurrent> &
      Word$WdUseFormattingFrom__wdFormattingFromCurrent &
      0; // 0
    static +wdFormattingFromPrompt: Class<Word$WdUseFormattingFrom__wdFormattingFromPrompt> &
      Word$WdUseFormattingFrom__wdFormattingFromPrompt &
      2; // 2
    static +wdFormattingFromSelected: Class<Word$WdUseFormattingFrom__wdFormattingFromSelected> &
      Word$WdUseFormattingFrom__wdFormattingFromSelected &
      1; // 1
  }

  declare class Word$WdUseFormattingFrom__wdFormattingFromCurrent
    mixins Word$WdUseFormattingFrom {}
  declare class Word$WdUseFormattingFrom__wdFormattingFromPrompt
    mixins Word$WdUseFormattingFrom {}
  declare class Word$WdUseFormattingFrom__wdFormattingFromSelected
    mixins Word$WdUseFormattingFrom {}

  declare class Word$WdVerticalAlignment {
    constructor(...args: empty): mixed;
    static +wdAlignVerticalBottom: Class<Word$WdVerticalAlignment__wdAlignVerticalBottom> &
      Word$WdVerticalAlignment__wdAlignVerticalBottom &
      3; // 3
    static +wdAlignVerticalCenter: Class<Word$WdVerticalAlignment__wdAlignVerticalCenter> &
      Word$WdVerticalAlignment__wdAlignVerticalCenter &
      1; // 1
    static +wdAlignVerticalJustify: Class<Word$WdVerticalAlignment__wdAlignVerticalJustify> &
      Word$WdVerticalAlignment__wdAlignVerticalJustify &
      2; // 2
    static +wdAlignVerticalTop: Class<Word$WdVerticalAlignment__wdAlignVerticalTop> &
      Word$WdVerticalAlignment__wdAlignVerticalTop &
      0; // 0
  }

  declare class Word$WdVerticalAlignment__wdAlignVerticalBottom
    mixins Word$WdVerticalAlignment {}
  declare class Word$WdVerticalAlignment__wdAlignVerticalCenter
    mixins Word$WdVerticalAlignment {}
  declare class Word$WdVerticalAlignment__wdAlignVerticalJustify
    mixins Word$WdVerticalAlignment {}
  declare class Word$WdVerticalAlignment__wdAlignVerticalTop
    mixins Word$WdVerticalAlignment {}

  declare class Word$WdViewType {
    constructor(...args: empty): mixed;
    static +wdConflictView: Class<Word$WdViewType__wdConflictView> &
      Word$WdViewType__wdConflictView &
      8; // 8
    static +wdMasterView: Class<Word$WdViewType__wdMasterView> &
      Word$WdViewType__wdMasterView &
      5; // 5
    static +wdNormalView: Class<Word$WdViewType__wdNormalView> &
      Word$WdViewType__wdNormalView &
      1; // 1
    static +wdOutlineView: Class<Word$WdViewType__wdOutlineView> &
      Word$WdViewType__wdOutlineView &
      2; // 2
    static +wdPrintPreview: Class<Word$WdViewType__wdPrintPreview> &
      Word$WdViewType__wdPrintPreview &
      4; // 4
    static +wdPrintView: Class<Word$WdViewType__wdPrintView> &
      Word$WdViewType__wdPrintView &
      3; // 3
    static +wdReadingView: Class<Word$WdViewType__wdReadingView> &
      Word$WdViewType__wdReadingView &
      7; // 7
    static +wdWebView: Class<Word$WdViewType__wdWebView> &
      Word$WdViewType__wdWebView &
      6; // 6
  }

  declare class Word$WdViewType__wdConflictView mixins Word$WdViewType {}
  declare class Word$WdViewType__wdMasterView mixins Word$WdViewType {}
  declare class Word$WdViewType__wdNormalView mixins Word$WdViewType {}
  declare class Word$WdViewType__wdOutlineView mixins Word$WdViewType {}
  declare class Word$WdViewType__wdPrintPreview mixins Word$WdViewType {}
  declare class Word$WdViewType__wdPrintView mixins Word$WdViewType {}
  declare class Word$WdViewType__wdReadingView mixins Word$WdViewType {}
  declare class Word$WdViewType__wdWebView mixins Word$WdViewType {}

  declare class Word$WdViewTypeOld {
    constructor(...args: empty): mixed;
    static +wdOnlineView: Class<Word$WdViewTypeOld__wdOnlineView> &
      Word$WdViewTypeOld__wdOnlineView &
      6; // 6
    static +wdPageView: Class<Word$WdViewTypeOld__wdPageView> &
      Word$WdViewTypeOld__wdPageView &
      3; // 3
  }

  declare class Word$WdViewTypeOld__wdOnlineView mixins Word$WdViewTypeOld {}
  declare class Word$WdViewTypeOld__wdPageView mixins Word$WdViewTypeOld {}

  declare class Word$WdVisualSelection {
    constructor(...args: empty): mixed;
    static +wdVisualSelectionBlock: Class<Word$WdVisualSelection__wdVisualSelectionBlock> &
      Word$WdVisualSelection__wdVisualSelectionBlock &
      0; // 0
    static +wdVisualSelectionContinuous: Class<Word$WdVisualSelection__wdVisualSelectionContinuous> &
      Word$WdVisualSelection__wdVisualSelectionContinuous &
      1; // 1
  }

  declare class Word$WdVisualSelection__wdVisualSelectionBlock
    mixins Word$WdVisualSelection {}
  declare class Word$WdVisualSelection__wdVisualSelectionContinuous
    mixins Word$WdVisualSelection {}

  declare class Word$WdWindowState {
    constructor(...args: empty): mixed;
    static +wdWindowStateMaximize: Class<Word$WdWindowState__wdWindowStateMaximize> &
      Word$WdWindowState__wdWindowStateMaximize &
      1; // 1
    static +wdWindowStateMinimize: Class<Word$WdWindowState__wdWindowStateMinimize> &
      Word$WdWindowState__wdWindowStateMinimize &
      2; // 2
    static +wdWindowStateNormal: Class<Word$WdWindowState__wdWindowStateNormal> &
      Word$WdWindowState__wdWindowStateNormal &
      0; // 0
  }

  declare class Word$WdWindowState__wdWindowStateMaximize
    mixins Word$WdWindowState {}
  declare class Word$WdWindowState__wdWindowStateMinimize
    mixins Word$WdWindowState {}
  declare class Word$WdWindowState__wdWindowStateNormal
    mixins Word$WdWindowState {}

  declare class Word$WdWindowType {
    constructor(...args: empty): mixed;
    static +wdWindowDocument: Class<Word$WdWindowType__wdWindowDocument> &
      Word$WdWindowType__wdWindowDocument &
      0; // 0
    static +wdWindowTemplate: Class<Word$WdWindowType__wdWindowTemplate> &
      Word$WdWindowType__wdWindowTemplate &
      1; // 1
  }

  declare class Word$WdWindowType__wdWindowDocument mixins Word$WdWindowType {}
  declare class Word$WdWindowType__wdWindowTemplate mixins Word$WdWindowType {}

  declare class Word$WdWordDialog {
    constructor(...args: empty): mixed;
    static +wdDialogBuildingBlockOrganizer: Class<Word$WdWordDialog__wdDialogBuildingBlockOrganizer> &
      Word$WdWordDialog__wdDialogBuildingBlockOrganizer &
      2067; // 2067
    static +wdDialogCompatibilityChecker: Class<Word$WdWordDialog__wdDialogCompatibilityChecker> &
      Word$WdWordDialog__wdDialogCompatibilityChecker &
      2439; // 2439
    static +wdDialogConnect: Class<Word$WdWordDialog__wdDialogConnect> &
      Word$WdWordDialog__wdDialogConnect &
      420; // 420
    static +wdDialogConsistencyChecker: Class<Word$WdWordDialog__wdDialogConsistencyChecker> &
      Word$WdWordDialog__wdDialogConsistencyChecker &
      1121; // 1121
    static +wdDialogContentControlProperties: Class<Word$WdWordDialog__wdDialogContentControlProperties> &
      Word$WdWordDialog__wdDialogContentControlProperties &
      2394; // 2394
    static +wdDialogControlRun: Class<Word$WdWordDialog__wdDialogControlRun> &
      Word$WdWordDialog__wdDialogControlRun &
      235; // 235
    static +wdDialogConvertObject: Class<Word$WdWordDialog__wdDialogConvertObject> &
      Word$WdWordDialog__wdDialogConvertObject &
      392; // 392
    static +wdDialogCopyFile: Class<Word$WdWordDialog__wdDialogCopyFile> &
      Word$WdWordDialog__wdDialogCopyFile &
      300; // 300
    static +wdDialogCreateAutoText: Class<Word$WdWordDialog__wdDialogCreateAutoText> &
      Word$WdWordDialog__wdDialogCreateAutoText &
      872; // 872
    static +wdDialogCreateSource: Class<Word$WdWordDialog__wdDialogCreateSource> &
      Word$WdWordDialog__wdDialogCreateSource &
      1922; // 1922
    static +wdDialogCSSLinks: Class<Word$WdWordDialog__wdDialogCSSLinks> &
      Word$WdWordDialog__wdDialogCSSLinks &
      1261; // 1261
    static +wdDialogDocumentInspector: Class<Word$WdWordDialog__wdDialogDocumentInspector> &
      Word$WdWordDialog__wdDialogDocumentInspector &
      1482; // 1482
    static +wdDialogDocumentStatistics: Class<Word$WdWordDialog__wdDialogDocumentStatistics> &
      Word$WdWordDialog__wdDialogDocumentStatistics &
      78; // 78
    static +wdDialogDrawAlign: Class<Word$WdWordDialog__wdDialogDrawAlign> &
      Word$WdWordDialog__wdDialogDrawAlign &
      634; // 634
    static +wdDialogDrawSnapToGrid: Class<Word$WdWordDialog__wdDialogDrawSnapToGrid> &
      Word$WdWordDialog__wdDialogDrawSnapToGrid &
      633; // 633
    static +wdDialogEditAutoText: Class<Word$WdWordDialog__wdDialogEditAutoText> &
      Word$WdWordDialog__wdDialogEditAutoText &
      985; // 985
    static +wdDialogEditCreatePublisher: Class<Word$WdWordDialog__wdDialogEditCreatePublisher> &
      Word$WdWordDialog__wdDialogEditCreatePublisher &
      732; // 732
    static +wdDialogEditFind: Class<Word$WdWordDialog__wdDialogEditFind> &
      Word$WdWordDialog__wdDialogEditFind &
      112; // 112
    static +wdDialogEditFrame: Class<Word$WdWordDialog__wdDialogEditFrame> &
      Word$WdWordDialog__wdDialogEditFrame &
      458; // 458
    static +wdDialogEditGoTo: Class<Word$WdWordDialog__wdDialogEditGoTo> &
      Word$WdWordDialog__wdDialogEditGoTo &
      896; // 896
    static +wdDialogEditGoToOld: Class<Word$WdWordDialog__wdDialogEditGoToOld> &
      Word$WdWordDialog__wdDialogEditGoToOld &
      811; // 811
    static +wdDialogEditLinks: Class<Word$WdWordDialog__wdDialogEditLinks> &
      Word$WdWordDialog__wdDialogEditLinks &
      124; // 124
    static +wdDialogEditObject: Class<Word$WdWordDialog__wdDialogEditObject> &
      Word$WdWordDialog__wdDialogEditObject &
      125; // 125
    static +wdDialogEditPasteSpecial: Class<Word$WdWordDialog__wdDialogEditPasteSpecial> &
      Word$WdWordDialog__wdDialogEditPasteSpecial &
      111; // 111
    static +wdDialogEditPublishOptions: Class<Word$WdWordDialog__wdDialogEditPublishOptions> &
      Word$WdWordDialog__wdDialogEditPublishOptions &
      735; // 735
    static +wdDialogEditReplace: Class<Word$WdWordDialog__wdDialogEditReplace> &
      Word$WdWordDialog__wdDialogEditReplace &
      117; // 117
    static +wdDialogEditStyle: Class<Word$WdWordDialog__wdDialogEditStyle> &
      Word$WdWordDialog__wdDialogEditStyle &
      120; // 120
    static +wdDialogEditSubscribeOptions: Class<Word$WdWordDialog__wdDialogEditSubscribeOptions> &
      Word$WdWordDialog__wdDialogEditSubscribeOptions &
      736; // 736
    static +wdDialogEditSubscribeTo: Class<Word$WdWordDialog__wdDialogEditSubscribeTo> &
      Word$WdWordDialog__wdDialogEditSubscribeTo &
      733; // 733
    static +wdDialogEditTOACategory: Class<Word$WdWordDialog__wdDialogEditTOACategory> &
      Word$WdWordDialog__wdDialogEditTOACategory &
      625; // 625
    static +wdDialogEmailOptions: Class<Word$WdWordDialog__wdDialogEmailOptions> &
      Word$WdWordDialog__wdDialogEmailOptions &
      863; // 863
    static +wdDialogExportAsFixedFormat: Class<Word$WdWordDialog__wdDialogExportAsFixedFormat> &
      Word$WdWordDialog__wdDialogExportAsFixedFormat &
      2349; // 2349
    static +wdDialogFileDocumentLayout: Class<Word$WdWordDialog__wdDialogFileDocumentLayout> &
      Word$WdWordDialog__wdDialogFileDocumentLayout &
      178; // 178
    static +wdDialogFileFind: Class<Word$WdWordDialog__wdDialogFileFind> &
      Word$WdWordDialog__wdDialogFileFind &
      99; // 99
    static +wdDialogFileMacCustomPageSetupGX: Class<Word$WdWordDialog__wdDialogFileMacCustomPageSetupGX> &
      Word$WdWordDialog__wdDialogFileMacCustomPageSetupGX &
      737; // 737
    static +wdDialogFileMacPageSetup: Class<Word$WdWordDialog__wdDialogFileMacPageSetup> &
      Word$WdWordDialog__wdDialogFileMacPageSetup &
      685; // 685
    static +wdDialogFileMacPageSetupGX: Class<Word$WdWordDialog__wdDialogFileMacPageSetupGX> &
      Word$WdWordDialog__wdDialogFileMacPageSetupGX &
      444; // 444
    static +wdDialogFileNew: Class<Word$WdWordDialog__wdDialogFileNew> &
      Word$WdWordDialog__wdDialogFileNew &
      79; // 79
    static +wdDialogFileNew2007: Class<Word$WdWordDialog__wdDialogFileNew2007> &
      Word$WdWordDialog__wdDialogFileNew2007 &
      1116; // 1116
    static +wdDialogFileOpen: Class<Word$WdWordDialog__wdDialogFileOpen> &
      Word$WdWordDialog__wdDialogFileOpen &
      80; // 80
    static +wdDialogFilePageSetup: Class<Word$WdWordDialog__wdDialogFilePageSetup> &
      Word$WdWordDialog__wdDialogFilePageSetup &
      178; // 178
    static +wdDialogFilePrint: Class<Word$WdWordDialog__wdDialogFilePrint> &
      Word$WdWordDialog__wdDialogFilePrint &
      88; // 88
    static +wdDialogFilePrintOneCopy: Class<Word$WdWordDialog__wdDialogFilePrintOneCopy> &
      Word$WdWordDialog__wdDialogFilePrintOneCopy &
      445; // 445
    static +wdDialogFilePrintSetup: Class<Word$WdWordDialog__wdDialogFilePrintSetup> &
      Word$WdWordDialog__wdDialogFilePrintSetup &
      97; // 97
    static +wdDialogFileRoutingSlip: Class<Word$WdWordDialog__wdDialogFileRoutingSlip> &
      Word$WdWordDialog__wdDialogFileRoutingSlip &
      624; // 624
    static +wdDialogFileSaveAs: Class<Word$WdWordDialog__wdDialogFileSaveAs> &
      Word$WdWordDialog__wdDialogFileSaveAs &
      84; // 84
    static +wdDialogFileSaveVersion: Class<Word$WdWordDialog__wdDialogFileSaveVersion> &
      Word$WdWordDialog__wdDialogFileSaveVersion &
      1007; // 1007
    static +wdDialogFileSummaryInfo: Class<Word$WdWordDialog__wdDialogFileSummaryInfo> &
      Word$WdWordDialog__wdDialogFileSummaryInfo &
      86; // 86
    static +wdDialogFileVersions: Class<Word$WdWordDialog__wdDialogFileVersions> &
      Word$WdWordDialog__wdDialogFileVersions &
      945; // 945
    static +wdDialogFitText: Class<Word$WdWordDialog__wdDialogFitText> &
      Word$WdWordDialog__wdDialogFitText &
      983; // 983
    static +wdDialogFontSubstitution: Class<Word$WdWordDialog__wdDialogFontSubstitution> &
      Word$WdWordDialog__wdDialogFontSubstitution &
      581; // 581
    static +wdDialogFormatAddrFonts: Class<Word$WdWordDialog__wdDialogFormatAddrFonts> &
      Word$WdWordDialog__wdDialogFormatAddrFonts &
      103; // 103
    static +wdDialogFormatBordersAndShading: Class<Word$WdWordDialog__wdDialogFormatBordersAndShading> &
      Word$WdWordDialog__wdDialogFormatBordersAndShading &
      189; // 189
    static +wdDialogFormatBulletsAndNumbering: Class<Word$WdWordDialog__wdDialogFormatBulletsAndNumbering> &
      Word$WdWordDialog__wdDialogFormatBulletsAndNumbering &
      824; // 824
    static +wdDialogFormatCallout: Class<Word$WdWordDialog__wdDialogFormatCallout> &
      Word$WdWordDialog__wdDialogFormatCallout &
      610; // 610
    static +wdDialogFormatChangeCase: Class<Word$WdWordDialog__wdDialogFormatChangeCase> &
      Word$WdWordDialog__wdDialogFormatChangeCase &
      322; // 322
    static +wdDialogFormatColumns: Class<Word$WdWordDialog__wdDialogFormatColumns> &
      Word$WdWordDialog__wdDialogFormatColumns &
      177; // 177
    static +wdDialogFormatDefineStyleBorders: Class<Word$WdWordDialog__wdDialogFormatDefineStyleBorders> &
      Word$WdWordDialog__wdDialogFormatDefineStyleBorders &
      185; // 185
    static +wdDialogFormatDefineStyleFont: Class<Word$WdWordDialog__wdDialogFormatDefineStyleFont> &
      Word$WdWordDialog__wdDialogFormatDefineStyleFont &
      181; // 181
    static +wdDialogFormatDefineStyleFrame: Class<Word$WdWordDialog__wdDialogFormatDefineStyleFrame> &
      Word$WdWordDialog__wdDialogFormatDefineStyleFrame &
      184; // 184
    static +wdDialogFormatDefineStyleLang: Class<Word$WdWordDialog__wdDialogFormatDefineStyleLang> &
      Word$WdWordDialog__wdDialogFormatDefineStyleLang &
      186; // 186
    static +wdDialogFormatDefineStylePara: Class<Word$WdWordDialog__wdDialogFormatDefineStylePara> &
      Word$WdWordDialog__wdDialogFormatDefineStylePara &
      182; // 182
    static +wdDialogFormatDefineStyleTabs: Class<Word$WdWordDialog__wdDialogFormatDefineStyleTabs> &
      Word$WdWordDialog__wdDialogFormatDefineStyleTabs &
      183; // 183
    static +wdDialogFormatDrawingObject: Class<Word$WdWordDialog__wdDialogFormatDrawingObject> &
      Word$WdWordDialog__wdDialogFormatDrawingObject &
      960; // 960
    static +wdDialogFormatDropCap: Class<Word$WdWordDialog__wdDialogFormatDropCap> &
      Word$WdWordDialog__wdDialogFormatDropCap &
      488; // 488
    static +wdDialogFormatEncloseCharacters: Class<Word$WdWordDialog__wdDialogFormatEncloseCharacters> &
      Word$WdWordDialog__wdDialogFormatEncloseCharacters &
      1162; // 1162
    static +wdDialogFormatFont: Class<Word$WdWordDialog__wdDialogFormatFont> &
      Word$WdWordDialog__wdDialogFormatFont &
      174; // 174
    static +wdDialogFormatFrame: Class<Word$WdWordDialog__wdDialogFormatFrame> &
      Word$WdWordDialog__wdDialogFormatFrame &
      190; // 190
    static +wdDialogFormatPageNumber: Class<Word$WdWordDialog__wdDialogFormatPageNumber> &
      Word$WdWordDialog__wdDialogFormatPageNumber &
      298; // 298
    static +wdDialogFormatParagraph: Class<Word$WdWordDialog__wdDialogFormatParagraph> &
      Word$WdWordDialog__wdDialogFormatParagraph &
      175; // 175
    static +wdDialogFormatPicture: Class<Word$WdWordDialog__wdDialogFormatPicture> &
      Word$WdWordDialog__wdDialogFormatPicture &
      187; // 187
    static +wdDialogFormatRetAddrFonts: Class<Word$WdWordDialog__wdDialogFormatRetAddrFonts> &
      Word$WdWordDialog__wdDialogFormatRetAddrFonts &
      221; // 221
    static +wdDialogFormatSectionLayout: Class<Word$WdWordDialog__wdDialogFormatSectionLayout> &
      Word$WdWordDialog__wdDialogFormatSectionLayout &
      176; // 176
    static +wdDialogFormatStyle: Class<Word$WdWordDialog__wdDialogFormatStyle> &
      Word$WdWordDialog__wdDialogFormatStyle &
      180; // 180
    static +wdDialogFormatStyleGallery: Class<Word$WdWordDialog__wdDialogFormatStyleGallery> &
      Word$WdWordDialog__wdDialogFormatStyleGallery &
      505; // 505
    static +wdDialogFormatStylesCustom: Class<Word$WdWordDialog__wdDialogFormatStylesCustom> &
      Word$WdWordDialog__wdDialogFormatStylesCustom &
      1248; // 1248
    static +wdDialogFormatTabs: Class<Word$WdWordDialog__wdDialogFormatTabs> &
      Word$WdWordDialog__wdDialogFormatTabs &
      179; // 179
    static +wdDialogFormatTheme: Class<Word$WdWordDialog__wdDialogFormatTheme> &
      Word$WdWordDialog__wdDialogFormatTheme &
      855; // 855
    static +wdDialogFormattingRestrictions: Class<Word$WdWordDialog__wdDialogFormattingRestrictions> &
      Word$WdWordDialog__wdDialogFormattingRestrictions &
      1427; // 1427
    static +wdDialogFormFieldHelp: Class<Word$WdWordDialog__wdDialogFormFieldHelp> &
      Word$WdWordDialog__wdDialogFormFieldHelp &
      361; // 361
    static +wdDialogFormFieldOptions: Class<Word$WdWordDialog__wdDialogFormFieldOptions> &
      Word$WdWordDialog__wdDialogFormFieldOptions &
      353; // 353
    static +wdDialogFrameSetProperties: Class<Word$WdWordDialog__wdDialogFrameSetProperties> &
      Word$WdWordDialog__wdDialogFrameSetProperties &
      1074; // 1074
    static +wdDialogHelpAbout: Class<Word$WdWordDialog__wdDialogHelpAbout> &
      Word$WdWordDialog__wdDialogHelpAbout &
      9; // 9
    static +wdDialogHelpWordPerfectHelp: Class<Word$WdWordDialog__wdDialogHelpWordPerfectHelp> &
      Word$WdWordDialog__wdDialogHelpWordPerfectHelp &
      10; // 10
    static +wdDialogHelpWordPerfectHelpOptions: Class<Word$WdWordDialog__wdDialogHelpWordPerfectHelpOptions> &
      Word$WdWordDialog__wdDialogHelpWordPerfectHelpOptions &
      511; // 511
    static +wdDialogHorizontalInVertical: Class<Word$WdWordDialog__wdDialogHorizontalInVertical> &
      Word$WdWordDialog__wdDialogHorizontalInVertical &
      1160; // 1160
    static +wdDialogIMESetDefault: Class<Word$WdWordDialog__wdDialogIMESetDefault> &
      Word$WdWordDialog__wdDialogIMESetDefault &
      1094; // 1094
    static +wdDialogInsertAddCaption: Class<Word$WdWordDialog__wdDialogInsertAddCaption> &
      Word$WdWordDialog__wdDialogInsertAddCaption &
      402; // 402
    static +wdDialogInsertAutoCaption: Class<Word$WdWordDialog__wdDialogInsertAutoCaption> &
      Word$WdWordDialog__wdDialogInsertAutoCaption &
      359; // 359
    static +wdDialogInsertBookmark: Class<Word$WdWordDialog__wdDialogInsertBookmark> &
      Word$WdWordDialog__wdDialogInsertBookmark &
      168; // 168
    static +wdDialogInsertBreak: Class<Word$WdWordDialog__wdDialogInsertBreak> &
      Word$WdWordDialog__wdDialogInsertBreak &
      159; // 159
    static +wdDialogInsertCaption: Class<Word$WdWordDialog__wdDialogInsertCaption> &
      Word$WdWordDialog__wdDialogInsertCaption &
      357; // 357
    static +wdDialogInsertCaptionNumbering: Class<Word$WdWordDialog__wdDialogInsertCaptionNumbering> &
      Word$WdWordDialog__wdDialogInsertCaptionNumbering &
      358; // 358
    static +wdDialogInsertCrossReference: Class<Word$WdWordDialog__wdDialogInsertCrossReference> &
      Word$WdWordDialog__wdDialogInsertCrossReference &
      367; // 367
    static +wdDialogInsertDatabase: Class<Word$WdWordDialog__wdDialogInsertDatabase> &
      Word$WdWordDialog__wdDialogInsertDatabase &
      341; // 341
    static +wdDialogInsertDateTime: Class<Word$WdWordDialog__wdDialogInsertDateTime> &
      Word$WdWordDialog__wdDialogInsertDateTime &
      165; // 165
    static +wdDialogInsertField: Class<Word$WdWordDialog__wdDialogInsertField> &
      Word$WdWordDialog__wdDialogInsertField &
      166; // 166
    static +wdDialogInsertFile: Class<Word$WdWordDialog__wdDialogInsertFile> &
      Word$WdWordDialog__wdDialogInsertFile &
      164; // 164
    static +wdDialogInsertFootnote: Class<Word$WdWordDialog__wdDialogInsertFootnote> &
      Word$WdWordDialog__wdDialogInsertFootnote &
      370; // 370
    static +wdDialogInsertFormField: Class<Word$WdWordDialog__wdDialogInsertFormField> &
      Word$WdWordDialog__wdDialogInsertFormField &
      483; // 483
    static +wdDialogInsertHyperlink: Class<Word$WdWordDialog__wdDialogInsertHyperlink> &
      Word$WdWordDialog__wdDialogInsertHyperlink &
      925; // 925
    static +wdDialogInsertIndex: Class<Word$WdWordDialog__wdDialogInsertIndex> &
      Word$WdWordDialog__wdDialogInsertIndex &
      170; // 170
    static +wdDialogInsertIndexAndTables: Class<Word$WdWordDialog__wdDialogInsertIndexAndTables> &
      Word$WdWordDialog__wdDialogInsertIndexAndTables &
      473; // 473
    static +wdDialogInsertMergeField: Class<Word$WdWordDialog__wdDialogInsertMergeField> &
      Word$WdWordDialog__wdDialogInsertMergeField &
      167; // 167
    static +wdDialogInsertNumber: Class<Word$WdWordDialog__wdDialogInsertNumber> &
      Word$WdWordDialog__wdDialogInsertNumber &
      812; // 812
    static +wdDialogInsertObject: Class<Word$WdWordDialog__wdDialogInsertObject> &
      Word$WdWordDialog__wdDialogInsertObject &
      172; // 172
    static +wdDialogInsertPageNumbers: Class<Word$WdWordDialog__wdDialogInsertPageNumbers> &
      Word$WdWordDialog__wdDialogInsertPageNumbers &
      294; // 294
    static +wdDialogInsertPicture: Class<Word$WdWordDialog__wdDialogInsertPicture> &
      Word$WdWordDialog__wdDialogInsertPicture &
      163; // 163
    static +wdDialogInsertPlaceholder: Class<Word$WdWordDialog__wdDialogInsertPlaceholder> &
      Word$WdWordDialog__wdDialogInsertPlaceholder &
      2348; // 2348
    static +wdDialogInsertSource: Class<Word$WdWordDialog__wdDialogInsertSource> &
      Word$WdWordDialog__wdDialogInsertSource &
      2120; // 2120
    static +wdDialogInsertSubdocument: Class<Word$WdWordDialog__wdDialogInsertSubdocument> &
      Word$WdWordDialog__wdDialogInsertSubdocument &
      583; // 583
    static +wdDialogInsertSymbol: Class<Word$WdWordDialog__wdDialogInsertSymbol> &
      Word$WdWordDialog__wdDialogInsertSymbol &
      162; // 162
    static +wdDialogInsertTableOfAuthorities: Class<Word$WdWordDialog__wdDialogInsertTableOfAuthorities> &
      Word$WdWordDialog__wdDialogInsertTableOfAuthorities &
      471; // 471
    static +wdDialogInsertTableOfContents: Class<Word$WdWordDialog__wdDialogInsertTableOfContents> &
      Word$WdWordDialog__wdDialogInsertTableOfContents &
      171; // 171
    static +wdDialogInsertTableOfFigures: Class<Word$WdWordDialog__wdDialogInsertTableOfFigures> &
      Word$WdWordDialog__wdDialogInsertTableOfFigures &
      472; // 472
    static +wdDialogInsertWebComponent: Class<Word$WdWordDialog__wdDialogInsertWebComponent> &
      Word$WdWordDialog__wdDialogInsertWebComponent &
      1324; // 1324
    static +wdDialogLabelOptions: Class<Word$WdWordDialog__wdDialogLabelOptions> &
      Word$WdWordDialog__wdDialogLabelOptions &
      1367; // 1367
    static +wdDialogLetterWizard: Class<Word$WdWordDialog__wdDialogLetterWizard> &
      Word$WdWordDialog__wdDialogLetterWizard &
      821; // 821
    static +wdDialogListCommands: Class<Word$WdWordDialog__wdDialogListCommands> &
      Word$WdWordDialog__wdDialogListCommands &
      723; // 723
    static +wdDialogMailMerge: Class<Word$WdWordDialog__wdDialogMailMerge> &
      Word$WdWordDialog__wdDialogMailMerge &
      676; // 676
    static +wdDialogMailMergeCheck: Class<Word$WdWordDialog__wdDialogMailMergeCheck> &
      Word$WdWordDialog__wdDialogMailMergeCheck &
      677; // 677
    static +wdDialogMailMergeCreateDataSource: Class<Word$WdWordDialog__wdDialogMailMergeCreateDataSource> &
      Word$WdWordDialog__wdDialogMailMergeCreateDataSource &
      642; // 642
    static +wdDialogMailMergeCreateHeaderSource: Class<Word$WdWordDialog__wdDialogMailMergeCreateHeaderSource> &
      Word$WdWordDialog__wdDialogMailMergeCreateHeaderSource &
      643; // 643
    static +wdDialogMailMergeFieldMapping: Class<Word$WdWordDialog__wdDialogMailMergeFieldMapping> &
      Word$WdWordDialog__wdDialogMailMergeFieldMapping &
      1304; // 1304
    static +wdDialogMailMergeFindRecipient: Class<Word$WdWordDialog__wdDialogMailMergeFindRecipient> &
      Word$WdWordDialog__wdDialogMailMergeFindRecipient &
      1326; // 1326
    static +wdDialogMailMergeFindRecord: Class<Word$WdWordDialog__wdDialogMailMergeFindRecord> &
      Word$WdWordDialog__wdDialogMailMergeFindRecord &
      569; // 569
    static +wdDialogMailMergeHelper: Class<Word$WdWordDialog__wdDialogMailMergeHelper> &
      Word$WdWordDialog__wdDialogMailMergeHelper &
      680; // 680
    static +wdDialogMailMergeInsertAddressBlock: Class<Word$WdWordDialog__wdDialogMailMergeInsertAddressBlock> &
      Word$WdWordDialog__wdDialogMailMergeInsertAddressBlock &
      1305; // 1305
    static +wdDialogMailMergeInsertAsk: Class<Word$WdWordDialog__wdDialogMailMergeInsertAsk> &
      Word$WdWordDialog__wdDialogMailMergeInsertAsk &
      4047; // 4047
    static +wdDialogMailMergeInsertFields: Class<Word$WdWordDialog__wdDialogMailMergeInsertFields> &
      Word$WdWordDialog__wdDialogMailMergeInsertFields &
      1307; // 1307
    static +wdDialogMailMergeInsertFillIn: Class<Word$WdWordDialog__wdDialogMailMergeInsertFillIn> &
      Word$WdWordDialog__wdDialogMailMergeInsertFillIn &
      4048; // 4048
    static +wdDialogMailMergeInsertGreetingLine: Class<Word$WdWordDialog__wdDialogMailMergeInsertGreetingLine> &
      Word$WdWordDialog__wdDialogMailMergeInsertGreetingLine &
      1306; // 1306
    static +wdDialogMailMergeInsertIf: Class<Word$WdWordDialog__wdDialogMailMergeInsertIf> &
      Word$WdWordDialog__wdDialogMailMergeInsertIf &
      4049; // 4049
    static +wdDialogMailMergeInsertNextIf: Class<Word$WdWordDialog__wdDialogMailMergeInsertNextIf> &
      Word$WdWordDialog__wdDialogMailMergeInsertNextIf &
      4053; // 4053
    static +wdDialogMailMergeInsertSet: Class<Word$WdWordDialog__wdDialogMailMergeInsertSet> &
      Word$WdWordDialog__wdDialogMailMergeInsertSet &
      4054; // 4054
    static +wdDialogMailMergeInsertSkipIf: Class<Word$WdWordDialog__wdDialogMailMergeInsertSkipIf> &
      Word$WdWordDialog__wdDialogMailMergeInsertSkipIf &
      4055; // 4055
    static +wdDialogMailMergeOpenDataSource: Class<Word$WdWordDialog__wdDialogMailMergeOpenDataSource> &
      Word$WdWordDialog__wdDialogMailMergeOpenDataSource &
      81; // 81
    static +wdDialogMailMergeOpenHeaderSource: Class<Word$WdWordDialog__wdDialogMailMergeOpenHeaderSource> &
      Word$WdWordDialog__wdDialogMailMergeOpenHeaderSource &
      82; // 82
    static +wdDialogMailMergeQueryOptions: Class<Word$WdWordDialog__wdDialogMailMergeQueryOptions> &
      Word$WdWordDialog__wdDialogMailMergeQueryOptions &
      681; // 681
    static +wdDialogMailMergeRecipients: Class<Word$WdWordDialog__wdDialogMailMergeRecipients> &
      Word$WdWordDialog__wdDialogMailMergeRecipients &
      1308; // 1308
    static +wdDialogMailMergeSetDocumentType: Class<Word$WdWordDialog__wdDialogMailMergeSetDocumentType> &
      Word$WdWordDialog__wdDialogMailMergeSetDocumentType &
      1339; // 1339
    static +wdDialogMailMergeUseAddressBook: Class<Word$WdWordDialog__wdDialogMailMergeUseAddressBook> &
      Word$WdWordDialog__wdDialogMailMergeUseAddressBook &
      779; // 779
    static +wdDialogMarkCitation: Class<Word$WdWordDialog__wdDialogMarkCitation> &
      Word$WdWordDialog__wdDialogMarkCitation &
      463; // 463
    static +wdDialogMarkIndexEntry: Class<Word$WdWordDialog__wdDialogMarkIndexEntry> &
      Word$WdWordDialog__wdDialogMarkIndexEntry &
      169; // 169
    static +wdDialogMarkTableOfContentsEntry: Class<Word$WdWordDialog__wdDialogMarkTableOfContentsEntry> &
      Word$WdWordDialog__wdDialogMarkTableOfContentsEntry &
      442; // 442
    static +wdDialogMyPermission: Class<Word$WdWordDialog__wdDialogMyPermission> &
      Word$WdWordDialog__wdDialogMyPermission &
      1437; // 1437
    static +wdDialogNewToolbar: Class<Word$WdWordDialog__wdDialogNewToolbar> &
      Word$WdWordDialog__wdDialogNewToolbar &
      586; // 586
    static +wdDialogNoteOptions: Class<Word$WdWordDialog__wdDialogNoteOptions> &
      Word$WdWordDialog__wdDialogNoteOptions &
      373; // 373
    static +wdDialogOMathRecognizedFunctions: Class<Word$WdWordDialog__wdDialogOMathRecognizedFunctions> &
      Word$WdWordDialog__wdDialogOMathRecognizedFunctions &
      2165; // 2165
    static +wdDialogOrganizer: Class<Word$WdWordDialog__wdDialogOrganizer> &
      Word$WdWordDialog__wdDialogOrganizer &
      222; // 222
    static +wdDialogPermission: Class<Word$WdWordDialog__wdDialogPermission> &
      Word$WdWordDialog__wdDialogPermission &
      1469; // 1469
    static +wdDialogPhoneticGuide: Class<Word$WdWordDialog__wdDialogPhoneticGuide> &
      Word$WdWordDialog__wdDialogPhoneticGuide &
      986; // 986
    static +wdDialogReviewAfmtRevisions: Class<Word$WdWordDialog__wdDialogReviewAfmtRevisions> &
      Word$WdWordDialog__wdDialogReviewAfmtRevisions &
      570; // 570
    static +wdDialogSchemaLibrary: Class<Word$WdWordDialog__wdDialogSchemaLibrary> &
      Word$WdWordDialog__wdDialogSchemaLibrary &
      1417; // 1417
    static +wdDialogSearch: Class<Word$WdWordDialog__wdDialogSearch> &
      Word$WdWordDialog__wdDialogSearch &
      1363; // 1363
    static +wdDialogShowRepairs: Class<Word$WdWordDialog__wdDialogShowRepairs> &
      Word$WdWordDialog__wdDialogShowRepairs &
      1381; // 1381
    static +wdDialogSourceManager: Class<Word$WdWordDialog__wdDialogSourceManager> &
      Word$WdWordDialog__wdDialogSourceManager &
      1920; // 1920
    static +wdDialogStyleManagement: Class<Word$WdWordDialog__wdDialogStyleManagement> &
      Word$WdWordDialog__wdDialogStyleManagement &
      1948; // 1948
    static +wdDialogTableAutoFormat: Class<Word$WdWordDialog__wdDialogTableAutoFormat> &
      Word$WdWordDialog__wdDialogTableAutoFormat &
      563; // 563
    static +wdDialogTableCellOptions: Class<Word$WdWordDialog__wdDialogTableCellOptions> &
      Word$WdWordDialog__wdDialogTableCellOptions &
      1081; // 1081
    static +wdDialogTableColumnWidth: Class<Word$WdWordDialog__wdDialogTableColumnWidth> &
      Word$WdWordDialog__wdDialogTableColumnWidth &
      143; // 143
    static +wdDialogTableDeleteCells: Class<Word$WdWordDialog__wdDialogTableDeleteCells> &
      Word$WdWordDialog__wdDialogTableDeleteCells &
      133; // 133
    static +wdDialogTableFormatCell: Class<Word$WdWordDialog__wdDialogTableFormatCell> &
      Word$WdWordDialog__wdDialogTableFormatCell &
      612; // 612
    static +wdDialogTableFormula: Class<Word$WdWordDialog__wdDialogTableFormula> &
      Word$WdWordDialog__wdDialogTableFormula &
      348; // 348
    static +wdDialogTableInsertCells: Class<Word$WdWordDialog__wdDialogTableInsertCells> &
      Word$WdWordDialog__wdDialogTableInsertCells &
      130; // 130
    static +wdDialogTableInsertRow: Class<Word$WdWordDialog__wdDialogTableInsertRow> &
      Word$WdWordDialog__wdDialogTableInsertRow &
      131; // 131
    static +wdDialogTableInsertTable: Class<Word$WdWordDialog__wdDialogTableInsertTable> &
      Word$WdWordDialog__wdDialogTableInsertTable &
      129; // 129
    static +wdDialogTableOfCaptionsOptions: Class<Word$WdWordDialog__wdDialogTableOfCaptionsOptions> &
      Word$WdWordDialog__wdDialogTableOfCaptionsOptions &
      551; // 551
    static +wdDialogTableOfContentsOptions: Class<Word$WdWordDialog__wdDialogTableOfContentsOptions> &
      Word$WdWordDialog__wdDialogTableOfContentsOptions &
      470; // 470
    static +wdDialogTableProperties: Class<Word$WdWordDialog__wdDialogTableProperties> &
      Word$WdWordDialog__wdDialogTableProperties &
      861; // 861
    static +wdDialogTableRowHeight: Class<Word$WdWordDialog__wdDialogTableRowHeight> &
      Word$WdWordDialog__wdDialogTableRowHeight &
      142; // 142
    static +wdDialogTableSort: Class<Word$WdWordDialog__wdDialogTableSort> &
      Word$WdWordDialog__wdDialogTableSort &
      199; // 199
    static +wdDialogTableSplitCells: Class<Word$WdWordDialog__wdDialogTableSplitCells> &
      Word$WdWordDialog__wdDialogTableSplitCells &
      137; // 137
    static +wdDialogTableTableOptions: Class<Word$WdWordDialog__wdDialogTableTableOptions> &
      Word$WdWordDialog__wdDialogTableTableOptions &
      1080; // 1080
    static +wdDialogTableToText: Class<Word$WdWordDialog__wdDialogTableToText> &
      Word$WdWordDialog__wdDialogTableToText &
      128; // 128
    static +wdDialogTableWrapping: Class<Word$WdWordDialog__wdDialogTableWrapping> &
      Word$WdWordDialog__wdDialogTableWrapping &
      854; // 854
    static +wdDialogTCSCTranslator: Class<Word$WdWordDialog__wdDialogTCSCTranslator> &
      Word$WdWordDialog__wdDialogTCSCTranslator &
      1156; // 1156
    static +wdDialogTextToTable: Class<Word$WdWordDialog__wdDialogTextToTable> &
      Word$WdWordDialog__wdDialogTextToTable &
      127; // 127
    static +wdDialogToolsAcceptRejectChanges: Class<Word$WdWordDialog__wdDialogToolsAcceptRejectChanges> &
      Word$WdWordDialog__wdDialogToolsAcceptRejectChanges &
      506; // 506
    static +wdDialogToolsAdvancedSettings: Class<Word$WdWordDialog__wdDialogToolsAdvancedSettings> &
      Word$WdWordDialog__wdDialogToolsAdvancedSettings &
      206; // 206
    static +wdDialogToolsAutoCorrect: Class<Word$WdWordDialog__wdDialogToolsAutoCorrect> &
      Word$WdWordDialog__wdDialogToolsAutoCorrect &
      378; // 378
    static +wdDialogToolsAutoCorrectExceptions: Class<Word$WdWordDialog__wdDialogToolsAutoCorrectExceptions> &
      Word$WdWordDialog__wdDialogToolsAutoCorrectExceptions &
      762; // 762
    static +wdDialogToolsAutoManager: Class<Word$WdWordDialog__wdDialogToolsAutoManager> &
      Word$WdWordDialog__wdDialogToolsAutoManager &
      915; // 915
    static +wdDialogToolsAutoSummarize: Class<Word$WdWordDialog__wdDialogToolsAutoSummarize> &
      Word$WdWordDialog__wdDialogToolsAutoSummarize &
      874; // 874
    static +wdDialogToolsBulletsNumbers: Class<Word$WdWordDialog__wdDialogToolsBulletsNumbers> &
      Word$WdWordDialog__wdDialogToolsBulletsNumbers &
      196; // 196
    static +wdDialogToolsCompareDocuments: Class<Word$WdWordDialog__wdDialogToolsCompareDocuments> &
      Word$WdWordDialog__wdDialogToolsCompareDocuments &
      198; // 198
    static +wdDialogToolsCreateDirectory: Class<Word$WdWordDialog__wdDialogToolsCreateDirectory> &
      Word$WdWordDialog__wdDialogToolsCreateDirectory &
      833; // 833
    static +wdDialogToolsCreateEnvelope: Class<Word$WdWordDialog__wdDialogToolsCreateEnvelope> &
      Word$WdWordDialog__wdDialogToolsCreateEnvelope &
      173; // 173
    static +wdDialogToolsCreateLabels: Class<Word$WdWordDialog__wdDialogToolsCreateLabels> &
      Word$WdWordDialog__wdDialogToolsCreateLabels &
      489; // 489
    static +wdDialogToolsCustomize: Class<Word$WdWordDialog__wdDialogToolsCustomize> &
      Word$WdWordDialog__wdDialogToolsCustomize &
      152; // 152
    static +wdDialogToolsCustomizeKeyboard: Class<Word$WdWordDialog__wdDialogToolsCustomizeKeyboard> &
      Word$WdWordDialog__wdDialogToolsCustomizeKeyboard &
      432; // 432
    static +wdDialogToolsCustomizeMenuBar: Class<Word$WdWordDialog__wdDialogToolsCustomizeMenuBar> &
      Word$WdWordDialog__wdDialogToolsCustomizeMenuBar &
      615; // 615
    static +wdDialogToolsCustomizeMenus: Class<Word$WdWordDialog__wdDialogToolsCustomizeMenus> &
      Word$WdWordDialog__wdDialogToolsCustomizeMenus &
      433; // 433
    static +wdDialogToolsDictionary: Class<Word$WdWordDialog__wdDialogToolsDictionary> &
      Word$WdWordDialog__wdDialogToolsDictionary &
      989; // 989
    static +wdDialogToolsEnvelopesAndLabels: Class<Word$WdWordDialog__wdDialogToolsEnvelopesAndLabels> &
      Word$WdWordDialog__wdDialogToolsEnvelopesAndLabels &
      607; // 607
    static +wdDialogToolsGrammarSettings: Class<Word$WdWordDialog__wdDialogToolsGrammarSettings> &
      Word$WdWordDialog__wdDialogToolsGrammarSettings &
      885; // 885
    static +wdDialogToolsHangulHanjaConversion: Class<Word$WdWordDialog__wdDialogToolsHangulHanjaConversion> &
      Word$WdWordDialog__wdDialogToolsHangulHanjaConversion &
      784; // 784
    static +wdDialogToolsHighlightChanges: Class<Word$WdWordDialog__wdDialogToolsHighlightChanges> &
      Word$WdWordDialog__wdDialogToolsHighlightChanges &
      197; // 197
    static +wdDialogToolsHyphenation: Class<Word$WdWordDialog__wdDialogToolsHyphenation> &
      Word$WdWordDialog__wdDialogToolsHyphenation &
      195; // 195
    static +wdDialogToolsLanguage: Class<Word$WdWordDialog__wdDialogToolsLanguage> &
      Word$WdWordDialog__wdDialogToolsLanguage &
      188; // 188
    static +wdDialogToolsMacro: Class<Word$WdWordDialog__wdDialogToolsMacro> &
      Word$WdWordDialog__wdDialogToolsMacro &
      215; // 215
    static +wdDialogToolsMacroRecord: Class<Word$WdWordDialog__wdDialogToolsMacroRecord> &
      Word$WdWordDialog__wdDialogToolsMacroRecord &
      214; // 214
    static +wdDialogToolsManageFields: Class<Word$WdWordDialog__wdDialogToolsManageFields> &
      Word$WdWordDialog__wdDialogToolsManageFields &
      631; // 631
    static +wdDialogToolsMergeDocuments: Class<Word$WdWordDialog__wdDialogToolsMergeDocuments> &
      Word$WdWordDialog__wdDialogToolsMergeDocuments &
      435; // 435
    static +wdDialogToolsOptions: Class<Word$WdWordDialog__wdDialogToolsOptions> &
      Word$WdWordDialog__wdDialogToolsOptions &
      974; // 974
    static +wdDialogToolsOptionsAutoFormat: Class<Word$WdWordDialog__wdDialogToolsOptionsAutoFormat> &
      Word$WdWordDialog__wdDialogToolsOptionsAutoFormat &
      959; // 959
    static +wdDialogToolsOptionsAutoFormatAsYouType: Class<Word$WdWordDialog__wdDialogToolsOptionsAutoFormatAsYouType> &
      Word$WdWordDialog__wdDialogToolsOptionsAutoFormatAsYouType &
      778; // 778
    static +wdDialogToolsOptionsBidi: Class<Word$WdWordDialog__wdDialogToolsOptionsBidi> &
      Word$WdWordDialog__wdDialogToolsOptionsBidi &
      1029; // 1029
    static +wdDialogToolsOptionsCompatibility: Class<Word$WdWordDialog__wdDialogToolsOptionsCompatibility> &
      Word$WdWordDialog__wdDialogToolsOptionsCompatibility &
      525; // 525
    static +wdDialogToolsOptionsEdit: Class<Word$WdWordDialog__wdDialogToolsOptionsEdit> &
      Word$WdWordDialog__wdDialogToolsOptionsEdit &
      224; // 224
    static +wdDialogToolsOptionsEditCopyPaste: Class<Word$WdWordDialog__wdDialogToolsOptionsEditCopyPaste> &
      Word$WdWordDialog__wdDialogToolsOptionsEditCopyPaste &
      1356; // 1356
    static +wdDialogToolsOptionsFileLocations: Class<Word$WdWordDialog__wdDialogToolsOptionsFileLocations> &
      Word$WdWordDialog__wdDialogToolsOptionsFileLocations &
      225; // 225
    static +wdDialogToolsOptionsFuzzy: Class<Word$WdWordDialog__wdDialogToolsOptionsFuzzy> &
      Word$WdWordDialog__wdDialogToolsOptionsFuzzy &
      790; // 790
    static +wdDialogToolsOptionsGeneral: Class<Word$WdWordDialog__wdDialogToolsOptionsGeneral> &
      Word$WdWordDialog__wdDialogToolsOptionsGeneral &
      203; // 203
    static +wdDialogToolsOptionsPrint: Class<Word$WdWordDialog__wdDialogToolsOptionsPrint> &
      Word$WdWordDialog__wdDialogToolsOptionsPrint &
      208; // 208
    static +wdDialogToolsOptionsSave: Class<Word$WdWordDialog__wdDialogToolsOptionsSave> &
      Word$WdWordDialog__wdDialogToolsOptionsSave &
      209; // 209
    static +wdDialogToolsOptionsSecurity: Class<Word$WdWordDialog__wdDialogToolsOptionsSecurity> &
      Word$WdWordDialog__wdDialogToolsOptionsSecurity &
      1361; // 1361
    static +wdDialogToolsOptionsSmartTag: Class<Word$WdWordDialog__wdDialogToolsOptionsSmartTag> &
      Word$WdWordDialog__wdDialogToolsOptionsSmartTag &
      1395; // 1395
    static +wdDialogToolsOptionsSpellingAndGrammar: Class<Word$WdWordDialog__wdDialogToolsOptionsSpellingAndGrammar> &
      Word$WdWordDialog__wdDialogToolsOptionsSpellingAndGrammar &
      211; // 211
    static +wdDialogToolsOptionsTrackChanges: Class<Word$WdWordDialog__wdDialogToolsOptionsTrackChanges> &
      Word$WdWordDialog__wdDialogToolsOptionsTrackChanges &
      386; // 386
    static +wdDialogToolsOptionsTypography: Class<Word$WdWordDialog__wdDialogToolsOptionsTypography> &
      Word$WdWordDialog__wdDialogToolsOptionsTypography &
      739; // 739
    static +wdDialogToolsOptionsUserInfo: Class<Word$WdWordDialog__wdDialogToolsOptionsUserInfo> &
      Word$WdWordDialog__wdDialogToolsOptionsUserInfo &
      213; // 213
    static +wdDialogToolsOptionsView: Class<Word$WdWordDialog__wdDialogToolsOptionsView> &
      Word$WdWordDialog__wdDialogToolsOptionsView &
      204; // 204
    static +wdDialogToolsProtectDocument: Class<Word$WdWordDialog__wdDialogToolsProtectDocument> &
      Word$WdWordDialog__wdDialogToolsProtectDocument &
      503; // 503
    static +wdDialogToolsProtectSection: Class<Word$WdWordDialog__wdDialogToolsProtectSection> &
      Word$WdWordDialog__wdDialogToolsProtectSection &
      578; // 578
    static +wdDialogToolsRevisions: Class<Word$WdWordDialog__wdDialogToolsRevisions> &
      Word$WdWordDialog__wdDialogToolsRevisions &
      197; // 197
    static +wdDialogToolsSpellingAndGrammar: Class<Word$WdWordDialog__wdDialogToolsSpellingAndGrammar> &
      Word$WdWordDialog__wdDialogToolsSpellingAndGrammar &
      828; // 828
    static +wdDialogToolsTemplates: Class<Word$WdWordDialog__wdDialogToolsTemplates> &
      Word$WdWordDialog__wdDialogToolsTemplates &
      87; // 87
    static +wdDialogToolsThesaurus: Class<Word$WdWordDialog__wdDialogToolsThesaurus> &
      Word$WdWordDialog__wdDialogToolsThesaurus &
      194; // 194
    static +wdDialogToolsUnprotectDocument: Class<Word$WdWordDialog__wdDialogToolsUnprotectDocument> &
      Word$WdWordDialog__wdDialogToolsUnprotectDocument &
      521; // 521
    static +wdDialogToolsWordCount: Class<Word$WdWordDialog__wdDialogToolsWordCount> &
      Word$WdWordDialog__wdDialogToolsWordCount &
      228; // 228
    static +wdDialogTwoLinesInOne: Class<Word$WdWordDialog__wdDialogTwoLinesInOne> &
      Word$WdWordDialog__wdDialogTwoLinesInOne &
      1161; // 1161
    static +wdDialogUpdateTOC: Class<Word$WdWordDialog__wdDialogUpdateTOC> &
      Word$WdWordDialog__wdDialogUpdateTOC &
      331; // 331
    static +wdDialogViewZoom: Class<Word$WdWordDialog__wdDialogViewZoom> &
      Word$WdWordDialog__wdDialogViewZoom &
      577; // 577
    static +wdDialogWebOptions: Class<Word$WdWordDialog__wdDialogWebOptions> &
      Word$WdWordDialog__wdDialogWebOptions &
      898; // 898
    static +wdDialogWindowActivate: Class<Word$WdWordDialog__wdDialogWindowActivate> &
      Word$WdWordDialog__wdDialogWindowActivate &
      220; // 220
    static +wdDialogXMLElementAttributes: Class<Word$WdWordDialog__wdDialogXMLElementAttributes> &
      Word$WdWordDialog__wdDialogXMLElementAttributes &
      1460; // 1460
    static +wdDialogXMLOptions: Class<Word$WdWordDialog__wdDialogXMLOptions> &
      Word$WdWordDialog__wdDialogXMLOptions &
      1425; // 1425
  }

  declare class Word$WdWordDialog__wdDialogBuildingBlockOrganizer
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogCompatibilityChecker
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogConnect mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogConsistencyChecker
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogContentControlProperties
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogControlRun
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogConvertObject
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogCopyFile mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogCreateAutoText
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogCreateSource
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogCSSLinks mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogDocumentInspector
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogDocumentStatistics
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogDrawAlign mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogDrawSnapToGrid
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogEditAutoText
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogEditCreatePublisher
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogEditFind mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogEditFrame mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogEditGoTo mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogEditGoToOld
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogEditLinks mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogEditObject
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogEditPasteSpecial
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogEditPublishOptions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogEditReplace
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogEditStyle mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogEditSubscribeOptions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogEditSubscribeTo
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogEditTOACategory
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogEmailOptions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogExportAsFixedFormat
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFileDocumentLayout
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFileFind mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFileMacCustomPageSetupGX
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFileMacPageSetup
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFileMacPageSetupGX
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFileNew mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFileNew2007
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFileOpen mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFilePageSetup
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFilePrint mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFilePrintOneCopy
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFilePrintSetup
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFileRoutingSlip
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFileSaveAs
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFileSaveVersion
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFileSummaryInfo
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFileVersions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFitText mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFontSubstitution
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatAddrFonts
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatBordersAndShading
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatBulletsAndNumbering
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatCallout
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatChangeCase
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatColumns
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatDefineStyleBorders
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatDefineStyleFont
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatDefineStyleFrame
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatDefineStyleLang
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatDefineStylePara
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatDefineStyleTabs
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatDrawingObject
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatDropCap
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatEncloseCharacters
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatFont
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatFrame
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatPageNumber
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatParagraph
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatPicture
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatRetAddrFonts
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatSectionLayout
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatStyle
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatStyleGallery
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatStylesCustom
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatTabs
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormatTheme
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormattingRestrictions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormFieldHelp
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFormFieldOptions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogFrameSetProperties
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogHelpAbout mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogHelpWordPerfectHelp
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogHelpWordPerfectHelpOptions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogHorizontalInVertical
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogIMESetDefault
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertAddCaption
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertAutoCaption
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertBookmark
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertBreak
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertCaption
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertCaptionNumbering
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertCrossReference
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertDatabase
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertDateTime
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertField
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertFile
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertFootnote
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertFormField
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertHyperlink
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertIndex
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertIndexAndTables
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertMergeField
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertNumber
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertObject
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertPageNumbers
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertPicture
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertPlaceholder
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertSource
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertSubdocument
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertSymbol
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertTableOfAuthorities
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertTableOfContents
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertTableOfFigures
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogInsertWebComponent
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogLabelOptions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogLetterWizard
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogListCommands
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMerge mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeCheck
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeCreateDataSource
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeCreateHeaderSource
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeFieldMapping
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeFindRecipient
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeFindRecord
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeHelper
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeInsertAddressBlock
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeInsertAsk
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeInsertFields
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeInsertFillIn
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeInsertGreetingLine
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeInsertIf
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeInsertNextIf
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeInsertSet
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeInsertSkipIf
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeOpenDataSource
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeOpenHeaderSource
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeQueryOptions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeRecipients
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeSetDocumentType
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMailMergeUseAddressBook
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMarkCitation
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMarkIndexEntry
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMarkTableOfContentsEntry
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogMyPermission
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogNewToolbar
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogNoteOptions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogOMathRecognizedFunctions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogOrganizer mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogPermission
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogPhoneticGuide
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogReviewAfmtRevisions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogSchemaLibrary
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogSearch mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogShowRepairs
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogSourceManager
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogStyleManagement
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTableAutoFormat
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTableCellOptions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTableColumnWidth
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTableDeleteCells
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTableFormatCell
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTableFormula
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTableInsertCells
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTableInsertRow
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTableInsertTable
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTableOfCaptionsOptions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTableOfContentsOptions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTableProperties
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTableRowHeight
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTableSort mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTableSplitCells
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTableTableOptions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTableToText
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTableWrapping
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTCSCTranslator
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTextToTable
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsAcceptRejectChanges
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsAdvancedSettings
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsAutoCorrect
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsAutoCorrectExceptions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsAutoManager
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsAutoSummarize
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsBulletsNumbers
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsCompareDocuments
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsCreateDirectory
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsCreateEnvelope
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsCreateLabels
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsCustomize
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsCustomizeKeyboard
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsCustomizeMenuBar
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsCustomizeMenus
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsDictionary
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsEnvelopesAndLabels
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsGrammarSettings
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsHangulHanjaConversion
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsHighlightChanges
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsHyphenation
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsLanguage
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsMacro
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsMacroRecord
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsManageFields
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsMergeDocuments
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptionsAutoFormat
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptionsAutoFormatAsYouType
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptionsBidi
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptionsCompatibility
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptionsEdit
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptionsEditCopyPaste
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptionsFileLocations
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptionsFuzzy
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptionsGeneral
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptionsPrint
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptionsSave
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptionsSecurity
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptionsSmartTag
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptionsSpellingAndGrammar
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptionsTrackChanges
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptionsTypography
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptionsUserInfo
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsOptionsView
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsProtectDocument
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsProtectSection
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsRevisions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsSpellingAndGrammar
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsTemplates
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsThesaurus
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsUnprotectDocument
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogToolsWordCount
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogTwoLinesInOne
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogUpdateTOC mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogViewZoom mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogWebOptions
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogWindowActivate
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogXMLElementAttributes
    mixins Word$WdWordDialog {}
  declare class Word$WdWordDialog__wdDialogXMLOptions
    mixins Word$WdWordDialog {}

  declare class Word$WdWordDialogHID {
    constructor(...args: empty): mixed;
    static +emptyenum: Class<Word$WdWordDialogHID__emptyenum> &
      Word$WdWordDialogHID__emptyenum &
      0; // 0
  }

  declare class Word$WdWordDialogHID__emptyenum mixins Word$WdWordDialogHID {}

  declare class Word$WdWordDialogTab {
    constructor(...args: empty): mixed;
    static +wdDialogEmailOptionsTabQuoting: Class<Word$WdWordDialogTab__wdDialogEmailOptionsTabQuoting> &
      Word$WdWordDialogTab__wdDialogEmailOptionsTabQuoting &
      1900002; // 1900002
    static +wdDialogEmailOptionsTabSignature: Class<Word$WdWordDialogTab__wdDialogEmailOptionsTabSignature> &
      Word$WdWordDialogTab__wdDialogEmailOptionsTabSignature &
      1900000; // 1900000
    static +wdDialogEmailOptionsTabStationary: Class<Word$WdWordDialogTab__wdDialogEmailOptionsTabStationary> &
      Word$WdWordDialogTab__wdDialogEmailOptionsTabStationary &
      1900001; // 1900001
    static +wdDialogFilePageSetupTabCharsLines: Class<Word$WdWordDialogTab__wdDialogFilePageSetupTabCharsLines> &
      Word$WdWordDialogTab__wdDialogFilePageSetupTabCharsLines &
      150004; // 150004
    static +wdDialogFilePageSetupTabLayout: Class<Word$WdWordDialogTab__wdDialogFilePageSetupTabLayout> &
      Word$WdWordDialogTab__wdDialogFilePageSetupTabLayout &
      150003; // 150003
    static +wdDialogFilePageSetupTabMargins: Class<Word$WdWordDialogTab__wdDialogFilePageSetupTabMargins> &
      Word$WdWordDialogTab__wdDialogFilePageSetupTabMargins &
      150000; // 150000
    static +wdDialogFilePageSetupTabPaper: Class<Word$WdWordDialogTab__wdDialogFilePageSetupTabPaper> &
      Word$WdWordDialogTab__wdDialogFilePageSetupTabPaper &
      150001; // 150001
    static +wdDialogFormatBordersAndShadingTabBorders: Class<Word$WdWordDialogTab__wdDialogFormatBordersAndShadingTabBorders> &
      Word$WdWordDialogTab__wdDialogFormatBordersAndShadingTabBorders &
      700000; // 700000
    static +wdDialogFormatBordersAndShadingTabPageBorder: Class<Word$WdWordDialogTab__wdDialogFormatBordersAndShadingTabPageBorder> &
      Word$WdWordDialogTab__wdDialogFormatBordersAndShadingTabPageBorder &
      700001; // 700001
    static +wdDialogFormatBordersAndShadingTabShading: Class<Word$WdWordDialogTab__wdDialogFormatBordersAndShadingTabShading> &
      Word$WdWordDialogTab__wdDialogFormatBordersAndShadingTabShading &
      700002; // 700002
    static +wdDialogFormatBulletsAndNumberingTabBulleted: Class<Word$WdWordDialogTab__wdDialogFormatBulletsAndNumberingTabBulleted> &
      Word$WdWordDialogTab__wdDialogFormatBulletsAndNumberingTabBulleted &
      1500000; // 1500000
    static +wdDialogFormatBulletsAndNumberingTabNumbered: Class<Word$WdWordDialogTab__wdDialogFormatBulletsAndNumberingTabNumbered> &
      Word$WdWordDialogTab__wdDialogFormatBulletsAndNumberingTabNumbered &
      1500001; // 1500001
    static +wdDialogFormatBulletsAndNumberingTabOutlineNumbered: Class<Word$WdWordDialogTab__wdDialogFormatBulletsAndNumberingTabOutlineNumbered> &
      Word$WdWordDialogTab__wdDialogFormatBulletsAndNumberingTabOutlineNumbered &
      1500002; // 1500002
    static +wdDialogFormatDrawingObjectTabColorsAndLines: Class<Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabColorsAndLines> &
      Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabColorsAndLines &
      1200000; // 1200000
    static +wdDialogFormatDrawingObjectTabHR: Class<Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabHR> &
      Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabHR &
      1200007; // 1200007
    static +wdDialogFormatDrawingObjectTabPicture: Class<Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabPicture> &
      Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabPicture &
      1200004; // 1200004
    static +wdDialogFormatDrawingObjectTabPosition: Class<Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabPosition> &
      Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabPosition &
      1200002; // 1200002
    static +wdDialogFormatDrawingObjectTabSize: Class<Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabSize> &
      Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabSize &
      1200001; // 1200001
    static +wdDialogFormatDrawingObjectTabTextbox: Class<Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabTextbox> &
      Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabTextbox &
      1200005; // 1200005
    static +wdDialogFormatDrawingObjectTabWeb: Class<Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabWeb> &
      Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabWeb &
      1200006; // 1200006
    static +wdDialogFormatDrawingObjectTabWrapping: Class<Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabWrapping> &
      Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabWrapping &
      1200003; // 1200003
    static +wdDialogFormatFontTabAnimation: Class<Word$WdWordDialogTab__wdDialogFormatFontTabAnimation> &
      Word$WdWordDialogTab__wdDialogFormatFontTabAnimation &
      600002; // 600002
    static +wdDialogFormatFontTabCharacterSpacing: Class<Word$WdWordDialogTab__wdDialogFormatFontTabCharacterSpacing> &
      Word$WdWordDialogTab__wdDialogFormatFontTabCharacterSpacing &
      600001; // 600001
    static +wdDialogFormatFontTabFont: Class<Word$WdWordDialogTab__wdDialogFormatFontTabFont> &
      Word$WdWordDialogTab__wdDialogFormatFontTabFont &
      600000; // 600000
    static +wdDialogFormatParagraphTabIndentsAndSpacing: Class<Word$WdWordDialogTab__wdDialogFormatParagraphTabIndentsAndSpacing> &
      Word$WdWordDialogTab__wdDialogFormatParagraphTabIndentsAndSpacing &
      1000000; // 1000000
    static +wdDialogFormatParagraphTabTeisai: Class<Word$WdWordDialogTab__wdDialogFormatParagraphTabTeisai> &
      Word$WdWordDialogTab__wdDialogFormatParagraphTabTeisai &
      1000002; // 1000002
    static +wdDialogFormatParagraphTabTextFlow: Class<Word$WdWordDialogTab__wdDialogFormatParagraphTabTextFlow> &
      Word$WdWordDialogTab__wdDialogFormatParagraphTabTextFlow &
      1000001; // 1000001
    static +wdDialogInsertIndexAndTablesTabIndex: Class<Word$WdWordDialogTab__wdDialogInsertIndexAndTablesTabIndex> &
      Word$WdWordDialogTab__wdDialogInsertIndexAndTablesTabIndex &
      400000; // 400000
    static +wdDialogInsertIndexAndTablesTabTableOfAuthorities: Class<Word$WdWordDialogTab__wdDialogInsertIndexAndTablesTabTableOfAuthorities> &
      Word$WdWordDialogTab__wdDialogInsertIndexAndTablesTabTableOfAuthorities &
      400003; // 400003
    static +wdDialogInsertIndexAndTablesTabTableOfContents: Class<Word$WdWordDialogTab__wdDialogInsertIndexAndTablesTabTableOfContents> &
      Word$WdWordDialogTab__wdDialogInsertIndexAndTablesTabTableOfContents &
      400001; // 400001
    static +wdDialogInsertIndexAndTablesTabTableOfFigures: Class<Word$WdWordDialogTab__wdDialogInsertIndexAndTablesTabTableOfFigures> &
      Word$WdWordDialogTab__wdDialogInsertIndexAndTablesTabTableOfFigures &
      400002; // 400002
    static +wdDialogInsertSymbolTabSpecialCharacters: Class<Word$WdWordDialogTab__wdDialogInsertSymbolTabSpecialCharacters> &
      Word$WdWordDialogTab__wdDialogInsertSymbolTabSpecialCharacters &
      200001; // 200001
    static +wdDialogInsertSymbolTabSymbols: Class<Word$WdWordDialogTab__wdDialogInsertSymbolTabSymbols> &
      Word$WdWordDialogTab__wdDialogInsertSymbolTabSymbols &
      200000; // 200000
    static +wdDialogLetterWizardTabLetterFormat: Class<Word$WdWordDialogTab__wdDialogLetterWizardTabLetterFormat> &
      Word$WdWordDialogTab__wdDialogLetterWizardTabLetterFormat &
      1600000; // 1600000
    static +wdDialogLetterWizardTabOtherElements: Class<Word$WdWordDialogTab__wdDialogLetterWizardTabOtherElements> &
      Word$WdWordDialogTab__wdDialogLetterWizardTabOtherElements &
      1600002; // 1600002
    static +wdDialogLetterWizardTabRecipientInfo: Class<Word$WdWordDialogTab__wdDialogLetterWizardTabRecipientInfo> &
      Word$WdWordDialogTab__wdDialogLetterWizardTabRecipientInfo &
      1600001; // 1600001
    static +wdDialogLetterWizardTabSenderInfo: Class<Word$WdWordDialogTab__wdDialogLetterWizardTabSenderInfo> &
      Word$WdWordDialogTab__wdDialogLetterWizardTabSenderInfo &
      1600003; // 1600003
    static +wdDialogNoteOptionsTabAllEndnotes: Class<Word$WdWordDialogTab__wdDialogNoteOptionsTabAllEndnotes> &
      Word$WdWordDialogTab__wdDialogNoteOptionsTabAllEndnotes &
      300001; // 300001
    static +wdDialogNoteOptionsTabAllFootnotes: Class<Word$WdWordDialogTab__wdDialogNoteOptionsTabAllFootnotes> &
      Word$WdWordDialogTab__wdDialogNoteOptionsTabAllFootnotes &
      300000; // 300000
    static +wdDialogOrganizerTabAutoText: Class<Word$WdWordDialogTab__wdDialogOrganizerTabAutoText> &
      Word$WdWordDialogTab__wdDialogOrganizerTabAutoText &
      500001; // 500001
    static +wdDialogOrganizerTabCommandBars: Class<Word$WdWordDialogTab__wdDialogOrganizerTabCommandBars> &
      Word$WdWordDialogTab__wdDialogOrganizerTabCommandBars &
      500002; // 500002
    static +wdDialogOrganizerTabMacros: Class<Word$WdWordDialogTab__wdDialogOrganizerTabMacros> &
      Word$WdWordDialogTab__wdDialogOrganizerTabMacros &
      500003; // 500003
    static +wdDialogOrganizerTabStyles: Class<Word$WdWordDialogTab__wdDialogOrganizerTabStyles> &
      Word$WdWordDialogTab__wdDialogOrganizerTabStyles &
      500000; // 500000
    static +wdDialogStyleManagementTabEdit: Class<Word$WdWordDialogTab__wdDialogStyleManagementTabEdit> &
      Word$WdWordDialogTab__wdDialogStyleManagementTabEdit &
      2200000; // 2200000
    static +wdDialogStyleManagementTabRecommend: Class<Word$WdWordDialogTab__wdDialogStyleManagementTabRecommend> &
      Word$WdWordDialogTab__wdDialogStyleManagementTabRecommend &
      2200001; // 2200001
    static +wdDialogStyleManagementTabRestrict: Class<Word$WdWordDialogTab__wdDialogStyleManagementTabRestrict> &
      Word$WdWordDialogTab__wdDialogStyleManagementTabRestrict &
      2200002; // 2200002
    static +wdDialogTablePropertiesTabCell: Class<Word$WdWordDialogTab__wdDialogTablePropertiesTabCell> &
      Word$WdWordDialogTab__wdDialogTablePropertiesTabCell &
      1800003; // 1800003
    static +wdDialogTablePropertiesTabColumn: Class<Word$WdWordDialogTab__wdDialogTablePropertiesTabColumn> &
      Word$WdWordDialogTab__wdDialogTablePropertiesTabColumn &
      1800002; // 1800002
    static +wdDialogTablePropertiesTabRow: Class<Word$WdWordDialogTab__wdDialogTablePropertiesTabRow> &
      Word$WdWordDialogTab__wdDialogTablePropertiesTabRow &
      1800001; // 1800001
    static +wdDialogTablePropertiesTabTable: Class<Word$WdWordDialogTab__wdDialogTablePropertiesTabTable> &
      Word$WdWordDialogTab__wdDialogTablePropertiesTabTable &
      1800000; // 1800000
    static +wdDialogTemplates: Class<Word$WdWordDialogTab__wdDialogTemplates> &
      Word$WdWordDialogTab__wdDialogTemplates &
      2100000; // 2100000
    static +wdDialogTemplatesLinkedCSS: Class<Word$WdWordDialogTab__wdDialogTemplatesLinkedCSS> &
      Word$WdWordDialogTab__wdDialogTemplatesLinkedCSS &
      2100003; // 2100003
    static +wdDialogTemplatesXMLExpansionPacks: Class<Word$WdWordDialogTab__wdDialogTemplatesXMLExpansionPacks> &
      Word$WdWordDialogTab__wdDialogTemplatesXMLExpansionPacks &
      2100002; // 2100002
    static +wdDialogTemplatesXMLSchema: Class<Word$WdWordDialogTab__wdDialogTemplatesXMLSchema> &
      Word$WdWordDialogTab__wdDialogTemplatesXMLSchema &
      2100001; // 2100001
    static +wdDialogToolsAutoCorrectExceptionsTabFirstLetter: Class<Word$WdWordDialogTab__wdDialogToolsAutoCorrectExceptionsTabFirstLetter> &
      Word$WdWordDialogTab__wdDialogToolsAutoCorrectExceptionsTabFirstLetter &
      1400000; // 1400000
    static +wdDialogToolsAutoCorrectExceptionsTabHangulAndAlphabet: Class<Word$WdWordDialogTab__wdDialogToolsAutoCorrectExceptionsTabHangulAndAlphabet> &
      Word$WdWordDialogTab__wdDialogToolsAutoCorrectExceptionsTabHangulAndAlphabet &
      1400002; // 1400002
    static +wdDialogToolsAutoCorrectExceptionsTabIac: Class<Word$WdWordDialogTab__wdDialogToolsAutoCorrectExceptionsTabIac> &
      Word$WdWordDialogTab__wdDialogToolsAutoCorrectExceptionsTabIac &
      1400003; // 1400003
    static +wdDialogToolsAutoCorrectExceptionsTabInitialCaps: Class<Word$WdWordDialogTab__wdDialogToolsAutoCorrectExceptionsTabInitialCaps> &
      Word$WdWordDialogTab__wdDialogToolsAutoCorrectExceptionsTabInitialCaps &
      1400001; // 1400001
    static +wdDialogToolsAutoManagerTabAutoCorrect: Class<Word$WdWordDialogTab__wdDialogToolsAutoManagerTabAutoCorrect> &
      Word$WdWordDialogTab__wdDialogToolsAutoManagerTabAutoCorrect &
      1700000; // 1700000
    static +wdDialogToolsAutoManagerTabAutoFormat: Class<Word$WdWordDialogTab__wdDialogToolsAutoManagerTabAutoFormat> &
      Word$WdWordDialogTab__wdDialogToolsAutoManagerTabAutoFormat &
      1700003; // 1700003
    static +wdDialogToolsAutoManagerTabAutoFormatAsYouType: Class<Word$WdWordDialogTab__wdDialogToolsAutoManagerTabAutoFormatAsYouType> &
      Word$WdWordDialogTab__wdDialogToolsAutoManagerTabAutoFormatAsYouType &
      1700001; // 1700001
    static +wdDialogToolsAutoManagerTabAutoText: Class<Word$WdWordDialogTab__wdDialogToolsAutoManagerTabAutoText> &
      Word$WdWordDialogTab__wdDialogToolsAutoManagerTabAutoText &
      1700002; // 1700002
    static +wdDialogToolsAutoManagerTabSmartTags: Class<Word$WdWordDialogTab__wdDialogToolsAutoManagerTabSmartTags> &
      Word$WdWordDialogTab__wdDialogToolsAutoManagerTabSmartTags &
      1700004; // 1700004
    static +wdDialogToolsEnvelopesAndLabelsTabEnvelopes: Class<Word$WdWordDialogTab__wdDialogToolsEnvelopesAndLabelsTabEnvelopes> &
      Word$WdWordDialogTab__wdDialogToolsEnvelopesAndLabelsTabEnvelopes &
      800000; // 800000
    static +wdDialogToolsEnvelopesAndLabelsTabLabels: Class<Word$WdWordDialogTab__wdDialogToolsEnvelopesAndLabelsTabLabels> &
      Word$WdWordDialogTab__wdDialogToolsEnvelopesAndLabelsTabLabels &
      800001; // 800001
    static +wdDialogToolsOptionsTabAcetate: Class<Word$WdWordDialogTab__wdDialogToolsOptionsTabAcetate> &
      Word$WdWordDialogTab__wdDialogToolsOptionsTabAcetate &
      1266; // 1266
    static +wdDialogToolsOptionsTabBidi: Class<Word$WdWordDialogTab__wdDialogToolsOptionsTabBidi> &
      Word$WdWordDialogTab__wdDialogToolsOptionsTabBidi &
      1029; // 1029
    static +wdDialogToolsOptionsTabCompatibility: Class<Word$WdWordDialogTab__wdDialogToolsOptionsTabCompatibility> &
      Word$WdWordDialogTab__wdDialogToolsOptionsTabCompatibility &
      525; // 525
    static +wdDialogToolsOptionsTabEdit: Class<Word$WdWordDialogTab__wdDialogToolsOptionsTabEdit> &
      Word$WdWordDialogTab__wdDialogToolsOptionsTabEdit &
      224; // 224
    static +wdDialogToolsOptionsTabFileLocations: Class<Word$WdWordDialogTab__wdDialogToolsOptionsTabFileLocations> &
      Word$WdWordDialogTab__wdDialogToolsOptionsTabFileLocations &
      225; // 225
    static +wdDialogToolsOptionsTabFuzzy: Class<Word$WdWordDialogTab__wdDialogToolsOptionsTabFuzzy> &
      Word$WdWordDialogTab__wdDialogToolsOptionsTabFuzzy &
      790; // 790
    static +wdDialogToolsOptionsTabGeneral: Class<Word$WdWordDialogTab__wdDialogToolsOptionsTabGeneral> &
      Word$WdWordDialogTab__wdDialogToolsOptionsTabGeneral &
      203; // 203
    static +wdDialogToolsOptionsTabHangulHanjaConversion: Class<Word$WdWordDialogTab__wdDialogToolsOptionsTabHangulHanjaConversion> &
      Word$WdWordDialogTab__wdDialogToolsOptionsTabHangulHanjaConversion &
      786; // 786
    static +wdDialogToolsOptionsTabPrint: Class<Word$WdWordDialogTab__wdDialogToolsOptionsTabPrint> &
      Word$WdWordDialogTab__wdDialogToolsOptionsTabPrint &
      208; // 208
    static +wdDialogToolsOptionsTabProofread: Class<Word$WdWordDialogTab__wdDialogToolsOptionsTabProofread> &
      Word$WdWordDialogTab__wdDialogToolsOptionsTabProofread &
      211; // 211
    static +wdDialogToolsOptionsTabSave: Class<Word$WdWordDialogTab__wdDialogToolsOptionsTabSave> &
      Word$WdWordDialogTab__wdDialogToolsOptionsTabSave &
      209; // 209
    static +wdDialogToolsOptionsTabSecurity: Class<Word$WdWordDialogTab__wdDialogToolsOptionsTabSecurity> &
      Word$WdWordDialogTab__wdDialogToolsOptionsTabSecurity &
      1361; // 1361
    static +wdDialogToolsOptionsTabTrackChanges: Class<Word$WdWordDialogTab__wdDialogToolsOptionsTabTrackChanges> &
      Word$WdWordDialogTab__wdDialogToolsOptionsTabTrackChanges &
      386; // 386
    static +wdDialogToolsOptionsTabTypography: Class<Word$WdWordDialogTab__wdDialogToolsOptionsTabTypography> &
      Word$WdWordDialogTab__wdDialogToolsOptionsTabTypography &
      739; // 739
    static +wdDialogToolsOptionsTabUserInfo: Class<Word$WdWordDialogTab__wdDialogToolsOptionsTabUserInfo> &
      Word$WdWordDialogTab__wdDialogToolsOptionsTabUserInfo &
      213; // 213
    static +wdDialogToolsOptionsTabView: Class<Word$WdWordDialogTab__wdDialogToolsOptionsTabView> &
      Word$WdWordDialogTab__wdDialogToolsOptionsTabView &
      204; // 204
    static +wdDialogWebOptionsBrowsers: Class<Word$WdWordDialogTab__wdDialogWebOptionsBrowsers> &
      Word$WdWordDialogTab__wdDialogWebOptionsBrowsers &
      2000000; // 2000000
    static +wdDialogWebOptionsEncoding: Class<Word$WdWordDialogTab__wdDialogWebOptionsEncoding> &
      Word$WdWordDialogTab__wdDialogWebOptionsEncoding &
      2000003; // 2000003
    static +wdDialogWebOptionsFiles: Class<Word$WdWordDialogTab__wdDialogWebOptionsFiles> &
      Word$WdWordDialogTab__wdDialogWebOptionsFiles &
      2000001; // 2000001
    static +wdDialogWebOptionsFonts: Class<Word$WdWordDialogTab__wdDialogWebOptionsFonts> &
      Word$WdWordDialogTab__wdDialogWebOptionsFonts &
      2000004; // 2000004
    static +wdDialogWebOptionsGeneral: Class<Word$WdWordDialogTab__wdDialogWebOptionsGeneral> &
      Word$WdWordDialogTab__wdDialogWebOptionsGeneral &
      2000000; // 2000000
    static +wdDialogWebOptionsPictures: Class<Word$WdWordDialogTab__wdDialogWebOptionsPictures> &
      Word$WdWordDialogTab__wdDialogWebOptionsPictures &
      2000002; // 2000002
  }

  declare class Word$WdWordDialogTab__wdDialogEmailOptionsTabQuoting
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogEmailOptionsTabSignature
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogEmailOptionsTabStationary
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFilePageSetupTabCharsLines
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFilePageSetupTabLayout
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFilePageSetupTabMargins
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFilePageSetupTabPaper
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatBordersAndShadingTabBorders
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatBordersAndShadingTabPageBorder
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatBordersAndShadingTabShading
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatBulletsAndNumberingTabBulleted
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatBulletsAndNumberingTabNumbered
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatBulletsAndNumberingTabOutlineNumbered
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabColorsAndLines
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabHR
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabPicture
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabPosition
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabSize
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabTextbox
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabWeb
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatDrawingObjectTabWrapping
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatFontTabAnimation
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatFontTabCharacterSpacing
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatFontTabFont
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatParagraphTabIndentsAndSpacing
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatParagraphTabTeisai
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogFormatParagraphTabTextFlow
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogInsertIndexAndTablesTabIndex
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogInsertIndexAndTablesTabTableOfAuthorities
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogInsertIndexAndTablesTabTableOfContents
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogInsertIndexAndTablesTabTableOfFigures
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogInsertSymbolTabSpecialCharacters
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogInsertSymbolTabSymbols
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogLetterWizardTabLetterFormat
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogLetterWizardTabOtherElements
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogLetterWizardTabRecipientInfo
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogLetterWizardTabSenderInfo
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogNoteOptionsTabAllEndnotes
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogNoteOptionsTabAllFootnotes
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogOrganizerTabAutoText
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogOrganizerTabCommandBars
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogOrganizerTabMacros
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogOrganizerTabStyles
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogStyleManagementTabEdit
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogStyleManagementTabRecommend
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogStyleManagementTabRestrict
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogTablePropertiesTabCell
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogTablePropertiesTabColumn
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogTablePropertiesTabRow
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogTablePropertiesTabTable
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogTemplates
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogTemplatesLinkedCSS
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogTemplatesXMLExpansionPacks
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogTemplatesXMLSchema
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsAutoCorrectExceptionsTabFirstLetter
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsAutoCorrectExceptionsTabHangulAndAlphabet
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsAutoCorrectExceptionsTabIac
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsAutoCorrectExceptionsTabInitialCaps
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsAutoManagerTabAutoCorrect
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsAutoManagerTabAutoFormat
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsAutoManagerTabAutoFormatAsYouType
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsAutoManagerTabAutoText
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsAutoManagerTabSmartTags
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsEnvelopesAndLabelsTabEnvelopes
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsEnvelopesAndLabelsTabLabels
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsOptionsTabAcetate
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsOptionsTabBidi
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsOptionsTabCompatibility
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsOptionsTabEdit
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsOptionsTabFileLocations
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsOptionsTabFuzzy
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsOptionsTabGeneral
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsOptionsTabHangulHanjaConversion
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsOptionsTabPrint
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsOptionsTabProofread
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsOptionsTabSave
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsOptionsTabSecurity
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsOptionsTabTrackChanges
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsOptionsTabTypography
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsOptionsTabUserInfo
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogToolsOptionsTabView
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogWebOptionsBrowsers
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogWebOptionsEncoding
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogWebOptionsFiles
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogWebOptionsFonts
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogWebOptionsGeneral
    mixins Word$WdWordDialogTab {}
  declare class Word$WdWordDialogTab__wdDialogWebOptionsPictures
    mixins Word$WdWordDialogTab {}

  declare class Word$WdWordDialogTabHID {
    constructor(...args: empty): mixed;
    static +wdDialogFilePageSetupTabPaperSize: Class<Word$WdWordDialogTabHID__wdDialogFilePageSetupTabPaperSize> &
      Word$WdWordDialogTabHID__wdDialogFilePageSetupTabPaperSize &
      150001; // 150001
    static +wdDialogFilePageSetupTabPaperSource: Class<Word$WdWordDialogTabHID__wdDialogFilePageSetupTabPaperSource> &
      Word$WdWordDialogTabHID__wdDialogFilePageSetupTabPaperSource &
      150002; // 150002
  }

  declare class Word$WdWordDialogTabHID__wdDialogFilePageSetupTabPaperSize
    mixins Word$WdWordDialogTabHID {}
  declare class Word$WdWordDialogTabHID__wdDialogFilePageSetupTabPaperSource
    mixins Word$WdWordDialogTabHID {}

  declare class Word$WdWrapSideType {
    constructor(...args: empty): mixed;
    static +wdWrapBoth: Class<Word$WdWrapSideType__wdWrapBoth> &
      Word$WdWrapSideType__wdWrapBoth &
      0; // 0
    static +wdWrapLargest: Class<Word$WdWrapSideType__wdWrapLargest> &
      Word$WdWrapSideType__wdWrapLargest &
      3; // 3
    static +wdWrapLeft: Class<Word$WdWrapSideType__wdWrapLeft> &
      Word$WdWrapSideType__wdWrapLeft &
      1; // 1
    static +wdWrapRight: Class<Word$WdWrapSideType__wdWrapRight> &
      Word$WdWrapSideType__wdWrapRight &
      2; // 2
  }

  declare class Word$WdWrapSideType__wdWrapBoth mixins Word$WdWrapSideType {}
  declare class Word$WdWrapSideType__wdWrapLargest mixins Word$WdWrapSideType {}
  declare class Word$WdWrapSideType__wdWrapLeft mixins Word$WdWrapSideType {}
  declare class Word$WdWrapSideType__wdWrapRight mixins Word$WdWrapSideType {}

  declare class Word$WdWrapType {
    constructor(...args: empty): mixed;
    static +wdWrapBehind: Class<Word$WdWrapType__wdWrapBehind> &
      Word$WdWrapType__wdWrapBehind &
      5; // 5
    static +wdWrapFront: Class<Word$WdWrapType__wdWrapFront> &
      Word$WdWrapType__wdWrapFront &
      3; // 3
    static +wdWrapInline: Class<Word$WdWrapType__wdWrapInline> &
      Word$WdWrapType__wdWrapInline &
      7; // 7
    static +wdWrapNone: Class<Word$WdWrapType__wdWrapNone> &
      Word$WdWrapType__wdWrapNone &
      3; // 3
    static +wdWrapSquare: Class<Word$WdWrapType__wdWrapSquare> &
      Word$WdWrapType__wdWrapSquare &
      0; // 0
    static +wdWrapThrough: Class<Word$WdWrapType__wdWrapThrough> &
      Word$WdWrapType__wdWrapThrough &
      2; // 2
    static +wdWrapTight: Class<Word$WdWrapType__wdWrapTight> &
      Word$WdWrapType__wdWrapTight &
      1; // 1
    static +wdWrapTopBottom: Class<Word$WdWrapType__wdWrapTopBottom> &
      Word$WdWrapType__wdWrapTopBottom &
      4; // 4
  }

  declare class Word$WdWrapType__wdWrapBehind mixins Word$WdWrapType {}
  declare class Word$WdWrapType__wdWrapFront mixins Word$WdWrapType {}
  declare class Word$WdWrapType__wdWrapInline mixins Word$WdWrapType {}
  declare class Word$WdWrapType__wdWrapNone mixins Word$WdWrapType {}
  declare class Word$WdWrapType__wdWrapSquare mixins Word$WdWrapType {}
  declare class Word$WdWrapType__wdWrapThrough mixins Word$WdWrapType {}
  declare class Word$WdWrapType__wdWrapTight mixins Word$WdWrapType {}
  declare class Word$WdWrapType__wdWrapTopBottom mixins Word$WdWrapType {}

  declare class Word$WdWrapTypeMerged {
    constructor(...args: empty): mixed;
    static +wdWrapMergeBehind: Class<Word$WdWrapTypeMerged__wdWrapMergeBehind> &
      Word$WdWrapTypeMerged__wdWrapMergeBehind &
      3; // 3
    static +wdWrapMergeFront: Class<Word$WdWrapTypeMerged__wdWrapMergeFront> &
      Word$WdWrapTypeMerged__wdWrapMergeFront &
      4; // 4
    static +wdWrapMergeInline: Class<Word$WdWrapTypeMerged__wdWrapMergeInline> &
      Word$WdWrapTypeMerged__wdWrapMergeInline &
      0; // 0
    static +wdWrapMergeSquare: Class<Word$WdWrapTypeMerged__wdWrapMergeSquare> &
      Word$WdWrapTypeMerged__wdWrapMergeSquare &
      1; // 1
    static +wdWrapMergeThrough: Class<Word$WdWrapTypeMerged__wdWrapMergeThrough> &
      Word$WdWrapTypeMerged__wdWrapMergeThrough &
      5; // 5
    static +wdWrapMergeTight: Class<Word$WdWrapTypeMerged__wdWrapMergeTight> &
      Word$WdWrapTypeMerged__wdWrapMergeTight &
      2; // 2
    static +wdWrapMergeTopBottom: Class<Word$WdWrapTypeMerged__wdWrapMergeTopBottom> &
      Word$WdWrapTypeMerged__wdWrapMergeTopBottom &
      6; // 6
  }

  declare class Word$WdWrapTypeMerged__wdWrapMergeBehind
    mixins Word$WdWrapTypeMerged {}
  declare class Word$WdWrapTypeMerged__wdWrapMergeFront
    mixins Word$WdWrapTypeMerged {}
  declare class Word$WdWrapTypeMerged__wdWrapMergeInline
    mixins Word$WdWrapTypeMerged {}
  declare class Word$WdWrapTypeMerged__wdWrapMergeSquare
    mixins Word$WdWrapTypeMerged {}
  declare class Word$WdWrapTypeMerged__wdWrapMergeThrough
    mixins Word$WdWrapTypeMerged {}
  declare class Word$WdWrapTypeMerged__wdWrapMergeTight
    mixins Word$WdWrapTypeMerged {}
  declare class Word$WdWrapTypeMerged__wdWrapMergeTopBottom
    mixins Word$WdWrapTypeMerged {}

  declare class Word$WdXMLNodeLevel {
    constructor(...args: empty): mixed;
    static +wdXMLNodeLevelCell: Class<Word$WdXMLNodeLevel__wdXMLNodeLevelCell> &
      Word$WdXMLNodeLevel__wdXMLNodeLevelCell &
      3; // 3
    static +wdXMLNodeLevelInline: Class<Word$WdXMLNodeLevel__wdXMLNodeLevelInline> &
      Word$WdXMLNodeLevel__wdXMLNodeLevelInline &
      0; // 0
    static +wdXMLNodeLevelParagraph: Class<Word$WdXMLNodeLevel__wdXMLNodeLevelParagraph> &
      Word$WdXMLNodeLevel__wdXMLNodeLevelParagraph &
      1; // 1
    static +wdXMLNodeLevelRow: Class<Word$WdXMLNodeLevel__wdXMLNodeLevelRow> &
      Word$WdXMLNodeLevel__wdXMLNodeLevelRow &
      2; // 2
  }

  declare class Word$WdXMLNodeLevel__wdXMLNodeLevelCell
    mixins Word$WdXMLNodeLevel {}
  declare class Word$WdXMLNodeLevel__wdXMLNodeLevelInline
    mixins Word$WdXMLNodeLevel {}
  declare class Word$WdXMLNodeLevel__wdXMLNodeLevelParagraph
    mixins Word$WdXMLNodeLevel {}
  declare class Word$WdXMLNodeLevel__wdXMLNodeLevelRow
    mixins Word$WdXMLNodeLevel {}

  declare class Word$WdXMLNodeType {
    constructor(...args: empty): mixed;
    static +wdXMLNodeAttribute: Class<Word$WdXMLNodeType__wdXMLNodeAttribute> &
      Word$WdXMLNodeType__wdXMLNodeAttribute &
      2; // 2
    static +wdXMLNodeElement: Class<Word$WdXMLNodeType__wdXMLNodeElement> &
      Word$WdXMLNodeType__wdXMLNodeElement &
      1; // 1
  }

  declare class Word$WdXMLNodeType__wdXMLNodeAttribute
    mixins Word$WdXMLNodeType {}
  declare class Word$WdXMLNodeType__wdXMLNodeElement
    mixins Word$WdXMLNodeType {}

  declare class Word$WdXMLSelectionChangeReason {
    constructor(...args: empty): mixed;
    static +wdXMLSelectionChangeReasonDelete: Class<Word$WdXMLSelectionChangeReason__wdXMLSelectionChangeReasonDelete> &
      Word$WdXMLSelectionChangeReason__wdXMLSelectionChangeReasonDelete &
      2; // 2
    static +wdXMLSelectionChangeReasonInsert: Class<Word$WdXMLSelectionChangeReason__wdXMLSelectionChangeReasonInsert> &
      Word$WdXMLSelectionChangeReason__wdXMLSelectionChangeReasonInsert &
      1; // 1
    static +wdXMLSelectionChangeReasonMove: Class<Word$WdXMLSelectionChangeReason__wdXMLSelectionChangeReasonMove> &
      Word$WdXMLSelectionChangeReason__wdXMLSelectionChangeReasonMove &
      0; // 0
  }

  declare class Word$WdXMLSelectionChangeReason__wdXMLSelectionChangeReasonDelete
    mixins Word$WdXMLSelectionChangeReason {}
  declare class Word$WdXMLSelectionChangeReason__wdXMLSelectionChangeReasonInsert
    mixins Word$WdXMLSelectionChangeReason {}
  declare class Word$WdXMLSelectionChangeReason__wdXMLSelectionChangeReasonMove
    mixins Word$WdXMLSelectionChangeReason {}

  declare class Word$WdXMLValidationStatus {
    constructor(...args: empty): mixed;
    static +wdXMLValidationStatusCustom: Class<Word$WdXMLValidationStatus__wdXMLValidationStatusCustom> &
      Word$WdXMLValidationStatus__wdXMLValidationStatusCustom &
      -1072898048; // -1072898048
    static +wdXMLValidationStatusOK: Class<Word$WdXMLValidationStatus__wdXMLValidationStatusOK> &
      Word$WdXMLValidationStatus__wdXMLValidationStatusOK &
      0; // 0
  }

  declare class Word$WdXMLValidationStatus__wdXMLValidationStatusCustom
    mixins Word$WdXMLValidationStatus {}
  declare class Word$WdXMLValidationStatus__wdXMLValidationStatusOK
    mixins Word$WdXMLValidationStatus {}

  declare class Word$XlAxisCrosses {
    constructor(...args: empty): mixed;
    static +xlAxisCrossesAutomatic: Class<Word$XlAxisCrosses__xlAxisCrossesAutomatic> &
      Word$XlAxisCrosses__xlAxisCrossesAutomatic &
      -4105; // -4105
    static +xlAxisCrossesCustom: Class<Word$XlAxisCrosses__xlAxisCrossesCustom> &
      Word$XlAxisCrosses__xlAxisCrossesCustom &
      -4114; // -4114
    static +xlAxisCrossesMaximum: Class<Word$XlAxisCrosses__xlAxisCrossesMaximum> &
      Word$XlAxisCrosses__xlAxisCrossesMaximum &
      2; // 2
    static +xlAxisCrossesMinimum: Class<Word$XlAxisCrosses__xlAxisCrossesMinimum> &
      Word$XlAxisCrosses__xlAxisCrossesMinimum &
      4; // 4
  }

  declare class Word$XlAxisCrosses__xlAxisCrossesAutomatic
    mixins Word$XlAxisCrosses {}
  declare class Word$XlAxisCrosses__xlAxisCrossesCustom
    mixins Word$XlAxisCrosses {}
  declare class Word$XlAxisCrosses__xlAxisCrossesMaximum
    mixins Word$XlAxisCrosses {}
  declare class Word$XlAxisCrosses__xlAxisCrossesMinimum
    mixins Word$XlAxisCrosses {}

  declare class Word$XlAxisGroup {
    constructor(...args: empty): mixed;
    static +xlPrimary: Class<Word$XlAxisGroup__xlPrimary> &
      Word$XlAxisGroup__xlPrimary &
      1; // 1
    static +xlSecondary: Class<Word$XlAxisGroup__xlSecondary> &
      Word$XlAxisGroup__xlSecondary &
      2; // 2
  }

  declare class Word$XlAxisGroup__xlPrimary mixins Word$XlAxisGroup {}
  declare class Word$XlAxisGroup__xlSecondary mixins Word$XlAxisGroup {}

  declare class Word$XlAxisType {
    constructor(...args: empty): mixed;
    static +xlCategory: Class<Word$XlAxisType__xlCategory> &
      Word$XlAxisType__xlCategory &
      1; // 1
    static +xlSeriesAxis: Class<Word$XlAxisType__xlSeriesAxis> &
      Word$XlAxisType__xlSeriesAxis &
      3; // 3
    static +xlValue: Class<Word$XlAxisType__xlValue> &
      Word$XlAxisType__xlValue &
      2; // 2
  }

  declare class Word$XlAxisType__xlCategory mixins Word$XlAxisType {}
  declare class Word$XlAxisType__xlSeriesAxis mixins Word$XlAxisType {}
  declare class Word$XlAxisType__xlValue mixins Word$XlAxisType {}

  declare class Word$XlBackground {
    constructor(...args: empty): mixed;
    static +xlBackgroundAutomatic: Class<Word$XlBackground__xlBackgroundAutomatic> &
      Word$XlBackground__xlBackgroundAutomatic &
      -4105; // -4105
    static +xlBackgroundOpaque: Class<Word$XlBackground__xlBackgroundOpaque> &
      Word$XlBackground__xlBackgroundOpaque &
      3; // 3
    static +xlBackgroundTransparent: Class<Word$XlBackground__xlBackgroundTransparent> &
      Word$XlBackground__xlBackgroundTransparent &
      2; // 2
  }

  declare class Word$XlBackground__xlBackgroundAutomatic
    mixins Word$XlBackground {}
  declare class Word$XlBackground__xlBackgroundOpaque
    mixins Word$XlBackground {}
  declare class Word$XlBackground__xlBackgroundTransparent
    mixins Word$XlBackground {}

  declare class Word$XlBarShape {
    constructor(...args: empty): mixed;
    static +xlBox: Class<Word$XlBarShape__xlBox> & Word$XlBarShape__xlBox & 0; // 0
    static +xlConeToMax: Class<Word$XlBarShape__xlConeToMax> &
      Word$XlBarShape__xlConeToMax &
      5; // 5
    static +xlConeToPoint: Class<Word$XlBarShape__xlConeToPoint> &
      Word$XlBarShape__xlConeToPoint &
      4; // 4
    static +xlCylinder: Class<Word$XlBarShape__xlCylinder> &
      Word$XlBarShape__xlCylinder &
      3; // 3
    static +xlPyramidToMax: Class<Word$XlBarShape__xlPyramidToMax> &
      Word$XlBarShape__xlPyramidToMax &
      2; // 2
    static +xlPyramidToPoint: Class<Word$XlBarShape__xlPyramidToPoint> &
      Word$XlBarShape__xlPyramidToPoint &
      1; // 1
  }

  declare class Word$XlBarShape__xlBox mixins Word$XlBarShape {}
  declare class Word$XlBarShape__xlConeToMax mixins Word$XlBarShape {}
  declare class Word$XlBarShape__xlConeToPoint mixins Word$XlBarShape {}
  declare class Word$XlBarShape__xlCylinder mixins Word$XlBarShape {}
  declare class Word$XlBarShape__xlPyramidToMax mixins Word$XlBarShape {}
  declare class Word$XlBarShape__xlPyramidToPoint mixins Word$XlBarShape {}

  declare class Word$XlBorderWeight {
    constructor(...args: empty): mixed;
    static +xlHairline: Class<Word$XlBorderWeight__xlHairline> &
      Word$XlBorderWeight__xlHairline &
      1; // 1
    static +xlMedium: Class<Word$XlBorderWeight__xlMedium> &
      Word$XlBorderWeight__xlMedium &
      -4138; // -4138
    static +xlThick: Class<Word$XlBorderWeight__xlThick> &
      Word$XlBorderWeight__xlThick &
      4; // 4
    static +xlThin: Class<Word$XlBorderWeight__xlThin> &
      Word$XlBorderWeight__xlThin &
      2; // 2
  }

  declare class Word$XlBorderWeight__xlHairline mixins Word$XlBorderWeight {}
  declare class Word$XlBorderWeight__xlMedium mixins Word$XlBorderWeight {}
  declare class Word$XlBorderWeight__xlThick mixins Word$XlBorderWeight {}
  declare class Word$XlBorderWeight__xlThin mixins Word$XlBorderWeight {}

  declare class Word$XlCategoryType {
    constructor(...args: empty): mixed;
    static +xlAutomaticScale: Class<Word$XlCategoryType__xlAutomaticScale> &
      Word$XlCategoryType__xlAutomaticScale &
      -4105; // -4105
    static +xlCategoryScale: Class<Word$XlCategoryType__xlCategoryScale> &
      Word$XlCategoryType__xlCategoryScale &
      2; // 2
    static +xlTimeScale: Class<Word$XlCategoryType__xlTimeScale> &
      Word$XlCategoryType__xlTimeScale &
      3; // 3
  }

  declare class Word$XlCategoryType__xlAutomaticScale
    mixins Word$XlCategoryType {}
  declare class Word$XlCategoryType__xlCategoryScale
    mixins Word$XlCategoryType {}
  declare class Word$XlCategoryType__xlTimeScale mixins Word$XlCategoryType {}

  declare class Word$XlChartElementPosition {
    constructor(...args: empty): mixed;
    static +xlChartElementPositionAutomatic: Class<Word$XlChartElementPosition__xlChartElementPositionAutomatic> &
      Word$XlChartElementPosition__xlChartElementPositionAutomatic &
      -4105; // -4105
    static +xlChartElementPositionCustom: Class<Word$XlChartElementPosition__xlChartElementPositionCustom> &
      Word$XlChartElementPosition__xlChartElementPositionCustom &
      -4114; // -4114
  }

  declare class Word$XlChartElementPosition__xlChartElementPositionAutomatic
    mixins Word$XlChartElementPosition {}
  declare class Word$XlChartElementPosition__xlChartElementPositionCustom
    mixins Word$XlChartElementPosition {}

  declare class Word$XlChartGallery {
    constructor(...args: empty): mixed;
    static +xlAnyGallery: Class<Word$XlChartGallery__xlAnyGallery> &
      Word$XlChartGallery__xlAnyGallery &
      23; // 23
    static +xlBuiltIn: Class<Word$XlChartGallery__xlBuiltIn> &
      Word$XlChartGallery__xlBuiltIn &
      21; // 21
    static +xlUserDefined: Class<Word$XlChartGallery__xlUserDefined> &
      Word$XlChartGallery__xlUserDefined &
      22; // 22
  }

  declare class Word$XlChartGallery__xlAnyGallery mixins Word$XlChartGallery {}
  declare class Word$XlChartGallery__xlBuiltIn mixins Word$XlChartGallery {}
  declare class Word$XlChartGallery__xlUserDefined mixins Word$XlChartGallery {}

  declare class Word$XlChartItem {
    constructor(...args: empty): mixed;
    static +xlAxis: Class<Word$XlChartItem__xlAxis> &
      Word$XlChartItem__xlAxis &
      21; // 21
    static +xlAxisTitle: Class<Word$XlChartItem__xlAxisTitle> &
      Word$XlChartItem__xlAxisTitle &
      17; // 17
    static +xlChartArea: Class<Word$XlChartItem__xlChartArea> &
      Word$XlChartItem__xlChartArea &
      2; // 2
    static +xlChartTitle: Class<Word$XlChartItem__xlChartTitle> &
      Word$XlChartItem__xlChartTitle &
      4; // 4
    static +xlCorners: Class<Word$XlChartItem__xlCorners> &
      Word$XlChartItem__xlCorners &
      6; // 6
    static +xlDataLabel: Class<Word$XlChartItem__xlDataLabel> &
      Word$XlChartItem__xlDataLabel &
      0; // 0
    static +xlDataTable: Class<Word$XlChartItem__xlDataTable> &
      Word$XlChartItem__xlDataTable &
      7; // 7
    static +xlDisplayUnitLabel: Class<Word$XlChartItem__xlDisplayUnitLabel> &
      Word$XlChartItem__xlDisplayUnitLabel &
      30; // 30
    static +xlDownBars: Class<Word$XlChartItem__xlDownBars> &
      Word$XlChartItem__xlDownBars &
      20; // 20
    static +xlDropLines: Class<Word$XlChartItem__xlDropLines> &
      Word$XlChartItem__xlDropLines &
      26; // 26
    static +xlErrorBars: Class<Word$XlChartItem__xlErrorBars> &
      Word$XlChartItem__xlErrorBars &
      9; // 9
    static +xlFloor: Class<Word$XlChartItem__xlFloor> &
      Word$XlChartItem__xlFloor &
      23; // 23
    static +xlHiLoLines: Class<Word$XlChartItem__xlHiLoLines> &
      Word$XlChartItem__xlHiLoLines &
      25; // 25
    static +xlLeaderLines: Class<Word$XlChartItem__xlLeaderLines> &
      Word$XlChartItem__xlLeaderLines &
      29; // 29
    static +xlLegend: Class<Word$XlChartItem__xlLegend> &
      Word$XlChartItem__xlLegend &
      24; // 24
    static +xlLegendEntry: Class<Word$XlChartItem__xlLegendEntry> &
      Word$XlChartItem__xlLegendEntry &
      12; // 12
    static +xlLegendKey: Class<Word$XlChartItem__xlLegendKey> &
      Word$XlChartItem__xlLegendKey &
      13; // 13
    static +xlMajorGridlines: Class<Word$XlChartItem__xlMajorGridlines> &
      Word$XlChartItem__xlMajorGridlines &
      15; // 15
    static +xlMinorGridlines: Class<Word$XlChartItem__xlMinorGridlines> &
      Word$XlChartItem__xlMinorGridlines &
      16; // 16
    static +xlNothing: Class<Word$XlChartItem__xlNothing> &
      Word$XlChartItem__xlNothing &
      28; // 28
    static +xlPivotChartDropZone: Class<Word$XlChartItem__xlPivotChartDropZone> &
      Word$XlChartItem__xlPivotChartDropZone &
      32; // 32
    static +xlPivotChartFieldButton: Class<Word$XlChartItem__xlPivotChartFieldButton> &
      Word$XlChartItem__xlPivotChartFieldButton &
      31; // 31
    static +xlPlotArea: Class<Word$XlChartItem__xlPlotArea> &
      Word$XlChartItem__xlPlotArea &
      19; // 19
    static +xlRadarAxisLabels: Class<Word$XlChartItem__xlRadarAxisLabels> &
      Word$XlChartItem__xlRadarAxisLabels &
      27; // 27
    static +xlSeries: Class<Word$XlChartItem__xlSeries> &
      Word$XlChartItem__xlSeries &
      3; // 3
    static +xlSeriesLines: Class<Word$XlChartItem__xlSeriesLines> &
      Word$XlChartItem__xlSeriesLines &
      22; // 22
    static +xlShape: Class<Word$XlChartItem__xlShape> &
      Word$XlChartItem__xlShape &
      14; // 14
    static +xlTrendline: Class<Word$XlChartItem__xlTrendline> &
      Word$XlChartItem__xlTrendline &
      8; // 8
    static +xlUpBars: Class<Word$XlChartItem__xlUpBars> &
      Word$XlChartItem__xlUpBars &
      18; // 18
    static +xlWalls: Class<Word$XlChartItem__xlWalls> &
      Word$XlChartItem__xlWalls &
      5; // 5
    static +xlXErrorBars: Class<Word$XlChartItem__xlXErrorBars> &
      Word$XlChartItem__xlXErrorBars &
      10; // 10
    static +xlYErrorBars: Class<Word$XlChartItem__xlYErrorBars> &
      Word$XlChartItem__xlYErrorBars &
      11; // 11
  }

  declare class Word$XlChartItem__xlAxis mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlAxisTitle mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlChartArea mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlChartTitle mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlCorners mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlDataLabel mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlDataTable mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlDisplayUnitLabel mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlDownBars mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlDropLines mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlErrorBars mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlFloor mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlHiLoLines mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlLeaderLines mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlLegend mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlLegendEntry mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlLegendKey mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlMajorGridlines mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlMinorGridlines mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlNothing mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlPivotChartDropZone
    mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlPivotChartFieldButton
    mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlPlotArea mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlRadarAxisLabels mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlSeries mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlSeriesLines mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlShape mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlTrendline mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlUpBars mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlWalls mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlXErrorBars mixins Word$XlChartItem {}
  declare class Word$XlChartItem__xlYErrorBars mixins Word$XlChartItem {}

  declare class Word$XlChartPicturePlacement {
    constructor(...args: empty): mixed;
    static +xlAllFaces: Class<Word$XlChartPicturePlacement__xlAllFaces> &
      Word$XlChartPicturePlacement__xlAllFaces &
      7; // 7
    static +xlEnd: Class<Word$XlChartPicturePlacement__xlEnd> &
      Word$XlChartPicturePlacement__xlEnd &
      2; // 2
    static +xlEndSides: Class<Word$XlChartPicturePlacement__xlEndSides> &
      Word$XlChartPicturePlacement__xlEndSides &
      3; // 3
    static +xlFront: Class<Word$XlChartPicturePlacement__xlFront> &
      Word$XlChartPicturePlacement__xlFront &
      4; // 4
    static +xlFrontEnd: Class<Word$XlChartPicturePlacement__xlFrontEnd> &
      Word$XlChartPicturePlacement__xlFrontEnd &
      6; // 6
    static +xlFrontSides: Class<Word$XlChartPicturePlacement__xlFrontSides> &
      Word$XlChartPicturePlacement__xlFrontSides &
      5; // 5
    static +xlSides: Class<Word$XlChartPicturePlacement__xlSides> &
      Word$XlChartPicturePlacement__xlSides &
      1; // 1
  }

  declare class Word$XlChartPicturePlacement__xlAllFaces
    mixins Word$XlChartPicturePlacement {}
  declare class Word$XlChartPicturePlacement__xlEnd
    mixins Word$XlChartPicturePlacement {}
  declare class Word$XlChartPicturePlacement__xlEndSides
    mixins Word$XlChartPicturePlacement {}
  declare class Word$XlChartPicturePlacement__xlFront
    mixins Word$XlChartPicturePlacement {}
  declare class Word$XlChartPicturePlacement__xlFrontEnd
    mixins Word$XlChartPicturePlacement {}
  declare class Word$XlChartPicturePlacement__xlFrontSides
    mixins Word$XlChartPicturePlacement {}
  declare class Word$XlChartPicturePlacement__xlSides
    mixins Word$XlChartPicturePlacement {}

  declare class Word$XlChartPictureType {
    constructor(...args: empty): mixed;
    static +xlStack: Class<Word$XlChartPictureType__xlStack> &
      Word$XlChartPictureType__xlStack &
      2; // 2
    static +xlStackScale: Class<Word$XlChartPictureType__xlStackScale> &
      Word$XlChartPictureType__xlStackScale &
      3; // 3
    static +xlStretch: Class<Word$XlChartPictureType__xlStretch> &
      Word$XlChartPictureType__xlStretch &
      1; // 1
  }

  declare class Word$XlChartPictureType__xlStack
    mixins Word$XlChartPictureType {}
  declare class Word$XlChartPictureType__xlStackScale
    mixins Word$XlChartPictureType {}
  declare class Word$XlChartPictureType__xlStretch
    mixins Word$XlChartPictureType {}

  declare class Word$XlChartSplitType {
    constructor(...args: empty): mixed;
    static +xlSplitByCustomSplit: Class<Word$XlChartSplitType__xlSplitByCustomSplit> &
      Word$XlChartSplitType__xlSplitByCustomSplit &
      4; // 4
    static +xlSplitByPercentValue: Class<Word$XlChartSplitType__xlSplitByPercentValue> &
      Word$XlChartSplitType__xlSplitByPercentValue &
      3; // 3
    static +xlSplitByPosition: Class<Word$XlChartSplitType__xlSplitByPosition> &
      Word$XlChartSplitType__xlSplitByPosition &
      1; // 1
    static +xlSplitByValue: Class<Word$XlChartSplitType__xlSplitByValue> &
      Word$XlChartSplitType__xlSplitByValue &
      2; // 2
  }

  declare class Word$XlChartSplitType__xlSplitByCustomSplit
    mixins Word$XlChartSplitType {}
  declare class Word$XlChartSplitType__xlSplitByPercentValue
    mixins Word$XlChartSplitType {}
  declare class Word$XlChartSplitType__xlSplitByPosition
    mixins Word$XlChartSplitType {}
  declare class Word$XlChartSplitType__xlSplitByValue
    mixins Word$XlChartSplitType {}

  declare class Word$XlColorIndex {
    constructor(...args: empty): mixed;
    static +xlColorIndexAutomatic: Class<Word$XlColorIndex__xlColorIndexAutomatic> &
      Word$XlColorIndex__xlColorIndexAutomatic &
      -4105; // -4105
    static +xlColorIndexNone: Class<Word$XlColorIndex__xlColorIndexNone> &
      Word$XlColorIndex__xlColorIndexNone &
      -4142; // -4142
  }

  declare class Word$XlColorIndex__xlColorIndexAutomatic
    mixins Word$XlColorIndex {}
  declare class Word$XlColorIndex__xlColorIndexNone mixins Word$XlColorIndex {}

  declare class Word$XlConstants {
    constructor(...args: empty): mixed;
    static +xl3DBar: Class<Word$XlConstants__xl3DBar> &
      Word$XlConstants__xl3DBar &
      -4099; // -4099
    static +xl3DSurface: Class<Word$XlConstants__xl3DSurface> &
      Word$XlConstants__xl3DSurface &
      -4103; // -4103
    static +xlAbove: Class<Word$XlConstants__xlAbove> &
      Word$XlConstants__xlAbove &
      0; // 0
    static +xlAutomatic: Class<Word$XlConstants__xlAutomatic> &
      Word$XlConstants__xlAutomatic &
      -4105; // -4105
    static +xlBar: Class<Word$XlConstants__xlBar> & Word$XlConstants__xlBar & 2; // 2
    static +xlBelow: Class<Word$XlConstants__xlBelow> &
      Word$XlConstants__xlBelow &
      1; // 1
    static +xlBoth: Class<Word$XlConstants__xlBoth> &
      Word$XlConstants__xlBoth &
      1; // 1
    static +xlBottom: Class<Word$XlConstants__xlBottom> &
      Word$XlConstants__xlBottom &
      -4107; // -4107
    static +xlCenter: Class<Word$XlConstants__xlCenter> &
      Word$XlConstants__xlCenter &
      -4108; // -4108
    static +xlChecker: Class<Word$XlConstants__xlChecker> &
      Word$XlConstants__xlChecker &
      9; // 9
    static +xlCircle: Class<Word$XlConstants__xlCircle> &
      Word$XlConstants__xlCircle &
      8; // 8
    static +xlColumn: Class<Word$XlConstants__xlColumn> &
      Word$XlConstants__xlColumn &
      3; // 3
    static +xlCombination: Class<Word$XlConstants__xlCombination> &
      Word$XlConstants__xlCombination &
      -4111; // -4111
    static +xlCorner: Class<Word$XlConstants__xlCorner> &
      Word$XlConstants__xlCorner &
      2; // 2
    static +xlCrissCross: Class<Word$XlConstants__xlCrissCross> &
      Word$XlConstants__xlCrissCross &
      16; // 16
    static +xlCross: Class<Word$XlConstants__xlCross> &
      Word$XlConstants__xlCross &
      4; // 4
    static +xlCustom: Class<Word$XlConstants__xlCustom> &
      Word$XlConstants__xlCustom &
      -4114; // -4114
    static +xlDefaultAutoFormat: Class<Word$XlConstants__xlDefaultAutoFormat> &
      Word$XlConstants__xlDefaultAutoFormat &
      -1; // -1
    static +xlDiamond: Class<Word$XlConstants__xlDiamond> &
      Word$XlConstants__xlDiamond &
      2; // 2
    static +xlDistributed: Class<Word$XlConstants__xlDistributed> &
      Word$XlConstants__xlDistributed &
      -4117; // -4117
    static +xlFill: Class<Word$XlConstants__xlFill> &
      Word$XlConstants__xlFill &
      5; // 5
    static +xlFixedValue: Class<Word$XlConstants__xlFixedValue> &
      Word$XlConstants__xlFixedValue &
      1; // 1
    static +xlGeneral: Class<Word$XlConstants__xlGeneral> &
      Word$XlConstants__xlGeneral &
      1; // 1
    static +xlGray16: Class<Word$XlConstants__xlGray16> &
      Word$XlConstants__xlGray16 &
      17; // 17
    static +xlGray25: Class<Word$XlConstants__xlGray25> &
      Word$XlConstants__xlGray25 &
      -4124; // -4124
    static +xlGray50: Class<Word$XlConstants__xlGray50> &
      Word$XlConstants__xlGray50 &
      -4125; // -4125
    static +xlGray75: Class<Word$XlConstants__xlGray75> &
      Word$XlConstants__xlGray75 &
      -4126; // -4126
    static +xlGray8: Class<Word$XlConstants__xlGray8> &
      Word$XlConstants__xlGray8 &
      18; // 18
    static +xlGrid: Class<Word$XlConstants__xlGrid> &
      Word$XlConstants__xlGrid &
      15; // 15
    static +xlHigh: Class<Word$XlConstants__xlHigh> &
      Word$XlConstants__xlHigh &
      -4127; // -4127
    static +xlInside: Class<Word$XlConstants__xlInside> &
      Word$XlConstants__xlInside &
      2; // 2
    static +xlJustify: Class<Word$XlConstants__xlJustify> &
      Word$XlConstants__xlJustify &
      -4130; // -4130
    static +xlLeft: Class<Word$XlConstants__xlLeft> &
      Word$XlConstants__xlLeft &
      -4131; // -4131
    static +xlLightDown: Class<Word$XlConstants__xlLightDown> &
      Word$XlConstants__xlLightDown &
      13; // 13
    static +xlLightHorizontal: Class<Word$XlConstants__xlLightHorizontal> &
      Word$XlConstants__xlLightHorizontal &
      11; // 11
    static +xlLightUp: Class<Word$XlConstants__xlLightUp> &
      Word$XlConstants__xlLightUp &
      14; // 14
    static +xlLightVertical: Class<Word$XlConstants__xlLightVertical> &
      Word$XlConstants__xlLightVertical &
      12; // 12
    static +xlLow: Class<Word$XlConstants__xlLow> &
      Word$XlConstants__xlLow &
      -4134; // -4134
    static +xlMaximum: Class<Word$XlConstants__xlMaximum> &
      Word$XlConstants__xlMaximum &
      2; // 2
    static +xlMinimum: Class<Word$XlConstants__xlMinimum> &
      Word$XlConstants__xlMinimum &
      4; // 4
    static +xlMinusValues: Class<Word$XlConstants__xlMinusValues> &
      Word$XlConstants__xlMinusValues &
      3; // 3
    static +xlNextToAxis: Class<Word$XlConstants__xlNextToAxis> &
      Word$XlConstants__xlNextToAxis &
      4; // 4
    static +xlNone: Class<Word$XlConstants__xlNone> &
      Word$XlConstants__xlNone &
      -4142; // -4142
    static +xlOpaque: Class<Word$XlConstants__xlOpaque> &
      Word$XlConstants__xlOpaque &
      3; // 3
    static +xlOutside: Class<Word$XlConstants__xlOutside> &
      Word$XlConstants__xlOutside &
      3; // 3
    static +xlPercent: Class<Word$XlConstants__xlPercent> &
      Word$XlConstants__xlPercent &
      2; // 2
    static +xlPlus: Class<Word$XlConstants__xlPlus> &
      Word$XlConstants__xlPlus &
      9; // 9
    static +xlPlusValues: Class<Word$XlConstants__xlPlusValues> &
      Word$XlConstants__xlPlusValues &
      2; // 2
    static +xlRight: Class<Word$XlConstants__xlRight> &
      Word$XlConstants__xlRight &
      -4152; // -4152
    static +xlScale: Class<Word$XlConstants__xlScale> &
      Word$XlConstants__xlScale &
      3; // 3
    static +xlSemiGray75: Class<Word$XlConstants__xlSemiGray75> &
      Word$XlConstants__xlSemiGray75 &
      10; // 10
    static +xlShowLabel: Class<Word$XlConstants__xlShowLabel> &
      Word$XlConstants__xlShowLabel &
      4; // 4
    static +xlShowLabelAndPercent: Class<Word$XlConstants__xlShowLabelAndPercent> &
      Word$XlConstants__xlShowLabelAndPercent &
      5; // 5
    static +xlShowPercent: Class<Word$XlConstants__xlShowPercent> &
      Word$XlConstants__xlShowPercent &
      3; // 3
    static +xlShowValue: Class<Word$XlConstants__xlShowValue> &
      Word$XlConstants__xlShowValue &
      2; // 2
    static +xlSingle: Class<Word$XlConstants__xlSingle> &
      Word$XlConstants__xlSingle &
      2; // 2
    static +xlSolid: Class<Word$XlConstants__xlSolid> &
      Word$XlConstants__xlSolid &
      1; // 1
    static +xlSquare: Class<Word$XlConstants__xlSquare> &
      Word$XlConstants__xlSquare &
      1; // 1
    static +xlStar: Class<Word$XlConstants__xlStar> &
      Word$XlConstants__xlStar &
      5; // 5
    static +xlStError: Class<Word$XlConstants__xlStError> &
      Word$XlConstants__xlStError &
      4; // 4
    static +xlTop: Class<Word$XlConstants__xlTop> &
      Word$XlConstants__xlTop &
      -4160; // -4160
    static +xlTransparent: Class<Word$XlConstants__xlTransparent> &
      Word$XlConstants__xlTransparent &
      2; // 2
    static +xlTriangle: Class<Word$XlConstants__xlTriangle> &
      Word$XlConstants__xlTriangle &
      3; // 3
  }

  declare class Word$XlConstants__xl3DBar mixins Word$XlConstants {}
  declare class Word$XlConstants__xl3DSurface mixins Word$XlConstants {}
  declare class Word$XlConstants__xlAbove mixins Word$XlConstants {}
  declare class Word$XlConstants__xlAutomatic mixins Word$XlConstants {}
  declare class Word$XlConstants__xlBar mixins Word$XlConstants {}
  declare class Word$XlConstants__xlBelow mixins Word$XlConstants {}
  declare class Word$XlConstants__xlBoth mixins Word$XlConstants {}
  declare class Word$XlConstants__xlBottom mixins Word$XlConstants {}
  declare class Word$XlConstants__xlCenter mixins Word$XlConstants {}
  declare class Word$XlConstants__xlChecker mixins Word$XlConstants {}
  declare class Word$XlConstants__xlCircle mixins Word$XlConstants {}
  declare class Word$XlConstants__xlColumn mixins Word$XlConstants {}
  declare class Word$XlConstants__xlCombination mixins Word$XlConstants {}
  declare class Word$XlConstants__xlCorner mixins Word$XlConstants {}
  declare class Word$XlConstants__xlCrissCross mixins Word$XlConstants {}
  declare class Word$XlConstants__xlCross mixins Word$XlConstants {}
  declare class Word$XlConstants__xlCustom mixins Word$XlConstants {}
  declare class Word$XlConstants__xlDefaultAutoFormat mixins Word$XlConstants {}
  declare class Word$XlConstants__xlDiamond mixins Word$XlConstants {}
  declare class Word$XlConstants__xlDistributed mixins Word$XlConstants {}
  declare class Word$XlConstants__xlFill mixins Word$XlConstants {}
  declare class Word$XlConstants__xlFixedValue mixins Word$XlConstants {}
  declare class Word$XlConstants__xlGeneral mixins Word$XlConstants {}
  declare class Word$XlConstants__xlGray16 mixins Word$XlConstants {}
  declare class Word$XlConstants__xlGray25 mixins Word$XlConstants {}
  declare class Word$XlConstants__xlGray50 mixins Word$XlConstants {}
  declare class Word$XlConstants__xlGray75 mixins Word$XlConstants {}
  declare class Word$XlConstants__xlGray8 mixins Word$XlConstants {}
  declare class Word$XlConstants__xlGrid mixins Word$XlConstants {}
  declare class Word$XlConstants__xlHigh mixins Word$XlConstants {}
  declare class Word$XlConstants__xlInside mixins Word$XlConstants {}
  declare class Word$XlConstants__xlJustify mixins Word$XlConstants {}
  declare class Word$XlConstants__xlLeft mixins Word$XlConstants {}
  declare class Word$XlConstants__xlLightDown mixins Word$XlConstants {}
  declare class Word$XlConstants__xlLightHorizontal mixins Word$XlConstants {}
  declare class Word$XlConstants__xlLightUp mixins Word$XlConstants {}
  declare class Word$XlConstants__xlLightVertical mixins Word$XlConstants {}
  declare class Word$XlConstants__xlLow mixins Word$XlConstants {}
  declare class Word$XlConstants__xlMaximum mixins Word$XlConstants {}
  declare class Word$XlConstants__xlMinimum mixins Word$XlConstants {}
  declare class Word$XlConstants__xlMinusValues mixins Word$XlConstants {}
  declare class Word$XlConstants__xlNextToAxis mixins Word$XlConstants {}
  declare class Word$XlConstants__xlNone mixins Word$XlConstants {}
  declare class Word$XlConstants__xlOpaque mixins Word$XlConstants {}
  declare class Word$XlConstants__xlOutside mixins Word$XlConstants {}
  declare class Word$XlConstants__xlPercent mixins Word$XlConstants {}
  declare class Word$XlConstants__xlPlus mixins Word$XlConstants {}
  declare class Word$XlConstants__xlPlusValues mixins Word$XlConstants {}
  declare class Word$XlConstants__xlRight mixins Word$XlConstants {}
  declare class Word$XlConstants__xlScale mixins Word$XlConstants {}
  declare class Word$XlConstants__xlSemiGray75 mixins Word$XlConstants {}
  declare class Word$XlConstants__xlShowLabel mixins Word$XlConstants {}
  declare class Word$XlConstants__xlShowLabelAndPercent
    mixins Word$XlConstants {}
  declare class Word$XlConstants__xlShowPercent mixins Word$XlConstants {}
  declare class Word$XlConstants__xlShowValue mixins Word$XlConstants {}
  declare class Word$XlConstants__xlSingle mixins Word$XlConstants {}
  declare class Word$XlConstants__xlSolid mixins Word$XlConstants {}
  declare class Word$XlConstants__xlSquare mixins Word$XlConstants {}
  declare class Word$XlConstants__xlStar mixins Word$XlConstants {}
  declare class Word$XlConstants__xlStError mixins Word$XlConstants {}
  declare class Word$XlConstants__xlTop mixins Word$XlConstants {}
  declare class Word$XlConstants__xlTransparent mixins Word$XlConstants {}
  declare class Word$XlConstants__xlTriangle mixins Word$XlConstants {}

  declare class Word$XlCopyPictureFormat {
    constructor(...args: empty): mixed;
    static +xlBitmap: Class<Word$XlCopyPictureFormat__xlBitmap> &
      Word$XlCopyPictureFormat__xlBitmap &
      2; // 2
    static +xlPicture: Class<Word$XlCopyPictureFormat__xlPicture> &
      Word$XlCopyPictureFormat__xlPicture &
      -4147; // -4147
  }

  declare class Word$XlCopyPictureFormat__xlBitmap
    mixins Word$XlCopyPictureFormat {}
  declare class Word$XlCopyPictureFormat__xlPicture
    mixins Word$XlCopyPictureFormat {}

  declare class Word$XlDataLabelPosition {
    constructor(...args: empty): mixed;
    static +xlLabelPositionAbove: Class<Word$XlDataLabelPosition__xlLabelPositionAbove> &
      Word$XlDataLabelPosition__xlLabelPositionAbove &
      0; // 0
    static +xlLabelPositionBelow: Class<Word$XlDataLabelPosition__xlLabelPositionBelow> &
      Word$XlDataLabelPosition__xlLabelPositionBelow &
      1; // 1
    static +xlLabelPositionBestFit: Class<Word$XlDataLabelPosition__xlLabelPositionBestFit> &
      Word$XlDataLabelPosition__xlLabelPositionBestFit &
      5; // 5
    static +xlLabelPositionCenter: Class<Word$XlDataLabelPosition__xlLabelPositionCenter> &
      Word$XlDataLabelPosition__xlLabelPositionCenter &
      -4108; // -4108
    static +xlLabelPositionCustom: Class<Word$XlDataLabelPosition__xlLabelPositionCustom> &
      Word$XlDataLabelPosition__xlLabelPositionCustom &
      7; // 7
    static +xlLabelPositionInsideBase: Class<Word$XlDataLabelPosition__xlLabelPositionInsideBase> &
      Word$XlDataLabelPosition__xlLabelPositionInsideBase &
      4; // 4
    static +xlLabelPositionInsideEnd: Class<Word$XlDataLabelPosition__xlLabelPositionInsideEnd> &
      Word$XlDataLabelPosition__xlLabelPositionInsideEnd &
      3; // 3
    static +xlLabelPositionLeft: Class<Word$XlDataLabelPosition__xlLabelPositionLeft> &
      Word$XlDataLabelPosition__xlLabelPositionLeft &
      -4131; // -4131
    static +xlLabelPositionMixed: Class<Word$XlDataLabelPosition__xlLabelPositionMixed> &
      Word$XlDataLabelPosition__xlLabelPositionMixed &
      6; // 6
    static +xlLabelPositionOutsideEnd: Class<Word$XlDataLabelPosition__xlLabelPositionOutsideEnd> &
      Word$XlDataLabelPosition__xlLabelPositionOutsideEnd &
      2; // 2
    static +xlLabelPositionRight: Class<Word$XlDataLabelPosition__xlLabelPositionRight> &
      Word$XlDataLabelPosition__xlLabelPositionRight &
      -4152; // -4152
  }

  declare class Word$XlDataLabelPosition__xlLabelPositionAbove
    mixins Word$XlDataLabelPosition {}
  declare class Word$XlDataLabelPosition__xlLabelPositionBelow
    mixins Word$XlDataLabelPosition {}
  declare class Word$XlDataLabelPosition__xlLabelPositionBestFit
    mixins Word$XlDataLabelPosition {}
  declare class Word$XlDataLabelPosition__xlLabelPositionCenter
    mixins Word$XlDataLabelPosition {}
  declare class Word$XlDataLabelPosition__xlLabelPositionCustom
    mixins Word$XlDataLabelPosition {}
  declare class Word$XlDataLabelPosition__xlLabelPositionInsideBase
    mixins Word$XlDataLabelPosition {}
  declare class Word$XlDataLabelPosition__xlLabelPositionInsideEnd
    mixins Word$XlDataLabelPosition {}
  declare class Word$XlDataLabelPosition__xlLabelPositionLeft
    mixins Word$XlDataLabelPosition {}
  declare class Word$XlDataLabelPosition__xlLabelPositionMixed
    mixins Word$XlDataLabelPosition {}
  declare class Word$XlDataLabelPosition__xlLabelPositionOutsideEnd
    mixins Word$XlDataLabelPosition {}
  declare class Word$XlDataLabelPosition__xlLabelPositionRight
    mixins Word$XlDataLabelPosition {}

  declare class Word$XlDataLabelSeparator {
    constructor(...args: empty): mixed;
    static +xlDataLabelSeparatorDefault: Class<Word$XlDataLabelSeparator__xlDataLabelSeparatorDefault> &
      Word$XlDataLabelSeparator__xlDataLabelSeparatorDefault &
      1; // 1
  }

  declare class Word$XlDataLabelSeparator__xlDataLabelSeparatorDefault
    mixins Word$XlDataLabelSeparator {}

  declare class Word$XlDataLabelsType {
    constructor(...args: empty): mixed;
    static +xlDataLabelsShowBubbleSizes: Class<Word$XlDataLabelsType__xlDataLabelsShowBubbleSizes> &
      Word$XlDataLabelsType__xlDataLabelsShowBubbleSizes &
      6; // 6
    static +xlDataLabelsShowLabel: Class<Word$XlDataLabelsType__xlDataLabelsShowLabel> &
      Word$XlDataLabelsType__xlDataLabelsShowLabel &
      4; // 4
    static +xlDataLabelsShowLabelAndPercent: Class<Word$XlDataLabelsType__xlDataLabelsShowLabelAndPercent> &
      Word$XlDataLabelsType__xlDataLabelsShowLabelAndPercent &
      5; // 5
    static +xlDataLabelsShowNone: Class<Word$XlDataLabelsType__xlDataLabelsShowNone> &
      Word$XlDataLabelsType__xlDataLabelsShowNone &
      -4142; // -4142
    static +xlDataLabelsShowPercent: Class<Word$XlDataLabelsType__xlDataLabelsShowPercent> &
      Word$XlDataLabelsType__xlDataLabelsShowPercent &
      3; // 3
    static +xlDataLabelsShowValue: Class<Word$XlDataLabelsType__xlDataLabelsShowValue> &
      Word$XlDataLabelsType__xlDataLabelsShowValue &
      2; // 2
  }

  declare class Word$XlDataLabelsType__xlDataLabelsShowBubbleSizes
    mixins Word$XlDataLabelsType {}
  declare class Word$XlDataLabelsType__xlDataLabelsShowLabel
    mixins Word$XlDataLabelsType {}
  declare class Word$XlDataLabelsType__xlDataLabelsShowLabelAndPercent
    mixins Word$XlDataLabelsType {}
  declare class Word$XlDataLabelsType__xlDataLabelsShowNone
    mixins Word$XlDataLabelsType {}
  declare class Word$XlDataLabelsType__xlDataLabelsShowPercent
    mixins Word$XlDataLabelsType {}
  declare class Word$XlDataLabelsType__xlDataLabelsShowValue
    mixins Word$XlDataLabelsType {}

  declare class Word$XlDisplayBlanksAs {
    constructor(...args: empty): mixed;
    static +xlInterpolated: Class<Word$XlDisplayBlanksAs__xlInterpolated> &
      Word$XlDisplayBlanksAs__xlInterpolated &
      3; // 3
    static +xlNotPlotted: Class<Word$XlDisplayBlanksAs__xlNotPlotted> &
      Word$XlDisplayBlanksAs__xlNotPlotted &
      1; // 1
    static +xlZero: Class<Word$XlDisplayBlanksAs__xlZero> &
      Word$XlDisplayBlanksAs__xlZero &
      2; // 2
  }

  declare class Word$XlDisplayBlanksAs__xlInterpolated
    mixins Word$XlDisplayBlanksAs {}
  declare class Word$XlDisplayBlanksAs__xlNotPlotted
    mixins Word$XlDisplayBlanksAs {}
  declare class Word$XlDisplayBlanksAs__xlZero mixins Word$XlDisplayBlanksAs {}

  declare class Word$XlDisplayUnit {
    constructor(...args: empty): mixed;
    static +xlHundredMillions: Class<Word$XlDisplayUnit__xlHundredMillions> &
      Word$XlDisplayUnit__xlHundredMillions &
      -8; // -8
    static +xlHundreds: Class<Word$XlDisplayUnit__xlHundreds> &
      Word$XlDisplayUnit__xlHundreds &
      -2; // -2
    static +xlHundredThousands: Class<Word$XlDisplayUnit__xlHundredThousands> &
      Word$XlDisplayUnit__xlHundredThousands &
      -5; // -5
    static +xlMillionMillions: Class<Word$XlDisplayUnit__xlMillionMillions> &
      Word$XlDisplayUnit__xlMillionMillions &
      -10; // -10
    static +xlMillions: Class<Word$XlDisplayUnit__xlMillions> &
      Word$XlDisplayUnit__xlMillions &
      -6; // -6
    static +xlTenMillions: Class<Word$XlDisplayUnit__xlTenMillions> &
      Word$XlDisplayUnit__xlTenMillions &
      -7; // -7
    static +xlTenThousands: Class<Word$XlDisplayUnit__xlTenThousands> &
      Word$XlDisplayUnit__xlTenThousands &
      -4; // -4
    static +xlThousandMillions: Class<Word$XlDisplayUnit__xlThousandMillions> &
      Word$XlDisplayUnit__xlThousandMillions &
      -9; // -9
    static +xlThousands: Class<Word$XlDisplayUnit__xlThousands> &
      Word$XlDisplayUnit__xlThousands &
      -3; // -3
  }

  declare class Word$XlDisplayUnit__xlHundredMillions
    mixins Word$XlDisplayUnit {}
  declare class Word$XlDisplayUnit__xlHundreds mixins Word$XlDisplayUnit {}
  declare class Word$XlDisplayUnit__xlHundredThousands
    mixins Word$XlDisplayUnit {}
  declare class Word$XlDisplayUnit__xlMillionMillions
    mixins Word$XlDisplayUnit {}
  declare class Word$XlDisplayUnit__xlMillions mixins Word$XlDisplayUnit {}
  declare class Word$XlDisplayUnit__xlTenMillions mixins Word$XlDisplayUnit {}
  declare class Word$XlDisplayUnit__xlTenThousands mixins Word$XlDisplayUnit {}
  declare class Word$XlDisplayUnit__xlThousandMillions
    mixins Word$XlDisplayUnit {}
  declare class Word$XlDisplayUnit__xlThousands mixins Word$XlDisplayUnit {}

  declare class Word$XlEndStyleCap {
    constructor(...args: empty): mixed;
    static +xlCap: Class<Word$XlEndStyleCap__xlCap> &
      Word$XlEndStyleCap__xlCap &
      1; // 1
    static +xlNoCap: Class<Word$XlEndStyleCap__xlNoCap> &
      Word$XlEndStyleCap__xlNoCap &
      2; // 2
  }

  declare class Word$XlEndStyleCap__xlCap mixins Word$XlEndStyleCap {}
  declare class Word$XlEndStyleCap__xlNoCap mixins Word$XlEndStyleCap {}

  declare class Word$XlErrorBarDirection {
    constructor(...args: empty): mixed;
    static +xlChartX: Class<Word$XlErrorBarDirection__xlChartX> &
      Word$XlErrorBarDirection__xlChartX &
      -4168; // -4168
    static +xlChartY: Class<Word$XlErrorBarDirection__xlChartY> &
      Word$XlErrorBarDirection__xlChartY &
      1; // 1
  }

  declare class Word$XlErrorBarDirection__xlChartX
    mixins Word$XlErrorBarDirection {}
  declare class Word$XlErrorBarDirection__xlChartY
    mixins Word$XlErrorBarDirection {}

  declare class Word$XlErrorBarInclude {
    constructor(...args: empty): mixed;
    static +xlErrorBarIncludeBoth: Class<Word$XlErrorBarInclude__xlErrorBarIncludeBoth> &
      Word$XlErrorBarInclude__xlErrorBarIncludeBoth &
      1; // 1
    static +xlErrorBarIncludeMinusValues: Class<Word$XlErrorBarInclude__xlErrorBarIncludeMinusValues> &
      Word$XlErrorBarInclude__xlErrorBarIncludeMinusValues &
      3; // 3
    static +xlErrorBarIncludeNone: Class<Word$XlErrorBarInclude__xlErrorBarIncludeNone> &
      Word$XlErrorBarInclude__xlErrorBarIncludeNone &
      -4142; // -4142
    static +xlErrorBarIncludePlusValues: Class<Word$XlErrorBarInclude__xlErrorBarIncludePlusValues> &
      Word$XlErrorBarInclude__xlErrorBarIncludePlusValues &
      2; // 2
  }

  declare class Word$XlErrorBarInclude__xlErrorBarIncludeBoth
    mixins Word$XlErrorBarInclude {}
  declare class Word$XlErrorBarInclude__xlErrorBarIncludeMinusValues
    mixins Word$XlErrorBarInclude {}
  declare class Word$XlErrorBarInclude__xlErrorBarIncludeNone
    mixins Word$XlErrorBarInclude {}
  declare class Word$XlErrorBarInclude__xlErrorBarIncludePlusValues
    mixins Word$XlErrorBarInclude {}

  declare class Word$XlErrorBarType {
    constructor(...args: empty): mixed;
    static +xlErrorBarTypeCustom: Class<Word$XlErrorBarType__xlErrorBarTypeCustom> &
      Word$XlErrorBarType__xlErrorBarTypeCustom &
      -4114; // -4114
    static +xlErrorBarTypeFixedValue: Class<Word$XlErrorBarType__xlErrorBarTypeFixedValue> &
      Word$XlErrorBarType__xlErrorBarTypeFixedValue &
      1; // 1
    static +xlErrorBarTypePercent: Class<Word$XlErrorBarType__xlErrorBarTypePercent> &
      Word$XlErrorBarType__xlErrorBarTypePercent &
      2; // 2
    static +xlErrorBarTypeStDev: Class<Word$XlErrorBarType__xlErrorBarTypeStDev> &
      Word$XlErrorBarType__xlErrorBarTypeStDev &
      -4155; // -4155
    static +xlErrorBarTypeStError: Class<Word$XlErrorBarType__xlErrorBarTypeStError> &
      Word$XlErrorBarType__xlErrorBarTypeStError &
      4; // 4
  }

  declare class Word$XlErrorBarType__xlErrorBarTypeCustom
    mixins Word$XlErrorBarType {}
  declare class Word$XlErrorBarType__xlErrorBarTypeFixedValue
    mixins Word$XlErrorBarType {}
  declare class Word$XlErrorBarType__xlErrorBarTypePercent
    mixins Word$XlErrorBarType {}
  declare class Word$XlErrorBarType__xlErrorBarTypeStDev
    mixins Word$XlErrorBarType {}
  declare class Word$XlErrorBarType__xlErrorBarTypeStError
    mixins Word$XlErrorBarType {}

  declare class Word$XlHAlign {
    constructor(...args: empty): mixed;
    static +xlHAlignCenter: Class<Word$XlHAlign__xlHAlignCenter> &
      Word$XlHAlign__xlHAlignCenter &
      -4108; // -4108
    static +xlHAlignCenterAcrossSelection: Class<Word$XlHAlign__xlHAlignCenterAcrossSelection> &
      Word$XlHAlign__xlHAlignCenterAcrossSelection &
      7; // 7
    static +xlHAlignDistributed: Class<Word$XlHAlign__xlHAlignDistributed> &
      Word$XlHAlign__xlHAlignDistributed &
      -4117; // -4117
    static +xlHAlignFill: Class<Word$XlHAlign__xlHAlignFill> &
      Word$XlHAlign__xlHAlignFill &
      5; // 5
    static +xlHAlignGeneral: Class<Word$XlHAlign__xlHAlignGeneral> &
      Word$XlHAlign__xlHAlignGeneral &
      1; // 1
    static +xlHAlignJustify: Class<Word$XlHAlign__xlHAlignJustify> &
      Word$XlHAlign__xlHAlignJustify &
      -4130; // -4130
    static +xlHAlignLeft: Class<Word$XlHAlign__xlHAlignLeft> &
      Word$XlHAlign__xlHAlignLeft &
      -4131; // -4131
    static +xlHAlignRight: Class<Word$XlHAlign__xlHAlignRight> &
      Word$XlHAlign__xlHAlignRight &
      -4152; // -4152
  }

  declare class Word$XlHAlign__xlHAlignCenter mixins Word$XlHAlign {}
  declare class Word$XlHAlign__xlHAlignCenterAcrossSelection
    mixins Word$XlHAlign {}
  declare class Word$XlHAlign__xlHAlignDistributed mixins Word$XlHAlign {}
  declare class Word$XlHAlign__xlHAlignFill mixins Word$XlHAlign {}
  declare class Word$XlHAlign__xlHAlignGeneral mixins Word$XlHAlign {}
  declare class Word$XlHAlign__xlHAlignJustify mixins Word$XlHAlign {}
  declare class Word$XlHAlign__xlHAlignLeft mixins Word$XlHAlign {}
  declare class Word$XlHAlign__xlHAlignRight mixins Word$XlHAlign {}

  declare class Word$XlLegendPosition {
    constructor(...args: empty): mixed;
    static +xlLegendPositionBottom: Class<Word$XlLegendPosition__xlLegendPositionBottom> &
      Word$XlLegendPosition__xlLegendPositionBottom &
      -4107; // -4107
    static +xlLegendPositionCorner: Class<Word$XlLegendPosition__xlLegendPositionCorner> &
      Word$XlLegendPosition__xlLegendPositionCorner &
      2; // 2
    static +xlLegendPositionCustom: Class<Word$XlLegendPosition__xlLegendPositionCustom> &
      Word$XlLegendPosition__xlLegendPositionCustom &
      -4161; // -4161
    static +xlLegendPositionLeft: Class<Word$XlLegendPosition__xlLegendPositionLeft> &
      Word$XlLegendPosition__xlLegendPositionLeft &
      -4131; // -4131
    static +xlLegendPositionRight: Class<Word$XlLegendPosition__xlLegendPositionRight> &
      Word$XlLegendPosition__xlLegendPositionRight &
      -4152; // -4152
    static +xlLegendPositionTop: Class<Word$XlLegendPosition__xlLegendPositionTop> &
      Word$XlLegendPosition__xlLegendPositionTop &
      -4160; // -4160
  }

  declare class Word$XlLegendPosition__xlLegendPositionBottom
    mixins Word$XlLegendPosition {}
  declare class Word$XlLegendPosition__xlLegendPositionCorner
    mixins Word$XlLegendPosition {}
  declare class Word$XlLegendPosition__xlLegendPositionCustom
    mixins Word$XlLegendPosition {}
  declare class Word$XlLegendPosition__xlLegendPositionLeft
    mixins Word$XlLegendPosition {}
  declare class Word$XlLegendPosition__xlLegendPositionRight
    mixins Word$XlLegendPosition {}
  declare class Word$XlLegendPosition__xlLegendPositionTop
    mixins Word$XlLegendPosition {}

  declare class Word$XlLineStyle {
    constructor(...args: empty): mixed;
    static +xlContinuous: Class<Word$XlLineStyle__xlContinuous> &
      Word$XlLineStyle__xlContinuous &
      1; // 1
    static +xlDash: Class<Word$XlLineStyle__xlDash> &
      Word$XlLineStyle__xlDash &
      -4115; // -4115
    static +xlDashDot: Class<Word$XlLineStyle__xlDashDot> &
      Word$XlLineStyle__xlDashDot &
      4; // 4
    static +xlDashDotDot: Class<Word$XlLineStyle__xlDashDotDot> &
      Word$XlLineStyle__xlDashDotDot &
      5; // 5
    static +xlDot: Class<Word$XlLineStyle__xlDot> &
      Word$XlLineStyle__xlDot &
      -4118; // -4118
    static +xlDouble: Class<Word$XlLineStyle__xlDouble> &
      Word$XlLineStyle__xlDouble &
      -4119; // -4119
    static +xlLineStyleNone: Class<Word$XlLineStyle__xlLineStyleNone> &
      Word$XlLineStyle__xlLineStyleNone &
      -4142; // -4142
    static +xlSlantDashDot: Class<Word$XlLineStyle__xlSlantDashDot> &
      Word$XlLineStyle__xlSlantDashDot &
      13; // 13
  }

  declare class Word$XlLineStyle__xlContinuous mixins Word$XlLineStyle {}
  declare class Word$XlLineStyle__xlDash mixins Word$XlLineStyle {}
  declare class Word$XlLineStyle__xlDashDot mixins Word$XlLineStyle {}
  declare class Word$XlLineStyle__xlDashDotDot mixins Word$XlLineStyle {}
  declare class Word$XlLineStyle__xlDot mixins Word$XlLineStyle {}
  declare class Word$XlLineStyle__xlDouble mixins Word$XlLineStyle {}
  declare class Word$XlLineStyle__xlLineStyleNone mixins Word$XlLineStyle {}
  declare class Word$XlLineStyle__xlSlantDashDot mixins Word$XlLineStyle {}

  declare class Word$XlMarkerStyle {
    constructor(...args: empty): mixed;
    static +xlMarkerStyleAutomatic: Class<Word$XlMarkerStyle__xlMarkerStyleAutomatic> &
      Word$XlMarkerStyle__xlMarkerStyleAutomatic &
      -4105; // -4105
    static +xlMarkerStyleCircle: Class<Word$XlMarkerStyle__xlMarkerStyleCircle> &
      Word$XlMarkerStyle__xlMarkerStyleCircle &
      8; // 8
    static +xlMarkerStyleDash: Class<Word$XlMarkerStyle__xlMarkerStyleDash> &
      Word$XlMarkerStyle__xlMarkerStyleDash &
      -4115; // -4115
    static +xlMarkerStyleDiamond: Class<Word$XlMarkerStyle__xlMarkerStyleDiamond> &
      Word$XlMarkerStyle__xlMarkerStyleDiamond &
      2; // 2
    static +xlMarkerStyleDot: Class<Word$XlMarkerStyle__xlMarkerStyleDot> &
      Word$XlMarkerStyle__xlMarkerStyleDot &
      -4118; // -4118
    static +xlMarkerStyleNone: Class<Word$XlMarkerStyle__xlMarkerStyleNone> &
      Word$XlMarkerStyle__xlMarkerStyleNone &
      -4142; // -4142
    static +xlMarkerStylePicture: Class<Word$XlMarkerStyle__xlMarkerStylePicture> &
      Word$XlMarkerStyle__xlMarkerStylePicture &
      -4147; // -4147
    static +xlMarkerStylePlus: Class<Word$XlMarkerStyle__xlMarkerStylePlus> &
      Word$XlMarkerStyle__xlMarkerStylePlus &
      9; // 9
    static +xlMarkerStyleSquare: Class<Word$XlMarkerStyle__xlMarkerStyleSquare> &
      Word$XlMarkerStyle__xlMarkerStyleSquare &
      1; // 1
    static +xlMarkerStyleStar: Class<Word$XlMarkerStyle__xlMarkerStyleStar> &
      Word$XlMarkerStyle__xlMarkerStyleStar &
      5; // 5
    static +xlMarkerStyleTriangle: Class<Word$XlMarkerStyle__xlMarkerStyleTriangle> &
      Word$XlMarkerStyle__xlMarkerStyleTriangle &
      3; // 3
    static +xlMarkerStyleX: Class<Word$XlMarkerStyle__xlMarkerStyleX> &
      Word$XlMarkerStyle__xlMarkerStyleX &
      -4168; // -4168
  }

  declare class Word$XlMarkerStyle__xlMarkerStyleAutomatic
    mixins Word$XlMarkerStyle {}
  declare class Word$XlMarkerStyle__xlMarkerStyleCircle
    mixins Word$XlMarkerStyle {}
  declare class Word$XlMarkerStyle__xlMarkerStyleDash
    mixins Word$XlMarkerStyle {}
  declare class Word$XlMarkerStyle__xlMarkerStyleDiamond
    mixins Word$XlMarkerStyle {}
  declare class Word$XlMarkerStyle__xlMarkerStyleDot
    mixins Word$XlMarkerStyle {}
  declare class Word$XlMarkerStyle__xlMarkerStyleNone
    mixins Word$XlMarkerStyle {}
  declare class Word$XlMarkerStyle__xlMarkerStylePicture
    mixins Word$XlMarkerStyle {}
  declare class Word$XlMarkerStyle__xlMarkerStylePlus
    mixins Word$XlMarkerStyle {}
  declare class Word$XlMarkerStyle__xlMarkerStyleSquare
    mixins Word$XlMarkerStyle {}
  declare class Word$XlMarkerStyle__xlMarkerStyleStar
    mixins Word$XlMarkerStyle {}
  declare class Word$XlMarkerStyle__xlMarkerStyleTriangle
    mixins Word$XlMarkerStyle {}
  declare class Word$XlMarkerStyle__xlMarkerStyleX mixins Word$XlMarkerStyle {}

  declare class Word$XlOrientation {
    constructor(...args: empty): mixed;
    static +xlDownward: Class<Word$XlOrientation__xlDownward> &
      Word$XlOrientation__xlDownward &
      -4170; // -4170
    static +xlHorizontal: Class<Word$XlOrientation__xlHorizontal> &
      Word$XlOrientation__xlHorizontal &
      -4128; // -4128
    static +xlUpward: Class<Word$XlOrientation__xlUpward> &
      Word$XlOrientation__xlUpward &
      -4171; // -4171
    static +xlVertical: Class<Word$XlOrientation__xlVertical> &
      Word$XlOrientation__xlVertical &
      -4166; // -4166
  }

  declare class Word$XlOrientation__xlDownward mixins Word$XlOrientation {}
  declare class Word$XlOrientation__xlHorizontal mixins Word$XlOrientation {}
  declare class Word$XlOrientation__xlUpward mixins Word$XlOrientation {}
  declare class Word$XlOrientation__xlVertical mixins Word$XlOrientation {}

  declare class Word$XlPattern {
    constructor(...args: empty): mixed;
    static +xlPatternAutomatic: Class<Word$XlPattern__xlPatternAutomatic> &
      Word$XlPattern__xlPatternAutomatic &
      -4105; // -4105
    static +xlPatternChecker: Class<Word$XlPattern__xlPatternChecker> &
      Word$XlPattern__xlPatternChecker &
      9; // 9
    static +xlPatternCrissCross: Class<Word$XlPattern__xlPatternCrissCross> &
      Word$XlPattern__xlPatternCrissCross &
      16; // 16
    static +xlPatternDown: Class<Word$XlPattern__xlPatternDown> &
      Word$XlPattern__xlPatternDown &
      -4121; // -4121
    static +xlPatternGray16: Class<Word$XlPattern__xlPatternGray16> &
      Word$XlPattern__xlPatternGray16 &
      17; // 17
    static +xlPatternGray25: Class<Word$XlPattern__xlPatternGray25> &
      Word$XlPattern__xlPatternGray25 &
      -4124; // -4124
    static +xlPatternGray50: Class<Word$XlPattern__xlPatternGray50> &
      Word$XlPattern__xlPatternGray50 &
      -4125; // -4125
    static +xlPatternGray75: Class<Word$XlPattern__xlPatternGray75> &
      Word$XlPattern__xlPatternGray75 &
      -4126; // -4126
    static +xlPatternGray8: Class<Word$XlPattern__xlPatternGray8> &
      Word$XlPattern__xlPatternGray8 &
      18; // 18
    static +xlPatternGrid: Class<Word$XlPattern__xlPatternGrid> &
      Word$XlPattern__xlPatternGrid &
      15; // 15
    static +xlPatternHorizontal: Class<Word$XlPattern__xlPatternHorizontal> &
      Word$XlPattern__xlPatternHorizontal &
      -4128; // -4128
    static +xlPatternLightDown: Class<Word$XlPattern__xlPatternLightDown> &
      Word$XlPattern__xlPatternLightDown &
      13; // 13
    static +xlPatternLightHorizontal: Class<Word$XlPattern__xlPatternLightHorizontal> &
      Word$XlPattern__xlPatternLightHorizontal &
      11; // 11
    static +xlPatternLightUp: Class<Word$XlPattern__xlPatternLightUp> &
      Word$XlPattern__xlPatternLightUp &
      14; // 14
    static +xlPatternLightVertical: Class<Word$XlPattern__xlPatternLightVertical> &
      Word$XlPattern__xlPatternLightVertical &
      12; // 12
    static +xlPatternLinearGradient: Class<Word$XlPattern__xlPatternLinearGradient> &
      Word$XlPattern__xlPatternLinearGradient &
      4000; // 4000
    static +xlPatternNone: Class<Word$XlPattern__xlPatternNone> &
      Word$XlPattern__xlPatternNone &
      -4142; // -4142
    static +xlPatternRectangularGradient: Class<Word$XlPattern__xlPatternRectangularGradient> &
      Word$XlPattern__xlPatternRectangularGradient &
      4001; // 4001
    static +xlPatternSemiGray75: Class<Word$XlPattern__xlPatternSemiGray75> &
      Word$XlPattern__xlPatternSemiGray75 &
      10; // 10
    static +xlPatternSolid: Class<Word$XlPattern__xlPatternSolid> &
      Word$XlPattern__xlPatternSolid &
      1; // 1
    static +xlPatternUp: Class<Word$XlPattern__xlPatternUp> &
      Word$XlPattern__xlPatternUp &
      -4162; // -4162
    static +xlPatternVertical: Class<Word$XlPattern__xlPatternVertical> &
      Word$XlPattern__xlPatternVertical &
      -4166; // -4166
  }

  declare class Word$XlPattern__xlPatternAutomatic mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternChecker mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternCrissCross mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternDown mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternGray16 mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternGray25 mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternGray50 mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternGray75 mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternGray8 mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternGrid mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternHorizontal mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternLightDown mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternLightHorizontal
    mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternLightUp mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternLightVertical mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternLinearGradient mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternNone mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternRectangularGradient
    mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternSemiGray75 mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternSolid mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternUp mixins Word$XlPattern {}
  declare class Word$XlPattern__xlPatternVertical mixins Word$XlPattern {}

  declare class Word$XlPictureAppearance {
    constructor(...args: empty): mixed;
    static +xlPrinter: Class<Word$XlPictureAppearance__xlPrinter> &
      Word$XlPictureAppearance__xlPrinter &
      2; // 2
    static +xlScreen: Class<Word$XlPictureAppearance__xlScreen> &
      Word$XlPictureAppearance__xlScreen &
      1; // 1
  }

  declare class Word$XlPictureAppearance__xlPrinter
    mixins Word$XlPictureAppearance {}
  declare class Word$XlPictureAppearance__xlScreen
    mixins Word$XlPictureAppearance {}

  declare class Word$XlPieSliceIndex {
    constructor(...args: empty): mixed;
    static +xlCenterPoint: Class<Word$XlPieSliceIndex__xlCenterPoint> &
      Word$XlPieSliceIndex__xlCenterPoint &
      5; // 5
    static +xlInnerCenterPoint: Class<Word$XlPieSliceIndex__xlInnerCenterPoint> &
      Word$XlPieSliceIndex__xlInnerCenterPoint &
      8; // 8
    static +xlInnerClockwisePoint: Class<Word$XlPieSliceIndex__xlInnerClockwisePoint> &
      Word$XlPieSliceIndex__xlInnerClockwisePoint &
      7; // 7
    static +xlInnerCounterClockwisePoint: Class<Word$XlPieSliceIndex__xlInnerCounterClockwisePoint> &
      Word$XlPieSliceIndex__xlInnerCounterClockwisePoint &
      9; // 9
    static +xlMidClockwiseRadiusPoint: Class<Word$XlPieSliceIndex__xlMidClockwiseRadiusPoint> &
      Word$XlPieSliceIndex__xlMidClockwiseRadiusPoint &
      4; // 4
    static +xlMidCounterClockwiseRadiusPoint: Class<Word$XlPieSliceIndex__xlMidCounterClockwiseRadiusPoint> &
      Word$XlPieSliceIndex__xlMidCounterClockwiseRadiusPoint &
      6; // 6
    static +xlOuterCenterPoint: Class<Word$XlPieSliceIndex__xlOuterCenterPoint> &
      Word$XlPieSliceIndex__xlOuterCenterPoint &
      2; // 2
    static +xlOuterClockwisePoint: Class<Word$XlPieSliceIndex__xlOuterClockwisePoint> &
      Word$XlPieSliceIndex__xlOuterClockwisePoint &
      3; // 3
    static +xlOuterCounterClockwisePoint: Class<Word$XlPieSliceIndex__xlOuterCounterClockwisePoint> &
      Word$XlPieSliceIndex__xlOuterCounterClockwisePoint &
      1; // 1
  }

  declare class Word$XlPieSliceIndex__xlCenterPoint
    mixins Word$XlPieSliceIndex {}
  declare class Word$XlPieSliceIndex__xlInnerCenterPoint
    mixins Word$XlPieSliceIndex {}
  declare class Word$XlPieSliceIndex__xlInnerClockwisePoint
    mixins Word$XlPieSliceIndex {}
  declare class Word$XlPieSliceIndex__xlInnerCounterClockwisePoint
    mixins Word$XlPieSliceIndex {}
  declare class Word$XlPieSliceIndex__xlMidClockwiseRadiusPoint
    mixins Word$XlPieSliceIndex {}
  declare class Word$XlPieSliceIndex__xlMidCounterClockwiseRadiusPoint
    mixins Word$XlPieSliceIndex {}
  declare class Word$XlPieSliceIndex__xlOuterCenterPoint
    mixins Word$XlPieSliceIndex {}
  declare class Word$XlPieSliceIndex__xlOuterClockwisePoint
    mixins Word$XlPieSliceIndex {}
  declare class Word$XlPieSliceIndex__xlOuterCounterClockwisePoint
    mixins Word$XlPieSliceIndex {}

  declare class Word$XlPieSliceLocation {
    constructor(...args: empty): mixed;
    static +xlHorizontalCoordinate: Class<Word$XlPieSliceLocation__xlHorizontalCoordinate> &
      Word$XlPieSliceLocation__xlHorizontalCoordinate &
      1; // 1
    static +xlVerticalCoordinate: Class<Word$XlPieSliceLocation__xlVerticalCoordinate> &
      Word$XlPieSliceLocation__xlVerticalCoordinate &
      2; // 2
  }

  declare class Word$XlPieSliceLocation__xlHorizontalCoordinate
    mixins Word$XlPieSliceLocation {}
  declare class Word$XlPieSliceLocation__xlVerticalCoordinate
    mixins Word$XlPieSliceLocation {}

  declare class Word$XlPivotFieldOrientation {
    constructor(...args: empty): mixed;
    static +xlColumnField: Class<Word$XlPivotFieldOrientation__xlColumnField> &
      Word$XlPivotFieldOrientation__xlColumnField &
      2; // 2
    static +xlDataField: Class<Word$XlPivotFieldOrientation__xlDataField> &
      Word$XlPivotFieldOrientation__xlDataField &
      4; // 4
    static +xlHidden: Class<Word$XlPivotFieldOrientation__xlHidden> &
      Word$XlPivotFieldOrientation__xlHidden &
      0; // 0
    static +xlPageField: Class<Word$XlPivotFieldOrientation__xlPageField> &
      Word$XlPivotFieldOrientation__xlPageField &
      3; // 3
    static +xlRowField: Class<Word$XlPivotFieldOrientation__xlRowField> &
      Word$XlPivotFieldOrientation__xlRowField &
      1; // 1
  }

  declare class Word$XlPivotFieldOrientation__xlColumnField
    mixins Word$XlPivotFieldOrientation {}
  declare class Word$XlPivotFieldOrientation__xlDataField
    mixins Word$XlPivotFieldOrientation {}
  declare class Word$XlPivotFieldOrientation__xlHidden
    mixins Word$XlPivotFieldOrientation {}
  declare class Word$XlPivotFieldOrientation__xlPageField
    mixins Word$XlPivotFieldOrientation {}
  declare class Word$XlPivotFieldOrientation__xlRowField
    mixins Word$XlPivotFieldOrientation {}

  declare class Word$XlReadingOrder {
    constructor(...args: empty): mixed;
    static +xlContext: Class<Word$XlReadingOrder__xlContext> &
      Word$XlReadingOrder__xlContext &
      -5002; // -5002
    static +xlLTR: Class<Word$XlReadingOrder__xlLTR> &
      Word$XlReadingOrder__xlLTR &
      -5003; // -5003
    static +xlRTL: Class<Word$XlReadingOrder__xlRTL> &
      Word$XlReadingOrder__xlRTL &
      -5004; // -5004
  }

  declare class Word$XlReadingOrder__xlContext mixins Word$XlReadingOrder {}
  declare class Word$XlReadingOrder__xlLTR mixins Word$XlReadingOrder {}
  declare class Word$XlReadingOrder__xlRTL mixins Word$XlReadingOrder {}

  declare class Word$XlRgbColor {
    constructor(...args: empty): mixed;
    static +xlAliceBlue: Class<Word$XlRgbColor__xlAliceBlue> &
      Word$XlRgbColor__xlAliceBlue &
      16775408; // 16775408
    static +xlAntiqueWhite: Class<Word$XlRgbColor__xlAntiqueWhite> &
      Word$XlRgbColor__xlAntiqueWhite &
      14150650; // 14150650
    static +xlAqua: Class<Word$XlRgbColor__xlAqua> &
      Word$XlRgbColor__xlAqua &
      16776960; // 16776960
    static +xlAquamarine: Class<Word$XlRgbColor__xlAquamarine> &
      Word$XlRgbColor__xlAquamarine &
      13959039; // 13959039
    static +xlAzure: Class<Word$XlRgbColor__xlAzure> &
      Word$XlRgbColor__xlAzure &
      16777200; // 16777200
    static +xlBeige: Class<Word$XlRgbColor__xlBeige> &
      Word$XlRgbColor__xlBeige &
      14480885; // 14480885
    static +xlBisque: Class<Word$XlRgbColor__xlBisque> &
      Word$XlRgbColor__xlBisque &
      12903679; // 12903679
    static +xlBlack: Class<Word$XlRgbColor__xlBlack> &
      Word$XlRgbColor__xlBlack &
      0; // 0
    static +xlBlanchedAlmond: Class<Word$XlRgbColor__xlBlanchedAlmond> &
      Word$XlRgbColor__xlBlanchedAlmond &
      13495295; // 13495295
    static +xlBlue: Class<Word$XlRgbColor__xlBlue> &
      Word$XlRgbColor__xlBlue &
      16711680; // 16711680
    static +xlBlueViolet: Class<Word$XlRgbColor__xlBlueViolet> &
      Word$XlRgbColor__xlBlueViolet &
      14822282; // 14822282
    static +xlBrown: Class<Word$XlRgbColor__xlBrown> &
      Word$XlRgbColor__xlBrown &
      2763429; // 2763429
    static +xlBurlyWood: Class<Word$XlRgbColor__xlBurlyWood> &
      Word$XlRgbColor__xlBurlyWood &
      8894686; // 8894686
    static +xlCadetBlue: Class<Word$XlRgbColor__xlCadetBlue> &
      Word$XlRgbColor__xlCadetBlue &
      10526303; // 10526303
    static +xlChartreuse: Class<Word$XlRgbColor__xlChartreuse> &
      Word$XlRgbColor__xlChartreuse &
      65407; // 65407
    static +xlCoral: Class<Word$XlRgbColor__xlCoral> &
      Word$XlRgbColor__xlCoral &
      5275647; // 5275647
    static +xlCornflowerBlue: Class<Word$XlRgbColor__xlCornflowerBlue> &
      Word$XlRgbColor__xlCornflowerBlue &
      15570276; // 15570276
    static +xlCornsilk: Class<Word$XlRgbColor__xlCornsilk> &
      Word$XlRgbColor__xlCornsilk &
      14481663; // 14481663
    static +xlCrimson: Class<Word$XlRgbColor__xlCrimson> &
      Word$XlRgbColor__xlCrimson &
      3937500; // 3937500
    static +xlDarkBlue: Class<Word$XlRgbColor__xlDarkBlue> &
      Word$XlRgbColor__xlDarkBlue &
      9109504; // 9109504
    static +xlDarkCyan: Class<Word$XlRgbColor__xlDarkCyan> &
      Word$XlRgbColor__xlDarkCyan &
      9145088; // 9145088
    static +xlDarkGoldenrod: Class<Word$XlRgbColor__xlDarkGoldenrod> &
      Word$XlRgbColor__xlDarkGoldenrod &
      755384; // 755384
    static +xlDarkGray: Class<Word$XlRgbColor__xlDarkGray> &
      Word$XlRgbColor__xlDarkGray &
      11119017; // 11119017
    static +xlDarkGreen: Class<Word$XlRgbColor__xlDarkGreen> &
      Word$XlRgbColor__xlDarkGreen &
      25600; // 25600
    static +xlDarkGrey: Class<Word$XlRgbColor__xlDarkGrey> &
      Word$XlRgbColor__xlDarkGrey &
      11119017; // 11119017
    static +xlDarkKhaki: Class<Word$XlRgbColor__xlDarkKhaki> &
      Word$XlRgbColor__xlDarkKhaki &
      7059389; // 7059389
    static +xlDarkMagenta: Class<Word$XlRgbColor__xlDarkMagenta> &
      Word$XlRgbColor__xlDarkMagenta &
      9109643; // 9109643
    static +xlDarkOliveGreen: Class<Word$XlRgbColor__xlDarkOliveGreen> &
      Word$XlRgbColor__xlDarkOliveGreen &
      3107669; // 3107669
    static +xlDarkOrange: Class<Word$XlRgbColor__xlDarkOrange> &
      Word$XlRgbColor__xlDarkOrange &
      36095; // 36095
    static +xlDarkOrchid: Class<Word$XlRgbColor__xlDarkOrchid> &
      Word$XlRgbColor__xlDarkOrchid &
      13382297; // 13382297
    static +xlDarkRed: Class<Word$XlRgbColor__xlDarkRed> &
      Word$XlRgbColor__xlDarkRed &
      139; // 139
    static +xlDarkSalmon: Class<Word$XlRgbColor__xlDarkSalmon> &
      Word$XlRgbColor__xlDarkSalmon &
      8034025; // 8034025
    static +xlDarkSeaGreen: Class<Word$XlRgbColor__xlDarkSeaGreen> &
      Word$XlRgbColor__xlDarkSeaGreen &
      9419919; // 9419919
    static +xlDarkSlateBlue: Class<Word$XlRgbColor__xlDarkSlateBlue> &
      Word$XlRgbColor__xlDarkSlateBlue &
      9125192; // 9125192
    static +xlDarkSlateGray: Class<Word$XlRgbColor__xlDarkSlateGray> &
      Word$XlRgbColor__xlDarkSlateGray &
      5197615; // 5197615
    static +xlDarkSlateGrey: Class<Word$XlRgbColor__xlDarkSlateGrey> &
      Word$XlRgbColor__xlDarkSlateGrey &
      5197615; // 5197615
    static +xlDarkTurquoise: Class<Word$XlRgbColor__xlDarkTurquoise> &
      Word$XlRgbColor__xlDarkTurquoise &
      13749760; // 13749760
    static +xlDarkViolet: Class<Word$XlRgbColor__xlDarkViolet> &
      Word$XlRgbColor__xlDarkViolet &
      13828244; // 13828244
    static +xlDeepPink: Class<Word$XlRgbColor__xlDeepPink> &
      Word$XlRgbColor__xlDeepPink &
      9639167; // 9639167
    static +xlDeepSkyBlue: Class<Word$XlRgbColor__xlDeepSkyBlue> &
      Word$XlRgbColor__xlDeepSkyBlue &
      16760576; // 16760576
    static +xlDimGray: Class<Word$XlRgbColor__xlDimGray> &
      Word$XlRgbColor__xlDimGray &
      6908265; // 6908265
    static +xlDimGrey: Class<Word$XlRgbColor__xlDimGrey> &
      Word$XlRgbColor__xlDimGrey &
      6908265; // 6908265
    static +xlDodgerBlue: Class<Word$XlRgbColor__xlDodgerBlue> &
      Word$XlRgbColor__xlDodgerBlue &
      16748574; // 16748574
    static +xlFireBrick: Class<Word$XlRgbColor__xlFireBrick> &
      Word$XlRgbColor__xlFireBrick &
      2237106; // 2237106
    static +xlFloralWhite: Class<Word$XlRgbColor__xlFloralWhite> &
      Word$XlRgbColor__xlFloralWhite &
      15792895; // 15792895
    static +xlForestGreen: Class<Word$XlRgbColor__xlForestGreen> &
      Word$XlRgbColor__xlForestGreen &
      2263842; // 2263842
    static +xlFuchsia: Class<Word$XlRgbColor__xlFuchsia> &
      Word$XlRgbColor__xlFuchsia &
      16711935; // 16711935
    static +xlGainsboro: Class<Word$XlRgbColor__xlGainsboro> &
      Word$XlRgbColor__xlGainsboro &
      14474460; // 14474460
    static +xlGhostWhite: Class<Word$XlRgbColor__xlGhostWhite> &
      Word$XlRgbColor__xlGhostWhite &
      16775416; // 16775416
    static +xlGold: Class<Word$XlRgbColor__xlGold> &
      Word$XlRgbColor__xlGold &
      55295; // 55295
    static +xlGoldenrod: Class<Word$XlRgbColor__xlGoldenrod> &
      Word$XlRgbColor__xlGoldenrod &
      2139610; // 2139610
    static +xlGray: Class<Word$XlRgbColor__xlGray> &
      Word$XlRgbColor__xlGray &
      8421504; // 8421504
    static +xlGreen: Class<Word$XlRgbColor__xlGreen> &
      Word$XlRgbColor__xlGreen &
      32768; // 32768
    static +xlGreenYellow: Class<Word$XlRgbColor__xlGreenYellow> &
      Word$XlRgbColor__xlGreenYellow &
      3145645; // 3145645
    static +xlGrey: Class<Word$XlRgbColor__xlGrey> &
      Word$XlRgbColor__xlGrey &
      8421504; // 8421504
    static +xlHoneydew: Class<Word$XlRgbColor__xlHoneydew> &
      Word$XlRgbColor__xlHoneydew &
      15794160; // 15794160
    static +xlHotPink: Class<Word$XlRgbColor__xlHotPink> &
      Word$XlRgbColor__xlHotPink &
      11823615; // 11823615
    static +xlIndianRed: Class<Word$XlRgbColor__xlIndianRed> &
      Word$XlRgbColor__xlIndianRed &
      6053069; // 6053069
    static +xlIndigo: Class<Word$XlRgbColor__xlIndigo> &
      Word$XlRgbColor__xlIndigo &
      8519755; // 8519755
    static +xlIvory: Class<Word$XlRgbColor__xlIvory> &
      Word$XlRgbColor__xlIvory &
      15794175; // 15794175
    static +xlKhaki: Class<Word$XlRgbColor__xlKhaki> &
      Word$XlRgbColor__xlKhaki &
      9234160; // 9234160
    static +xlLavender: Class<Word$XlRgbColor__xlLavender> &
      Word$XlRgbColor__xlLavender &
      16443110; // 16443110
    static +xlLavenderBlush: Class<Word$XlRgbColor__xlLavenderBlush> &
      Word$XlRgbColor__xlLavenderBlush &
      16118015; // 16118015
    static +xlLawnGreen: Class<Word$XlRgbColor__xlLawnGreen> &
      Word$XlRgbColor__xlLawnGreen &
      64636; // 64636
    static +xlLemonChiffon: Class<Word$XlRgbColor__xlLemonChiffon> &
      Word$XlRgbColor__xlLemonChiffon &
      13499135; // 13499135
    static +xlLightBlue: Class<Word$XlRgbColor__xlLightBlue> &
      Word$XlRgbColor__xlLightBlue &
      15128749; // 15128749
    static +xlLightCoral: Class<Word$XlRgbColor__xlLightCoral> &
      Word$XlRgbColor__xlLightCoral &
      8421616; // 8421616
    static +xlLightCyan: Class<Word$XlRgbColor__xlLightCyan> &
      Word$XlRgbColor__xlLightCyan &
      9145088; // 9145088
    static +xlLightGoldenrodYellow: Class<Word$XlRgbColor__xlLightGoldenrodYellow> &
      Word$XlRgbColor__xlLightGoldenrodYellow &
      13826810; // 13826810
    static +xlLightGray: Class<Word$XlRgbColor__xlLightGray> &
      Word$XlRgbColor__xlLightGray &
      13882323; // 13882323
    static +xlLightGreen: Class<Word$XlRgbColor__xlLightGreen> &
      Word$XlRgbColor__xlLightGreen &
      9498256; // 9498256
    static +xlLightGrey: Class<Word$XlRgbColor__xlLightGrey> &
      Word$XlRgbColor__xlLightGrey &
      13882323; // 13882323
    static +xlLightPink: Class<Word$XlRgbColor__xlLightPink> &
      Word$XlRgbColor__xlLightPink &
      12695295; // 12695295
    static +xlLightSalmon: Class<Word$XlRgbColor__xlLightSalmon> &
      Word$XlRgbColor__xlLightSalmon &
      8036607; // 8036607
    static +xlLightSeaGreen: Class<Word$XlRgbColor__xlLightSeaGreen> &
      Word$XlRgbColor__xlLightSeaGreen &
      11186720; // 11186720
    static +xlLightSkyBlue: Class<Word$XlRgbColor__xlLightSkyBlue> &
      Word$XlRgbColor__xlLightSkyBlue &
      16436871; // 16436871
    static +xlLightSlateGray: Class<Word$XlRgbColor__xlLightSlateGray> &
      Word$XlRgbColor__xlLightSlateGray &
      10061943; // 10061943
    static +xlLightSlateGrey: Class<Word$XlRgbColor__xlLightSlateGrey> &
      Word$XlRgbColor__xlLightSlateGrey &
      10061943; // 10061943
    static +xlLightSteelBlue: Class<Word$XlRgbColor__xlLightSteelBlue> &
      Word$XlRgbColor__xlLightSteelBlue &
      14599344; // 14599344
    static +xlLightYellow: Class<Word$XlRgbColor__xlLightYellow> &
      Word$XlRgbColor__xlLightYellow &
      14745599; // 14745599
    static +xlLime: Class<Word$XlRgbColor__xlLime> &
      Word$XlRgbColor__xlLime &
      65280; // 65280
    static +xlLimeGreen: Class<Word$XlRgbColor__xlLimeGreen> &
      Word$XlRgbColor__xlLimeGreen &
      3329330; // 3329330
    static +xlLinen: Class<Word$XlRgbColor__xlLinen> &
      Word$XlRgbColor__xlLinen &
      15134970; // 15134970
    static +xlMaroon: Class<Word$XlRgbColor__xlMaroon> &
      Word$XlRgbColor__xlMaroon &
      128; // 128
    static +xlMediumAquamarine: Class<Word$XlRgbColor__xlMediumAquamarine> &
      Word$XlRgbColor__xlMediumAquamarine &
      11206502; // 11206502
    static +xlMediumBlue: Class<Word$XlRgbColor__xlMediumBlue> &
      Word$XlRgbColor__xlMediumBlue &
      13434880; // 13434880
    static +xlMediumOrchid: Class<Word$XlRgbColor__xlMediumOrchid> &
      Word$XlRgbColor__xlMediumOrchid &
      13850042; // 13850042
    static +xlMediumPurple: Class<Word$XlRgbColor__xlMediumPurple> &
      Word$XlRgbColor__xlMediumPurple &
      14381203; // 14381203
    static +xlMediumSeaGreen: Class<Word$XlRgbColor__xlMediumSeaGreen> &
      Word$XlRgbColor__xlMediumSeaGreen &
      7451452; // 7451452
    static +xlMediumSlateBlue: Class<Word$XlRgbColor__xlMediumSlateBlue> &
      Word$XlRgbColor__xlMediumSlateBlue &
      15624315; // 15624315
    static +xlMediumSpringGreen: Class<Word$XlRgbColor__xlMediumSpringGreen> &
      Word$XlRgbColor__xlMediumSpringGreen &
      10156544; // 10156544
    static +xlMediumTurquoise: Class<Word$XlRgbColor__xlMediumTurquoise> &
      Word$XlRgbColor__xlMediumTurquoise &
      13422920; // 13422920
    static +xlMediumVioletRed: Class<Word$XlRgbColor__xlMediumVioletRed> &
      Word$XlRgbColor__xlMediumVioletRed &
      8721863; // 8721863
    static +xlMidnightBlue: Class<Word$XlRgbColor__xlMidnightBlue> &
      Word$XlRgbColor__xlMidnightBlue &
      7346457; // 7346457
    static +xlMintCream: Class<Word$XlRgbColor__xlMintCream> &
      Word$XlRgbColor__xlMintCream &
      16449525; // 16449525
    static +xlMistyRose: Class<Word$XlRgbColor__xlMistyRose> &
      Word$XlRgbColor__xlMistyRose &
      14804223; // 14804223
    static +xlMoccasin: Class<Word$XlRgbColor__xlMoccasin> &
      Word$XlRgbColor__xlMoccasin &
      11920639; // 11920639
    static +xlNavajoWhite: Class<Word$XlRgbColor__xlNavajoWhite> &
      Word$XlRgbColor__xlNavajoWhite &
      11394815; // 11394815
    static +xlNavy: Class<Word$XlRgbColor__xlNavy> &
      Word$XlRgbColor__xlNavy &
      8388608; // 8388608
    static +xlNavyBlue: Class<Word$XlRgbColor__xlNavyBlue> &
      Word$XlRgbColor__xlNavyBlue &
      8388608; // 8388608
    static +xlOldLace: Class<Word$XlRgbColor__xlOldLace> &
      Word$XlRgbColor__xlOldLace &
      15136253; // 15136253
    static +xlOlive: Class<Word$XlRgbColor__xlOlive> &
      Word$XlRgbColor__xlOlive &
      32896; // 32896
    static +xlOliveDrab: Class<Word$XlRgbColor__xlOliveDrab> &
      Word$XlRgbColor__xlOliveDrab &
      2330219; // 2330219
    static +xlOrange: Class<Word$XlRgbColor__xlOrange> &
      Word$XlRgbColor__xlOrange &
      42495; // 42495
    static +xlOrangeRed: Class<Word$XlRgbColor__xlOrangeRed> &
      Word$XlRgbColor__xlOrangeRed &
      17919; // 17919
    static +xlOrchid: Class<Word$XlRgbColor__xlOrchid> &
      Word$XlRgbColor__xlOrchid &
      14053594; // 14053594
    static +xlPaleGoldenrod: Class<Word$XlRgbColor__xlPaleGoldenrod> &
      Word$XlRgbColor__xlPaleGoldenrod &
      7071982; // 7071982
    static +xlPaleGreen: Class<Word$XlRgbColor__xlPaleGreen> &
      Word$XlRgbColor__xlPaleGreen &
      10025880; // 10025880
    static +xlPaleTurquoise: Class<Word$XlRgbColor__xlPaleTurquoise> &
      Word$XlRgbColor__xlPaleTurquoise &
      15658671; // 15658671
    static +xlPaleVioletRed: Class<Word$XlRgbColor__xlPaleVioletRed> &
      Word$XlRgbColor__xlPaleVioletRed &
      9662683; // 9662683
    static +xlPapayaWhip: Class<Word$XlRgbColor__xlPapayaWhip> &
      Word$XlRgbColor__xlPapayaWhip &
      14020607; // 14020607
    static +xlPeachPuff: Class<Word$XlRgbColor__xlPeachPuff> &
      Word$XlRgbColor__xlPeachPuff &
      12180223; // 12180223
    static +xlPeru: Class<Word$XlRgbColor__xlPeru> &
      Word$XlRgbColor__xlPeru &
      4163021; // 4163021
    static +xlPink: Class<Word$XlRgbColor__xlPink> &
      Word$XlRgbColor__xlPink &
      13353215; // 13353215
    static +xlPlum: Class<Word$XlRgbColor__xlPlum> &
      Word$XlRgbColor__xlPlum &
      14524637; // 14524637
    static +xlPowderBlue: Class<Word$XlRgbColor__xlPowderBlue> &
      Word$XlRgbColor__xlPowderBlue &
      15130800; // 15130800
    static +xlPurple: Class<Word$XlRgbColor__xlPurple> &
      Word$XlRgbColor__xlPurple &
      8388736; // 8388736
    static +xlRed: Class<Word$XlRgbColor__xlRed> & Word$XlRgbColor__xlRed & 255; // 255
    static +xlRosyBrown: Class<Word$XlRgbColor__xlRosyBrown> &
      Word$XlRgbColor__xlRosyBrown &
      9408444; // 9408444
    static +xlRoyalBlue: Class<Word$XlRgbColor__xlRoyalBlue> &
      Word$XlRgbColor__xlRoyalBlue &
      14772545; // 14772545
    static +xlSalmon: Class<Word$XlRgbColor__xlSalmon> &
      Word$XlRgbColor__xlSalmon &
      7504122; // 7504122
    static +xlSandyBrown: Class<Word$XlRgbColor__xlSandyBrown> &
      Word$XlRgbColor__xlSandyBrown &
      6333684; // 6333684
    static +xlSeaGreen: Class<Word$XlRgbColor__xlSeaGreen> &
      Word$XlRgbColor__xlSeaGreen &
      5737262; // 5737262
    static +xlSeashell: Class<Word$XlRgbColor__xlSeashell> &
      Word$XlRgbColor__xlSeashell &
      15660543; // 15660543
    static +xlSienna: Class<Word$XlRgbColor__xlSienna> &
      Word$XlRgbColor__xlSienna &
      2970272; // 2970272
    static +xlSilver: Class<Word$XlRgbColor__xlSilver> &
      Word$XlRgbColor__xlSilver &
      12632256; // 12632256
    static +xlSkyBlue: Class<Word$XlRgbColor__xlSkyBlue> &
      Word$XlRgbColor__xlSkyBlue &
      15453831; // 15453831
    static +xlSlateBlue: Class<Word$XlRgbColor__xlSlateBlue> &
      Word$XlRgbColor__xlSlateBlue &
      13458026; // 13458026
    static +xlSlateGray: Class<Word$XlRgbColor__xlSlateGray> &
      Word$XlRgbColor__xlSlateGray &
      9470064; // 9470064
    static +xlSlateGrey: Class<Word$XlRgbColor__xlSlateGrey> &
      Word$XlRgbColor__xlSlateGrey &
      9470064; // 9470064
    static +xlSnow: Class<Word$XlRgbColor__xlSnow> &
      Word$XlRgbColor__xlSnow &
      16448255; // 16448255
    static +xlSpringGreen: Class<Word$XlRgbColor__xlSpringGreen> &
      Word$XlRgbColor__xlSpringGreen &
      8388352; // 8388352
    static +xlSteelBlue: Class<Word$XlRgbColor__xlSteelBlue> &
      Word$XlRgbColor__xlSteelBlue &
      11829830; // 11829830
    static +xlTan: Class<Word$XlRgbColor__xlTan> &
      Word$XlRgbColor__xlTan &
      9221330; // 9221330
    static +xlTeal: Class<Word$XlRgbColor__xlTeal> &
      Word$XlRgbColor__xlTeal &
      8421376; // 8421376
    static +xlThistle: Class<Word$XlRgbColor__xlThistle> &
      Word$XlRgbColor__xlThistle &
      14204888; // 14204888
    static +xlTomato: Class<Word$XlRgbColor__xlTomato> &
      Word$XlRgbColor__xlTomato &
      4678655; // 4678655
    static +xlTurquoise: Class<Word$XlRgbColor__xlTurquoise> &
      Word$XlRgbColor__xlTurquoise &
      13688896; // 13688896
    static +xlViolet: Class<Word$XlRgbColor__xlViolet> &
      Word$XlRgbColor__xlViolet &
      15631086; // 15631086
    static +xlWheat: Class<Word$XlRgbColor__xlWheat> &
      Word$XlRgbColor__xlWheat &
      11788021; // 11788021
    static +xlWhite: Class<Word$XlRgbColor__xlWhite> &
      Word$XlRgbColor__xlWhite &
      16777215; // 16777215
    static +xlWhiteSmoke: Class<Word$XlRgbColor__xlWhiteSmoke> &
      Word$XlRgbColor__xlWhiteSmoke &
      16119285; // 16119285
    static +xlYellow: Class<Word$XlRgbColor__xlYellow> &
      Word$XlRgbColor__xlYellow &
      65535; // 65535
    static +xlYellowGreen: Class<Word$XlRgbColor__xlYellowGreen> &
      Word$XlRgbColor__xlYellowGreen &
      3329434; // 3329434
  }

  declare class Word$XlRgbColor__xlAliceBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlAntiqueWhite mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlAqua mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlAquamarine mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlAzure mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlBeige mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlBisque mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlBlack mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlBlanchedAlmond mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlBlueViolet mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlBrown mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlBurlyWood mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlCadetBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlChartreuse mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlCoral mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlCornflowerBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlCornsilk mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlCrimson mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkCyan mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkGoldenrod mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkGray mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkGreen mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkGrey mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkKhaki mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkMagenta mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkOliveGreen mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkOrange mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkOrchid mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkRed mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkSalmon mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkSeaGreen mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkSlateBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkSlateGray mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkSlateGrey mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkTurquoise mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDarkViolet mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDeepPink mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDeepSkyBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDimGray mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDimGrey mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlDodgerBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlFireBrick mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlFloralWhite mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlForestGreen mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlFuchsia mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlGainsboro mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlGhostWhite mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlGold mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlGoldenrod mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlGray mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlGreen mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlGreenYellow mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlGrey mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlHoneydew mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlHotPink mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlIndianRed mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlIndigo mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlIvory mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlKhaki mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLavender mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLavenderBlush mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLawnGreen mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLemonChiffon mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLightBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLightCoral mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLightCyan mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLightGoldenrodYellow
    mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLightGray mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLightGreen mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLightGrey mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLightPink mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLightSalmon mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLightSeaGreen mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLightSkyBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLightSlateGray mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLightSlateGrey mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLightSteelBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLightYellow mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLime mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLimeGreen mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlLinen mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlMaroon mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlMediumAquamarine mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlMediumBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlMediumOrchid mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlMediumPurple mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlMediumSeaGreen mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlMediumSlateBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlMediumSpringGreen mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlMediumTurquoise mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlMediumVioletRed mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlMidnightBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlMintCream mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlMistyRose mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlMoccasin mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlNavajoWhite mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlNavy mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlNavyBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlOldLace mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlOlive mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlOliveDrab mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlOrange mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlOrangeRed mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlOrchid mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlPaleGoldenrod mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlPaleGreen mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlPaleTurquoise mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlPaleVioletRed mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlPapayaWhip mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlPeachPuff mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlPeru mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlPink mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlPlum mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlPowderBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlPurple mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlRed mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlRosyBrown mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlRoyalBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlSalmon mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlSandyBrown mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlSeaGreen mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlSeashell mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlSienna mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlSilver mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlSkyBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlSlateBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlSlateGray mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlSlateGrey mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlSnow mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlSpringGreen mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlSteelBlue mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlTan mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlTeal mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlThistle mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlTomato mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlTurquoise mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlViolet mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlWheat mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlWhite mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlWhiteSmoke mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlYellow mixins Word$XlRgbColor {}
  declare class Word$XlRgbColor__xlYellowGreen mixins Word$XlRgbColor {}

  declare class Word$XlRowCol {
    constructor(...args: empty): mixed;
    static +xlColumns: Class<Word$XlRowCol__xlColumns> &
      Word$XlRowCol__xlColumns &
      2; // 2
    static +xlRows: Class<Word$XlRowCol__xlRows> & Word$XlRowCol__xlRows & 1; // 1
  }

  declare class Word$XlRowCol__xlColumns mixins Word$XlRowCol {}
  declare class Word$XlRowCol__xlRows mixins Word$XlRowCol {}

  declare class Word$XlScaleType {
    constructor(...args: empty): mixed;
    static +xlScaleLinear: Class<Word$XlScaleType__xlScaleLinear> &
      Word$XlScaleType__xlScaleLinear &
      -4132; // -4132
    static +xlScaleLogarithmic: Class<Word$XlScaleType__xlScaleLogarithmic> &
      Word$XlScaleType__xlScaleLogarithmic &
      -4133; // -4133
  }

  declare class Word$XlScaleType__xlScaleLinear mixins Word$XlScaleType {}
  declare class Word$XlScaleType__xlScaleLogarithmic mixins Word$XlScaleType {}

  declare class Word$XlSizeRepresents {
    constructor(...args: empty): mixed;
    static +xlSizeIsArea: Class<Word$XlSizeRepresents__xlSizeIsArea> &
      Word$XlSizeRepresents__xlSizeIsArea &
      1; // 1
    static +xlSizeIsWidth: Class<Word$XlSizeRepresents__xlSizeIsWidth> &
      Word$XlSizeRepresents__xlSizeIsWidth &
      2; // 2
  }

  declare class Word$XlSizeRepresents__xlSizeIsArea
    mixins Word$XlSizeRepresents {}
  declare class Word$XlSizeRepresents__xlSizeIsWidth
    mixins Word$XlSizeRepresents {}

  declare class Word$XlTickLabelOrientation {
    constructor(...args: empty): mixed;
    static +xlTickLabelOrientationAutomatic: Class<Word$XlTickLabelOrientation__xlTickLabelOrientationAutomatic> &
      Word$XlTickLabelOrientation__xlTickLabelOrientationAutomatic &
      -4105; // -4105
    static +xlTickLabelOrientationDownward: Class<Word$XlTickLabelOrientation__xlTickLabelOrientationDownward> &
      Word$XlTickLabelOrientation__xlTickLabelOrientationDownward &
      -4170; // -4170
    static +xlTickLabelOrientationHorizontal: Class<Word$XlTickLabelOrientation__xlTickLabelOrientationHorizontal> &
      Word$XlTickLabelOrientation__xlTickLabelOrientationHorizontal &
      -4128; // -4128
    static +xlTickLabelOrientationUpward: Class<Word$XlTickLabelOrientation__xlTickLabelOrientationUpward> &
      Word$XlTickLabelOrientation__xlTickLabelOrientationUpward &
      -4171; // -4171
    static +xlTickLabelOrientationVertical: Class<Word$XlTickLabelOrientation__xlTickLabelOrientationVertical> &
      Word$XlTickLabelOrientation__xlTickLabelOrientationVertical &
      -4166; // -4166
  }

  declare class Word$XlTickLabelOrientation__xlTickLabelOrientationAutomatic
    mixins Word$XlTickLabelOrientation {}
  declare class Word$XlTickLabelOrientation__xlTickLabelOrientationDownward
    mixins Word$XlTickLabelOrientation {}
  declare class Word$XlTickLabelOrientation__xlTickLabelOrientationHorizontal
    mixins Word$XlTickLabelOrientation {}
  declare class Word$XlTickLabelOrientation__xlTickLabelOrientationUpward
    mixins Word$XlTickLabelOrientation {}
  declare class Word$XlTickLabelOrientation__xlTickLabelOrientationVertical
    mixins Word$XlTickLabelOrientation {}

  declare class Word$XlTickLabelPosition {
    constructor(...args: empty): mixed;
    static +xlTickLabelPositionHigh: Class<Word$XlTickLabelPosition__xlTickLabelPositionHigh> &
      Word$XlTickLabelPosition__xlTickLabelPositionHigh &
      -4127; // -4127
    static +xlTickLabelPositionLow: Class<Word$XlTickLabelPosition__xlTickLabelPositionLow> &
      Word$XlTickLabelPosition__xlTickLabelPositionLow &
      -4134; // -4134
    static +xlTickLabelPositionNextToAxis: Class<Word$XlTickLabelPosition__xlTickLabelPositionNextToAxis> &
      Word$XlTickLabelPosition__xlTickLabelPositionNextToAxis &
      4; // 4
    static +xlTickLabelPositionNone: Class<Word$XlTickLabelPosition__xlTickLabelPositionNone> &
      Word$XlTickLabelPosition__xlTickLabelPositionNone &
      -4142; // -4142
  }

  declare class Word$XlTickLabelPosition__xlTickLabelPositionHigh
    mixins Word$XlTickLabelPosition {}
  declare class Word$XlTickLabelPosition__xlTickLabelPositionLow
    mixins Word$XlTickLabelPosition {}
  declare class Word$XlTickLabelPosition__xlTickLabelPositionNextToAxis
    mixins Word$XlTickLabelPosition {}
  declare class Word$XlTickLabelPosition__xlTickLabelPositionNone
    mixins Word$XlTickLabelPosition {}

  declare class Word$XlTickMark {
    constructor(...args: empty): mixed;
    static +xlTickMarkCross: Class<Word$XlTickMark__xlTickMarkCross> &
      Word$XlTickMark__xlTickMarkCross &
      4; // 4
    static +xlTickMarkInside: Class<Word$XlTickMark__xlTickMarkInside> &
      Word$XlTickMark__xlTickMarkInside &
      2; // 2
    static +xlTickMarkNone: Class<Word$XlTickMark__xlTickMarkNone> &
      Word$XlTickMark__xlTickMarkNone &
      -4142; // -4142
    static +xlTickMarkOutside: Class<Word$XlTickMark__xlTickMarkOutside> &
      Word$XlTickMark__xlTickMarkOutside &
      3; // 3
  }

  declare class Word$XlTickMark__xlTickMarkCross mixins Word$XlTickMark {}
  declare class Word$XlTickMark__xlTickMarkInside mixins Word$XlTickMark {}
  declare class Word$XlTickMark__xlTickMarkNone mixins Word$XlTickMark {}
  declare class Word$XlTickMark__xlTickMarkOutside mixins Word$XlTickMark {}

  declare class Word$XlTimeUnit {
    constructor(...args: empty): mixed;
    static +xlDays: Class<Word$XlTimeUnit__xlDays> &
      Word$XlTimeUnit__xlDays &
      0; // 0
    static +xlMonths: Class<Word$XlTimeUnit__xlMonths> &
      Word$XlTimeUnit__xlMonths &
      1; // 1
    static +xlYears: Class<Word$XlTimeUnit__xlYears> &
      Word$XlTimeUnit__xlYears &
      2; // 2
  }

  declare class Word$XlTimeUnit__xlDays mixins Word$XlTimeUnit {}
  declare class Word$XlTimeUnit__xlMonths mixins Word$XlTimeUnit {}
  declare class Word$XlTimeUnit__xlYears mixins Word$XlTimeUnit {}

  declare class Word$XlTrendlineType {
    constructor(...args: empty): mixed;
    static +xlExponential: Class<Word$XlTrendlineType__xlExponential> &
      Word$XlTrendlineType__xlExponential &
      5; // 5
    static +xlLinear: Class<Word$XlTrendlineType__xlLinear> &
      Word$XlTrendlineType__xlLinear &
      -4132; // -4132
    static +xlLogarithmic: Class<Word$XlTrendlineType__xlLogarithmic> &
      Word$XlTrendlineType__xlLogarithmic &
      -4133; // -4133
    static +xlMovingAvg: Class<Word$XlTrendlineType__xlMovingAvg> &
      Word$XlTrendlineType__xlMovingAvg &
      6; // 6
    static +xlPolynomial: Class<Word$XlTrendlineType__xlPolynomial> &
      Word$XlTrendlineType__xlPolynomial &
      3; // 3
    static +xlPower: Class<Word$XlTrendlineType__xlPower> &
      Word$XlTrendlineType__xlPower &
      4; // 4
  }

  declare class Word$XlTrendlineType__xlExponential
    mixins Word$XlTrendlineType {}
  declare class Word$XlTrendlineType__xlLinear mixins Word$XlTrendlineType {}
  declare class Word$XlTrendlineType__xlLogarithmic
    mixins Word$XlTrendlineType {}
  declare class Word$XlTrendlineType__xlMovingAvg mixins Word$XlTrendlineType {}
  declare class Word$XlTrendlineType__xlPolynomial
    mixins Word$XlTrendlineType {}
  declare class Word$XlTrendlineType__xlPower mixins Word$XlTrendlineType {}

  declare class Word$XlUnderlineStyle {
    constructor(...args: empty): mixed;
    static +xlUnderlineStyleDouble: Class<Word$XlUnderlineStyle__xlUnderlineStyleDouble> &
      Word$XlUnderlineStyle__xlUnderlineStyleDouble &
      -4119; // -4119
    static +xlUnderlineStyleDoubleAccounting: Class<Word$XlUnderlineStyle__xlUnderlineStyleDoubleAccounting> &
      Word$XlUnderlineStyle__xlUnderlineStyleDoubleAccounting &
      5; // 5
    static +xlUnderlineStyleNone: Class<Word$XlUnderlineStyle__xlUnderlineStyleNone> &
      Word$XlUnderlineStyle__xlUnderlineStyleNone &
      -4142; // -4142
    static +xlUnderlineStyleSingle: Class<Word$XlUnderlineStyle__xlUnderlineStyleSingle> &
      Word$XlUnderlineStyle__xlUnderlineStyleSingle &
      2; // 2
    static +xlUnderlineStyleSingleAccounting: Class<Word$XlUnderlineStyle__xlUnderlineStyleSingleAccounting> &
      Word$XlUnderlineStyle__xlUnderlineStyleSingleAccounting &
      4; // 4
  }

  declare class Word$XlUnderlineStyle__xlUnderlineStyleDouble
    mixins Word$XlUnderlineStyle {}
  declare class Word$XlUnderlineStyle__xlUnderlineStyleDoubleAccounting
    mixins Word$XlUnderlineStyle {}
  declare class Word$XlUnderlineStyle__xlUnderlineStyleNone
    mixins Word$XlUnderlineStyle {}
  declare class Word$XlUnderlineStyle__xlUnderlineStyleSingle
    mixins Word$XlUnderlineStyle {}
  declare class Word$XlUnderlineStyle__xlUnderlineStyleSingleAccounting
    mixins Word$XlUnderlineStyle {}

  declare class Word$XlVAlign {
    constructor(...args: empty): mixed;
    static +xlVAlignBottom: Class<Word$XlVAlign__xlVAlignBottom> &
      Word$XlVAlign__xlVAlignBottom &
      -4107; // -4107
    static +xlVAlignCenter: Class<Word$XlVAlign__xlVAlignCenter> &
      Word$XlVAlign__xlVAlignCenter &
      -4108; // -4108
    static +xlVAlignDistributed: Class<Word$XlVAlign__xlVAlignDistributed> &
      Word$XlVAlign__xlVAlignDistributed &
      -4117; // -4117
    static +xlVAlignJustify: Class<Word$XlVAlign__xlVAlignJustify> &
      Word$XlVAlign__xlVAlignJustify &
      -4130; // -4130
    static +xlVAlignTop: Class<Word$XlVAlign__xlVAlignTop> &
      Word$XlVAlign__xlVAlignTop &
      -4160; // -4160
  }

  declare class Word$XlVAlign__xlVAlignBottom mixins Word$XlVAlign {}
  declare class Word$XlVAlign__xlVAlignCenter mixins Word$XlVAlign {}
  declare class Word$XlVAlign__xlVAlignDistributed mixins Word$XlVAlign {}
  declare class Word$XlVAlign__xlVAlignJustify mixins Word$XlVAlign {}
  declare class Word$XlVAlign__xlVAlignTop mixins Word$XlVAlign {}

  declare class Word$AddIn {
    constructor(): this;
    Word$Application: Word$Application;
    Autoload: boolean;
    Compiled: boolean;
    Creator: number;
    Delete(): void;
    Word$Index: number;
    Installed: boolean;
    Name: string;
    Parent: any;
    Path: string;
  }

  declare class Word$AddIns {
    constructor(): this;
    Add(FileName: string, Install?: any): Word$AddIn;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$AddIn;
    Parent: any;
    Unload(RemoveFromList: boolean): void;
  }

  declare class Word$Adjustments {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): number;
    Parent: any;
  }

  declare class Word$Application {
    constructor(): this;
    Activate(): void;
    ActiveDocument: Word$Document;
    ActiveEncryptionSession: number;
    ActivePrinter: string;
    ActiveProtectedViewWindow: Word$ProtectedViewWindow;
    ActiveWindow: Word$Window;
    AddAddress(TagID: SafeArray<string>, Value: SafeArray<string>): void;
    Word$AddIns: Word$AddIns;
    AnswerWizard: Office.AnswerWizard;
    Word$Application: Word$Application;
    ArbitraryXMLSupportAvailable: boolean;
    Assistance: Office.IAssistance;
    Assistant: Office.Assistant;
    Word$AutoCaptions: Word$AutoCaptions;
    Word$AutoCorrect: Word$AutoCorrect;
    AutoCorrectEmail: Word$AutoCorrect;
    AutomaticChange(): void;
    AutomationSecurity: Office.MsoAutomationSecurity;
    BackgroundPrintingStatus: number;
    BackgroundSavingStatus: number;
    Word$Bibliography: Word$Bibliography;
    BrowseExtraFileTypes: string;
    Word$Browser: Word$Browser;
    Build: string;
    BuildFeatureCrew: string;
    BuildFull: string;
    BuildKeyCode(Arg1: Word$WdKey, Arg2?: any, Arg3?: any, Arg4?: any): number;
    CapsLock: boolean;
    Caption: string;
    Word$CaptionLabels: Word$CaptionLabels;
    CentimetersToPoints(Centimeters: number): number;
    ChangeFileOpenDirectory(Path: string): void;
    CheckGrammar(String: string): boolean;
    CheckLanguage: boolean;
    CheckSpelling(
      Word: string,
      CustomDictionary?: any,
      IgnoreUppercase?: any,
      MainDictionary?: any,
      CustomDictionary2?: any,
      CustomDictionary3?: any,
      CustomDictionary4?: any,
      CustomDictionary5?: any,
      CustomDictionary6?: any,
      CustomDictionary7?: any,
      CustomDictionary8?: any,
      CustomDictionary9?: any,
      CustomDictionary10?: any
    ): boolean;
    CleanString(String: string): string;
    COMAddIns: Office.COMAddIns;
    CommandBars: Office.CommandBars;

    /**
     * @param [Destination=2]
     * @param [Granularity=1]
     * @param boolean [CompareFormatting=true]
     * @param boolean [CompareCaseChanges=true]
     * @param boolean [CompareWhitespace=true]
     * @param boolean [CompareTables=true]
     * @param boolean [CompareHeaders=true]
     * @param boolean [CompareFootnotes=true]
     * @param boolean [CompareTextboxes=true]
     * @param boolean [CompareFields=true]
     * @param boolean [CompareComments=true]
     * @param boolean [CompareMoves=true]
     * @param string [RevisedAuthor='']
     * @param boolean [IgnoreAllComparisonWarnings=false]
     */
    CompareDocuments(
      OriginalDocument: Word$Document,
      RevisedDocument: Word$Document,
      Destination?: Word$WdCompareDestination,
      Granularity?: Word$WdGranularity,
      CompareFormatting?: boolean,
      CompareCaseChanges?: boolean,
      CompareWhitespace?: boolean,
      CompareTables?: boolean,
      CompareHeaders?: boolean,
      CompareFootnotes?: boolean,
      CompareTextboxes?: boolean,
      CompareFields?: boolean,
      CompareComments?: boolean,
      CompareMoves?: boolean,
      RevisedAuthor?: string,
      IgnoreAllComparisonWarnings?: boolean
    ): Word$Document;
    Creator: number;
    CustomDictionaries: Word$Dictionaries;
    CustomizationContext: any;
    DDEExecute(Channel: number, Command: string): void;
    DDEInitiate(App: string, Topic: string): number;
    DDEPoke(Channel: number, Item: string, Data: string): void;
    DDERequest(Channel: number, Item: string): string;
    DDETerminate(Channel: number): void;
    DDETerminateAll(): void;
    DefaultLegalBlackline: boolean;
    DefaultSaveFormat: string;
    DefaultTableSeparator: string;
    DefaultWebOptions(): Word$DefaultWebOptions;
    Word$Dialogs: Word$Dialogs;
    DiscussionSupport(Word$Range: any, cid: any, piCSE: any): void;
    DisplayAlerts: Word$WdAlertLevel;
    DisplayAutoCompleteTips: boolean;
    DisplayDocumentInformationPanel: boolean;
    DisplayRecentFiles: boolean;
    DisplayScreenTips: boolean;
    DisplayScrollBars: boolean;
    DisplayStatusBar: boolean;
    Word$Documents: Word$Documents;
    DontResetInsertionPointProperties: boolean;
    Dummy1: boolean;
    Dummy2(): boolean;
    Dummy4(): void;
    Word$EmailOptions: Word$EmailOptions;
    EmailTemplate: string;
    EnableCancelKey: Word$WdEnableCancelKey;
    FeatureInstall: Office.MsoFeatureInstall;
    Word$FileConverters: Word$FileConverters;
    FileDialog(FileDialogType: Office.MsoFileDialogType): Office.FileDialog;
    FileSearch: Office.FileSearch;
    FileValidation: Office.MsoFileValidationMode;
    FindKey(KeyCode: number, KeyCode2?: any): Word$KeyBinding;
    FocusInMailHeader: boolean;
    Word$FontNames: Word$FontNames;
    GetAddress(
      Name?: any,
      AddressProperties?: any,
      UseAutoText?: any,
      DisplaySelectDialog?: any,
      SelectDialog?: any,
      CheckNamesDialog?: any,
      RecentAddressesChoice?: any,
      UpdateRecentAddresses?: any
    ): string;
    GetDefaultTheme(DocumentType: Word$WdDocumentMedium): string;
    GetSpellingSuggestions(
      Word: string,
      CustomDictionary?: any,
      IgnoreUppercase?: any,
      MainDictionary?: any,
      SuggestionMode?: any,
      CustomDictionary2?: any,
      CustomDictionary3?: any,
      CustomDictionary4?: any,
      CustomDictionary5?: any,
      CustomDictionary6?: any,
      CustomDictionary7?: any,
      CustomDictionary8?: any,
      CustomDictionary9?: any,
      CustomDictionary10?: any
    ): Word$SpellingSuggestions;
    GoBack(): void;
    GoForward(): void;
    HangulHanjaDictionaries: Word$HangulHanjaConversionDictionaries;
    Height: number;
    Help(HelpType: any): void;
    HelpTool(): void;
    InchesToPoints(Inches: number): number;
    International(Word$Index: Word$WdInternationalIndex): any;
    IsObjectValid(Object: any): boolean;
    IsSandboxed: boolean;
    Word$KeyBindings: Word$KeyBindings;

    /**
     * @param number [LangId=0]
     */
    Keyboard(LangId?: number): number;
    KeyboardBidi(): void;
    KeyboardLatin(): void;
    KeysBoundTo(
      KeyCategory: Word$WdKeyCategory,
      Command: string,
      CommandParameter?: any
    ): Word$KeysBoundTo;
    KeyString(KeyCode: number, KeyCode2?: any): string;
    LandscapeFontNames: Word$FontNames;
    Word$Language: Office.MsoLanguageID;
    Word$Languages: Word$Languages;
    LanguageSettings: Office.LanguageSettings;
    Left: number;
    LinesToPoints(Word$Lines: number): number;
    ListCommands(ListAllCommands: boolean): void;
    Word$ListGalleries: Word$ListGalleries;
    LoadMasterList(FileName: string): void;
    LookupNameProperties(Name: string): void;
    MacroContainer: any;
    Word$MailingLabel: Word$MailingLabel;
    Word$MailMessage: Word$MailMessage;
    MailSystem: Word$WdMailSystem;
    MAPIAvailable: boolean;
    MathCoprocessorAvailable: boolean;

    /**
     * @param [Destination=2]
     * @param [Granularity=1]
     * @param boolean [CompareFormatting=true]
     * @param boolean [CompareCaseChanges=true]
     * @param boolean [CompareWhitespace=true]
     * @param boolean [CompareTables=true]
     * @param boolean [CompareHeaders=true]
     * @param boolean [CompareFootnotes=true]
     * @param boolean [CompareTextboxes=true]
     * @param boolean [CompareFields=true]
     * @param boolean [CompareComments=true]
     * @param boolean [CompareMoves=true]
     * @param string [OriginalAuthor='']
     * @param string [RevisedAuthor='']
     * @param [FormatFrom=2]
     */
    MergeDocuments(
      OriginalDocument: Word$Document,
      RevisedDocument: Word$Document,
      Destination?: Word$WdCompareDestination,
      Granularity?: Word$WdGranularity,
      CompareFormatting?: boolean,
      CompareCaseChanges?: boolean,
      CompareWhitespace?: boolean,
      CompareTables?: boolean,
      CompareHeaders?: boolean,
      CompareFootnotes?: boolean,
      CompareTextboxes?: boolean,
      CompareFields?: boolean,
      CompareComments?: boolean,
      CompareMoves?: boolean,
      OriginalAuthor?: string,
      RevisedAuthor?: string,
      FormatFrom?: Word$WdMergeFormatFrom
    ): Word$Document;
    MillimetersToPoints(Millimeters: number): number;
    MountVolume(
      Zone: string,
      Server: string,
      Volume: string,
      User?: any,
      UserPassword?: any,
      VolumePassword?: any
    ): number;
    MouseAvailable: boolean;
    Move(Left: number, Top: number): void;
    Name: string;
    NewDocument: Office.NewFile;
    NewWindow(): Word$Window;
    NextLetter(): void;
    NormalTemplate: Word$Template;
    NumLock: boolean;
    Word$OMathAutoCorrect: Word$OMathAutoCorrect;
    OnTime(When: any, Name: string, Tolerance?: any): void;
    OpenAttachmentsInFullScreen: boolean;
    Word$Options: Word$Options;
    OrganizerCopy(
      Word$Source: string,
      Destination: string,
      Name: string,
      Object: Word$WdOrganizerObject
    ): void;
    OrganizerDelete(
      Word$Source: string,
      Name: string,
      Object: Word$WdOrganizerObject
    ): void;
    OrganizerRename(
      Word$Source: string,
      Name: string,
      NewName: string,
      Object: Word$WdOrganizerObject
    ): void;
    Parent: any;
    Path: string;
    PathSeparator: string;
    PicasToPoints(Picas: number): number;
    PickerDialog: Office.PickerDialog;
    PixelsToPoints(Pixels: number, fVertical?: any): number;
    PointsToCentimeters(Points: number): number;
    PointsToInches(Points: number): number;
    PointsToLines(Points: number): number;
    PointsToMillimeters(Points: number): number;
    PointsToPicas(Points: number): number;
    PointsToPixels(Points: number, fVertical?: any): number;
    PortraitFontNames: Word$FontNames;
    PrintOut(
      Background?: any,
      Append?: any,
      Word$Range?: any,
      OutputFileName?: any,
      From?: any,
      To?: any,
      Item?: any,
      Copies?: any,
      Word$Pages?: any,
      PageType?: any,
      PrintToFile?: any,
      Collate?: any,
      FileName?: any,
      ActivePrinterMacGX?: any,
      ManualDuplexPrint?: any,
      PrintZoomColumn?: any,
      PrintZoomRow?: any,
      PrintZoomPaperWidth?: any,
      PrintZoomPaperHeight?: any
    ): void;
    PrintOut2000(
      Background?: any,
      Append?: any,
      Word$Range?: any,
      OutputFileName?: any,
      From?: any,
      To?: any,
      Item?: any,
      Copies?: any,
      Word$Pages?: any,
      PageType?: any,
      PrintToFile?: any,
      Collate?: any,
      FileName?: any,
      ActivePrinterMacGX?: any,
      ManualDuplexPrint?: any,
      PrintZoomColumn?: any,
      PrintZoomRow?: any,
      PrintZoomPaperWidth?: any,
      PrintZoomPaperHeight?: any
    ): void;
    PrintOutOld(
      Background?: any,
      Append?: any,
      Word$Range?: any,
      OutputFileName?: any,
      From?: any,
      To?: any,
      Item?: any,
      Copies?: any,
      Word$Pages?: any,
      PageType?: any,
      PrintToFile?: any,
      Collate?: any,
      FileName?: any,
      ActivePrinterMacGX?: any,
      ManualDuplexPrint?: any
    ): void;
    PrintPreview: boolean;
    ProductCode(): string;
    Word$ProtectedViewWindows: Word$ProtectedViewWindows;
    PutFocusInMailHeader(): void;
    Quit(SaveChanges?: any, OriginalFormat?: any, RouteDocument?: any): void;
    Word$RecentFiles: Word$RecentFiles;
    Repeat(Times?: any): boolean;
    ResetIgnoreAll(): void;
    Resize(Width: number, Height: number): void;
    RestrictLinkedStyles: boolean;
    Run(
      MacroName: string,
      varg1?: any,
      varg2?: any,
      varg3?: any,
      varg4?: any,
      varg5?: any,
      varg6?: any,
      varg7?: any,
      varg8?: any,
      varg9?: any,
      varg10?: any,
      varg11?: any,
      varg12?: any,
      varg13?: any,
      varg14?: any,
      varg15?: any,
      varg16?: any,
      varg17?: any,
      varg18?: any,
      varg19?: any,
      varg20?: any,
      varg21?: any,
      varg22?: any,
      varg23?: any,
      varg24?: any,
      varg25?: any,
      varg26?: any,
      varg27?: any,
      varg28?: any,
      varg29?: any,
      varg30?: any
    ): any;
    RunOld(MacroName: string): void;
    ScreenRefresh(): void;
    ScreenUpdating: boolean;
    Word$Selection: Word$Selection;
    SendFax(): void;
    SetDefaultTheme(Name: string, DocumentType: Word$WdDocumentMedium): void;
    ShowClipboard(): void;
    ShowMe(): void;
    ShowStartupDialog: boolean;
    ShowStylePreviews: boolean;
    ShowVisualBasicEditor: boolean;
    ShowWindowsInTaskbar: boolean;
    SmartArtColors: Office.SmartArtColors;
    SmartArtLayouts: Office.SmartArtLayouts;
    SmartArtQuickStyles: Office.SmartArtQuickStyles;
    Word$SmartTagRecognizers: Word$SmartTagRecognizers;
    Word$SmartTagTypes: Word$SmartTagTypes;
    SpecialMode: boolean;
    StartupPath: string;
    StatusBar: string;
    SubstituteFont(UnavailableFont: string, SubstituteFont: string): void;
    SynonymInfo(Word: string, LanguageID?: any): Word$SynonymInfo;
    Word$System: Word$System;
    Word$TaskPanes: Word$TaskPanes;
    Word$Tasks: Word$Tasks;
    Word$Templates: Word$Templates;
    ThreeWayMerge(
      LocalDocument: Word$Document,
      ServerDocument: Word$Document,
      BaseDocument: Word$Document,
      FavorSource: boolean
    ): void;
    ToggleKeyboard(): void;
    Top: number;
    Word$UndoRecord: Word$UndoRecord;
    UsableHeight: number;
    UsableWidth: number;
    UserAddress: string;
    UserControl: boolean;
    UserInitials: string;
    UserName: string;
    VBE: VBIDE.VBE;
    Word$Version: string;
    Visible: boolean;
    Width: number;
    Word$Windows: Word$Windows;
    WindowState: Word$WdWindowState;
    WordBasic: any;
    Word$XMLNamespaces: Word$XMLNamespaces;
  }

  declare class Word$AutoCaption {
    constructor(): this;
    Word$Application: Word$Application;
    AutoInsert: boolean;
    Word$CaptionLabel: any;
    Creator: number;
    Word$Index: number;
    Name: string;
    Parent: any;
  }

  declare class Word$AutoCaptions {
    constructor(): this;
    Word$Application: Word$Application;
    CancelAutoInsert(): void;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$AutoCaption;
    Parent: any;
  }

  declare class Word$AutoCorrect {
    constructor(): this;
    Word$Application: Word$Application;
    CorrectCapsLock: boolean;
    CorrectDays: boolean;
    CorrectHangulAndAlphabet: boolean;
    CorrectInitialCaps: boolean;
    CorrectKeyboardSetting: boolean;
    CorrectSentenceCaps: boolean;
    CorrectTableCells: boolean;
    Creator: number;
    DisplayAutoCorrectOptions: boolean;
    Entries: Word$AutoCorrectEntries;
    FirstLetterAutoAdd: boolean;
    Word$FirstLetterExceptions: Word$FirstLetterExceptions;
    HangulAndAlphabetAutoAdd: boolean;
    Word$HangulAndAlphabetExceptions: Word$HangulAndAlphabetExceptions;
    OtherCorrectionsAutoAdd: boolean;
    Word$OtherCorrectionsExceptions: Word$OtherCorrectionsExceptions;
    Parent: any;
    ReplaceText: boolean;
    ReplaceTextFromSpellingChecker: boolean;
    TwoInitialCapsAutoAdd: boolean;
    Word$TwoInitialCapsExceptions: Word$TwoInitialCapsExceptions;
  }

  declare class Word$AutoCorrectEntries {
    constructor(): this;
    Add(Name: string, Value: string): Word$AutoCorrectEntry;
    AddRichText(Name: string, Word$Range: Word$Range): Word$AutoCorrectEntry;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$AutoCorrectEntry;
    Parent: any;
  }

  declare class Word$AutoCorrectEntry {
    constructor(): this;
    Word$Application: Word$Application;
    Apply(Word$Range: Word$Range): void;
    Creator: number;
    Delete(): void;
    Word$Index: number;
    Name: string;
    Parent: any;
    RichText: boolean;
    Value: string;
  }

  declare class Word$AutoTextEntries {
    constructor(): this;
    Add(Name: string, Word$Range: Word$Range): Word$AutoTextEntry;
    AppendToSpike(Word$Range: Word$Range): Word$AutoTextEntry;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$AutoTextEntry;
    Parent: any;
  }

  declare class Word$AutoTextEntry {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Word$Index: number;
    Insert(Where: Word$Range, RichText?: any): Word$Range;
    Name: string;
    Parent: any;
    StyleName: string;
    Value: string;
  }

  declare class Word$Bibliography {
    constructor(): this;
    Word$Application: Word$Application;
    BibliographyStyle: string;
    Creator: number;
    GenerateUniqueTag(): string;
    Parent: any;
    Word$Sources: Word$Sources;
  }

  declare class Word$Bookmark {
    constructor(): this;
    Word$Application: Word$Application;
    Word$Column: boolean;
    Copy(Name: string): Word$Bookmark;
    Creator: number;
    Delete(): void;
    Empty: boolean;
    End: number;
    Name: string;
    Parent: any;
    Word$Range: Word$Range;
    Select(): void;
    Start: number;
    StoryType: Word$WdStoryType;
  }

  declare class Word$Bookmarks {
    constructor(): this;
    Add(Name: string, Word$Range?: any): Word$Bookmark;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    DefaultSorting: Word$WdBookmarkSortBy;
    Exists(Name: string): boolean;
    Item(Word$Index: number | string): Word$Bookmark;
    Parent: any;
    ShowHidden: boolean;
  }

  declare class Word$Border {
    constructor(): this;
    Word$Application: Word$Application;
    ArtStyle: Word$WdPageBorderArt;
    ArtWidth: number;
    Color: Word$WdColor;
    ColorIndex: Word$WdColorIndex;
    Creator: number;
    Inside: boolean;
    LineStyle: Word$WdLineStyle;
    LineWidth: Word$WdLineWidth;
    Parent: any;
    Visible: boolean;
  }

  declare class Word$Borders {
    constructor(): this;
    AlwaysInFront: boolean;
    Word$Application: Word$Application;
    ApplyPageBordersToAllSections(): void;
    Count: number;
    Creator: number;
    DistanceFrom: Word$WdBorderDistanceFrom;
    DistanceFromBottom: number;
    DistanceFromLeft: number;
    DistanceFromRight: number;
    DistanceFromTop: number;
    Enable: boolean | Word$WdConstants.wdUndefined | Word$WdLineStyle;
    EnableFirstPageInSection: boolean;
    EnableOtherPagesInSection: boolean;
    HasHorizontal: boolean;
    HasVertical: boolean;
    InsideColor: Word$WdColor;
    InsideColorIndex: Word$WdColorIndex;
    InsideLineStyle: Word$WdLineStyle;
    InsideLineWidth: Word$WdLineWidth;
    Item(Word$Index: Word$WdBorderType): Word$Border;
    JoinBorders: boolean;
    OutsideColor: Word$WdColor;
    OutsideColorIndex: Word$WdColorIndex;
    OutsideLineStyle: Word$WdLineStyle;
    OutsideLineWidth: Word$WdLineWidth;
    Parent: any;
    Shadow: boolean;
    SurroundFooter: boolean;
    SurroundHeader: boolean;
  }

  declare class Word$Break {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    PageIndex: number;
    Parent: any;
    Word$Range: Word$Range;
  }

  declare class Word$Breaks {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$Break;
    Parent: any;
  }

  declare class Word$Browser {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Next(): void;
    Parent: any;
    Previous(): void;
    Target: Word$WdBrowseTarget;
  }

  declare class Word$BuildingBlock {
    constructor(): this;
    Word$Application: Word$Application;
    Word$Category: Word$Category;
    Creator: number;
    Delete(): void;
    Description: string;
    ID: string;
    Word$Index: number;
    Insert(Where: Word$Range, RichText?: any): Word$Range;
    InsertOptions: number;
    Name: string;
    Parent: any;
    Type: Word$BuildingBlockType;
    Value: string;
  }

  declare class Word$BuildingBlockEntries {
    constructor(): this;

    /**
     * @param [InsertOptions=0]
     */
    Add(
      Name: string,
      Type: Word$WdBuildingBlockTypes,
      Word$Category: string,
      Word$Range: Word$Range,
      Description: any,
      InsertOptions?: Word$WdDocPartInsertOptions
    ): Word$BuildingBlock;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$BuildingBlock;
    Parent: any;
  }

  declare class Word$BuildingBlocks {
    constructor(): this;

    /**
     * @param [InsertOptions=0]
     */
    Add(
      Name: string,
      Word$Range: Word$Range,
      Description: any,
      InsertOptions?: Word$WdDocPartInsertOptions
    ): Word$BuildingBlock;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$BuildingBlock;
    Parent: any;
  }

  declare class Word$BuildingBlockType {
    constructor(): this;
    Word$Application: Word$Application;
    Word$Categories: Word$Categories;
    Creator: number;
    Word$Index: number;
    Name: string;
    Parent: any;
  }

  declare class Word$BuildingBlockTypes {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: Word$WdBuildingBlockTypes): Word$BuildingBlockType;
    Parent: any;
  }

  declare class Word$CalloutFormat {
    constructor(): this;
    Accent: Office.MsoTriState;
    Angle: Office.MsoCalloutAngleType;
    Word$Application: Word$Application;
    AutoAttach: Office.MsoTriState;
    AutoLength: Office.MsoTriState;
    AutomaticLength(): void;
    Word$Border: Office.MsoTriState;
    Creator: number;
    CustomDrop(Drop: number): void;
    CustomLength(Length: number): void;
    Drop: number;
    DropType: Office.MsoCalloutDropType;
    Gap: number;
    Length: number;
    Parent: any;
    PresetDrop(DropType: Office.MsoCalloutDropType): void;
    Type: Office.MsoCalloutType;
  }

  declare class Word$CanvasShapes {
    constructor(): this;
    AddCallout(
      Type: Office.MsoCalloutType,
      Left: number,
      Top: number,
      Width: number,
      Height: number
    ): Word$Shape;
    AddConnector(
      Type: Office.MsoConnectorType,
      BeginX: number,
      BeginY: number,
      EndX: number,
      EndY: number
    ): Word$Shape;
    AddCurve(SafeArrayOfPoints: any): Word$Shape;
    AddLabel(
      Orientation: Office.MsoTextOrientation,
      Left: number,
      Top: number,
      Width: number,
      Height: number
    ): Word$Shape;
    AddLine(
      BeginX: number,
      BeginY: number,
      EndX: number,
      EndY: number
    ): Word$Shape;
    AddPicture(
      FileName: string,
      LinkToFile?: any,
      SaveWithDocument?: any,
      Left?: any,
      Top?: any,
      Width?: any,
      Height?: any
    ): Word$Shape;
    AddPolyline(SafeArrayOfPoints: any): Word$Shape;
    AddShape(
      Type: number,
      Left: number,
      Top: number,
      Width: number,
      Height: number
    ): Word$Shape;
    AddTextbox(
      Orientation: Office.MsoTextOrientation,
      Left: number,
      Top: number,
      Width: number,
      Height: number
    ): Word$Shape;
    AddTextEffect(
      PresetTextEffect: Office.MsoPresetTextEffect,
      Text: string,
      FontName: string,
      FontSize: number,
      FontBold: Office.MsoTriState,
      FontItalic: Office.MsoTriState,
      Left: number,
      Top: number
    ): Word$Shape;
    Word$Application: Word$Application;
    BuildFreeform(
      EditingType: Office.MsoEditingType,
      X1: number,
      Y1: number
    ): Word$FreeformBuilder;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$Shape;
    Parent: any;
    Range(Word$Index: any): Word$ShapeRange;
    SelectAll(): void;
  }

  declare class Word$CaptionLabel {
    constructor(): this;
    Word$Application: Word$Application;
    BuiltIn: boolean;
    ChapterStyleLevel: number;
    Creator: number;
    Delete(): void;
    ID: Word$WdCaptionLabelID;
    IncludeChapterNumber: boolean;
    Name: string;
    NumberStyle: Word$WdCaptionNumberStyle;
    Parent: any;
    Position: Word$WdCaptionPosition;
    Separator: Word$WdSeparatorType;
  }

  declare class Word$CaptionLabels {
    constructor(): this;
    Add(Name: string): Word$CaptionLabel;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$CaptionLabel;
    Parent: any;
  }

  declare class Word$Categories {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$Category;
    Parent: any;
  }

  declare class Word$Category {
    constructor(): this;
    Word$Application: Word$Application;
    Word$BuildingBlocks: Word$BuildingBlocks;
    Creator: number;
    Word$Index: number;
    Name: string;
    Parent: any;
    Type: Word$BuildingBlockType;
  }

  declare class Word$Cell {
    constructor(): this;
    Word$Application: Word$Application;
    AutoSum(): void;
    Word$Borders: Word$Borders;
    BottomPadding: number;
    Word$Column: Word$Column;
    ColumnIndex: number;
    Creator: number;
    Delete(ShiftCells?: any): void;
    FitText: boolean;
    Formula(Formula?: any, NumFormat?: any): void;
    Height: number;
    HeightRule: Word$WdRowHeightRule;
    ID: string;
    LeftPadding: number;
    Merge(MergeTo: Word$Cell): void;
    NestingLevel: number;
    Next: Word$Cell;
    Parent: any;
    PreferredWidth: number;
    PreferredWidthType: Word$WdPreferredWidthType;
    Previous: Word$Cell;
    Word$Range: Word$Range;
    RightPadding: number;
    Word$Row: Word$Row;
    RowIndex: number;
    Select(): void;
    SetHeight(RowHeight: any, HeightRule: Word$WdRowHeightRule): void;
    SetWidth(ColumnWidth: number, RulerStyle: Word$WdRulerStyle): void;
    Word$Shading: Word$Shading;
    Split(NumRows?: any, NumColumns?: any): void;
    Word$Tables: Word$Tables;
    TopPadding: number;
    VerticalAlignment: Word$WdCellVerticalAlignment;
    Width: number;
    WordWrap: boolean;
  }

  declare class Word$Cells {
    constructor(): this;
    Add(BeforeCell?: any): Word$Cell;
    Word$Application: Word$Application;
    AutoFit(): void;
    Word$Borders: Word$Borders;
    Count: number;
    Creator: number;
    Delete(ShiftCells?: any): void;
    DistributeHeight(): void;
    DistributeWidth(): void;
    Height: number;
    HeightRule: Word$WdRowHeightRule;
    Item(Word$Index: number): Word$Cell;
    Merge(): void;
    NestingLevel: number;
    Parent: any;
    PreferredWidth: number;
    PreferredWidthType: Word$WdPreferredWidthType;
    SetHeight(RowHeight: any, HeightRule: Word$WdRowHeightRule): void;
    SetWidth(ColumnWidth: number, RulerStyle: Word$WdRulerStyle): void;
    Word$Shading: Word$Shading;
    Split(NumRows?: any, NumColumns?: any, MergeBeforeSplit?: any): void;
    VerticalAlignment: Word$WdCellVerticalAlignment;
    Width: number;
  }

  declare class Word$Characters {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    First: Word$Range;
    Item(Word$Index: number): Word$Range;
    Last: Word$Range;
    Parent: any;
  }

  declare class Word$Chart {
    constructor(): this;
    Word$Application: any;
    ApplyChartTemplate(FileName: string): void;
    ApplyCustomType(ChartType: Office.XlChartType, TypeName?: any): void;

    /**
     * @param [Type=2]
     */
    ApplyDataLabels(
      Type?: Word$XlDataLabelsType,
      LegendKey?: any,
      AutoText?: any,
      HasLeaderLines?: any,
      ShowSeriesName?: any,
      ShowCategoryName?: any,
      ShowValue?: any,
      ShowPercentage?: any,
      ShowBubbleSize?: any,
      Separator?: any
    ): void;
    ApplyLayout(Layout: number, ChartType?: any): void;
    Area3DGroup: Word$ChartGroup;
    AreaGroups(Word$Index?: any): any;
    AutoFormat(Gallery: number, Format?: any): void;
    AutoScaling: boolean;

    /**
     * @param [AxisGroup=1]
     */
    Axes(Type: any, AxisGroup?: Word$XlAxisGroup): any;
    BackWall: Word$Walls;
    Bar3DGroup: Word$ChartGroup;
    BarGroups(Word$Index?: any): any;
    BarShape: Word$XlBarShape;
    Word$ChartArea: Word$ChartArea;
    Word$ChartData: Word$ChartData;
    ChartGroups(Word$Index?: any): any;
    ChartStyle: any;
    Word$ChartTitle: Word$ChartTitle;
    ChartType: Office.XlChartType;
    ChartWizard(
      Word$Source?: any,
      Gallery?: any,
      Format?: any,
      PlotBy?: any,
      CategoryLabels?: any,
      SeriesLabels?: any,
      HasLegend?: any,
      Title?: any,
      CategoryTitle?: any,
      ValueTitle?: any,
      ExtraTitle?: any
    ): void;
    ClearToMatchStyle(): void;
    Column3DGroup: Word$ChartGroup;
    ColumnGroups(Word$Index?: any): any;
    Copy(Before?: any, After?: any): void;

    /**
     * @param [Appearance=1]
     * @param [Format=-4147]
     * @param [Size=2]
     */
    CopyPicture(
      Appearance?: Word$XlPictureAppearance,
      Format?: Word$XlCopyPictureFormat,
      Size?: Word$XlPictureAppearance
    ): void;
    Word$Corners: Word$Corners;
    Creator: number;
    Word$DataTable: Word$DataTable;
    Delete(): any;
    DepthPercent: number;
    DisplayBlanksAs: Word$XlDisplayBlanksAs;
    DoughnutGroups(Word$Index?: any): any;
    Elevation: number;
    Export(FileName: string, FilterName?: any, Interactive?: any): boolean;
    Word$Floor: Word$Floor;
    GapDepth: number;
    GetChartElement(
      x: number,
      y: number,
      ElementID: number,
      Arg1: number,
      Arg2: number
    ): void;
    HasAxis(Index1?: any, Index2?: any): any;
    HasDataTable: boolean;
    HasLegend: boolean;
    HasPivotFields: boolean;
    HasTitle: boolean;
    HeightPercent: number;
    Word$Legend: Word$Legend;
    Line3DGroup: Word$ChartGroup;
    LineGroups(Word$Index?: any): any;
    Parent: any;
    Paste(Type?: any): void;
    Perspective: number;
    Pie3DGroup: Word$ChartGroup;
    PieGroups(Word$Index?: any): any;
    PivotLayout: any;
    Word$PlotArea: Word$PlotArea;
    PlotBy: Word$XlRowCol;
    PlotVisibleOnly: boolean;
    RadarGroups(Word$Index?: any): any;
    Refresh(): void;
    RightAngleAxes: any;
    Rotation: any;
    SaveChartTemplate(FileName: string): void;
    Select(Replace?: any): any;
    SeriesCollection(Word$Index?: any): any;
    SetBackgroundPicture(FileName: string): void;
    SetDefaultChart(Name: any): void;
    SetElement(Element: Office.MsoChartElementType): void;
    SetSourceData(Word$Source: string, PlotBy?: any): void;
    Word$Shapes: any;
    ShowAllFieldButtons: boolean;
    ShowAxisFieldButtons: boolean;
    ShowDataLabelsOverMaximum: boolean;
    ShowLegendFieldButtons: boolean;
    ShowReportFilterFieldButtons: boolean;
    ShowValueFieldButtons: boolean;
    SideWall: Word$Walls;
    SubType: number;
    SurfaceGroup: Word$ChartGroup;
    Type: number;
    Word$Walls: Word$Walls;
    XYGroups(Word$Index?: any): any;
  }

  declare class Word$ChartArea {
    constructor(): this;
    Word$Application: any;
    AutoScaleFont: any;
    Word$Border: Word$ChartBorder;
    Clear(): any;
    ClearContents(): any;
    ClearFormats(): any;
    Copy(): any;
    Creator: number;
    Fill: Word$ChartFillFormat;
    Word$Font: Word$ChartFont;
    Format: Word$ChartFormat;
    Height: number;
    Word$Interior: Word$Interior;
    Left: number;
    Name: string;
    Parent: any;
    Select(): any;
    Shadow: boolean;
    Top: number;
    Width: number;
  }

  declare class Word$ChartBorder {
    constructor(): this;
    Word$Application: any;
    Color: any;
    ColorIndex: any;
    Creator: number;
    LineStyle: any;
    Parent: any;
    Weight: any;
  }

  declare class Word$ChartCharacters {
    constructor(): this;
    Word$Application: any;
    Caption: string;
    Count: number;
    Creator: number;
    Delete(): any;
    Word$Font: Word$ChartFont;
    Insert(String: string): any;
    Parent: any;
    PhoneticCharacters: string;
    Text: string;
  }

  declare class Word$ChartColorFormat {
    constructor(): this;
    _Default: number;
    Word$Application: any;
    Creator: number;
    Parent: any;
    RGB: number;
    SchemeColor: number;
    Type: number;
  }

  declare class Word$ChartData {
    constructor(): this;
    Activate(): void;
    BreakLink(): void;
    IsLinked: boolean;
    Workbook: any;
  }

  declare class Word$ChartFillFormat {
    constructor(): this;
    Word$Application: any;
    BackColor: Word$ChartColorFormat;
    Creator: number;
    ForeColor: Word$ChartColorFormat;
    GradientColorType: Office.MsoGradientColorType;
    GradientDegree: number;
    GradientStyle: Office.MsoGradientStyle;
    GradientVariant: number;
    OneColorGradient(
      Word$Style: Office.MsoGradientStyle,
      Variant: number,
      Degree: number
    ): void;
    Parent: any;
    Pattern: Office.MsoPatternType;
    Patterned(Pattern: Office.MsoPatternType): void;
    PresetGradient(
      Word$Style: Office.MsoGradientStyle,
      Variant: number,
      PresetGradientType: Office.MsoPresetGradientType
    ): void;
    PresetGradientType: Office.MsoPresetGradientType;
    PresetTexture: Office.MsoPresetTexture;
    PresetTextured(PresetTexture: Office.MsoPresetTexture): void;
    Solid(): void;
    TextureName: string;
    TextureType: Office.MsoTextureType;
    TwoColorGradient(
      Word$Style: Office.MsoGradientStyle,
      Variant: number
    ): void;
    Type: Office.MsoFillType;
    UserPicture(
      PictureFile?: any,
      Word$PictureFormat?: any,
      PictureStackUnit?: any,
      PicturePlacement?: any
    ): void;
    UserTextured(TextureFile: string): void;
    Visible: Office.MsoTriState;
  }

  declare class Word$ChartFont {
    constructor(): this;
    Word$Application: any;
    Background: any;
    Bold: any;
    Color: any;
    ColorIndex: any;
    Creator: number;
    FontStyle: any;
    Italic: any;
    Name: any;
    OutlineFont: any;
    Parent: any;
    Shadow: any;
    Size: any;
    StrikeThrough: any;
    Subscript: any;
    Superscript: any;
    Underline: any;
  }

  declare class Word$ChartFormat {
    constructor(): this;
    Word$Application: any;
    Creator: number;
    Fill: Word$FillFormat;
    Glow: Word$GlowFormat;
    Word$Line: Word$LineFormat;
    Parent: any;
    Word$PictureFormat: Word$PictureFormat;
    Shadow: Word$ShadowFormat;
    SoftEdge: Word$SoftEdgeFormat;
    TextFrame2: Office.TextFrame2;
    ThreeD: Word$ThreeDFormat;
  }

  declare class Word$ChartGroup {
    constructor(): this;
    Word$Application: any;
    AxisGroup: Word$XlAxisGroup;
    BubbleScale: number;
    Creator: number;
    DoughnutHoleSize: number;
    Word$DownBars: Word$DownBars;
    Word$DropLines: Word$DropLines;
    FirstSliceAngle: number;
    GapWidth: number;
    Has3DShading: boolean;
    HasDropLines: boolean;
    HasHiLoLines: boolean;
    HasRadarAxisLabels: boolean;
    HasSeriesLines: boolean;
    HasUpDownBars: boolean;
    Word$HiLoLines: Word$HiLoLines;
    Word$Index: number;
    Overlap: number;
    Parent: any;
    RadarAxisLabels: Word$TickLabels;
    SecondPlotSize: number;
    SeriesCollection(Word$Index?: any): any;
    Word$SeriesLines: Word$SeriesLines;
    ShowNegativeBubbles: boolean;
    SizeRepresents: Word$XlSizeRepresents;
    SplitType: Word$XlChartSplitType;
    SplitValue: any;
    SubType: number;
    Type: number;
    Word$UpBars: Word$UpBars;
    VaryByCategories: boolean;
  }

  declare class Word$ChartTitle {
    constructor(): this;
    Word$Application: any;
    AutoScaleFont: any;
    Word$Border: Word$ChartBorder;
    Caption: string;
    Characters(Start?: any, Length?: any): Word$ChartCharacters;
    Creator: number;
    Delete(): any;
    Fill: Word$ChartFillFormat;
    Word$Font: Word$ChartFont;
    Format: Word$ChartFormat;
    Formula: string;
    FormulaLocal: string;
    FormulaR1C1: string;
    FormulaR1C1Local: string;
    Height: number;
    HorizontalAlignment: any;
    IncludeInLayout: boolean;
    Word$Interior: Word$Interior;
    Left: number;
    Name: string;
    Orientation: any;
    Parent: any;
    Position: Word$XlChartElementPosition;
    ReadingOrder: number;
    Select(): any;
    Shadow: boolean;
    Text: string;
    Top: number;
    VerticalAlignment: any;
    Width: number;
  }

  declare class Word$CheckBox {
    constructor(): this;
    Word$Application: Word$Application;
    AutoSize: boolean;
    Creator: number;
    Default: boolean;
    Parent: any;
    Size: number;
    Valid: boolean;
    Value: boolean;
  }

  declare class Word$CoAuthLock {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Word$HeaderFooter: boolean;
    Owner: Word$CoAuthor;
    Parent: any;
    Word$Range: Word$Range;
    Type: Word$WdLockType;
    Unlock(): void;
  }

  declare class Word$CoAuthLocks {
    constructor(): this;

    /**
     * @param [Type=1]
     */
    Add(Word$Range: any, Type?: Word$WdLockType): Word$CoAuthLock;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$CoAuthLock;
    Parent: any;
    RemoveEphemeralLocks(): void;
  }

  declare class Word$CoAuthor {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    EmailAddress: string;
    ID: string;
    IsMe: boolean;
    Locks: Word$CoAuthLocks;
    Name: string;
    Parent: any;
  }

  declare class Word$CoAuthoring {
    constructor(): this;
    Word$Application: Word$Application;
    Authors: Word$CoAuthors;
    CanMerge: boolean;
    CanShare: boolean;
    Word$Conflicts: Word$Conflicts;
    Creator: number;
    Locks: Word$CoAuthLocks;
    Me: Word$CoAuthor;
    Parent: any;
    PendingUpdates: boolean;
    Updates: Word$CoAuthUpdates;
  }

  declare class Word$CoAuthors {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$CoAuthor;
    Parent: any;
  }

  declare class Word$CoAuthUpdate {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Parent: any;
    Word$Range: Word$Range;
  }

  declare class Word$CoAuthUpdates {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$CoAuthUpdate;
    Parent: any;
  }

  declare class Word$ColorFormat {
    constructor(): this;
    Word$Application: Word$Application;
    Black: number;
    Brightness: number;
    Creator: number;
    Cyan: number;
    Ink(Word$Index: number): number;
    Magenta: number;
    Name: string;
    ObjectThemeColor: Word$WdThemeColorIndex;
    OverPrint: Office.MsoTriState;
    Parent: any;
    RGB: number;
    SchemeColor: number;
    SetCMYK(Cyan: number, Magenta: number, Yellow: number, Black: number): void;
    TintAndShade: number;
    Type: Office.MsoColorType;
    Yellow: number;
  }

  declare class Word$Column {
    constructor(): this;
    Word$Application: Word$Application;
    AutoFit(): void;
    Word$Borders: Word$Borders;
    Word$Cells: Word$Cells;
    Creator: number;
    Delete(): void;
    Word$Index: number;
    IsFirst: boolean;
    IsLast: boolean;
    NestingLevel: number;
    Next: Word$Column;
    Parent: any;
    PreferredWidth: number;
    PreferredWidthType: Word$WdPreferredWidthType;
    Previous: Word$Column;
    Select(): void;
    SetWidth(ColumnWidth: number, RulerStyle: Word$WdRulerStyle): void;
    Word$Shading: Word$Shading;
    Sort(
      ExcludeHeader?: any,
      SortFieldType?: any,
      SortOrder?: any,
      CaseSensitive?: any,
      BidiSort?: any,
      IgnoreThe?: any,
      IgnoreKashida?: any,
      IgnoreDiacritics?: any,
      IgnoreHe?: any,
      LanguageID?: any
    ): void;
    SortOld(
      ExcludeHeader?: any,
      SortFieldType?: any,
      SortOrder?: any,
      CaseSensitive?: any,
      LanguageID?: any
    ): void;
    Width: number;
  }

  declare class Word$Columns {
    constructor(): this;
    Add(BeforeColumn?: any): Word$Column;
    Word$Application: Word$Application;
    AutoFit(): void;
    Word$Borders: Word$Borders;
    Count: number;
    Creator: number;
    Delete(): void;
    DistributeWidth(): void;
    First: Word$Column;
    Item(Word$Index: number): Word$Column;
    Last: Word$Column;
    NestingLevel: number;
    Parent: any;
    PreferredWidth: number;
    PreferredWidthType: Word$WdPreferredWidthType;
    Select(): void;
    SetWidth(ColumnWidth: number, RulerStyle: Word$WdRulerStyle): void;
    Word$Shading: Word$Shading;
    Width: number;
  }

  declare class Word$Comment {
    constructor(): this;
    Word$Application: Word$Application;
    Author: string;
    Creator: number;
    Date: VarDate;
    Delete(): void;
    Edit(): void;
    Word$Index: number;
    Initial: string;
    IsInk: boolean;
    Parent: any;
    Word$Range: Word$Range;
    Reference: Word$Range;
    Scope: Word$Range;
    ShowTip: boolean;
  }

  declare class Word$Comments {
    constructor(): this;
    Add(Word$Range: Word$Range, Text?: any): Word$Comment;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$Comment;
    Parent: any;
    ShowBy: string;
  }

  declare class Word$ConditionalStyle {
    constructor(): this;
    Word$Application: Word$Application;
    Word$Borders: Word$Borders;
    BottomPadding: number;
    Creator: number;
    Word$Font: Word$Font;
    LeftPadding: number;
    Word$ParagraphFormat: Word$ParagraphFormat;
    Parent: any;
    RightPadding: number;
    Word$Shading: Word$Shading;
    TopPadding: number;
  }

  declare class Word$Conflict {
    constructor(): this;
    Accept(): void;
    Word$Application: Word$Application;
    Creator: number;
    Word$Index: number;
    Parent: any;
    Word$Range: Word$Range;
    Reject(): void;
    Type: Word$WdRevisionType;
  }

  declare class Word$Conflicts {
    constructor(): this;
    AcceptAll(): void;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$Conflict;
    Parent: any;
    RejectAll(): void;
  }

  declare class Word$ConnectorFormat {
    constructor(): this;
    Word$Application: Word$Application;
    BeginConnect(ConnectedShape: Word$Shape, ConnectionSite: number): void;
    BeginConnected: Office.MsoTriState;
    BeginConnectedShape: Word$Shape;
    BeginConnectionSite: number;
    BeginDisconnect(): void;
    Creator: number;
    EndConnect(ConnectedShape: Word$Shape, ConnectionSite: number): void;
    EndConnected: Office.MsoTriState;
    EndConnectedShape: Word$Shape;
    EndConnectionSite: number;
    EndDisconnect(): void;
    Parent: any;
    Type: Office.MsoConnectorType;
  }

  declare class Word$ContentControl {
    constructor(): this;
    Word$Application: Word$Application;
    BuildingBlockCategory: string;
    Word$BuildingBlockType: Word$WdBuildingBlockTypes;
    Checked: boolean;
    Copy(): void;
    Creator: number;
    Cut(): void;
    DateCalendarType: Word$WdCalendarType;
    DateDisplayFormat: string;
    DateDisplayLocale: Word$WdLanguageID;
    DateStorageFormat: Word$WdContentControlDateStorageFormat;
    DefaultTextStyle: any;

    /**
     * @param boolean [DeleteContents=false]
     */
    Delete(DeleteContents?: boolean): void;
    DropdownListEntries: Word$ContentControlListEntries;
    ID: string;
    LockContentControl: boolean;
    LockContents: boolean;
    MultiLine: boolean;
    Parent: any;
    ParentContentControl: Word$ContentControl;
    PlaceholderText: Word$BuildingBlock;
    Word$Range: Word$Range;

    /**
     * @param string [Font='']
     */
    SetCheckedSymbol(CharacterNumber: number, Word$Font?: string): void;

    /**
     * @param [BuildingBlock=0]
     * @param [Range=0]
     * @param string [Text='']
     */
    SetPlaceholderText(
      Word$BuildingBlock?: Word$BuildingBlock,
      Word$Range?: Word$Range,
      Text?: string
    ): void;

    /**
     * @param string [Font='']
     */
    SetUncheckedSymbol(CharacterNumber: number, Word$Font?: string): void;
    ShowingPlaceholderText: boolean;
    Tag: string;
    Temporary: boolean;
    Title: string;
    Type: Word$WdContentControlType;
    Ungroup(): void;
    Word$XMLMapping: Word$XMLMapping;
  }

  declare class Word$ContentControlListEntries {
    constructor(): this;

    /**
     * @param string [Value='']
     * @param number [Index=0]
     */
    Add(
      Text: string,
      Value?: string,
      Word$Index?: number
    ): Word$ContentControlListEntry;
    Word$Application: Word$Application;
    Clear(): void;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$ContentControlListEntry;
    Parent: any;
  }

  declare class Word$ContentControlListEntry {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Word$Index: number;
    MoveDown(): void;
    MoveUp(): void;
    Parent: any;
    Select(): void;
    Text: string;
    Value: string;
  }

  declare class Word$ContentControls {
    constructor(): this;

    /**
     * @param [Type=0]
     */
    Add(
      Type?: Word$WdContentControlType,
      Word$Range?: any
    ): Word$ContentControl;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$ContentControl;
    Parent: any;
  }

  declare class Word$Corners {
    constructor(): this;
    Word$Application: any;
    Creator: number;
    Name: string;
    Parent: any;
    Select(): any;
  }

  declare class Word$CustomLabel {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    DotMatrix: boolean;
    Height: number;
    HorizontalPitch: number;
    Word$Index: number;
    Name: string;
    NumberAcross: number;
    NumberDown: number;
    PageSize: Word$WdCustomLabelPageSize;
    Parent: any;
    SideMargin: number;
    TopMargin: number;
    Valid: boolean;
    VerticalPitch: number;
    Width: number;
  }

  declare class Word$CustomLabels {
    constructor(): this;
    Add(Name: string, DotMatrix?: any): Word$CustomLabel;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$CustomLabel;
    Parent: any;
  }

  declare class Word$CustomProperties {
    constructor(): this;
    Add(Name: string, Value: string): Word$CustomProperty;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$CustomProperty;
    Parent: any;
  }

  declare class Word$CustomProperty {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Name: string;
    Parent: any;
    Value: string;
  }

  declare class Word$DataTable {
    constructor(): this;
    Word$Application: any;
    AutoScaleFont: any;
    Word$Border: Word$ChartBorder;
    Creator: number;
    Delete(): void;
    Word$Font: Word$ChartFont;
    Format: Word$ChartFormat;
    HasBorderHorizontal: boolean;
    HasBorderOutline: boolean;
    HasBorderVertical: boolean;
    Parent: any;
    Select(): void;
    ShowLegendKey: boolean;
  }

  declare class Word$DefaultWebOptions {
    constructor(): this;
    AllowPNG: boolean;
    AlwaysSaveInDefaultEncoding: boolean;
    Word$Application: Word$Application;
    BrowserLevel: Word$WdBrowserLevel;
    CheckIfOfficeIsHTMLEditor: boolean;
    CheckIfWordIsDefaultHTMLEditor: boolean;
    Creator: number;
    Encoding: Office.MsoEncoding;
    FolderSuffix: string;
    Fonts: Office.WebPageFonts;
    OptimizeForBrowser: boolean;
    OrganizeInFolder: boolean;
    Parent: any;
    PixelsPerInch: number;
    RelyOnCSS: boolean;
    RelyOnVML: boolean;
    SaveNewWebPagesAsWebArchives: boolean;
    ScreenSize: Office.MsoScreenSize;
    TargetBrowser: Office.MsoTargetBrowser;
    UpdateLinksOnSave: boolean;
    UseLongFileNames: boolean;
  }

  declare class Word$Diagram {
    constructor(): this;
    Word$Application: Word$Application;
    AutoFormat: Office.MsoTriState;
    AutoLayout: Office.MsoTriState;
    Convert(Type: Office.MsoDiagramType): void;
    Creator: number;
    FitText(): void;
    Nodes: Word$DiagramNodes;
    Parent: any;
    Reverse: Office.MsoTriState;
    Type: Office.MsoDiagramType;
  }

  declare class Word$DiagramNode {
    constructor(): this;

    /**
     * @param [Pos=2]
     * @param [NodeType=1]
     */
    AddNode(
      Pos?: Office.MsoRelativeNodePosition,
      NodeType?: Office.MsoDiagramNodeType
    ): Word$DiagramNode;
    Word$Application: Word$Application;
    Children: Word$DiagramNodeChildren;

    /**
     * @param [TargetNode=0]
     * @param [Pos=2]
     */
    CloneNode(
      copyChildren: boolean,
      TargetNode?: Word$DiagramNode,
      Pos?: Office.MsoRelativeNodePosition
    ): Word$DiagramNode;
    Creator: number;
    Delete(): void;
    Word$Diagram: Word$Diagram;
    Layout: Office.MsoOrgChartLayoutType;
    MoveNode(
      TargetNode: Word$DiagramNode,
      Pos: Office.MsoRelativeNodePosition
    ): void;
    NextNode(): Word$DiagramNode;
    Parent: any;
    PrevNode(): Word$DiagramNode;
    ReplaceNode(TargetNode: Word$DiagramNode): void;
    Root: Word$DiagramNode;
    Word$Shape: Word$Shape;

    /**
     * @param [Pos=-1]
     */
    SwapNode(
      TargetNode: Word$DiagramNode,
      Pos?: Office.MsoRelativeNodePosition
    ): void;
    TextShape: Word$Shape;
    TransferChildren(ReceivingNode: Word$DiagramNode): void;
  }

  declare class Word$DiagramNodeChildren {
    constructor(): this;

    /**
     * @param any [Index=-1]
     * @param [NodeType=1]
     */
    AddNode(
      Word$Index?: any,
      NodeType?: Office.MsoDiagramNodeType
    ): Word$DiagramNode;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    FirstChild: Word$DiagramNode;
    Item(Word$Index: any): Word$DiagramNode;
    LastChild: Word$DiagramNode;
    Parent: any;
    SelectAll(): void;
  }

  declare class Word$DiagramNodes {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$DiagramNode;
    Parent: any;
    SelectAll(): void;
  }

  declare class Word$Dialog {
    constructor(): this;
    Word$Application: Word$Application;
    CommandBarId: number;
    CommandName: string;
    Creator: number;
    DefaultTab: Word$WdWordDialogTab;
    Display(TimeOut?: number): number;
    Execute(): void;
    Parent: any;
    Show(TimeOut?: any): number;
    Type: Word$WdWordDialog;
    Update(): void;
  }

  declare class Word$Dialogs {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: Word$WdWordDialog): Word$Dialog;
    Parent: any;
  }

  declare class Word$Dictionaries {
    constructor(): this;
    ActiveCustomDictionary: Word$Dictionary;
    Add(FileName: string): Word$Dictionary;
    Word$Application: Word$Application;
    ClearAll(): void;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$Dictionary;
    Maximum: number;
    Parent: any;
  }

  declare class Word$Dictionary {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    LanguageID: Word$WdLanguageID;
    LanguageSpecific: boolean;
    Name: string;
    Parent: any;
    Path: string;
    ReadOnly: boolean;
    Type: Word$WdDictionaryType;
  }

  declare class Word$Document {
    constructor(): this;
    _CodeName: string;
    AcceptAllRevisions(): void;
    AcceptAllRevisionsShown(): void;
    Activate(): void;
    ActiveTheme: string;
    ActiveThemeDisplayName: string;
    ActiveWindow: Word$Window;
    ActiveWritingStyle(LanguageID: any): string;
    AddDocumentWorkspaceHeader(
      RichFormat: boolean,
      Url: string,
      Title: string,
      Description: string,
      ID: string
    ): void;
    AddMeetingWorkspaceHeader(
      SkipIfAbsent: boolean,
      Url: string,
      Title: string,
      Description: string,
      ID: string
    ): void;
    AddToFavorites(): void;
    Word$Application: Word$Application;
    ApplyDocumentTheme(FileName: string): void;
    ApplyQuickStyleSet(Name: string): void;
    ApplyQuickStyleSet2(Word$Style: any): void;
    ApplyTheme(Name: string): void;
    AttachedTemplate: Word$Template;
    AutoFormat(): void;
    AutoFormatOverride: boolean;
    AutoHyphenation: boolean;
    AutoSummarize(Length?: any, Mode?: any, UpdateProperties?: any): Word$Range;
    Background: Word$Shape;
    Word$Bibliography: Word$Bibliography;
    Word$Bookmarks: Word$Bookmarks;
    BuiltInDocumentProperties: Office.DocumentProperties<Word$Application>;
    CanCheckin(): boolean;
    Word$Characters: Word$Characters;
    CheckConsistency(): void;
    CheckGrammar(): void;

    /**
     * @param boolean [SaveChanges=true]
     * @param boolean [MakePublic=false]
     */
    CheckIn(
      SaveChanges?: boolean,
      Word$Comments?: any,
      MakePublic?: boolean
    ): void;

    /**
     * @param boolean [SaveChanges=true]
     * @param boolean [MakePublic=false]
     */
    CheckInWithVersion(
      SaveChanges?: boolean,
      Word$Comments?: any,
      MakePublic?: boolean,
      VersionType?: any
    ): void;
    CheckNewSmartTags(): void;
    CheckSpelling(
      CustomDictionary?: any,
      IgnoreUppercase?: any,
      AlwaysSuggest?: any,
      CustomDictionary2?: any,
      CustomDictionary3?: any,
      CustomDictionary4?: any,
      CustomDictionary5?: any,
      CustomDictionary6?: any,
      CustomDictionary7?: any,
      CustomDictionary8?: any,
      CustomDictionary9?: any,
      CustomDictionary10?: any
    ): void;
    ChildNodeSuggestions: Word$XMLChildNodeSuggestions;
    ClickAndTypeParagraphStyle: any;
    Close(SaveChanges?: any, OriginalFormat?: any, RouteDocument?: any): void;
    ClosePrintPreview(): void;
    Word$CoAuthoring: Word$CoAuthoring;
    CodeName: string;
    CommandBars: Office.CommandBars;
    Word$Comments: Word$Comments;
    Compare(
      Name: string,
      AuthorName?: any,
      CompareTarget?: any,
      DetectFormatChanges?: any,
      IgnoreAllComparisonWarnings?: any,
      AddToRecentFiles?: any,
      RemovePersonalInformation?: any,
      RemoveDateAndTime?: any
    ): void;
    Compare2000(Name: string): void;
    Compare2002(
      Name: string,
      AuthorName?: any,
      CompareTarget?: any,
      DetectFormatChanges?: any,
      IgnoreAllComparisonWarnings?: any,
      AddToRecentFiles?: any
    ): void;
    Compatibility(Type: Word$WdCompatibility): boolean;
    CompatibilityMode: number;
    ComputeStatistics(
      Statistic: Word$WdStatistic,
      IncludeFootnotesAndEndnotes?: any
    ): number;
    ConsecutiveHyphensLimit: number;
    Container: any;
    Content: Word$Range;
    Word$ContentControls: Word$ContentControls;
    ContentTypeProperties: Office.MetaProperties;
    Convert(): void;
    ConvertAutoHyphens(): void;
    ConvertNumbersToText(NumberType?: any): void;
    ConvertVietDoc(CodePageOrigin: number): void;
    CopyStylesFromTemplate(Word$Template: string): void;
    CountNumberedItems(NumberType?: any, Level?: any): number;
    CreateLetterContent(
      DateFormat: string,
      IncludeHeaderFooter: boolean,
      PageDesign: string,
      LetterStyle: Word$WdLetterStyle,
      Letterhead: boolean,
      LetterheadLocation: Word$WdLetterheadLocation,
      LetterheadSize: number,
      RecipientName: string,
      RecipientAddress: string,
      Salutation: string,
      SalutationType: Word$WdSalutationType,
      RecipientReference: string,
      MailingInstructions: string,
      AttentionLine: string,
      Subject: string,
      CCList: string,
      ReturnAddress: string,
      SenderName: string,
      Closing: string,
      SenderCompany: string,
      SenderJobTitle: string,
      SenderInitials: string,
      EnclosureNumber: number,
      InfoBlock?: any,
      RecipientCode?: any,
      RecipientGender?: any,
      ReturnAddressShortForm?: any,
      SenderCity?: any,
      SenderCode?: any,
      SenderGender?: any,
      SenderReference?: any
    ): Word$LetterContent;
    Creator: number;
    CurrentRsid: number;
    CustomDocumentProperties: Office.DocumentProperties<Word$Application>;
    CustomXMLParts: Office.CustomXMLParts;
    DataForm(): void;
    DefaultTableStyle: any;
    DefaultTabStop: number;
    DefaultTargetFrame: string;
    DeleteAllComments(): void;
    DeleteAllCommentsShown(): void;
    DeleteAllEditableRanges(EditorID?: any): void;
    DeleteAllInkAnnotations(): void;
    DetectLanguage(): void;
    DisableFeatures: boolean;
    DisableFeaturesIntroducedAfter: Word$WdDisableFeaturesIntroducedAfter;
    DocID: number;
    DocumentInspectors: Office.DocumentInspectors;
    DocumentLibraryVersions: Office.DocumentLibraryVersions;
    DocumentTheme: Office.OfficeTheme;
    DoNotEmbedSystemFonts: boolean;
    DowngradeDocument(): void;
    Dummy1: void;
    Dummy2(): void;
    Dummy3: void;
    Dummy4(): void;
    EditionOptions(
      Type: Word$WdEditionType,
      Option: Word$WdEditionOption,
      Name: string,
      Format?: any
    ): void;
    Word$Email: Word$Email;
    EmbedLinguisticData: boolean;
    EmbedSmartTags: boolean;
    EmbedTrueTypeFonts: boolean;
    EncryptionProvider: string;
    Word$Endnotes: Word$Endnotes;
    EndReview(): void;
    EnforceStyle: boolean;
    Word$Envelope: Word$Envelope;

    /**
     * @param boolean [OpenAfterExport=false]
     * @param [OptimizeFor=0]
     * @param [Range=0]
     * @param number [From=1]
     * @param number [To=1]
     * @param [Item=0]
     * @param boolean [IncludeDocProps=false]
     * @param boolean [KeepIRM=true]
     * @param [CreateBookmarks=0]
     * @param boolean [DocStructureTags=true]
     * @param boolean [BitmapMissingFonts=true]
     * @param boolean [UseISO19005_1=false]
     */
    ExportAsFixedFormat(
      OutputFileName: string,
      ExportFormat: Word$WdExportFormat,
      OpenAfterExport?: boolean,
      OptimizeFor?: Word$WdExportOptimizeFor,
      Word$Range?: Word$WdExportRange,
      From?: number,
      To?: number,
      Item?: Word$WdExportItem,
      IncludeDocProps?: boolean,
      KeepIRM?: boolean,
      CreateBookmarks?: Word$WdExportCreateBookmarks,
      DocStructureTags?: boolean,
      BitmapMissingFonts?: boolean,
      UseISO19005_1?: boolean,
      FixedFormatExtClassPtr?: any
    ): void;
    FarEastLineBreakLanguage: Word$WdFarEastLineBreakLanguageID;
    FarEastLineBreakLevel: Word$WdFarEastLineBreakLevel;
    Word$Fields: Word$Fields;
    Final: boolean;
    FitToPages(): void;
    FollowHyperlink(
      Address?: any,
      SubAddress?: any,
      NewWindow?: any,
      AddHistory?: any,
      ExtraInfo?: any,
      Method?: any,
      HeaderInfo?: any
    ): void;
    Word$Footnotes: Word$Footnotes;
    FormattingShowClear: boolean;
    FormattingShowFilter: Word$WdShowFilter;
    FormattingShowFont: boolean;
    FormattingShowNextLevel: boolean;
    FormattingShowNumbering: boolean;
    FormattingShowParagraph: boolean;
    FormattingShowUserStyleName: boolean;
    Word$FormFields: Word$FormFields;
    FormsDesign: boolean;
    ForwardMailer(): void;
    Word$Frames: Word$Frames;
    Word$Frameset: Word$Frameset;
    FreezeLayout(): void;
    FullName: string;
    GetCrossReferenceItems(ReferenceType: any): any;
    GetLetterContent(): Word$LetterContent;
    GetWorkflowTasks(): Office.WorkflowTasks;
    GetWorkflowTemplates(): Office.WorkflowTemplates;
    GoTo(What?: any, Which?: any, Count?: any, Name?: any): Word$Range;
    GrammarChecked: boolean;
    GrammaticalErrors: Word$ProofreadingErrors;
    GridDistanceHorizontal: number;
    GridDistanceVertical: number;
    GridOriginFromMargin: boolean;
    GridOriginHorizontal: number;
    GridOriginVertical: number;
    GridSpaceBetweenHorizontalLines: number;
    GridSpaceBetweenVerticalLines: number;
    HasMailer: boolean;
    HasPassword: boolean;
    HasRoutingSlip: boolean;
    HasVBProject: boolean;
    Word$HTMLDivisions: Word$HTMLDivisions;
    HTMLProject: Office.HTMLProject;
    Word$Hyperlinks: Word$Hyperlinks;
    HyphenateCaps: boolean;
    HyphenationZone: number;
    Word$Indexes: Word$Indexes;
    Word$InlineShapes: Word$InlineShapes;
    IsMasterDocument: boolean;
    IsSubdocument: boolean;
    JustificationMode: Word$WdJustificationMode;
    KerningByAlgorithm: boolean;
    Kind: Word$WdDocumentKind;
    LanguageDetected: boolean;
    Word$ListParagraphs: Word$ListParagraphs;
    Word$Lists: Word$Lists;
    Word$ListTemplates: Word$ListTemplates;
    LockQuickStyleSet: boolean;
    LockServerFile(): void;
    LockTheme: boolean;
    MailEnvelope: Office.MsoEnvelope;
    Word$Mailer: Word$Mailer;
    Word$MailMerge: Word$MailMerge;
    MakeCompatibilityDefault(): void;
    ManualHyphenation(): void;
    Merge(
      FileName: string,
      MergeTarget?: any,
      DetectFormatChanges?: any,
      UseFormattingFrom?: any,
      AddToRecentFiles?: any
    ): void;
    Merge2000(FileName: string): void;
    Name: string;
    NoLineBreakAfter: string;
    NoLineBreakBefore: string;
    OMathBreakBin: Word$WdOMathBreakBin;
    OMathBreakSub: Word$WdOMathBreakSub;
    OMathFontName: string;
    OMathIntSubSupLim: boolean;
    OMathJc: Word$WdOMathJc;
    OMathLeftMargin: number;
    OMathNarySupSubLim: boolean;
    OMathRightMargin: number;
    Word$OMaths: Word$OMaths;
    OMathSmallFrac: boolean;
    OMathWrap: number;
    OpenEncoding: Office.MsoEncoding;
    OptimizeForWord97: boolean;
    OriginalDocumentTitle: string;
    Word$PageSetup: Word$PageSetup;
    Word$Paragraphs: Word$Paragraphs;
    Parent: any;
    Password: string;
    PasswordEncryptionAlgorithm: string;
    PasswordEncryptionFileProperties: boolean;
    PasswordEncryptionKeyLength: number;
    PasswordEncryptionProvider: string;
    Path: string;
    Permission: Office.Permission;
    Post(): void;
    PresentIt(): void;
    PrintFormsData: boolean;
    PrintFractionalWidths: boolean;
    PrintOut(
      Background?: any,
      Append?: any,
      Word$Range?: any,
      OutputFileName?: any,
      From?: any,
      To?: any,
      Item?: any,
      Copies?: any,
      Word$Pages?: any,
      PageType?: any,
      PrintToFile?: any,
      Collate?: any,
      ActivePrinterMacGX?: any,
      ManualDuplexPrint?: any,
      PrintZoomColumn?: any,
      PrintZoomRow?: any,
      PrintZoomPaperWidth?: any,
      PrintZoomPaperHeight?: any
    ): void;
    PrintOut2000(
      Background?: any,
      Append?: any,
      Word$Range?: any,
      OutputFileName?: any,
      From?: any,
      To?: any,
      Item?: any,
      Copies?: any,
      Word$Pages?: any,
      PageType?: any,
      PrintToFile?: any,
      Collate?: any,
      ActivePrinterMacGX?: any,
      ManualDuplexPrint?: any,
      PrintZoomColumn?: any,
      PrintZoomRow?: any,
      PrintZoomPaperWidth?: any,
      PrintZoomPaperHeight?: any
    ): void;
    PrintOutOld(
      Background?: any,
      Append?: any,
      Word$Range?: any,
      OutputFileName?: any,
      From?: any,
      To?: any,
      Item?: any,
      Copies?: any,
      Word$Pages?: any,
      PageType?: any,
      PrintToFile?: any,
      Collate?: any,
      ActivePrinterMacGX?: any,
      ManualDuplexPrint?: any
    ): void;
    PrintPostScriptOverText: boolean;
    PrintPreview(): void;
    PrintRevisions: boolean;
    Protect(
      Type: Word$WdProtectionType,
      NoReset?: any,
      Password?: any,
      UseIRM?: any,
      EnforceStyleLock?: any
    ): void;
    Protect2002(
      Type: Word$WdProtectionType,
      NoReset?: any,
      Password?: any
    ): void;
    ProtectionType: Word$WdProtectionType;
    Range(Start?: number, End?: number): Word$Range;
    Word$ReadabilityStatistics: Word$ReadabilityStatistics;
    ReadingLayoutSizeX: number;
    ReadingLayoutSizeY: number;
    ReadingModeLayoutFrozen: boolean;
    ReadOnly: boolean;
    ReadOnlyRecommended: boolean;
    RecheckSmartTags(): void;
    Redo(Times?: any): boolean;
    RejectAllRevisions(): void;
    RejectAllRevisionsShown(): void;
    Reload(): void;
    ReloadAs(Encoding: Office.MsoEncoding): void;
    RemoveDateAndTime: boolean;
    RemoveDocumentInformation(
      RemoveDocInfoType: Word$WdRemoveDocInfoType
    ): void;
    RemoveDocumentWorkspaceHeader(ID: string): void;
    RemoveLockedStyles(): void;
    RemoveNumbers(NumberType?: any): void;
    RemovePersonalInformation: boolean;
    RemoveSmartTags(): void;
    RemoveTheme(): void;
    Repaginate(): void;
    Reply(): void;
    ReplyAll(): void;
    ReplyWithChanges(ShowMessage?: any): void;
    Word$Research: Word$Research;
    ResetFormFields(): void;
    RevisedDocumentTitle: string;
    Word$Revisions: Word$Revisions;
    Route(): void;
    Routed: boolean;
    Word$RoutingSlip: Word$RoutingSlip;
    RunAutoMacro(Which: Word$WdAutoMacros): void;
    RunLetterWizard(Word$LetterContent?: any, WizardMode?: any): void;
    Save(): void;
    SaveAs(
      FileName?: any,
      FileFormat?: any,
      LockComments?: any,
      Password?: any,
      AddToRecentFiles?: any,
      WritePassword?: any,
      ReadOnlyRecommended?: any,
      EmbedTrueTypeFonts?: any,
      SaveNativePictureFormat?: any,
      SaveFormsData?: any,
      SaveAsAOCELetter?: any,
      Encoding?: any,
      InsertLineBreaks?: any,
      AllowSubstitutions?: any,
      LineEnding?: any,
      AddBiDiMarks?: any
    ): void;
    SaveAs2(
      FileName?: any,
      FileFormat?: any,
      LockComments?: any,
      Password?: any,
      AddToRecentFiles?: any,
      WritePassword?: any,
      ReadOnlyRecommended?: any,
      EmbedTrueTypeFonts?: any,
      SaveNativePictureFormat?: any,
      SaveFormsData?: any,
      SaveAsAOCELetter?: any,
      Encoding?: any,
      InsertLineBreaks?: any,
      AllowSubstitutions?: any,
      LineEnding?: any,
      AddBiDiMarks?: any,
      CompatibilityMode?: any
    ): void;
    SaveAs2000(
      FileName?: any,
      FileFormat?: any,
      LockComments?: any,
      Password?: any,
      AddToRecentFiles?: any,
      WritePassword?: any,
      ReadOnlyRecommended?: any,
      EmbedTrueTypeFonts?: any,
      SaveNativePictureFormat?: any,
      SaveFormsData?: any,
      SaveAsAOCELetter?: any
    ): void;
    SaveAsQuickStyleSet(FileName: string): void;
    Saved: boolean;
    SaveEncoding: Office.MsoEncoding;
    SaveFormat: number;
    SaveFormsData: boolean;
    SaveSubsetFonts: boolean;
    sblt(s: string): void;
    Scripts: Office.Scripts;
    Word$Sections: Word$Sections;
    Select(): void;
    SelectAllEditableRanges(EditorID?: any): void;
    SelectContentControlsByTag(Tag: string): Word$ContentControls;
    SelectContentControlsByTitle(Title: string): Word$ContentControls;
    SelectLinkedControls(Node: Office.CustomXMLNode): Word$ContentControls;

    /**
     * @param string [PrefixMapping='']
     * @param boolean [FastSearchSkippingTextNodes=true]
     */
    SelectNodes(
      XPath: string,
      PrefixMapping?: string,
      FastSearchSkippingTextNodes?: boolean
    ): Word$XMLNodes;

    /**
     * @param string [PrefixMapping='']
     * @param boolean [FastSearchSkippingTextNodes=true]
     */
    SelectSingleNode(
      XPath: string,
      PrefixMapping?: string,
      FastSearchSkippingTextNodes?: boolean
    ): Word$XMLNode;

    /**
     * @param [Stream=0]
     */
    SelectUnlinkedControls(Stream?: Office.CustomXMLPart): Word$ContentControls;
    SendFax(Address: string, Subject?: any): void;
    SendFaxOverInternet(
      Recipients?: any,
      Subject?: any,
      ShowMessage?: any
    ): void;
    SendForReview(
      Recipients?: any,
      Subject?: any,
      ShowMessage?: any,
      IncludeAttachment?: any
    ): void;
    SendMail(): void;
    SendMailer(FileFormat?: any, Priority?: any): void;
    Word$Sentences: Word$Sentences;
    ServerPolicy: Office.ServerPolicy;
    SetCompatibilityMode(Mode: number): void;
    SetDefaultTableStyle(Word$Style: any, SetInTemplate: boolean): void;
    SetLetterContent(Word$LetterContent: any): void;
    SetPasswordEncryptionOptions(
      PasswordEncryptionProvider: string,
      PasswordEncryptionAlgorithm: string,
      PasswordEncryptionKeyLength: number,
      PasswordEncryptionFileProperties?: any
    ): void;
    Word$Shapes: Word$Shapes;
    SharedWorkspace: Office.SharedWorkspace;
    ShowGrammaticalErrors: boolean;
    ShowRevisions: boolean;
    ShowSpellingErrors: boolean;
    ShowSummary: boolean;
    Signatures: Office.SignatureSet;
    SmartDocument: Office.SmartDocument;
    Word$SmartTags: Word$SmartTags;
    SmartTagsAsXMLProps: boolean;
    SnapToGrid: boolean;
    SnapToShapes: boolean;
    SpellingChecked: boolean;
    SpellingErrors: Word$ProofreadingErrors;
    Word$StoryRanges: Word$StoryRanges;
    Word$Styles: Word$Styles;
    Word$StyleSheets: Word$StyleSheets;
    StyleSortMethod: Word$WdStyleSort;
    Word$Subdocuments: Word$Subdocuments;
    SummaryLength: number;
    SummaryViewMode: Word$WdSummaryMode;
    Sync: Office.Sync;
    Word$Tables: Word$Tables;
    Word$TablesOfAuthorities: Word$TablesOfAuthorities;
    Word$TablesOfAuthoritiesCategories: Word$TablesOfAuthoritiesCategories;
    Word$TablesOfContents: Word$TablesOfContents;
    Word$TablesOfFigures: Word$TablesOfFigures;
    TextEncoding: Office.MsoEncoding;
    TextLineEnding: Word$WdLineEndingType;
    ToggleFormsDesign(): void;
    TrackFormatting: boolean;
    TrackMoves: boolean;
    TrackRevisions: boolean;

    /**
     * @param boolean [DataOnly=true]
     */
    TransformDocument(Path: string, DataOnly?: boolean): void;
    Type: Word$WdDocumentType;
    Undo(Times?: any): boolean;
    UndoClear(): void;
    UnfreezeLayout(): void;
    Unprotect(Password?: any): void;
    UpdateStyles(): void;
    UpdateStylesOnOpen: boolean;
    UpdateSummaryProperties(): void;
    UseMathDefaults: boolean;
    UserControl: boolean;
    Word$Variables: Word$Variables;
    VBASigned: boolean;
    VBProject: VBIDE.VBProject;
    Word$Versions: Word$Versions;
    ViewCode(): void;
    ViewPropertyBrowser(): void;
    Word$WebOptions: Word$WebOptions;
    WebPagePreview(): void;
    Word$Windows: Word$Windows;
    WordOpenXML: string;
    Word$Words: Word$Words;
    WritePassword: string;
    WriteReserved: boolean;
    XMLHideNamespaces: boolean;
    Word$XMLNodes: Word$XMLNodes;
    XMLSaveDataOnly: boolean;
    XMLSaveThroughXSLT: string;
    Word$XMLSchemaReferences: Word$XMLSchemaReferences;
    XMLSchemaViolations: Word$XMLNodes;
    XMLShowAdvancedErrors: boolean;
    XMLUseXSLTWhenSaving: boolean;
  }

  declare class Word$Documents {
    constructor(): this;
    Add(
      Word$Template?: string,
      NewTemplate?: boolean,
      DocumentType?: Word$WdNewDocumentType,
      Visible?: boolean
    ): Word$Document;

    /**
     * @param string [PostID='']
     */
    AddBlogDocument(
      ProviderID: string,
      PostURL: string,
      BlogName: string,
      PostID?: string
    ): Word$Document;
    AddOld(Word$Template?: any, NewTemplate?: any): Word$Document;
    Word$Application: Word$Application;
    CanCheckOut(FileName: string): boolean;
    CheckOut(FileName: string): void;
    Close(SaveChanges?: any, OriginalFormat?: any, RouteDocument?: any): void;
    Count: number;
    Creator: number;
    Item(Word$Index: number | string): Word$Document;
    Open(
      FileName: any,
      ConfirmConversions?: any,
      ReadOnly?: any,
      AddToRecentFiles?: any,
      PasswordDocument?: any,
      PasswordTemplate?: any,
      Revert?: any,
      WritePasswordDocument?: any,
      WritePasswordTemplate?: any,
      Format?: any,
      Encoding?: any,
      Visible?: any,
      OpenAndRepair?: any,
      DocumentDirection?: any,
      NoEncodingDialog?: any,
      XMLTransform?: any
    ): Word$Document;
    Open2000(
      FileName: any,
      ConfirmConversions?: any,
      ReadOnly?: any,
      AddToRecentFiles?: any,
      PasswordDocument?: any,
      PasswordTemplate?: any,
      Revert?: any,
      WritePasswordDocument?: any,
      WritePasswordTemplate?: any,
      Format?: any,
      Encoding?: any,
      Visible?: any
    ): Word$Document;
    Open2002(
      FileName: any,
      ConfirmConversions?: any,
      ReadOnly?: any,
      AddToRecentFiles?: any,
      PasswordDocument?: any,
      PasswordTemplate?: any,
      Revert?: any,
      WritePasswordDocument?: any,
      WritePasswordTemplate?: any,
      Format?: any,
      Encoding?: any,
      Visible?: any,
      OpenAndRepair?: any,
      DocumentDirection?: any,
      NoEncodingDialog?: any
    ): Word$Document;
    OpenNoRepairDialog(
      FileName: any,
      ConfirmConversions?: any,
      ReadOnly?: any,
      AddToRecentFiles?: any,
      PasswordDocument?: any,
      PasswordTemplate?: any,
      Revert?: any,
      WritePasswordDocument?: any,
      WritePasswordTemplate?: any,
      Format?: any,
      Encoding?: any,
      Visible?: any,
      OpenAndRepair?: any,
      DocumentDirection?: any,
      NoEncodingDialog?: any,
      XMLTransform?: any
    ): Word$Document;
    OpenOld(
      FileName: any,
      ConfirmConversions?: any,
      ReadOnly?: any,
      AddToRecentFiles?: any,
      PasswordDocument?: any,
      PasswordTemplate?: any,
      Revert?: any,
      WritePasswordDocument?: any,
      WritePasswordTemplate?: any,
      Format?: any
    ): Word$Document;
    Parent: any;
    Save(NoPrompt?: any, OriginalFormat?: any): void;
  }

  declare class Word$DownBars {
    constructor(): this;
    Word$Application: any;
    Word$Border: Word$ChartBorder;
    Creator: number;
    Delete(): any;
    Fill: Word$ChartFillFormat;
    Format: Word$ChartFormat;
    Word$Interior: Word$Interior;
    Name: string;
    Parent: any;
    Select(): any;
  }

  declare class Word$DropCap {
    constructor(): this;
    Word$Application: Word$Application;
    Clear(): void;
    Creator: number;
    DistanceFromText: number;
    Enable(): void;
    FontName: string;
    LinesToDrop: number;
    Parent: any;
    Position: Word$WdDropPosition;
  }

  declare class Word$DropDown {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Default: number;
    Word$ListEntries: Word$ListEntries;
    Parent: any;
    Valid: boolean;
    Value: number;
  }

  declare class Word$DropLines {
    constructor(): this;
    Word$Application: any;
    Word$Border: Word$ChartBorder;
    Creator: number;
    Delete(): void;
    Format: Word$ChartFormat;
    Name: string;
    Parent: any;
    Select(): void;
  }

  declare class Word$Editor {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    DeleteAll(): void;
    ID: string;
    Name: string;
    NextRange: Word$Range;
    Parent: any;
    Word$Range: Word$Range;
    SelectAll(): void;
  }

  declare class Word$Editors {
    constructor(): this;
    Add(EditorID: any): Word$Editor;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$Editor;
    Parent: any;
  }

  declare class Word$Email {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    CurrentEmailAuthor: Word$EmailAuthor;
    Parent: any;
  }

  declare class Word$EmailAuthor {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Parent: any;
    Word$Style: Word$Style;
  }

  declare class Word$EmailOptions {
    constructor(): this;
    Word$Application: Word$Application;
    AutoFormatAsYouTypeApplyBorders: boolean;
    AutoFormatAsYouTypeApplyBulletedLists: boolean;
    AutoFormatAsYouTypeApplyClosings: boolean;
    AutoFormatAsYouTypeApplyDates: boolean;
    AutoFormatAsYouTypeApplyFirstIndents: boolean;
    AutoFormatAsYouTypeApplyHeadings: boolean;
    AutoFormatAsYouTypeApplyNumberedLists: boolean;
    AutoFormatAsYouTypeApplyTables: boolean;
    AutoFormatAsYouTypeAutoLetterWizard: boolean;
    AutoFormatAsYouTypeDefineStyles: boolean;
    AutoFormatAsYouTypeDeleteAutoSpaces: boolean;
    AutoFormatAsYouTypeFormatListItemBeginning: boolean;
    AutoFormatAsYouTypeInsertClosings: boolean;
    AutoFormatAsYouTypeInsertOvers: boolean;
    AutoFormatAsYouTypeMatchParentheses: boolean;
    AutoFormatAsYouTypeReplaceFarEastDashes: boolean;
    AutoFormatAsYouTypeReplaceFractions: boolean;
    AutoFormatAsYouTypeReplaceHyperlinks: boolean;
    AutoFormatAsYouTypeReplaceOrdinals: boolean;
    AutoFormatAsYouTypeReplacePlainTextEmphasis: boolean;
    AutoFormatAsYouTypeReplaceQuotes: boolean;
    AutoFormatAsYouTypeReplaceSymbols: boolean;
    ComposeStyle: Word$Style;
    Creator: number;
    Dummy1: boolean;
    Dummy2: boolean;
    Dummy3(): void;
    Word$EmailSignature: Word$EmailSignature;
    EmbedSmartTag: boolean;
    HTMLFidelity: Word$WdEmailHTMLFidelity;
    MarkComments: boolean;
    MarkCommentsWith: string;
    NewColorOnReply: boolean;
    Parent: any;
    PlainTextStyle: Word$Style;
    RelyOnCSS: boolean;
    ReplyStyle: Word$Style;
    TabIndentKey: boolean;
    ThemeName: string;
    UseThemeStyle: boolean;
    UseThemeStyleOnReply: boolean;
  }

  declare class Word$EmailSignature {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Word$EmailSignatureEntries: Word$EmailSignatureEntries;
    NewMessageSignature: string;
    Parent: any;
    ReplyMessageSignature: string;
  }

  declare class Word$EmailSignatureEntries {
    constructor(): this;
    Add(Name: string, Word$Range: Word$Range): Word$EmailSignatureEntry;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$EmailSignatureEntry;
    Parent: any;
  }

  declare class Word$EmailSignatureEntry {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Word$Index: number;
    Name: string;
    Parent: any;
  }

  declare class Word$Endnote {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Word$Index: number;
    Parent: any;
    Word$Range: Word$Range;
    Reference: Word$Range;
  }

  declare class Word$EndnoteOptions {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Location: Word$WdEndnoteLocation;
    NumberingRule: Word$WdNumberingRule;
    NumberStyle: Word$WdNoteNumberStyle;
    Parent: any;
    StartingNumber: number;
  }

  declare class Word$Endnotes {
    constructor(): this;
    Add(Word$Range: Word$Range, Reference?: any, Text?: any): Word$Endnote;
    Word$Application: Word$Application;
    ContinuationNotice: Word$Range;
    ContinuationSeparator: Word$Range;
    Convert(): void;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$Endnote;
    Location: Word$WdEndnoteLocation;
    NumberingRule: Word$WdNumberingRule;
    NumberStyle: Word$WdNoteNumberStyle;
    Parent: any;
    ResetContinuationNotice(): void;
    ResetContinuationSeparator(): void;
    ResetSeparator(): void;
    Separator: Word$Range;
    StartingNumber: number;
    SwapWithFootnotes(): void;
  }

  declare class Word$Envelope {
    constructor(): this;
    Address: Word$Range;
    AddressFromLeft: number;
    AddressFromTop: number;
    AddressStyle: Word$Style;
    Word$Application: Word$Application;
    Creator: number;
    DefaultFaceUp: boolean;
    DefaultHeight: number;
    DefaultOmitReturnAddress: boolean;
    DefaultOrientation: Word$WdEnvelopeOrientation;
    DefaultPrintBarCode: boolean;
    DefaultPrintFIMA: boolean;
    DefaultSize: string;
    DefaultWidth: number;
    FeedSource: Word$WdPaperTray;
    Insert(
      ExtractAddress?: any,
      Address?: any,
      AutoText?: any,
      OmitReturnAddress?: any,
      ReturnAddress?: any,
      ReturnAutoText?: any,
      PrintBarCode?: any,
      PrintFIMA?: any,
      Size?: any,
      Height?: any,
      Width?: any,
      FeedSource?: any,
      AddressFromLeft?: any,
      AddressFromTop?: any,
      ReturnAddressFromLeft?: any,
      ReturnAddressFromTop?: any,
      DefaultFaceUp?: any,
      DefaultOrientation?: any,
      PrintEPostage?: any,
      Vertical?: any,
      RecipientNamefromLeft?: any,
      RecipientNamefromTop?: any,
      RecipientPostalfromLeft?: any,
      RecipientPostalfromTop?: any,
      SenderNamefromLeft?: any,
      SenderNamefromTop?: any,
      SenderPostalfromLeft?: any,
      SenderPostalfromTop?: any
    ): void;
    Insert2000(
      ExtractAddress?: any,
      Address?: any,
      AutoText?: any,
      OmitReturnAddress?: any,
      ReturnAddress?: any,
      ReturnAutoText?: any,
      PrintBarCode?: any,
      PrintFIMA?: any,
      Size?: any,
      Height?: any,
      Width?: any,
      FeedSource?: any,
      AddressFromLeft?: any,
      AddressFromTop?: any,
      ReturnAddressFromLeft?: any,
      ReturnAddressFromTop?: any,
      DefaultFaceUp?: any,
      DefaultOrientation?: any
    ): void;
    Options(): void;
    Parent: any;
    PrintOut(
      ExtractAddress?: any,
      Address?: any,
      AutoText?: any,
      OmitReturnAddress?: any,
      ReturnAddress?: any,
      ReturnAutoText?: any,
      PrintBarCode?: any,
      PrintFIMA?: any,
      Size?: any,
      Height?: any,
      Width?: any,
      FeedSource?: any,
      AddressFromLeft?: any,
      AddressFromTop?: any,
      ReturnAddressFromLeft?: any,
      ReturnAddressFromTop?: any,
      DefaultFaceUp?: any,
      DefaultOrientation?: any,
      PrintEPostage?: any,
      Vertical?: any,
      RecipientNamefromLeft?: any,
      RecipientNamefromTop?: any,
      RecipientPostalfromLeft?: any,
      RecipientPostalfromTop?: any,
      SenderNamefromLeft?: any,
      SenderNamefromTop?: any,
      SenderPostalfromLeft?: any,
      SenderPostalfromTop?: any
    ): void;
    PrintOut2000(
      ExtractAddress?: any,
      Address?: any,
      AutoText?: any,
      OmitReturnAddress?: any,
      ReturnAddress?: any,
      ReturnAutoText?: any,
      PrintBarCode?: any,
      PrintFIMA?: any,
      Size?: any,
      Height?: any,
      Width?: any,
      FeedSource?: any,
      AddressFromLeft?: any,
      AddressFromTop?: any,
      ReturnAddressFromLeft?: any,
      ReturnAddressFromTop?: any,
      DefaultFaceUp?: any,
      DefaultOrientation?: any
    ): void;
    RecipientNamefromLeft: number;
    RecipientNamefromTop: number;
    RecipientPostalfromLeft: number;
    RecipientPostalfromTop: number;
    ReturnAddress: Word$Range;
    ReturnAddressFromLeft: number;
    ReturnAddressFromTop: number;
    ReturnAddressStyle: Word$Style;
    SenderNamefromLeft: number;
    SenderNamefromTop: number;
    SenderPostalfromLeft: number;
    SenderPostalfromTop: number;
    UpdateDocument(): void;
    Vertical: boolean;
  }

  declare class Word$Field {
    constructor(): this;
    Word$Application: Word$Application;
    Code: Word$Range;
    Copy(): void;
    Creator: number;
    Cut(): void;
    Data: string;
    Delete(): void;
    DoClick(): void;
    Word$Index: number;
    Word$InlineShape: Word$InlineShape;
    Kind: Word$WdFieldKind;
    Word$LinkFormat: Word$LinkFormat;
    Locked: boolean;
    Next: Word$Field;
    Word$OLEFormat: Word$OLEFormat;
    Parent: any;
    Previous: Word$Field;
    Result: Word$Range;
    Select(): void;
    ShowCodes: boolean;
    Type: Word$WdFieldType;
    Unlink(): void;
    Update(): boolean;
    UpdateSource(): void;
  }

  declare class Word$Fields {
    constructor(): this;
    Add(
      Word$Range: Word$Range,
      Type?: any,
      Text?: any,
      PreserveFormatting?: any
    ): Word$Field;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$Field;
    Locked: number;
    Parent: any;
    ToggleShowCodes(): void;
    Unlink(): void;
    Update(): number;
    UpdateSource(): void;
  }

  declare class Word$FileConverter {
    constructor(): this;
    Word$Application: Word$Application;
    CanOpen: boolean;
    CanSave: boolean;
    ClassName: string;
    Creator: number;
    Extensions: string;
    FormatName: string;
    Name: string;
    OpenFormat: number;
    Parent: any;
    Path: string;
    SaveFormat: number;
  }

  declare class Word$FileConverters {
    constructor(): this;
    Word$Application: Word$Application;
    ConvertMacWordChevrons: Word$WdChevronConvertRule;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$FileConverter;
    Parent: any;
  }

  declare class Word$FillFormat {
    constructor(): this;
    Word$Application: Word$Application;
    BackColor: Word$ColorFormat;
    Background(): void;
    Creator: number;
    ForeColor: Word$ColorFormat;
    GradientAngle: number;
    GradientColorType: Office.MsoGradientColorType;
    GradientDegree: number;
    GradientStops: Office.GradientStops;
    GradientStyle: Office.MsoGradientStyle;
    GradientVariant: number;
    OneColorGradient(
      Word$Style: Office.MsoGradientStyle,
      Variant: number,
      Degree: number
    ): void;
    Parent: any;
    Pattern: Office.MsoPatternType;
    Patterned(Pattern: Office.MsoPatternType): void;
    PictureEffects: Office.PictureEffects;
    PresetGradient(
      Word$Style: Office.MsoGradientStyle,
      Variant: number,
      PresetGradientType: Office.MsoPresetGradientType
    ): void;
    PresetGradientType: Office.MsoPresetGradientType;
    PresetTexture: Office.MsoPresetTexture;
    PresetTextured(PresetTexture: Office.MsoPresetTexture): void;
    RotateWithObject: Office.MsoTriState;
    Solid(): void;
    TextureAlignment: Office.MsoTextureAlignment;
    TextureHorizontalScale: number;
    TextureName: string;
    TextureOffsetX: number;
    TextureOffsetY: number;
    TextureTile: Office.MsoTriState;
    TextureType: Office.MsoTextureType;
    TextureVerticalScale: number;
    Transparency: number;
    TwoColorGradient(
      Word$Style: Office.MsoGradientStyle,
      Variant: number
    ): void;
    Type: Office.MsoFillType;
    UserPicture(PictureFile: string): void;
    UserTextured(TextureFile: string): void;
    Visible: Office.MsoTriState;
  }

  declare class Word$Find<TParent = Word$Range | Word$Selection> {
    constructor(): this;
    Word$Application: Word$Application;
    ClearAllFuzzyOptions(): void;
    ClearFormatting(): void;
    ClearHitHighlight(): boolean;
    CorrectHangulEndings: boolean;
    Creator: number;
    Execute(
      FindText?: string,
      MatchCase?: boolean,
      MatchWholeWord?: boolean,
      MatchWildcards?: boolean,
      MatchSoundsLike?: boolean,
      MatchAllWordForms?: boolean,
      Forward?: boolean,
      Wrap?: Word$WdFindWrap,
      Format?: boolean,
      ReplaceWith?: string,
      Replace?: Word$WdReplace,
      MatchKashida?: boolean,
      MatchDiacritics?: boolean,
      MatchAlefHamza?: boolean,
      MatchControl?: boolean
    ): boolean;
    Execute2007(
      FindText?: string,
      MatchCase?: boolean,
      MatchWholeWord?: boolean,
      MatchWildcards?: boolean,
      MatchSoundsLike?: boolean,
      MatchAllWordForms?: boolean,
      Forward?: boolean,
      Wrap?: Word$WdFindWrap,
      Format?: boolean,
      ReplaceWith?: string,
      Replace?: Word$WdReplace,
      MatchKashida?: boolean,
      MatchDiacritics?: boolean,
      MatchAlefHamza?: boolean,
      MatchControl?: boolean,
      MatchPrefix?: boolean,
      MatchSuffix?: boolean,
      MatchPhrase?: boolean,
      IgnoreSpace?: boolean,
      IgnorePunct?: boolean
    ): boolean;
    ExecuteOld(
      FindText?: string,
      MatchCase?: boolean,
      MatchWholeWord?: boolean,
      MatchWildcards?: boolean,
      MatchSoundsLike?: boolean,
      MatchAllWordForms?: boolean,
      Forward?: boolean,
      Wrap?: Word$WdFindWrap,
      Format?: boolean,
      ReplaceWith?: string,
      Replace?: Word$WdReplace
    ): boolean;
    Word$Font: Word$Font;
    Format: boolean;
    Forward: boolean;
    Found: boolean;
    Word$Frame: Word$Frame;
    HanjaPhoneticHangul: boolean;
    Highlight: number;
    HitHighlight(
      FindText: any,
      HighlightColor?: any,
      TextColor?: any,
      MatchCase?: any,
      MatchWholeWord?: any,
      MatchPrefix?: any,
      MatchSuffix?: any,
      MatchPhrase?: any,
      MatchWildcards?: any,
      MatchSoundsLike?: any,
      MatchAllWordForms?: any,
      MatchByte?: any,
      MatchFuzzy?: any,
      MatchKashida?: any,
      MatchDiacritics?: any,
      MatchAlefHamza?: any,
      MatchControl?: any,
      IgnoreSpace?: any,
      IgnorePunct?: any,
      HanjaPhoneticHangul?: any
    ): boolean;
    IgnorePunct: boolean;
    IgnoreSpace: boolean;
    LanguageID: Word$WdLanguageID;
    LanguageIDFarEast: Word$WdLanguageID;
    LanguageIDOther: Word$WdLanguageID;
    MatchAlefHamza: boolean;
    MatchAllWordForms: boolean;
    MatchByte: boolean;
    MatchCase: boolean;
    MatchControl: boolean;
    MatchDiacritics: boolean;
    MatchFuzzy: boolean;
    MatchKashida: boolean;
    MatchPhrase: boolean;
    MatchPrefix: boolean;
    MatchSoundsLike: boolean;
    MatchSuffix: boolean;
    MatchWholeWord: boolean;
    MatchWildcards: boolean;
    NoProofing: number;
    Word$ParagraphFormat: Word$ParagraphFormat;
    Parent: TParent;
    Word$Replacement: Word$Replacement;
    SetAllFuzzyOptions(): void;
    Word$Style: any;
    Text: string;
    Wrap: Word$WdFindWrap;
  }

  declare class Word$FirstLetterException {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Word$Index: number;
    Name: string;
    Parent: any;
  }

  declare class Word$FirstLetterExceptions {
    constructor(): this;
    Add(Name: string): Word$FirstLetterException;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$FirstLetterException;
    Parent: any;
  }

  declare class Word$Floor {
    constructor(): this;
    Word$Application: any;
    Word$Border: Word$ChartBorder;
    ClearFormats(): any;
    Creator: number;
    Fill: Word$ChartFillFormat;
    Format: Word$ChartFormat;
    Word$Interior: Word$Interior;
    Name: string;
    Parent: any;
    Paste(): void;
    PictureType: any;
    Select(): any;
    Thickness: number;
  }

  declare class Word$Font {
    constructor(): this;
    AllCaps: boolean | Word$WdConstants.wdUndefined | Word$WdConstants.wdToggle;
    Animation: Word$WdAnimation;
    Word$Application: Word$Application;
    Bold: boolean | Word$WdConstants.wdUndefined | Word$WdConstants.wdToggle;
    BoldBi: boolean | Word$WdConstants.wdUndefined | Word$WdConstants.wdToggle;
    Word$Borders: Word$Borders;
    Color: Word$WdColor;
    ColorIndex: Word$WdColorIndex;
    ColorIndexBi: Word$WdColorIndex;
    ContextualAlternates: number;
    Creator: number;
    DiacriticColor: Word$WdColor;
    DisableCharacterSpaceGrid: boolean;
    DoubleStrikeThrough: number;
    Duplicate: Word$Font;
    Emboss: boolean | Word$WdConstants.wdUndefined | Word$WdConstants.wdToggle;
    EmphasisMark: Word$WdEmphasisMark;
    Engrave: boolean | Word$WdConstants.wdUndefined | Word$WdConstants.wdToggle;
    Fill: Word$FillFormat;
    Glow: Word$GlowFormat;
    Grow(): void;
    Hidden: number;
    Italic: boolean | Word$WdConstants.wdUndefined | Word$WdConstants.wdToggle;
    ItalicBi:
      | boolean
      | Word$WdConstants.wdUndefined
      | Word$WdConstants.wdToggle;
    Kerning: number;
    Ligatures: Word$WdLigatures;
    Word$Line: Word$LineFormat;
    Name: string;
    NameAscii: string;
    NameBi: string;
    NameFarEast: string;
    NameOther: string;
    NumberForm: Word$WdNumberForm;
    NumberSpacing: Word$WdNumberSpacing;
    Outline: number;
    Parent: any;
    Position: number;
    Reflection: Word$ReflectionFormat;
    Reset(): void;
    Scaling: number;
    SetAsTemplateDefault(): void;
    Word$Shading: Word$Shading;
    Shadow: number;
    Shrink(): void;
    Size: number;
    SizeBi: number;
    SmallCaps:
      | boolean
      | Word$WdConstants.wdUndefined
      | Word$WdConstants.wdToggle;
    Spacing: number;
    StrikeThrough: number;
    StylisticSet: Word$WdStylisticSet;
    Subscript:
      | boolean
      | Word$WdConstants.wdUndefined
      | Word$WdConstants.wdToggle;
    Superscript:
      | boolean
      | Word$WdConstants.wdUndefined
      | Word$WdConstants.wdToggle;
    TextColor: Word$ColorFormat;
    TextShadow: Word$ShadowFormat;
    ThreeD: Word$ThreeDFormat;
    Underline: Word$WdUnderline;
    UnderlineColor: Word$WdColor;
  }

  declare class Word$FontNames {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): string;
    Parent: any;
  }

  declare class Word$Footnote {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Word$Index: number;
    Parent: any;
    Word$Range: Word$Range;
    Reference: Word$Range;
  }

  declare class Word$FootnoteOptions {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Location: Word$WdFootnoteLocation;
    NumberingRule: Word$WdNumberingRule;
    NumberStyle: Word$WdNoteNumberStyle;
    Parent: any;
    StartingNumber: number;
  }

  declare class Word$Footnotes {
    constructor(): this;
    Add(Word$Range: Word$Range, Reference?: any, Text?: any): Word$Footnote;
    Word$Application: Word$Application;
    ContinuationNotice: Word$Range;
    ContinuationSeparator: Word$Range;
    Convert(): void;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$Footnote;
    Location: Word$WdFootnoteLocation;
    NumberingRule: Word$WdNumberingRule;
    NumberStyle: Word$WdNoteNumberStyle;
    Parent: any;
    ResetContinuationNotice(): void;
    ResetContinuationSeparator(): void;
    ResetSeparator(): void;
    Separator: Word$Range;
    StartingNumber: number;
    SwapWithEndnotes(): void;
  }

  declare class Word$FormField {
    constructor(): this;
    Word$Application: Word$Application;
    CalculateOnExit: boolean;
    Word$CheckBox: Word$CheckBox;
    Copy(): void;
    Creator: number;
    Cut(): void;
    Delete(): void;
    Word$DropDown: Word$DropDown;
    Enabled: boolean;
    EntryMacro: string;
    ExitMacro: string;
    HelpText: string;
    Name: string;
    Next: Word$FormField;
    OwnHelp: boolean;
    OwnStatus: boolean;
    Parent: any;
    Previous: Word$FormField;
    Word$Range: Word$Range;
    Result: string;
    Select(): void;
    StatusText: string;
    Word$TextInput: Word$TextInput;
    Type: Word$WdFieldType;
  }

  declare class Word$FormFields {
    constructor(): this;
    Add(Word$Range: Word$Range, Type: Word$WdFieldType): Word$FormField;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$FormField;
    Parent: any;
    Shaded: boolean;
  }

  declare class Word$Frame {
    constructor(): this;
    Word$Application: Word$Application;
    Word$Borders: Word$Borders;
    Copy(): void;
    Creator: number;
    Cut(): void;
    Delete(): void;
    Height: number;
    HeightRule: Word$WdFrameSizeRule;
    HorizontalDistanceFromText: number;
    HorizontalPosition: number;
    LockAnchor: boolean;
    Parent: any;
    Word$Range: Word$Range;
    RelativeHorizontalPosition: Word$WdRelativeHorizontalPosition;
    RelativeVerticalPosition: Word$WdRelativeVerticalPosition;
    Select(): void;
    Word$Shading: Word$Shading;
    TextWrap: boolean;
    VerticalDistanceFromText: number;
    VerticalPosition: number;
    Width: number;
    WidthRule: Word$WdFrameSizeRule;
  }

  declare class Word$Frames {
    constructor(): this;
    Add(Word$Range: Word$Range): Word$Frame;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Delete(): void;
    Item(Word$Index: number): Word$Frame;
    Parent: any;
  }

  declare class Word$Frameset {
    constructor(): this;
    AddNewFrame(Where: Word$WdFramesetNewFrameLocation): Word$Frameset;
    Word$Application: Word$Application;
    ChildFramesetCount: number;
    ChildFramesetItem(Word$Index: number): Word$Frameset;
    Creator: number;
    Delete(): void;
    FrameDefaultURL: string;
    FrameDisplayBorders: boolean;
    FrameLinkToFile: boolean;
    FrameName: string;
    FrameResizable: boolean;
    FrameScrollbarType: Word$WdScrollbarType;
    FramesetBorderColor: Word$WdColor;
    FramesetBorderWidth: number;
    Height: number;
    HeightType: Word$WdFramesetSizeType;
    Parent: any;
    ParentFrameset: Word$Frameset;
    Type: Word$WdFramesetType;
    Width: number;
    WidthType: Word$WdFramesetSizeType;
  }

  declare class Word$FreeformBuilder {
    constructor(): this;

    /**
     * @param number [X2=0]
     * @param number [Y2=0]
     * @param number [X3=0]
     * @param number [Y3=0]
     */
    AddNodes(
      SegmentType: Office.MsoSegmentType,
      EditingType: Office.MsoEditingType,
      X1: number,
      Y1: number,
      X2?: number,
      Y2?: number,
      X3?: number,
      Y3?: number
    ): void;
    Word$Application: Word$Application;
    ConvertToShape(Anchor?: any): Word$Shape;
    Creator: number;
    Parent: any;
  }

  declare class Word$Global {
    constructor(): this;
    ActiveDocument: Word$Document;
    ActivePrinter: string;
    ActiveProtectedViewWindow: Word$ProtectedViewWindow;
    ActiveWindow: Word$Window;
    Word$AddIns: Word$AddIns;
    AnswerWizard: Office.AnswerWizard;
    Word$Application: Word$Application;
    Assistant: Office.Assistant;
    Word$AutoCaptions: Word$AutoCaptions;
    Word$AutoCorrect: Word$AutoCorrect;
    AutoCorrectEmail: Word$AutoCorrect;
    BuildKeyCode(Arg1: Word$WdKey, Arg2?: any, Arg3?: any, Arg4?: any): number;
    Word$CaptionLabels: Word$CaptionLabels;
    CentimetersToPoints(Centimeters: number): number;
    ChangeFileOpenDirectory(Path: string): void;
    CheckSpelling(
      Word: string,
      CustomDictionary?: any,
      IgnoreUppercase?: any,
      MainDictionary?: any,
      CustomDictionary2?: any,
      CustomDictionary3?: any,
      CustomDictionary4?: any,
      CustomDictionary5?: any,
      CustomDictionary6?: any,
      CustomDictionary7?: any,
      CustomDictionary8?: any,
      CustomDictionary9?: any,
      CustomDictionary10?: any
    ): boolean;
    CleanString(String: string): string;
    CommandBars: Office.CommandBars;
    Creator: number;
    CustomDictionaries: Word$Dictionaries;
    CustomizationContext: any;
    DDEExecute(Channel: number, Command: string): void;
    DDEInitiate(App: string, Topic: string): number;
    DDEPoke(Channel: number, Item: string, Data: string): void;
    DDERequest(Channel: number, Item: string): string;
    DDETerminate(Channel: number): void;
    DDETerminateAll(): void;
    Word$Dialogs: Word$Dialogs;
    Word$Documents: Word$Documents;
    Word$FileConverters: Word$FileConverters;
    FindKey(KeyCode: number, KeyCode2?: any): Word$KeyBinding;
    Word$FontNames: Word$FontNames;
    GetSpellingSuggestions(
      Word: string,
      CustomDictionary?: any,
      IgnoreUppercase?: any,
      MainDictionary?: any,
      SuggestionMode?: any,
      CustomDictionary2?: any,
      CustomDictionary3?: any,
      CustomDictionary4?: any,
      CustomDictionary5?: any,
      CustomDictionary6?: any,
      CustomDictionary7?: any,
      CustomDictionary8?: any,
      CustomDictionary9?: any,
      CustomDictionary10?: any
    ): Word$SpellingSuggestions;
    HangulHanjaDictionaries: Word$HangulHanjaConversionDictionaries;
    Help(HelpType: any): void;
    InchesToPoints(Inches: number): number;
    IsObjectValid(Object: any): boolean;
    IsSandboxed: boolean;
    Word$KeyBindings: Word$KeyBindings;
    KeysBoundTo(
      KeyCategory: Word$WdKeyCategory,
      Command: string,
      CommandParameter?: any
    ): Word$KeysBoundTo;
    KeyString(KeyCode: number, KeyCode2?: any): string;
    LandscapeFontNames: Word$FontNames;
    Word$Languages: Word$Languages;
    LanguageSettings: Office.LanguageSettings;
    LinesToPoints(Word$Lines: number): number;
    Word$ListGalleries: Word$ListGalleries;
    MacroContainer: any;
    MillimetersToPoints(Millimeters: number): number;
    Name: string;
    NewWindow(): Word$Window;
    NormalTemplate: Word$Template;
    Word$Options: Word$Options;
    Parent: any;
    PicasToPoints(Picas: number): number;
    PixelsToPoints(Pixels: number, fVertical?: any): number;
    PointsToCentimeters(Points: number): number;
    PointsToInches(Points: number): number;
    PointsToLines(Points: number): number;
    PointsToMillimeters(Points: number): number;
    PointsToPicas(Points: number): number;
    PointsToPixels(Points: number, fVertical?: any): number;
    PortraitFontNames: Word$FontNames;
    PrintPreview: boolean;
    Word$ProtectedViewWindows: Word$ProtectedViewWindows;
    Word$RecentFiles: Word$RecentFiles;
    Repeat(Times?: any): boolean;
    Word$Selection: Word$Selection;
    ShowVisualBasicEditor: boolean;
    StatusBar: string;
    SynonymInfo(Word: string, LanguageID?: any): Word$SynonymInfo;
    Word$System: Word$System;
    Word$Tasks: Word$Tasks;
    Word$Templates: Word$Templates;
    VBE: VBIDE.VBE;
    Word$Windows: Word$Windows;
    WordBasic: any;
  }

  declare class Word$GlowFormat {
    constructor(): this;
    Word$Application: Word$Application;
    Color: Word$ColorFormat;
    Creator: number;
    Parent: any;
    Radius: number;
    Transparency: number;
  }

  declare class Word$GroupShapes {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$Shape;
    Parent: any;
    Range(Word$Index: any): Word$ShapeRange;
  }

  declare class Word$HangulAndAlphabetException {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Word$Index: number;
    Name: string;
    Parent: any;
  }

  declare class Word$HangulAndAlphabetExceptions {
    constructor(): this;
    Add(Name: string): Word$HangulAndAlphabetException;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$HangulAndAlphabetException;
    Parent: any;
  }

  declare class Word$HangulHanjaConversionDictionaries {
    constructor(): this;
    ActiveCustomDictionary: Word$Dictionary;
    Add(FileName: string): Word$Dictionary;
    Word$Application: Word$Application;
    BuiltinDictionary: Word$Dictionary;
    ClearAll(): void;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$Dictionary;
    Maximum: number;
    Parent: any;
  }

  declare class Word$HeaderFooter {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Exists: boolean;
    Word$Index: Word$WdHeaderFooterIndex;
    IsHeader: boolean;
    LinkToPrevious: boolean;
    Word$PageNumbers: Word$PageNumbers;
    Parent: any;
    Word$Range: Word$Range;
    Word$Shapes: Word$Shapes;
  }

  declare class Word$HeadersFooters {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: Word$WdHeaderFooterIndex): Word$HeaderFooter;
    Parent: any;
  }

  declare class Word$HeadingStyle {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Level: number;
    Parent: any;
    Word$Style: any;
  }

  declare class Word$HeadingStyles {
    constructor(): this;
    Add(Word$Style: any, Level: number): Word$HeadingStyle;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$HeadingStyle;
    Parent: any;
  }

  declare class Word$HiLoLines {
    constructor(): this;
    Word$Application: any;
    Word$Border: Word$ChartBorder;
    Creator: number;
    Delete(): void;
    Format: Word$ChartFormat;
    Name: string;
    Parent: any;
    Select(): void;
  }

  declare class Word$HorizontalLineFormat {
    constructor(): this;
    Alignment: Word$WdHorizontalLineAlignment;
    Word$Application: Word$Application;
    Creator: number;
    NoShade: boolean;
    Parent: any;
    PercentWidth: number;
    WidthType: Word$WdHorizontalLineWidthType;
  }

  declare class Word$HTMLDivision {
    constructor(): this;
    Word$Application: Word$Application;
    Word$Borders: Word$Borders;
    Creator: number;
    Delete(): void;
    HTMLDivisionParent(LevelsUp?: any): Word$HTMLDivision;
    Word$HTMLDivisions: Word$HTMLDivisions;
    LeftIndent: number;
    Parent: any;
    Word$Range: Word$Range;
    RightIndent: number;
    SpaceAfter: number;
    SpaceBefore: number;
  }

  declare class Word$HTMLDivisions {
    constructor(): this;
    Add(Word$Range?: any): Word$HTMLDivision;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$HTMLDivision;
    NestingLevel: number;
    Parent: any;
  }

  declare class Word$Hyperlink {
    constructor(): this;
    Address: string;
    AddressOld: string;
    AddToFavorites(): void;
    Word$Application: Word$Application;
    CreateNewDocument(
      FileName: string,
      EditNow: boolean,
      Overwrite: boolean
    ): void;
    Creator: number;
    Delete(): void;
    EmailSubject: string;
    ExtraInfoRequired: boolean;
    Follow(
      NewWindow?: any,
      AddHistory?: any,
      ExtraInfo?: any,
      Method?: any,
      HeaderInfo?: any
    ): void;
    Name: string;
    Parent: any;
    Word$Range: Word$Range;
    ScreenTip: string;
    Word$Shape: Word$Shape;
    SubAddress: string;
    SubAddressOld: string;
    Target: string;
    TextToDisplay: string;
    Type: Office.MsoHyperlinkType;
  }

  declare class Word$Hyperlinks {
    constructor(): this;
    _Add(Anchor: any, Address?: any, SubAddress?: any): Word$Hyperlink;
    Add(
      Anchor: any,
      Address?: any,
      SubAddress?: any,
      ScreenTip?: any,
      TextToDisplay?: any,
      Target?: any
    ): Word$Hyperlink;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$Hyperlink;
    Parent: any;
  }

  declare class Word$Index {
    constructor(): this;
    AccentedLetters: boolean;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Filter: Word$WdIndexFilter;
    HeadingSeparator: Word$WdHeadingSeparator;
    IndexLanguage: Word$WdLanguageID;
    NumberOfColumns: number;
    Parent: any;
    Word$Range: Word$Range;
    RightAlignPageNumbers: boolean;
    SortBy: Word$WdIndexSortBy;
    TabLeader: Word$WdTabLeader;
    Type: Word$WdIndexType;
    Update(): void;
  }

  declare class Word$Indexes {
    constructor(): this;
    Add(
      Word$Range: Word$Range,
      HeadingSeparator?: any,
      RightAlignPageNumbers?: any,
      Type?: any,
      NumberOfColumns?: any,
      AccentedLetters?: any,
      SortBy?: any,
      IndexLanguage?: any
    ): Word$Index;
    AddOld(
      Word$Range: Word$Range,
      HeadingSeparator?: any,
      RightAlignPageNumbers?: any,
      Type?: any,
      NumberOfColumns?: any,
      AccentedLetters?: any
    ): Word$Index;
    Word$Application: Word$Application;
    AutoMarkEntries(ConcordanceFileName: string): void;
    Count: number;
    Creator: number;
    Format: Word$WdIndexFormat;
    Item(Word$Index: number): Word$Index;
    MarkAllEntries(
      Word$Range: Word$Range,
      Entry?: any,
      EntryAutoText?: any,
      CrossReference?: any,
      CrossReferenceAutoText?: any,
      BookmarkName?: any,
      Bold?: any,
      Italic?: any
    ): void;
    MarkEntry(
      Word$Range: Word$Range,
      Entry?: any,
      EntryAutoText?: any,
      CrossReference?: any,
      CrossReferenceAutoText?: any,
      BookmarkName?: any,
      Bold?: any,
      Italic?: any,
      Reading?: any
    ): Word$Field;
    Parent: any;
  }

  declare class Word$InlineShape {
    constructor(): this;
    Activate(): void;
    AlternativeText: string;
    AnchorID: number;
    Word$Application: Word$Application;
    Word$Borders: Word$Borders;
    Word$Chart: Word$Chart;
    ConvertToShape(): Word$Shape;
    Creator: number;
    Delete(): void;
    EditID: number;
    Word$Field: Word$Field;
    Fill: Word$FillFormat;
    Glow: Word$GlowFormat;
    GroupItems: Word$GroupShapes;
    HasChart: Office.MsoTriState;
    HasSmartArt: Office.MsoTriState;
    Height: number;
    Word$HorizontalLineFormat: Word$HorizontalLineFormat;
    Word$Hyperlink: Word$Hyperlink;
    IsPictureBullet: boolean;
    Word$Line: Word$LineFormat;
    Word$LinkFormat: Word$LinkFormat;
    LockAspectRatio: Office.MsoTriState;
    Word$OLEFormat: Word$OLEFormat;
    OWSAnchor: number;
    Parent: any;
    Word$PictureFormat: Word$PictureFormat;
    Word$Range: Word$Range;
    Reflection: Word$ReflectionFormat;
    Reset(): void;
    ScaleHeight: number;
    ScaleWidth: number;
    Script: Office.Script;
    Select(): void;
    Shadow: Word$ShadowFormat;
    SmartArt: Office.SmartArt;
    SoftEdge: Word$SoftEdgeFormat;
    TextEffect: Word$TextEffectFormat;
    Title: string;
    Type: Word$WdInlineShapeType;
    Width: number;
  }

  declare class Word$InlineShapes {
    constructor(): this;

    /**
     * @param [Type=-1]
     */
    AddChart(Type?: Office.XlChartType, Word$Range?: any): Word$InlineShape;
    AddHorizontalLine(FileName: string, Word$Range?: any): Word$InlineShape;
    AddHorizontalLineStandard(Word$Range?: any): Word$InlineShape;
    AddOLEControl(ClassType?: any, Word$Range?: any): Word$InlineShape;
    AddOLEObject(
      ClassType?: any,
      FileName?: any,
      LinkToFile?: any,
      DisplayAsIcon?: any,
      IconFileName?: any,
      IconIndex?: any,
      IconLabel?: any,
      Word$Range?: any
    ): Word$InlineShape;
    AddPicture(
      FileName: string,
      LinkToFile?: any,
      SaveWithDocument?: any,
      Word$Range?: any
    ): Word$InlineShape;
    AddPictureBullet(FileName: string, Word$Range?: any): Word$InlineShape;
    AddSmartArt(
      Layout: Office.SmartArtLayout,
      Word$Range?: any
    ): Word$InlineShape;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$InlineShape;
    New(Word$Range: Word$Range): Word$InlineShape;
    Parent: any;
  }

  declare class Word$Interior {
    constructor(): this;
    Word$Application: any;
    Color: any;
    ColorIndex: any;
    Creator: number;
    InvertIfNegative: any;
    Parent: any;
    Pattern: any;
    PatternColor: any;
    PatternColorIndex: any;
  }

  declare class Word$KeyBinding {
    constructor(): this;
    Word$Application: Word$Application;
    Clear(): void;
    Command: string;
    CommandParameter: string;
    Context: any;
    Creator: number;
    Disable(): void;
    Execute(): void;
    KeyCategory: Word$WdKeyCategory;
    KeyCode: number;
    KeyCode2: number;
    KeyString: string;
    Parent: any;
    Protected: boolean;
    Rebind(
      KeyCategory: Word$WdKeyCategory,
      Command: string,
      CommandParameter?: any
    ): void;
  }

  declare class Word$KeyBindings {
    constructor(): this;
    Add(
      KeyCategory: Word$WdKeyCategory,
      Command: string,
      KeyCode: number,
      KeyCode2?: any,
      CommandParameter?: any
    ): Word$KeyBinding;
    Word$Application: Word$Application;
    ClearAll(): void;
    Context: any;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$KeyBinding;
    Key(KeyCode: number, KeyCode2?: any): Word$KeyBinding;
    Parent: any;
  }

  declare class Word$KeysBoundTo {
    constructor(): this;
    Word$Application: Word$Application;
    Command: string;
    CommandParameter: string;
    Context: any;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$KeyBinding;
    Key(KeyCode: number, KeyCode2?: any): Word$KeyBinding;
    KeyCategory: Word$WdKeyCategory;
    Parent: any;
  }

  declare class Word$Language {
    constructor(): this;
    ActiveGrammarDictionary: Word$Dictionary;
    ActiveHyphenationDictionary: Word$Dictionary;
    ActiveSpellingDictionary: Word$Dictionary;
    ActiveThesaurusDictionary: Word$Dictionary;
    Word$Application: Word$Application;
    Creator: number;
    DefaultWritingStyle: string;
    ID: Word$WdLanguageID;
    Name: string;
    NameLocal: string;
    Parent: any;
    SpellingDictionaryType: Word$WdDictionaryType;
    WritingStyleList: any;
  }

  declare class Word$Languages {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$Language;
    Parent: any;
  }

  declare class Word$Legend {
    constructor(): this;
    Word$Application: any;
    AutoScaleFont: any;
    Word$Border: Word$ChartBorder;
    Clear(): any;
    Creator: number;
    Delete(): any;
    Fill: Word$ChartFillFormat;
    Word$Font: Word$ChartFont;
    Format: Word$ChartFormat;
    Height: number;
    IncludeInLayout: boolean;
    Word$Interior: Word$Interior;
    Left: number;
    LegendEntries(Word$Index?: any): any;
    Name: string;
    Parent: any;
    Position: Word$XlLegendPosition;
    Select(): any;
    Shadow: boolean;
    Top: number;
    Width: number;
  }

  declare class Word$LetterContent {
    constructor(): this;
    Word$Application: Word$Application;
    AttentionLine: string;
    CCList: string;
    Closing: string;
    Creator: number;
    DateFormat: string;
    Duplicate: Word$LetterContent;
    EnclosureNumber: number;
    IncludeHeaderFooter: boolean;
    InfoBlock: boolean;
    Letterhead: boolean;
    LetterheadLocation: Word$WdLetterheadLocation;
    LetterheadSize: number;
    LetterStyle: Word$WdLetterStyle;
    MailingInstructions: string;
    PageDesign: string;
    Parent: any;
    RecipientAddress: string;
    RecipientCode: string;
    RecipientGender: Word$WdSalutationGender;
    RecipientName: string;
    RecipientReference: string;
    ReturnAddress: string;
    ReturnAddressShortForm: string;
    Salutation: string;
    SalutationType: Word$WdSalutationType;
    SenderCity: string;
    SenderCode: string;
    SenderCompany: string;
    SenderGender: Word$WdSalutationGender;
    SenderInitials: string;
    SenderJobTitle: string;
    SenderName: string;
    SenderReference: string;
    Subject: string;
  }

  declare class Word$Line {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Height: number;
    Left: number;
    LineType: Word$WdLineType;
    Parent: any;
    Word$Range: Word$Range;
    Word$Rectangles: Word$Rectangles;
    Top: number;
    Width: number;
  }

  declare class Word$LineFormat {
    constructor(): this;
    Word$Application: Word$Application;
    BackColor: Word$ColorFormat;
    BeginArrowheadLength: Office.MsoArrowheadLength;
    BeginArrowheadStyle: Office.MsoArrowheadStyle;
    BeginArrowheadWidth: Office.MsoArrowheadWidth;
    Creator: number;
    DashStyle: Office.MsoLineDashStyle;
    EndArrowheadLength: Office.MsoArrowheadLength;
    EndArrowheadStyle: Office.MsoArrowheadStyle;
    EndArrowheadWidth: Office.MsoArrowheadWidth;
    ForeColor: Word$ColorFormat;
    InsetPen: Office.MsoTriState;
    Parent: any;
    Pattern: Office.MsoPatternType;
    Word$Style: Office.MsoLineStyle;
    Transparency: number;
    Visible: Office.MsoTriState;
    Weight: number;
  }

  declare class Word$LineNumbering {
    constructor(): this;
    Active: number;
    Word$Application: Word$Application;
    CountBy: number;
    Creator: number;
    DistanceFromText: number;
    Parent: any;
    RestartMode: Word$WdNumberingRule;
    StartingNumber: number;
  }

  declare class Word$Lines {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$Line;
    Parent: any;
  }

  declare class Word$LinkFormat {
    constructor(): this;
    Word$Application: Word$Application;
    AutoUpdate: boolean;
    BreakLink(): void;
    Creator: number;
    Locked: boolean;
    Parent: any;
    SavePictureWithDocument: boolean;
    SourceFullName: string;
    SourceName: string;
    SourcePath: string;
    Type: Word$WdLinkType;
    Update(): void;
  }

  declare class Word$List {
    constructor(): this;
    Word$Application: Word$Application;
    ApplyListTemplate(
      Word$ListTemplate: Word$ListTemplate,
      ContinuePreviousList?: any,
      DefaultListBehavior?: any
    ): void;
    ApplyListTemplateOld(
      Word$ListTemplate: Word$ListTemplate,
      ContinuePreviousList?: any
    ): void;
    ApplyListTemplateWithLevel(
      Word$ListTemplate: Word$ListTemplate,
      ContinuePreviousList?: any,
      DefaultListBehavior?: any,
      ApplyLevel?: any
    ): void;
    CanContinuePreviousList(
      Word$ListTemplate: Word$ListTemplate
    ): Word$WdContinue;
    ConvertNumbersToText(NumberType?: any): void;
    CountNumberedItems(NumberType?: any, Level?: any): number;
    Creator: number;
    Word$ListParagraphs: Word$ListParagraphs;
    Parent: any;
    Word$Range: Word$Range;
    RemoveNumbers(NumberType?: any): void;
    SingleListTemplate: boolean;
    StyleName: string;
  }

  declare class Word$ListEntries {
    constructor(): this;
    Add(Name: string, Word$Index?: any): Word$ListEntry;
    Word$Application: Word$Application;
    Clear(): void;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$ListEntry;
    Parent: any;
  }

  declare class Word$ListEntry {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Word$Index: number;
    Name: string;
    Parent: any;
  }

  declare class Word$ListFormat {
    constructor(): this;
    Word$Application: Word$Application;
    ApplyBulletDefault(DefaultListBehavior?: any): void;
    ApplyBulletDefaultOld(): void;
    ApplyListTemplate(
      Word$ListTemplate: Word$ListTemplate,
      ContinuePreviousList?: any,
      ApplyTo?: any,
      DefaultListBehavior?: any
    ): void;
    ApplyListTemplateOld(
      Word$ListTemplate: Word$ListTemplate,
      ContinuePreviousList?: any,
      ApplyTo?: any
    ): void;
    ApplyListTemplateWithLevel(
      Word$ListTemplate: Word$ListTemplate,
      ContinuePreviousList?: any,
      ApplyTo?: any,
      DefaultListBehavior?: any,
      ApplyLevel?: any
    ): void;
    ApplyNumberDefault(DefaultListBehavior?: any): void;
    ApplyNumberDefaultOld(): void;
    ApplyOutlineNumberDefault(DefaultListBehavior?: any): void;
    ApplyOutlineNumberDefaultOld(): void;
    CanContinuePreviousList(
      Word$ListTemplate: Word$ListTemplate
    ): Word$WdContinue;
    ConvertNumbersToText(NumberType?: any): void;
    CountNumberedItems(NumberType?: any, Level?: any): number;
    Creator: number;
    Word$List: Word$List;
    ListIndent(): void;
    ListLevelNumber: number;
    ListOutdent(): void;
    ListPictureBullet: Word$InlineShape;
    ListString: string;
    Word$ListTemplate: Word$ListTemplate;
    ListType: Word$WdListType;
    ListValue: number;
    Parent: any;
    RemoveNumbers(NumberType?: any): void;
    SingleList: boolean;
    SingleListTemplate: boolean;
  }

  declare class Word$ListGalleries {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: Word$WdListGalleryType): Word$ListGallery;
    Parent: any;
  }

  declare class Word$ListGallery {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Word$ListTemplates: Word$ListTemplates;
    Modified(Word$Index: number): boolean;
    Parent: any;
    Reset(Word$Index: number): void;
  }

  declare class Word$ListLevel {
    constructor(): this;
    Alignment: Word$WdListLevelAlignment;
    Word$Application: Word$Application;
    ApplyPictureBullet(FileName: string): Word$InlineShape;
    Creator: number;
    Word$Font: Word$Font;
    Word$Index: number;
    LinkedStyle: string;
    NumberFormat: string;
    NumberPosition: number;
    NumberStyle: Word$WdListNumberStyle;
    Parent: any;
    PictureBullet: Word$InlineShape;
    ResetOnHigher: number;
    ResetOnHigherOld: boolean;
    StartAt: number;
    TabPosition: number;
    TextPosition: number;
    TrailingCharacter: Word$WdTrailingCharacter;
  }

  declare class Word$ListLevels {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$ListLevel;
    Parent: any;
  }

  declare class Word$ListParagraphs {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$Paragraph;
    Parent: any;
  }

  declare class Word$Lists {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$List;
    Parent: any;
  }

  declare class Word$ListTemplate {
    constructor(): this;
    Word$Application: Word$Application;
    Convert(Level?: any): Word$ListTemplate;
    Creator: number;
    Word$ListLevels: Word$ListLevels;
    Name: string;
    OutlineNumbered: boolean;
    Parent: any;
  }

  declare class Word$ListTemplates {
    constructor(): this;
    Add(OutlineNumbered?: any, Name?: any): Word$ListTemplate;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$ListTemplate;
    Parent: any;
  }

  declare class Word$Mailer {
    constructor(): this;
    Word$Application: Word$Application;
    BCCRecipients: any;
    CCRecipients: any;
    Creator: number;
    Enclosures: any;
    Parent: any;
    Received: boolean;
    Recipients: any;
    SendDateTime: VarDate;
    Sender: string;
    Subject: string;
  }

  declare class Word$MailingLabel {
    constructor(): this;
    Word$Application: Word$Application;
    CreateNewDocument(
      Name?: any,
      Address?: any,
      AutoText?: any,
      ExtractAddress?: any,
      LaserTray?: any,
      PrintEPostageLabel?: any,
      Vertical?: any
    ): Word$Document;
    CreateNewDocument2000(
      Name?: any,
      Address?: any,
      AutoText?: any,
      ExtractAddress?: any,
      LaserTray?: any
    ): Word$Document;
    CreateNewDocumentByID(
      LabelID?: any,
      Address?: any,
      AutoText?: any,
      ExtractAddress?: any,
      LaserTray?: any,
      PrintEPostageLabel?: any,
      Vertical?: any
    ): Word$Document;
    Creator: number;
    Word$CustomLabels: Word$CustomLabels;
    DefaultLabelName: string;
    DefaultLaserTray: Word$WdPaperTray;
    DefaultPrintBarCode: boolean;
    LabelOptions(): void;
    Parent: any;
    PrintOut(
      Name?: any,
      Address?: any,
      ExtractAddress?: any,
      LaserTray?: any,
      SingleLabel?: any,
      Word$Row?: any,
      Word$Column?: any,
      PrintEPostageLabel?: any,
      Vertical?: any
    ): void;
    PrintOut2000(
      Name?: any,
      Address?: any,
      ExtractAddress?: any,
      LaserTray?: any,
      SingleLabel?: any,
      Word$Row?: any,
      Word$Column?: any
    ): void;
    PrintOutByID(
      LabelID?: any,
      Address?: any,
      ExtractAddress?: any,
      LaserTray?: any,
      SingleLabel?: any,
      Word$Row?: any,
      Word$Column?: any,
      PrintEPostageLabel?: any,
      Vertical?: any
    ): void;
    Vertical: boolean;
  }

  declare class Word$MailMerge {
    constructor(): this;
    Word$Application: Word$Application;
    Check(): void;
    CreateDataSource(
      Name?: any,
      PasswordDocument?: any,
      WritePasswordDocument?: any,
      HeaderRecord?: any,
      MSQuery?: any,
      SQLStatement?: any,
      SQLStatement1?: any,
      Connection?: any,
      LinkToSource?: any
    ): void;
    CreateHeaderSource(
      Name: string,
      PasswordDocument?: any,
      WritePasswordDocument?: any,
      HeaderRecord?: any
    ): void;
    Creator: number;
    DataSource: Word$MailMergeDataSource;
    Destination: Word$WdMailMergeDestination;
    EditDataSource(): void;
    EditHeaderSource(): void;
    EditMainDocument(): void;
    Execute(Pause?: any): void;
    Word$Fields: Word$MailMergeFields;
    HighlightMergeFields: boolean;
    MailAddressFieldName: string;
    MailAsAttachment: boolean;
    MailFormat: Word$WdMailMergeMailFormat;
    MailSubject: string;
    MainDocumentType: Word$WdMailMergeMainDocType;
    OpenDataSource(
      Name: string,
      Format?: any,
      ConfirmConversions?: any,
      ReadOnly?: any,
      LinkToSource?: any,
      AddToRecentFiles?: any,
      PasswordDocument?: any,
      PasswordTemplate?: any,
      Revert?: any,
      WritePasswordDocument?: any,
      WritePasswordTemplate?: any,
      Connection?: any,
      SQLStatement?: any,
      SQLStatement1?: any,
      OpenExclusive?: any,
      SubType?: any
    ): void;
    OpenDataSource2000(
      Name: string,
      Format?: any,
      ConfirmConversions?: any,
      ReadOnly?: any,
      LinkToSource?: any,
      AddToRecentFiles?: any,
      PasswordDocument?: any,
      PasswordTemplate?: any,
      Revert?: any,
      WritePasswordDocument?: any,
      WritePasswordTemplate?: any,
      Connection?: any,
      SQLStatement?: any,
      SQLStatement1?: any
    ): void;
    OpenHeaderSource(
      Name: string,
      Format?: any,
      ConfirmConversions?: any,
      ReadOnly?: any,
      AddToRecentFiles?: any,
      PasswordDocument?: any,
      PasswordTemplate?: any,
      Revert?: any,
      WritePasswordDocument?: any,
      WritePasswordTemplate?: any,
      OpenExclusive?: any
    ): void;
    OpenHeaderSource2000(
      Name: string,
      Format?: any,
      ConfirmConversions?: any,
      ReadOnly?: any,
      AddToRecentFiles?: any,
      PasswordDocument?: any,
      PasswordTemplate?: any,
      Revert?: any,
      WritePasswordDocument?: any,
      WritePasswordTemplate?: any
    ): void;
    Parent: any;
    ShowSendToCustom: string;
    ShowWizard(
      InitialState: any,
      ShowDocumentStep?: any,
      ShowTemplateStep?: any,
      ShowDataStep?: any,
      ShowWriteStep?: any,
      ShowPreviewStep?: any,
      ShowMergeStep?: any
    ): void;
    State: Word$WdMailMergeState;
    SuppressBlankLines: boolean;
    UseAddressBook(Type: string): void;
    ViewMailMergeFieldCodes: number;
    WizardState: number;
  }

  declare class Word$MailMergeDataField {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Word$Index: number;
    Name: string;
    Parent: any;
    Value: string;
  }

  declare class Word$MailMergeDataFields {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$MailMergeDataField;
    Parent: any;
  }

  declare class Word$MailMergeDataSource {
    constructor(): this;
    ActiveRecord: Word$WdMailMergeActiveRecord;
    Word$Application: Word$Application;
    Close(): void;
    ConnectString: string;
    Creator: number;
    DataFields: Word$MailMergeDataFields;
    FieldNames: Word$MailMergeFieldNames;
    FindRecord(FindText: string, Word$Field?: any): boolean;
    FindRecord2000(FindText: string, Word$Field: string): boolean;
    FirstRecord: number;
    HeaderSourceName: string;
    HeaderSourceType: Word$WdMailMergeDataSource;
    Included: boolean;
    InvalidAddress: boolean;
    InvalidComments: string;
    LastRecord: number;
    Word$MappedDataFields: Word$MappedDataFields;
    Name: string;
    Parent: any;
    QueryString: string;
    RecordCount: number;
    SetAllErrorFlags(Invalid: boolean, InvalidComment: string): void;
    SetAllIncludedFlags(Included: boolean): void;
    TableName: string;
    Type: Word$WdMailMergeDataSource;
  }

  declare class Word$MailMergeField {
    constructor(): this;
    Word$Application: Word$Application;
    Code: Word$Range;
    Copy(): void;
    Creator: number;
    Cut(): void;
    Delete(): void;
    Locked: boolean;
    Next: Word$MailMergeField;
    Parent: any;
    Previous: Word$MailMergeField;
    Select(): void;
    Type: Word$WdFieldType;
  }

  declare class Word$MailMergeFieldName {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Word$Index: number;
    Name: string;
    Parent: any;
  }

  declare class Word$MailMergeFieldNames {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$MailMergeFieldName;
    Parent: any;
  }

  declare class Word$MailMergeFields {
    constructor(): this;
    Add(Word$Range: Word$Range, Name: string): Word$MailMergeField;
    AddAsk(
      Word$Range: Word$Range,
      Name: string,
      Prompt?: any,
      DefaultAskText?: any,
      AskOnce?: any
    ): Word$MailMergeField;
    AddFillIn(
      Word$Range: Word$Range,
      Prompt?: any,
      DefaultFillInText?: any,
      AskOnce?: any
    ): Word$MailMergeField;
    AddIf(
      Word$Range: Word$Range,
      MergeField: string,
      Comparison: Word$WdMailMergeComparison,
      CompareTo?: any,
      TrueAutoText?: any,
      TrueText?: any,
      FalseAutoText?: any,
      FalseText?: any
    ): Word$MailMergeField;
    AddMergeRec(Word$Range: Word$Range): Word$MailMergeField;
    AddMergeSeq(Word$Range: Word$Range): Word$MailMergeField;
    AddNext(Word$Range: Word$Range): Word$MailMergeField;
    AddNextIf(
      Word$Range: Word$Range,
      MergeField: string,
      Comparison: Word$WdMailMergeComparison,
      CompareTo?: any
    ): Word$MailMergeField;
    AddSet(
      Word$Range: Word$Range,
      Name: string,
      ValueText?: any,
      ValueAutoText?: any
    ): Word$MailMergeField;
    AddSkipIf(
      Word$Range: Word$Range,
      MergeField: string,
      Comparison: Word$WdMailMergeComparison,
      CompareTo?: any
    ): Word$MailMergeField;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$MailMergeField;
    Parent: any;
  }

  declare class Word$MailMessage {
    constructor(): this;
    Word$Application: Word$Application;
    CheckName(): void;
    Creator: number;
    Delete(): void;
    DisplayMoveDialog(): void;
    DisplayProperties(): void;
    DisplaySelectNamesDialog(): void;
    Forward(): void;
    GoToNext(): void;
    GoToPrevious(): void;
    Parent: any;
    Reply(): void;
    ReplyAll(): void;
    ToggleHeader(): void;
  }

  declare class Word$MappedDataField {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    DataFieldIndex: number;
    DataFieldName: string;
    Word$Index: number;
    Name: string;
    Parent: any;
    Value: string;
  }

  declare class Word$MappedDataFields {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: Word$WdMappedDataFields): Word$MappedDataField;
    Parent: any;
  }

  declare class Word$OLEControl {
    constructor(): this;
    Activate(): void;
    AltHTML: string;
    Automation: any;
    Copy(): void;
    Cut(): void;
    Delete(): void;
    Height: number;
    Left: number;
    Name: string;
    Select(): void;
    Top: number;
    Width: number;
  }

  declare class Word$OLEFormat {
    constructor(): this;
    Activate(): void;
    ActivateAs(ClassType: string): void;
    Word$Application: Word$Application;
    ClassType: string;
    ConvertTo(
      ClassType?: any,
      DisplayAsIcon?: any,
      IconFileName?: any,
      IconIndex?: any,
      IconLabel?: any
    ): void;
    Creator: number;
    DisplayAsIcon: boolean;
    DoVerb(VerbIndex?: any): void;
    Edit(): void;
    IconIndex: number;
    IconLabel: string;
    IconName: string;
    IconPath: string;
    Label: string;
    Object: any;
    Open(): void;
    Parent: any;
    PreserveFormattingOnUpdate: boolean;
    ProgID: string;
  }

  declare class Word$OMath {
    constructor(): this;
    AlignPoint: number;
    Word$Application: Word$Application;
    ArgIndex: number;
    ArgSize: number;
    Word$Breaks: Word$OMathBreaks;
    BuildUp(): void;
    ConvertToLiteralText(): void;
    ConvertToMathText(): void;
    ConvertToNormalText(): void;
    Creator: number;
    Functions: Word$OMathFunctions;
    Justification: Word$WdOMathJc;
    Linearize(): void;
    NestingLevel: number;
    Parent: any;
    ParentArg: Word$OMath;
    ParentCol: Word$OMathMatCol;
    ParentFunction: Word$OMathFunction;
    ParentOMath: Word$OMath;
    ParentRow: Word$OMathMatRow;
    Word$Range: Word$Range;
    Remove(): void;
    Type: Word$WdOMathType;
  }

  declare class Word$OMathAcc {
    constructor(): this;
    Word$Application: Word$Application;
    Char: number;
    Creator: number;
    E: Word$OMath;
    Parent: any;
  }

  declare class Word$OMathArgs {
    constructor(): this;
    Add(BeforeArg?: any): Word$OMath;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$OMath;
    Parent: any;
  }

  declare class Word$OMathAutoCorrect {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Entries: Word$OMathAutoCorrectEntries;
    Functions: Word$OMathRecognizedFunctions;
    Parent: any;
    ReplaceText: boolean;
    UseOutsideOMath: boolean;
  }

  declare class Word$OMathAutoCorrectEntries {
    constructor(): this;
    Add(Name: string, Value: string): Word$OMathAutoCorrectEntry;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$OMathAutoCorrectEntry;
    Parent: any;
  }

  declare class Word$OMathAutoCorrectEntry {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Word$Index: number;
    Name: string;
    Parent: any;
    Value: string;
  }

  declare class Word$OMathBar {
    constructor(): this;
    Word$Application: Word$Application;
    BarTop: boolean;
    Creator: number;
    E: Word$OMath;
    Parent: any;
  }

  declare class Word$OMathBorderBox {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    E: Word$OMath;
    HideBot: boolean;
    HideLeft: boolean;
    HideRight: boolean;
    HideTop: boolean;
    Parent: any;
    StrikeBLTR: boolean;
    StrikeH: boolean;
    StrikeTLBR: boolean;
    StrikeV: boolean;
  }

  declare class Word$OMathBox {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Diff: boolean;
    E: Word$OMath;
    NoBreak: boolean;
    OpEmu: boolean;
    Parent: any;
  }

  declare class Word$OMathBreak {
    constructor(): this;
    AlignAt: number;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Parent: any;
    Word$Range: Word$Range;
  }

  declare class Word$OMathBreaks {
    constructor(): this;
    Add(Word$Range: Word$Range): Word$OMathBreak;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$OMathBreak;
    Parent: any;
  }

  declare class Word$OMathDelim {
    constructor(): this;
    Word$Application: Word$Application;
    BegChar: number;
    Creator: number;
    E: Word$OMathArgs;
    EndChar: number;
    Grow: boolean;
    NoLeftChar: boolean;
    NoRightChar: boolean;
    Parent: any;
    SepChar: number;
    Word$Shape: Word$WdOMathShapeType;
  }

  declare class Word$OMathEqArray {
    constructor(): this;
    Align: Word$WdOMathVertAlignType;
    Word$Application: Word$Application;
    Creator: number;
    E: Word$OMathArgs;
    MaxDist: boolean;
    ObjDist: boolean;
    Parent: any;
    RowSpacing: number;
    RowSpacingRule: Word$WdOMathSpacingRule;
  }

  declare class Word$OMathFrac {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Den: Word$OMath;
    Num: Word$OMath;
    Parent: any;
    Type: Word$WdOMathFracType;
  }

  declare class Word$OMathFunc {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    E: Word$OMath;
    FName: Word$OMath;
    Parent: any;
  }

  declare class Word$OMathFunction {
    constructor(): this;
    Acc: Word$OMathAcc;
    Word$Application: Word$Application;
    Args: Word$OMathArgs;
    Bar: Word$OMathBar;
    BorderBox: Word$OMathBorderBox;
    Box: Word$OMathBox;
    Creator: number;
    Delim: Word$OMathDelim;
    EqArray: Word$OMathEqArray;
    Frac: Word$OMathFrac;
    Func: Word$OMathFunc;
    GroupChar: Word$OMathGroupChar;
    LimLow: Word$OMathLimLow;
    LimUpp: Word$OMathLimUpp;
    Mat: Word$OMathMat;
    Nary: Word$OMathNary;
    Word$OMath: Word$OMath;
    Parent: any;
    Phantom: Word$OMathPhantom;
    Rad: Word$OMathRad;
    Word$Range: Word$Range;
    Remove(): Word$OMathFunction;
    ScrPre: Word$OMathScrPre;
    ScrSub: Word$OMathScrSub;
    ScrSubSup: Word$OMathScrSubSup;
    ScrSup: Word$OMathScrSup;
    Type: Word$WdOMathFunctionType;
  }

  declare class Word$OMathFunctions {
    constructor(): this;
    Add(
      Word$Range: Word$Range,
      Type: Word$WdOMathFunctionType,
      NumArgs?: any,
      NumCols?: any
    ): Word$OMathFunction;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$OMathFunction;
    Parent: any;
  }

  declare class Word$OMathGroupChar {
    constructor(): this;
    AlignTop: boolean;
    Word$Application: Word$Application;
    Char: number;
    CharTop: boolean;
    Creator: number;
    E: Word$OMath;
    Parent: any;
  }

  declare class Word$OMathLimLow {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    E: Word$OMath;
    Lim: Word$OMath;
    Parent: any;
    ToLimUpp(): Word$OMathFunction;
  }

  declare class Word$OMathLimUpp {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    E: Word$OMath;
    Lim: Word$OMath;
    Parent: any;
    ToLimLow(): Word$OMathFunction;
  }

  declare class Word$OMathMat {
    constructor(): this;
    Align: Word$WdOMathVertAlignType;
    Word$Application: Word$Application;
    Cell(Word$Row: number, Col: number): Word$OMath;
    ColGap: number;
    ColGapRule: Word$WdOMathSpacingRule;
    Cols: Word$OMathMatCols;
    ColSpacing: number;
    Creator: number;
    Parent: any;
    PlcHoldHidden: boolean;
    Word$Rows: Word$OMathMatRows;
    RowSpacing: number;
    RowSpacingRule: Word$WdOMathSpacingRule;
  }

  declare class Word$OMathMatCol {
    constructor(): this;
    Align: Word$WdOMathHorizAlignType;
    Word$Application: Word$Application;
    Args: Word$OMathArgs;
    ColIndex: number;
    Creator: number;
    Delete(): void;
    Parent: any;
  }

  declare class Word$OMathMatCols {
    constructor(): this;
    Add(BeforeCol?: any): Word$OMathMatCol;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$OMathMatCol;
    Parent: any;
  }

  declare class Word$OMathMatRow {
    constructor(): this;
    Word$Application: Word$Application;
    Args: Word$OMathArgs;
    Creator: number;
    Delete(): void;
    Parent: any;
    RowIndex: number;
  }

  declare class Word$OMathMatRows {
    constructor(): this;
    Add(BeforeRow?: any): Word$OMathMatRow;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$OMathMatRow;
    Parent: any;
  }

  declare class Word$OMathNary {
    constructor(): this;
    Word$Application: Word$Application;
    Char: number;
    Creator: number;
    E: Word$OMath;
    Grow: boolean;
    HideSub: boolean;
    HideSup: boolean;
    Parent: any;
    Sub: Word$OMath;
    SubSupLim: boolean;
    Sup: Word$OMath;
  }

  declare class Word$OMathPhantom {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    E: Word$OMath;
    Parent: any;
    Show: boolean;
    Smash: boolean;
    Transp: boolean;
    ZeroAsc: boolean;
    ZeroDesc: boolean;
    ZeroWid: boolean;
  }

  declare class Word$OMathRad {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Deg: Word$OMath;
    E: Word$OMath;
    HideDeg: boolean;
    Parent: any;
  }

  declare class Word$OMathRecognizedFunction {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Word$Index: number;
    Name: string;
    Parent: any;
  }

  declare class Word$OMathRecognizedFunctions {
    constructor(): this;
    Add(Name: string): Word$OMathRecognizedFunction;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$OMathRecognizedFunction;
    Parent: any;
  }

  declare class Word$OMaths {
    constructor(): this;
    Add(Word$Range: Word$Range): Word$Range;
    Word$Application: Word$Application;
    BuildUp(): void;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$OMath;
    Linearize(): void;
    Parent: any;
  }

  declare class Word$OMathScrPre {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    E: Word$OMath;
    Parent: any;
    Sub: Word$OMath;
    Sup: Word$OMath;
    ToScrSubSup(): Word$OMathFunction;
  }

  declare class Word$OMathScrSub {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    E: Word$OMath;
    Parent: any;
    Sub: Word$OMath;
  }

  declare class Word$OMathScrSubSup {
    constructor(): this;
    AlignScripts: boolean;
    Word$Application: Word$Application;
    Creator: number;
    E: Word$OMath;
    Parent: any;
    RemoveSub(): Word$OMathFunction;
    RemoveSup(): Word$OMathFunction;
    Sub: Word$OMath;
    Sup: Word$OMath;
    ToScrPre(): Word$OMathFunction;
  }

  declare class Word$OMathScrSup {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    E: Word$OMath;
    Parent: any;
    Sup: Word$OMath;
  }

  declare class Word$Options {
    constructor(): this;
    AddBiDirectionalMarksWhenSavingTextFile: boolean;
    AddControlCharacters: boolean;
    AddHebDoubleQuote: boolean;
    AllowAccentedUppercase: boolean;
    AllowClickAndTypeMouse: boolean;
    AllowCombinedAuxiliaryForms: boolean;
    AllowCompoundNounProcessing: boolean;
    AllowDragAndDrop: boolean;
    AllowFastSave: boolean;
    AllowOpenInDraftView: boolean;
    AllowPixelUnits: boolean;
    AllowReadingMode: boolean;
    AlwaysUseClearType: boolean;
    AnimateScreenMovements: boolean;
    Word$Application: Word$Application;
    ApplyFarEastFontsToAscii: boolean;
    ArabicMode: Word$WdAraSpeller;
    ArabicNumeral: Word$WdArabicNumeral;
    AutoCreateNewDrawings: boolean;
    AutoFormatApplyBulletedLists: boolean;
    AutoFormatApplyFirstIndents: boolean;
    AutoFormatApplyHeadings: boolean;
    AutoFormatApplyLists: boolean;
    AutoFormatApplyOtherParas: boolean;
    AutoFormatAsYouTypeApplyBorders: boolean;
    AutoFormatAsYouTypeApplyBulletedLists: boolean;
    AutoFormatAsYouTypeApplyClosings: boolean;
    AutoFormatAsYouTypeApplyDates: boolean;
    AutoFormatAsYouTypeApplyFirstIndents: boolean;
    AutoFormatAsYouTypeApplyHeadings: boolean;
    AutoFormatAsYouTypeApplyNumberedLists: boolean;
    AutoFormatAsYouTypeApplyTables: boolean;
    AutoFormatAsYouTypeAutoLetterWizard: boolean;
    AutoFormatAsYouTypeDefineStyles: boolean;
    AutoFormatAsYouTypeDeleteAutoSpaces: boolean;
    AutoFormatAsYouTypeFormatListItemBeginning: boolean;
    AutoFormatAsYouTypeInsertClosings: boolean;
    AutoFormatAsYouTypeInsertOvers: boolean;
    AutoFormatAsYouTypeMatchParentheses: boolean;
    AutoFormatAsYouTypeReplaceFarEastDashes: boolean;
    AutoFormatAsYouTypeReplaceFractions: boolean;
    AutoFormatAsYouTypeReplaceHyperlinks: boolean;
    AutoFormatAsYouTypeReplaceOrdinals: boolean;
    AutoFormatAsYouTypeReplacePlainTextEmphasis: boolean;
    AutoFormatAsYouTypeReplaceQuotes: boolean;
    AutoFormatAsYouTypeReplaceSymbols: boolean;
    AutoFormatDeleteAutoSpaces: boolean;
    AutoFormatMatchParentheses: boolean;
    AutoFormatPlainTextWordMail: boolean;
    AutoFormatPreserveStyles: boolean;
    AutoFormatReplaceFarEastDashes: boolean;
    AutoFormatReplaceFractions: boolean;
    AutoFormatReplaceHyperlinks: boolean;
    AutoFormatReplaceOrdinals: boolean;
    AutoFormatReplacePlainTextEmphasis: boolean;
    AutoFormatReplaceQuotes: boolean;
    AutoFormatReplaceSymbols: boolean;
    AutoKeyboardSwitching: boolean;
    AutoWordSelection: boolean;
    BackgroundOpen: boolean;
    BackgroundSave: boolean;
    BibliographySort: string;
    BibliographyStyle: string;
    BlueScreen: boolean;
    BrazilReform: Word$WdPortugueseReform;
    ButtonFieldClicks: number;
    CheckGrammarAsYouType: boolean;
    CheckGrammarWithSpelling: boolean;
    CheckHangulEndings: boolean;
    CheckSpellingAsYouType: boolean;
    CommentsColor: Word$WdColorIndex;
    ConfirmConversions: boolean;
    ContextualSpeller: boolean;
    ConvertHighAnsiToFarEast: boolean;
    CreateBackup: boolean;
    Creator: number;
    CtrlClickHyperlinkToOpen: boolean;
    CursorMovement: Word$WdCursorMovement;
    DefaultBorderColor: Word$WdColor;
    DefaultBorderColorIndex: Word$WdColorIndex;
    DefaultBorderLineStyle: Word$WdLineStyle;
    DefaultBorderLineWidth: Word$WdLineWidth;
    DefaultEPostageApp: string;
    DefaultFilePath(Path: Word$WdDefaultFilePath): string;
    DefaultHighlightColorIndex: Word$WdColorIndex;
    DefaultOpenFormat: Word$WdOpenFormat;
    DefaultTextEncoding: Office.MsoEncoding;
    DefaultTray: string;
    DefaultTrayID: number;
    DeletedCellColor: Word$WdCellColor;
    DeletedTextColor: Word$WdColorIndex;
    DeletedTextMark: Word$WdDeletedTextMark;
    DiacriticColorVal: Word$WdColor;
    DisableFeaturesbyDefault: boolean;
    DisableFeaturesIntroducedAfterbyDefault: Word$WdDisableFeaturesIntroducedAfter;
    DisplayGridLines: boolean;
    DisplayPasteOptions: boolean;
    DisplaySmartTagButtons: boolean;
    DocumentViewDirection: Word$WdDocumentViewDirection;
    DoNotPromptForConvert: boolean;
    EnableHangulHanjaRecentOrdering: boolean;
    EnableLegacyIMEMode: boolean;
    EnableLivePreview: boolean;
    EnableMisusedWordsDictionary: boolean;
    EnableSound: boolean;
    EnvelopeFeederInstalled: boolean;
    FormatScanning: boolean;
    FrenchReform: Word$WdFrenchSpeller;
    GridDistanceHorizontal: number;
    GridDistanceVertical: number;
    GridOriginHorizontal: number;
    GridOriginVertical: number;
    HangulHanjaFastConversion: boolean;
    HebrewMode: Word$WdHebSpellStart;
    IgnoreInternetAndFileAddresses: boolean;
    IgnoreMixedDigits: boolean;
    IgnoreUppercase: boolean;
    IMEAutomaticControl: boolean;
    InlineConversion: boolean;
    InsertedCellColor: Word$WdCellColor;
    InsertedTextColor: Word$WdColorIndex;
    InsertedTextMark: Word$WdInsertedTextMark;
    INSKeyForOvertype: boolean;
    INSKeyForPaste: boolean;
    InterpretHighAnsi: Word$WdHighAnsiText;
    LabelSmartTags: boolean;
    LocalNetworkFile: boolean;
    MapPaperSize: boolean;
    MatchFuzzyAY: boolean;
    MatchFuzzyBV: boolean;
    MatchFuzzyByte: boolean;
    MatchFuzzyCase: boolean;
    MatchFuzzyDash: boolean;
    MatchFuzzyDZ: boolean;
    MatchFuzzyHF: boolean;
    MatchFuzzyHiragana: boolean;
    MatchFuzzyIterationMark: boolean;
    MatchFuzzyKanji: boolean;
    MatchFuzzyKiKu: boolean;
    MatchFuzzyOldKana: boolean;
    MatchFuzzyProlongedSoundMark: boolean;
    MatchFuzzyPunctuation: boolean;
    MatchFuzzySmallKana: boolean;
    MatchFuzzySpace: boolean;
    MatchFuzzyTC: boolean;
    MatchFuzzyZJ: boolean;
    MeasurementUnit: Word$WdMeasurementUnits;
    MergedCellColor: Word$WdCellColor;
    MonthNames: Word$WdMonthNames;
    MoveFromTextColor: Word$WdColorIndex;
    MoveFromTextMark: Word$WdMoveFromTextMark;
    MoveToTextColor: Word$WdColorIndex;
    MoveToTextMark: Word$WdMoveToTextMark;
    MultipleWordConversionsMode: Word$WdMultipleWordConversionsMode;
    OMathAutoBuildUp: boolean;
    OMathCopyLF: boolean;
    OptimizeForWord97byDefault: boolean;
    Overtype: boolean;
    Pagination: boolean;
    Parent: any;
    PasteAdjustParagraphSpacing: boolean;
    PasteAdjustTableFormatting: boolean;
    PasteAdjustWordSpacing: boolean;
    PasteFormatBetweenDocuments: Word$WdPasteOptions;
    PasteFormatBetweenStyledDocuments: Word$WdPasteOptions;
    PasteFormatFromExternalSource: Word$WdPasteOptions;
    PasteFormatWithinDocument: Word$WdPasteOptions;
    PasteMergeFromPPT: boolean;
    PasteMergeFromXL: boolean;
    PasteMergeLists: boolean;
    PasteOptionKeepBulletsAndNumbers: boolean;
    PasteSmartCutPaste: boolean;
    PasteSmartStyleBehavior: boolean;
    PictureEditor: string;
    PictureWrapType: Word$WdWrapTypeMerged;
    PortugalReform: Word$WdPortugueseReform;
    PrecisePositioning: boolean;
    PrintBackground: boolean;
    PrintBackgrounds: boolean;
    PrintComments: boolean;
    PrintDraft: boolean;
    PrintDrawingObjects: boolean;
    PrintEvenPagesInAscendingOrder: boolean;
    PrintFieldCodes: boolean;
    PrintHiddenText: boolean;
    PrintOddPagesInAscendingOrder: boolean;
    PrintProperties: boolean;
    PrintReverse: boolean;
    PrintXMLTag: boolean;
    PromptUpdateStyle: boolean;
    RepeatWord: boolean;
    ReplaceSelection: boolean;
    RevisedLinesColor: Word$WdColorIndex;
    RevisedLinesMark: Word$WdRevisedLinesMark;
    RevisedPropertiesColor: Word$WdColorIndex;
    RevisedPropertiesMark: Word$WdRevisedPropertiesMark;
    RevisionsBalloonPrintOrientation: Word$WdRevisionsBalloonPrintOrientation;
    RTFInClipboard: boolean;
    SaveInterval: number;
    SaveNormalPrompt: boolean;
    SavePropertiesPrompt: boolean;
    SendMailAttach: boolean;
    SequenceCheck: boolean;
    SetWPHelpOptions(
      CommandKeyHelp?: any,
      DocNavigationKeys?: any,
      MouseSimulation?: any,
      DemoGuidance?: any,
      DemoSpeed?: any,
      HelpType?: any
    ): void;
    ShortMenuNames: boolean;
    ShowControlCharacters: boolean;
    ShowDevTools: boolean;
    ShowDiacritics: boolean;
    ShowFormatError: boolean;
    ShowMarkupOpenSave: boolean;
    ShowMenuFloaties: boolean;
    ShowReadabilityStatistics: boolean;
    ShowSelectionFloaties: boolean;
    SmartCursoring: boolean;
    SmartCutPaste: boolean;
    SmartParaSelection: boolean;
    SnapToGrid: boolean;
    SnapToShapes: boolean;
    SpanishMode: Word$WdSpanishSpeller;
    SplitCellColor: Word$WdCellColor;
    StoreRSIDOnSave: boolean;
    StrictFinalYaa: boolean;
    StrictInitialAlefHamza: boolean;
    StrictRussianE: boolean;
    StrictTaaMarboota: boolean;
    SuggestFromMainDictionaryOnly: boolean;
    SuggestSpellingCorrections: boolean;
    TabIndentKey: boolean;
    TypeNReplace: boolean;
    UpdateFieldsAtPrint: boolean;
    UpdateFieldsWithTrackedChangesAtPrint: boolean;
    UpdateLinksAtOpen: boolean;
    UpdateLinksAtPrint: boolean;
    UpdateStyleListBehavior: Word$WdUpdateStyleListBehavior;
    UseCharacterUnit: boolean;
    UseDiffDiacColor: boolean;
    UseGermanSpellingReform: boolean;
    UseNormalStyleForList: boolean;
    VirusProtection: boolean;
    VisualSelection: Word$WdVisualSelection;
    WarnBeforeSavingPrintingSendingMarkup: boolean;
    WPDocNavKeys: boolean;
    WPHelp: boolean;
  }

  declare class Word$OtherCorrectionsException {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Word$Index: number;
    Name: string;
    Parent: any;
  }

  declare class Word$OtherCorrectionsExceptions {
    constructor(): this;
    Add(Name: string): Word$OtherCorrectionsException;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$OtherCorrectionsException;
    Parent: any;
  }

  declare class Word$Page {
    constructor(): this;
    Word$Application: Word$Application;
    Word$Breaks: Word$Breaks;
    Creator: number;
    EnhMetaFileBits: any;
    Height: number;
    Left: number;
    Parent: any;
    Word$Rectangles: Word$Rectangles;
    Top: number;
    Width: number;
  }

  declare class Word$PageNumber {
    constructor(): this;
    Alignment: Word$WdPageNumberAlignment;
    Word$Application: Word$Application;
    Copy(): void;
    Creator: number;
    Cut(): void;
    Delete(): void;
    Word$Index: number;
    Parent: any;
    Select(): void;
  }

  declare class Word$PageNumbers {
    constructor(): this;
    Add(PageNumberAlignment?: any, FirstPage?: any): Word$PageNumber;
    Word$Application: Word$Application;
    ChapterPageSeparator: Word$WdSeparatorType;
    Count: number;
    Creator: number;
    DoubleQuote: boolean;
    HeadingLevelForChapter: number;
    IncludeChapterNumber: boolean;
    Item(Word$Index: number): Word$PageNumber;
    NumberStyle: Word$WdPageNumberStyle;
    Parent: any;
    RestartNumberingAtSection: boolean;
    ShowFirstPageNumber: boolean;
    StartingNumber: number;
  }

  declare class Word$Pages {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$Page;
    Parent: any;
  }

  declare class Word$PageSetup {
    constructor(): this;
    Word$Application: Word$Application;
    BookFoldPrinting: boolean;
    BookFoldPrintingSheets: number;
    BookFoldRevPrinting: boolean;
    BottomMargin: number;
    CharsLine: number;
    Creator: number;
    DifferentFirstPageHeaderFooter: number;
    FirstPageTray: Word$WdPaperTray;
    FooterDistance: number;
    Gutter: number;
    GutterOnTop: boolean;
    GutterPos: Word$WdGutterStyle;
    GutterStyle: Word$WdGutterStyleOld;
    HeaderDistance: number;
    LayoutMode: Word$WdLayoutMode;
    LeftMargin: number;
    Word$LineNumbering: Word$LineNumbering;
    LinesPage: number;
    MirrorMargins: number;
    OddAndEvenPagesHeaderFooter: number;
    Orientation: Word$WdOrientation;
    OtherPagesTray: Word$WdPaperTray;
    PageHeight: number;
    PageWidth: number;
    PaperSize: Word$WdPaperSize;
    Parent: any;
    RightMargin: number;
    SectionDirection: Word$WdSectionDirection;
    SectionStart: Word$WdSectionStart;
    SetAsTemplateDefault(): void;
    ShowGrid: boolean;
    SuppressEndnotes: number;
    Word$TextColumns: Word$TextColumns;
    TogglePortrait(): void;
    TopMargin: number;
    TwoPagesOnOne: boolean;
    VerticalAlignment: Word$WdVerticalAlignment;
  }

  declare class Word$Pane {
    constructor(): this;
    Activate(): void;
    Word$Application: Word$Application;
    AutoScroll(Velocity: number): void;
    BrowseToWindow: boolean;
    BrowseWidth: number;
    Close(): void;
    Creator: number;
    DisplayRulers: boolean;
    DisplayVerticalRuler: boolean;
    Word$Document: Word$Document;
    Word$Frameset: Word$Frameset;
    HorizontalPercentScrolled: number;
    Word$Index: number;
    LargeScroll(Down?: any, Up?: any, ToRight?: any, ToLeft?: any): void;
    MinimumFontSize: number;
    NewFrameset(): void;
    Next: Word$Pane;
    Word$Pages: Word$Pages;
    PageScroll(Down?: any, Up?: any): void;
    Parent: any;
    Previous: Word$Pane;
    Word$Selection: Word$Selection;
    SmallScroll(Down?: any, Up?: any, ToRight?: any, ToLeft?: any): void;
    TOCInFrameset(): void;
    VerticalPercentScrolled: number;
    Word$View: Word$View;
    Word$Zooms: Word$Zooms;
  }

  declare class Word$Panes {
    constructor(): this;
    Add(SplitVertical?: any): Word$Pane;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$Pane;
    Parent: any;
  }

  declare class Word$Paragraph {
    constructor(): this;
    AddSpaceBetweenFarEastAndAlpha: number;
    AddSpaceBetweenFarEastAndDigit: number;
    Alignment: Word$WdParagraphAlignment;
    Word$Application: Word$Application;
    AutoAdjustRightIndent: number;
    BaseLineAlignment: Word$WdBaselineAlignment;
    Word$Borders: Word$Borders;
    CharacterUnitFirstLineIndent: number;
    CharacterUnitLeftIndent: number;
    CharacterUnitRightIndent: number;
    CloseUp(): void;
    Creator: number;
    DisableLineHeightGrid: number;
    Word$DropCap: Word$DropCap;
    FarEastLineBreakControl: number;
    FirstLineIndent: number;
    Format: Word$ParagraphFormat;
    HalfWidthPunctuationOnTopOfLine: number;
    HangingPunctuation: number;
    Hyphenation: number;
    ID: string;
    Indent(): void;
    IndentCharWidth(Count: number): void;
    IndentFirstLineCharWidth(Count: number): void;
    IsStyleSeparator: boolean;
    JoinList(): void;
    KeepTogether: number;
    KeepWithNext: number;
    LeftIndent: number;
    LineSpacing: number;
    LineSpacingRule: Word$WdLineSpacing;
    LineUnitAfter: number;
    LineUnitBefore: number;

    /**
     * @param number [Level1=0]
     * @param number [Level2=0]
     * @param number [Level3=0]
     * @param number [Level4=0]
     * @param number [Level5=0]
     * @param number [Level6=0]
     * @param number [Level7=0]
     * @param number [Level8=0]
     * @param number [Level9=0]
     */
    ListAdvanceTo(
      Level1?: number,
      Level2?: number,
      Level3?: number,
      Level4?: number,
      Level5?: number,
      Level6?: number,
      Level7?: number,
      Level8?: number,
      Level9?: number
    ): void;
    ListNumberOriginal(Level: number): number;
    MirrorIndents: number;
    Next(Count?: any): Word$Paragraph;
    NoLineNumber: number;
    OpenOrCloseUp(): void;
    OpenUp(): void;
    Outdent(): void;
    OutlineDemote(): void;
    OutlineDemoteToBody(): void;
    OutlineLevel: Word$WdOutlineLevel;
    OutlinePromote(): void;
    PageBreakBefore: number;
    ParaID: number;
    Parent: any;
    Previous(Count?: any): Word$Paragraph;
    Word$Range: Word$Range;
    ReadingOrder: Word$WdReadingOrder;
    Reset(): void;
    ResetAdvanceTo(): void;
    RightIndent: number;
    SelectNumber(): void;
    SeparateList(): void;
    Word$Shading: Word$Shading;
    Space1(): void;
    Space15(): void;
    Space2(): void;
    SpaceAfter: number;
    SpaceAfterAuto: number;
    SpaceBefore: number;
    SpaceBeforeAuto: number;
    Word$Style: any;
    TabHangingIndent(Count: number): void;
    TabIndent(Count: number): void;
    Word$TabStops: Word$TabStops;
    TextboxTightWrap: Word$WdTextboxTightWrap;
    TextID: number;
    WidowControl: number;
    WordWrap: number;
  }

  declare class Word$ParagraphFormat {
    constructor(): this;
    AddSpaceBetweenFarEastAndAlpha: number;
    AddSpaceBetweenFarEastAndDigit: number;
    Alignment: Word$WdParagraphAlignment;
    Word$Application: Word$Application;
    AutoAdjustRightIndent: number;
    BaseLineAlignment: Word$WdBaselineAlignment;
    Word$Borders: Word$Borders;
    CharacterUnitFirstLineIndent: number;
    CharacterUnitLeftIndent: number;
    CharacterUnitRightIndent: number;
    CloseUp(): void;
    Creator: number;
    DisableLineHeightGrid: number;
    Duplicate: Word$ParagraphFormat;
    FarEastLineBreakControl: number;
    FirstLineIndent: number;
    HalfWidthPunctuationOnTopOfLine: number;
    HangingPunctuation: number;
    Hyphenation: number;
    IndentCharWidth(Count: number): void;
    IndentFirstLineCharWidth(Count: number): void;
    KeepTogether: number;
    KeepWithNext: number;
    LeftIndent: number;
    LineSpacing: number;
    LineSpacingRule: Word$WdLineSpacing;
    LineUnitAfter: number;
    LineUnitBefore: number;
    MirrorIndents: number;
    NoLineNumber: number;
    OpenOrCloseUp(): void;
    OpenUp(): void;
    OutlineLevel: Word$WdOutlineLevel;
    PageBreakBefore: number;
    Parent: any;
    ReadingOrder: Word$WdReadingOrder;
    Reset(): void;
    RightIndent: number;
    Word$Shading: Word$Shading;
    Space1(): void;
    Space15(): void;
    Space2(): void;
    SpaceAfter: number;
    SpaceAfterAuto: number;
    SpaceBefore: number;
    SpaceBeforeAuto: number;
    Word$Style: any;
    TabHangingIndent(Count: number): void;
    TabIndent(Count: number): void;
    Word$TabStops: Word$TabStops;
    TextboxTightWrap: Word$WdTextboxTightWrap;
    WidowControl: number;
    WordWrap: number;
  }

  declare class Word$Paragraphs {
    constructor(): this;
    Add(Word$Range?: any): Word$Paragraph;
    AddSpaceBetweenFarEastAndAlpha: number;
    AddSpaceBetweenFarEastAndDigit: number;
    Alignment: Word$WdParagraphAlignment;
    Word$Application: Word$Application;
    AutoAdjustRightIndent: number;
    BaseLineAlignment: Word$WdBaselineAlignment;
    Word$Borders: Word$Borders;
    CharacterUnitFirstLineIndent: number;
    CharacterUnitLeftIndent: number;
    CharacterUnitRightIndent: number;
    CloseUp(): void;
    Count: number;
    Creator: number;
    DecreaseSpacing(): void;
    DisableLineHeightGrid: number;
    FarEastLineBreakControl: number;
    First: Word$Paragraph;
    FirstLineIndent: number;
    Format: Word$ParagraphFormat;
    HalfWidthPunctuationOnTopOfLine: number;
    HangingPunctuation: number;
    Hyphenation: number;
    IncreaseSpacing(): void;
    Indent(): void;
    IndentCharWidth(Count: number): void;
    IndentFirstLineCharWidth(Count: number): void;
    Item(Word$Index: number): Word$Paragraph;
    KeepTogether: number;
    KeepWithNext: number;
    Last: Word$Paragraph;
    LeftIndent: number;
    LineSpacing: number;
    LineSpacingRule: Word$WdLineSpacing;
    LineUnitAfter: number;
    LineUnitBefore: number;
    NoLineNumber: number;
    OpenOrCloseUp(): void;
    OpenUp(): void;
    Outdent(): void;
    OutlineDemote(): void;
    OutlineDemoteToBody(): void;
    OutlineLevel: Word$WdOutlineLevel;
    OutlinePromote(): void;
    PageBreakBefore: number;
    Parent: any;
    ReadingOrder: Word$WdReadingOrder;
    Reset(): void;
    RightIndent: number;
    Word$Shading: Word$Shading;
    Space1(): void;
    Space15(): void;
    Space2(): void;
    SpaceAfter: number;
    SpaceAfterAuto: number;
    SpaceBefore: number;
    SpaceBeforeAuto: number;
    Word$Style: any;
    TabHangingIndent(Count: number): void;
    TabIndent(Count: number): void;
    Word$TabStops: Word$TabStops;
    WidowControl: number;
    WordWrap: number;
  }

  declare class Word$PictureFormat {
    constructor(): this;
    Word$Application: Word$Application;
    Brightness: number;
    ColorType: Office.MsoPictureColorType;
    Contrast: number;
    Creator: number;
    Crop: Office.Crop;
    CropBottom: number;
    CropLeft: number;
    CropRight: number;
    CropTop: number;
    IncrementBrightness(Increment: number): void;
    IncrementContrast(Increment: number): void;
    Parent: any;
    TransparencyColor: number;
    TransparentBackground: Office.MsoTriState;
  }

  declare class Word$PlotArea {
    constructor(): this;
    Word$Application: any;
    Word$Border: Word$ChartBorder;
    ClearFormats(): any;
    Creator: number;
    Fill: Word$ChartFillFormat;
    Format: Word$ChartFormat;
    Height: number;
    InsideHeight: number;
    InsideLeft: number;
    InsideTop: number;
    InsideWidth: number;
    Word$Interior: Word$Interior;
    Left: number;
    Name: string;
    Parent: any;
    Position: Word$XlChartElementPosition;
    Select(): any;
    Top: number;
    Width: number;
  }

  declare class Word$ProofreadingErrors {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$Range;
    Parent: any;
    Type: Word$WdProofreadingErrorType;
  }

  declare class Word$ProtectedViewWindow {
    constructor(): this;
    Activate(): void;
    Active: boolean;
    Word$Application: Word$Application;
    Caption: string;
    Close(): void;
    Creator: number;
    Word$Document: Word$Document;
    Edit(
      PasswordTemplate?: any,
      WritePasswordDocument?: any,
      WritePasswordTemplate?: any
    ): Word$Document;
    Height: number;
    Word$Index: number;
    Left: number;
    Parent: any;
    SourceName: string;
    SourcePath: string;
    ToggleRibbon(): void;
    Top: number;
    Visible: boolean;
    Width: number;
    WindowState: Word$WdWindowState;
  }

  declare class Word$ProtectedViewWindows {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$ProtectedViewWindow;
    Open(
      FileName: any,
      AddToRecentFiles?: any,
      PasswordDocument?: any,
      Visible?: any,
      OpenAndRepair?: any
    ): Word$ProtectedViewWindow;
    Parent: any;
  }

  declare class Word$Range {
    constructor(): this;
    Word$Application: Word$Application;
    AutoFormat(): void;
    Bold: boolean | Word$WdConstants.wdUndefined | Word$WdConstants.wdToggle;
    BoldBi: boolean | Word$WdConstants.wdUndefined | Word$WdConstants.wdToggle;
    BookmarkID: number;
    Word$Bookmarks: Word$Bookmarks;
    Word$Borders: Word$Borders;
    Calculate(): number;
    CanEdit: number;
    CanPaste: number;
    Case: Word$WdCharacterCase;
    Word$Cells: Word$Cells;
    Word$Characters: Word$Characters;
    CharacterStyle: any;
    CharacterWidth: Word$WdCharacterWidth;
    CheckGrammar(): void;
    CheckSpelling(
      CustomDictionary?: any,
      IgnoreUppercase?: any,
      AlwaysSuggest?: any,
      CustomDictionary2?: any,
      CustomDictionary3?: any,
      CustomDictionary4?: any,
      CustomDictionary5?: any,
      CustomDictionary6?: any,
      CustomDictionary7?: any,
      CustomDictionary8?: any,
      CustomDictionary9?: any,
      CustomDictionary10?: any
    ): void;
    CheckSynonyms(): void;

    /**
     * @param WdCollapseDirection [Direction=wdCollapseStart]
     */
    Collapse(Direction?: Word$WdCollapseDirection): void;
    Word$Columns: Word$Columns;
    CombineCharacters: boolean;
    Word$Comments: Word$Comments;
    ComputeStatistics(Statistic: Word$WdStatistic): number;
    Word$Conflicts: Word$Conflicts;
    Word$ContentControls: Word$ContentControls;
    ConvertHangulAndHanja(
      ConversionsMode?: any,
      FastConversion?: any,
      CheckHangulEnding?: any,
      EnableRecentOrdering?: any,
      CustomDictionary?: any
    ): void;
    ConvertToTable(
      Separator?: any,
      NumRows?: any,
      NumColumns?: any,
      InitialColumnWidth?: any,
      Format?: any,
      ApplyBorders?: any,
      ApplyShading?: any,
      ApplyFont?: any,
      ApplyColor?: any,
      ApplyHeadingRows?: any,
      ApplyLastRow?: any,
      ApplyFirstColumn?: any,
      ApplyLastColumn?: any,
      AutoFit?: any,
      AutoFitBehavior?: any,
      DefaultTableBehavior?: any
    ): Word$Table;
    ConvertToTableOld(
      Separator?: any,
      NumRows?: any,
      NumColumns?: any,
      InitialColumnWidth?: any,
      Format?: any,
      ApplyBorders?: any,
      ApplyShading?: any,
      ApplyFont?: any,
      ApplyColor?: any,
      ApplyHeadingRows?: any,
      ApplyLastRow?: any,
      ApplyFirstColumn?: any,
      ApplyLastColumn?: any,
      AutoFit?: any
    ): Word$Table;
    Copy(): void;
    CopyAsPicture(): void;
    CreatePublisher(
      Edition?: any,
      ContainsPICT?: any,
      ContainsRTF?: any,
      ContainsText?: any
    ): void;
    Creator: number;
    Cut(): void;
    Delete(Unit?: Word$WdUnits, Count?: number): number;
    DetectLanguage(): void;
    DisableCharacterSpaceGrid: boolean;
    Word$Document: Word$Document;
    Duplicate: Word$Range;
    Word$Editors: Word$Editors;
    EmphasisMark: Word$WdEmphasisMark;
    End: number;
    Word$EndnoteOptions: Word$EndnoteOptions;
    Word$Endnotes: Word$Endnotes;
    EndOf(Unit?: any, Extend?: any): number;
    EnhMetaFileBits: any;
    Expand(Unit?: any): number;

    /**
     * @param boolean [OpenAfterExport=false]
     * @param [OptimizeFor=0]
     * @param boolean [ExportCurrentPage=false]
     * @param [Item=0]
     * @param boolean [IncludeDocProps=false]
     * @param boolean [KeepIRM=true]
     * @param [CreateBookmarks=0]
     * @param boolean [DocStructureTags=true]
     * @param boolean [BitmapMissingFonts=true]
     * @param boolean [UseISO19005_1=false]
     */
    ExportAsFixedFormat(
      OutputFileName: string,
      ExportFormat: Word$WdExportFormat,
      OpenAfterExport?: boolean,
      OptimizeFor?: Word$WdExportOptimizeFor,
      ExportCurrentPage?: boolean,
      Item?: Word$WdExportItem,
      IncludeDocProps?: boolean,
      KeepIRM?: boolean,
      CreateBookmarks?: Word$WdExportCreateBookmarks,
      DocStructureTags?: boolean,
      BitmapMissingFonts?: boolean,
      UseISO19005_1?: boolean,
      FixedFormatExtClassPtr?: any
    ): void;
    ExportFragment(FileName: string, Format: Word$WdSaveFormat): void;
    Word$Fields: Word$Fields;
    Word$Find: Word$Find<Word$Range>;
    FitTextWidth: number;
    Word$Font: Word$Font;
    Word$FootnoteOptions: Word$FootnoteOptions;
    Word$Footnotes: Word$Footnotes;
    FormattedText: Word$Range;
    Word$FormFields: Word$FormFields;
    Word$Frames: Word$Frames;
    GetSpellingSuggestions(
      CustomDictionary?: any,
      IgnoreUppercase?: any,
      MainDictionary?: any,
      SuggestionMode?: any,
      CustomDictionary2?: any,
      CustomDictionary3?: any,
      CustomDictionary4?: any,
      CustomDictionary5?: any,
      CustomDictionary6?: any,
      CustomDictionary7?: any,
      CustomDictionary8?: any,
      CustomDictionary9?: any,
      CustomDictionary10?: any
    ): Word$SpellingSuggestions;
    GoTo(What?: any, Which?: any, Count?: any, Name?: any): Word$Range;
    GoToEditableRange(EditorID?: any): Word$Range;
    GoToNext(What: Word$WdGoToItem): Word$Range;
    GoToPrevious(What: Word$WdGoToItem): Word$Range;
    GrammarChecked: boolean;
    GrammaticalErrors: Word$ProofreadingErrors;
    HighlightColorIndex: Word$WdColorIndex;
    HorizontalInVertical: Word$WdHorizontalInVerticalType;
    Word$HTMLDivisions: Word$HTMLDivisions;
    Word$Hyperlinks: Word$Hyperlinks;
    ID: string;

    /**
     * @param boolean [MatchDestination=false]
     */
    ImportFragment(FileName: string, MatchDestination?: boolean): void;
    Information(Type: Word$WdInformation): any;
    Word$InlineShapes: Word$InlineShapes;
    InRange(Word$Range: Word$Range): boolean;
    InsertAfter(Text: string): void;

    /**
     * @param number [RelativeTo=0]
     */
    InsertAlignmentTab(Alignment: number, RelativeTo?: number): void;
    InsertAutoText(): void;
    InsertBefore(Text: string): void;
    InsertBreak(Type?: any): void;
    InsertCaption(
      Label: any,
      Title?: any,
      TitleAutoText?: any,
      Position?: any,
      ExcludeLabel?: any
    ): void;
    InsertCaptionXP(
      Label: any,
      Title?: any,
      TitleAutoText?: any,
      Position?: any
    ): void;
    InsertCrossReference(
      ReferenceType: any,
      ReferenceKind: Word$WdReferenceKind,
      ReferenceItem: any,
      InsertAsHyperlink?: any,
      IncludePosition?: any,
      SeparateNumbers?: any,
      SeparatorString?: any
    ): void;
    InsertCrossReference_2002(
      ReferenceType: any,
      ReferenceKind: Word$WdReferenceKind,
      ReferenceItem: any,
      InsertAsHyperlink?: any,
      IncludePosition?: any
    ): void;
    InsertDatabase(
      Format?: any,
      Word$Style?: any,
      LinkToSource?: any,
      Connection?: any,
      SQLStatement?: any,
      SQLStatement1?: any,
      PasswordDocument?: any,
      PasswordTemplate?: any,
      WritePasswordDocument?: any,
      WritePasswordTemplate?: any,
      DataSource?: any,
      From?: any,
      To?: any,
      IncludeFields?: any
    ): void;
    InsertDateTime(
      DateTimeFormat?: any,
      InsertAsField?: any,
      InsertAsFullWidth?: any,
      DateLanguage?: any,
      CalendarType?: any
    ): void;
    InsertDateTimeOld(
      DateTimeFormat?: any,
      InsertAsField?: any,
      InsertAsFullWidth?: any
    ): void;
    InsertFile(
      FileName: string,
      Word$Range?: any,
      ConfirmConversions?: any,
      Link?: any,
      Attachment?: any
    ): void;
    InsertParagraph(): void;
    InsertParagraphAfter(): void;
    InsertParagraphBefore(): void;
    InsertSymbol(
      CharacterNumber: number,
      Word$Font?: any,
      Unicode?: any,
      Bias?: any
    ): void;
    InsertXML(XML: string, Transform?: any): void;
    InStory(Word$Range: Word$Range): boolean;
    IsEndOfRowMark: boolean;
    IsEqual(Word$Range: Word$Range): boolean;
    Italic: boolean | Word$WdConstants.wdUndefined | Word$WdConstants.wdToggle;
    ItalicBi:
      | boolean
      | Word$WdConstants.wdUndefined
      | Word$WdConstants.wdToggle;
    Kana: Word$WdKana;
    LanguageDetected: boolean;
    LanguageID: Word$WdLanguageID;
    LanguageIDFarEast: Word$WdLanguageID;
    LanguageIDOther: Word$WdLanguageID;
    Word$ListFormat: Word$ListFormat;
    Word$ListParagraphs: Word$ListParagraphs;
    ListStyle: any;
    Locks: Word$CoAuthLocks;
    LookupNameProperties(): void;
    ModifyEnclosure(Word$Style: any, Symbol?: any, EnclosedText?: any): void;
    Move(Unit?: Word$WdUnits, Count?: number): number;
    MoveEnd(Unit?: Word$WdUnits, Count?: number): number;
    MoveEndUntil(Cset: any, Count?: any): number;
    MoveEndWhile(Cset: any, Count?: any): number;
    MoveStart(Unit?: Word$WdUnits, Count?: number): number;
    MoveStartUntil(Cset: any, Count?: any): number;
    MoveStartWhile(Cset: any, Count?: any): number;
    MoveUntil(Cset: any, Count?: any): number;
    MoveWhile(Cset: any, Count?: any): number;
    Next(Unit?: any, Count?: any): Word$Range;
    NextStoryRange: Word$Range;
    NextSubdocument(): void;
    NoProofing: number;
    Word$OMaths: Word$OMaths;
    Orientation: Word$WdTextOrientation;
    Word$PageSetup: Word$PageSetup;
    Word$ParagraphFormat: Word$ParagraphFormat;
    Word$Paragraphs: Word$Paragraphs;
    ParagraphStyle: any;
    Parent: any;
    ParentContentControl: Word$ContentControl;
    Paste(): void;
    PasteAndFormat(Type: Word$WdRecoveryType): void;
    PasteAppendTable(): void;
    PasteAsNestedTable(): void;
    PasteExcelTable(
      LinkedToExcel: boolean,
      WordFormatting: boolean,
      RTF: boolean
    ): void;
    PasteSpecial(
      IconIndex?: any,
      Link?: any,
      Placement?: any,
      DisplayAsIcon?: any,
      DataType?: any,
      IconFileName?: any,
      IconLabel?: any
    ): void;

    /**
     * @param [Alignment=-1]
     * @param number [Raise=0]
     * @param number [FontSize=0]
     * @param string [FontName='']
     */
    PhoneticGuide(
      Text: string,
      Alignment?: Word$WdPhoneticGuideAlignmentType,
      Raise?: number,
      FontSize?: number,
      FontName?: string
    ): void;
    Previous(Unit?: any, Count?: any): Word$Range;
    PreviousBookmarkID: number;
    PreviousSubdocument(): void;
    Word$ReadabilityStatistics: Word$ReadabilityStatistics;
    Relocate(Direction: number): void;
    Word$Revisions: Word$Revisions;
    Word$Rows: Word$Rows;
    Scripts: Office.Scripts;
    Word$Sections: Word$Sections;
    Select(): void;
    Word$Sentences: Word$Sentences;
    SetListLevel(Level: number): void;
    SetRange(Start: number, End: number): void;
    Word$Shading: Word$Shading;
    Word$ShapeRange: Word$ShapeRange;
    ShowAll: boolean;
    Word$SmartTags: Word$SmartTags;
    Sort(
      ExcludeHeader?: any,
      FieldNumber?: any,
      SortFieldType?: any,
      SortOrder?: any,
      FieldNumber2?: any,
      SortFieldType2?: any,
      SortOrder2?: any,
      FieldNumber3?: any,
      SortFieldType3?: any,
      SortOrder3?: any,
      SortColumn?: any,
      Separator?: any,
      CaseSensitive?: any,
      BidiSort?: any,
      IgnoreThe?: any,
      IgnoreKashida?: any,
      IgnoreDiacritics?: any,
      IgnoreHe?: any,
      LanguageID?: any
    ): void;
    SortAscending(): void;
    SortDescending(): void;
    SortOld(
      ExcludeHeader?: any,
      FieldNumber?: any,
      SortFieldType?: any,
      SortOrder?: any,
      FieldNumber2?: any,
      SortFieldType2?: any,
      SortOrder2?: any,
      FieldNumber3?: any,
      SortFieldType3?: any,
      SortOrder3?: any,
      SortColumn?: any,
      Separator?: any,
      CaseSensitive?: any,
      LanguageID?: any
    ): void;
    SpellingChecked: boolean;
    SpellingErrors: Word$ProofreadingErrors;
    Start: number;
    StartOf(Unit?: any, Extend?: any): number;
    StoryLength: number;
    StoryType: Word$WdStoryType;
    Word$Style: any;
    Word$Subdocuments: Word$Subdocuments;
    SubscribeTo(Edition: string, Format?: any): void;
    Word$SynonymInfo: Word$SynonymInfo;
    Word$Tables: Word$Tables;
    Word$TableStyle: any;

    /**
     * @param [WdTCSCConverterDirection=2]
     * @param boolean [CommonTerms=false]
     * @param boolean [UseVariants=false]
     */
    TCSCConverter(
      Word$WdTCSCConverterDirection?: Word$WdTCSCConverterDirection,
      CommonTerms?: boolean,
      UseVariants?: boolean
    ): void;
    Text: string;
    Word$TextRetrievalMode: Word$TextRetrievalMode;
    TopLevelTables: Word$Tables;
    TwoLinesInOne: Word$WdTwoLinesInOneType;
    Underline: Word$WdUnderline;
    Updates: Word$CoAuthUpdates;
    WholeStory(): void;
    WordOpenXML: string;
    Word$Words: Word$Words;

    /**
     * @param boolean [DataOnly=false]
     */
    XML(DataOnly?: boolean): string;
    Word$XMLNodes: Word$XMLNodes;
    XMLParentNode: Word$XMLNode;
  }

  declare class Word$ReadabilityStatistic {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Name: string;
    Parent: any;
    Value: number;
  }

  declare class Word$ReadabilityStatistics {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$ReadabilityStatistic;
    Parent: any;
  }

  declare class Word$RecentFile {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Word$Index: number;
    Name: string;
    Open(): Word$Document;
    Parent: any;
    Path: string;
    ReadOnly: boolean;
  }

  declare class Word$RecentFiles {
    constructor(): this;
    Add(Word$Document: any, ReadOnly?: any): Word$RecentFile;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$RecentFile;
    Maximum: number;
    Parent: any;
  }

  declare class Word$Rectangle {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Height: number;
    Left: number;
    Word$Lines: Word$Lines;
    Parent: any;
    Word$Range: Word$Range;
    RectangleType: Word$WdRectangleType;
    Top: number;
    Width: number;
  }

  declare class Word$Rectangles {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$Rectangle;
    Parent: any;
  }

  declare class Word$ReflectionFormat {
    constructor(): this;
    Word$Application: Word$Application;
    Blur: number;
    Creator: number;
    Offset: number;
    Parent: any;
    Size: number;
    Transparency: number;
    Type: Office.MsoReflectionType;
  }

  declare class Word$Replacement {
    constructor(): this;
    Word$Application: Word$Application;
    ClearFormatting(): void;
    Creator: number;
    Word$Font: Word$Font;
    Word$Frame: Word$Frame;
    Highlight: number;
    LanguageID: Word$WdLanguageID;
    LanguageIDFarEast: Word$WdLanguageID;
    NoProofing: number;
    Word$ParagraphFormat: Word$ParagraphFormat;
    Parent: any;
    Word$Style: any;
    Text: string;
  }

  declare class Word$Research {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    FavoriteService: string;
    IsResearchService(ServiceID: string): boolean;
    Parent: any;

    /**
     * @param string [QueryString='']
     * @param [QueryLanguage=0]
     * @param boolean [UseSelection=false]
     * @param boolean [LaunchQuery=true]
     */
    Query(
      ServiceID: string,
      QueryString?: string,
      QueryLanguage?: Word$WdLanguageID,
      UseSelection?: boolean,
      LaunchQuery?: boolean
    ): any;
    SetLanguagePair(
      LanguageFrom: Word$WdLanguageID,
      LanguageTo: Word$WdLanguageID
    ): any;
  }

  declare class Word$Reviewer {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Parent: any;
    Visible: boolean;
  }

  declare class Word$Reviewers {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$Reviewer;
    Parent: any;
  }

  declare class Word$Revision {
    constructor(): this;
    Accept(): void;
    Word$Application: Word$Application;
    Author: string;
    Word$Cells: Word$Cells;
    Creator: number;
    Date: VarDate;
    FormatDescription: string;
    Word$Index: number;
    MovedRange: Word$Range;
    Parent: any;
    Word$Range: Word$Range;
    Reject(): void;
    Word$Style: Word$Style;
    Type: Word$WdRevisionType;
  }

  declare class Word$Revisions {
    constructor(): this;
    AcceptAll(): void;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$Revision;
    Parent: any;
    RejectAll(): void;
  }

  declare class Word$RoutingSlip {
    constructor(): this;
    AddRecipient(Recipient: string): void;
    Word$Application: Word$Application;
    Creator: number;
    Delivery: Word$WdRoutingSlipDelivery;
    Message: string;
    Parent: any;
    Protect: Word$WdProtectionType;
    Recipients(Word$Index?: any): any;
    Reset(): void;
    ReturnWhenDone: boolean;
    Status: Word$WdRoutingSlipStatus;
    Subject: string;
    TrackStatus: boolean;
  }

  declare class Word$Row {
    constructor(): this;
    Alignment: Word$WdRowAlignment;
    AllowBreakAcrossPages: number;
    Word$Application: Word$Application;
    Word$Borders: Word$Borders;
    Word$Cells: Word$Cells;
    ConvertToText(Separator?: any, NestedTables?: any): Word$Range;
    ConvertToTextOld(Separator?: any): Word$Range;
    Creator: number;
    Delete(): void;
    HeadingFormat: number;
    Height: number;
    HeightRule: Word$WdRowHeightRule;
    ID: string;
    Word$Index: number;
    IsFirst: boolean;
    IsLast: boolean;
    LeftIndent: number;
    NestingLevel: number;
    Next: Word$Row;
    Parent: any;
    Previous: Word$Row;
    Word$Range: Word$Range;
    Select(): void;
    SetHeight(RowHeight: number, HeightRule: Word$WdRowHeightRule): void;
    SetLeftIndent(LeftIndent: number, RulerStyle: Word$WdRulerStyle): void;
    Word$Shading: Word$Shading;
    SpaceBetweenColumns: number;
  }

  declare class Word$Rows {
    constructor(): this;
    Add(BeforeRow?: any): Word$Row;
    Alignment: Word$WdRowAlignment;
    AllowBreakAcrossPages: number;
    AllowOverlap: number;
    Word$Application: Word$Application;
    Word$Borders: Word$Borders;
    ConvertToText(Separator?: any, NestedTables?: any): Word$Range;
    ConvertToTextOld(Separator?: any): Word$Range;
    Count: number;
    Creator: number;
    Delete(): void;
    DistanceBottom: number;
    DistanceLeft: number;
    DistanceRight: number;
    DistanceTop: number;
    DistributeHeight(): void;
    First: Word$Row;
    HeadingFormat: number;
    Height: number;
    HeightRule: Word$WdRowHeightRule;
    HorizontalPosition: number;
    Item(Word$Index: number): Word$Row;
    Last: Word$Row;
    LeftIndent: number;
    NestingLevel: number;
    Parent: any;
    RelativeHorizontalPosition: Word$WdRelativeHorizontalPosition;
    RelativeVerticalPosition: Word$WdRelativeVerticalPosition;
    Select(): void;
    SetHeight(RowHeight: number, HeightRule: Word$WdRowHeightRule): void;
    SetLeftIndent(LeftIndent: number, RulerStyle: Word$WdRulerStyle): void;
    Word$Shading: Word$Shading;
    SpaceBetweenColumns: number;
    TableDirection: Word$WdTableDirection;
    VerticalPosition: number;
    WrapAroundText: number;
  }

  declare class Word$Section {
    constructor(): this;
    Word$Application: Word$Application;
    Word$Borders: Word$Borders;
    Creator: number;
    Footers: Word$HeadersFooters;
    Headers: Word$HeadersFooters;
    Word$Index: number;
    Word$PageSetup: Word$PageSetup;
    Parent: any;
    ProtectedForForms: boolean;
    Word$Range: Word$Range;
  }

  declare class Word$Sections {
    constructor(): this;
    Add(Word$Range?: any, Start?: any): Word$Section;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    First: Word$Section;
    Item(Word$Index: number): Word$Section;
    Last: Word$Section;
    Word$PageSetup: Word$PageSetup;
    Parent: any;
  }

  declare class Word$Selection {
    constructor(): this;
    Active: boolean;
    Word$Application: Word$Application;
    BoldRun(): void;
    BookmarkID: number;
    Word$Bookmarks: Word$Bookmarks;
    Word$Borders: Word$Borders;
    Calculate(): number;
    Word$Cells: Word$Cells;
    Word$Characters: Word$Characters;
    ChildShapeRange: Word$ShapeRange;
    ClearCharacterAllFormatting(): void;
    ClearCharacterDirectFormatting(): void;
    ClearCharacterStyle(): void;
    ClearFormatting(): void;
    ClearParagraphAllFormatting(): void;
    ClearParagraphDirectFormatting(): void;
    ClearParagraphStyle(): void;

    /**
     * @param WdCollapseDirection [Direction=wdCollapseStart]
     */
    Collapse(Direction?: Word$WdCollapseDirection): void;
    Word$Columns: Word$Columns;
    ColumnSelectMode: boolean;
    Word$Comments: Word$Comments;
    Word$ContentControls: Word$ContentControls;
    ConvertToTable(
      Separator?: any,
      NumRows?: any,
      NumColumns?: any,
      InitialColumnWidth?: any,
      Format?: any,
      ApplyBorders?: any,
      ApplyShading?: any,
      ApplyFont?: any,
      ApplyColor?: any,
      ApplyHeadingRows?: any,
      ApplyLastRow?: any,
      ApplyFirstColumn?: any,
      ApplyLastColumn?: any,
      AutoFit?: any,
      AutoFitBehavior?: any,
      DefaultTableBehavior?: any
    ): Word$Table;
    ConvertToTableOld(
      Separator?: any,
      NumRows?: any,
      NumColumns?: any,
      InitialColumnWidth?: any,
      Format?: any,
      ApplyBorders?: any,
      ApplyShading?: any,
      ApplyFont?: any,
      ApplyColor?: any,
      ApplyHeadingRows?: any,
      ApplyLastRow?: any,
      ApplyFirstColumn?: any,
      ApplyLastColumn?: any,
      AutoFit?: any
    ): Word$Table;
    Copy(): void;
    CopyAsPicture(): void;
    CopyFormat(): void;
    CreateAutoTextEntry(Name: string, StyleName: string): Word$AutoTextEntry;
    CreateTextbox(): void;
    Creator: number;
    Cut(): void;
    Delete(Unit?: Word$WdUnits, Count?: number): number;
    DetectLanguage(): void;
    Word$Document: Word$Document;
    Word$Editors: Word$Editors;
    End: number;
    EndKey(Unit?: any, Extend?: any): number;
    Word$EndnoteOptions: Word$EndnoteOptions;
    Word$Endnotes: Word$Endnotes;
    EndOf(Unit?: any, Extend?: any): number;
    EnhMetaFileBits: any;
    EscapeKey(): void;
    Expand(Unit?: any): number;

    /**
     * @param boolean [OpenAfterExport=false]
     * @param [OptimizeFor=0]
     * @param boolean [ExportCurrentPage=false]
     * @param [Item=0]
     * @param boolean [IncludeDocProps=false]
     * @param boolean [KeepIRM=true]
     * @param [CreateBookmarks=0]
     * @param boolean [DocStructureTags=true]
     * @param boolean [BitmapMissingFonts=true]
     * @param boolean [UseISO19005_1=false]
     */
    ExportAsFixedFormat(
      OutputFileName: string,
      ExportFormat: Word$WdExportFormat,
      OpenAfterExport?: boolean,
      OptimizeFor?: Word$WdExportOptimizeFor,
      ExportCurrentPage?: boolean,
      Item?: Word$WdExportItem,
      IncludeDocProps?: boolean,
      KeepIRM?: boolean,
      CreateBookmarks?: Word$WdExportCreateBookmarks,
      DocStructureTags?: boolean,
      BitmapMissingFonts?: boolean,
      UseISO19005_1?: boolean,
      FixedFormatExtClassPtr?: any
    ): void;
    Extend(Character?: any): void;
    ExtendMode: boolean;
    Word$Fields: Word$Fields;
    Word$Find: Word$Find<Word$Selection>;
    FitTextWidth: number;
    Flags: Word$WdSelectionFlags;
    Word$Font: Word$Font;
    Word$FootnoteOptions: Word$FootnoteOptions;
    Word$Footnotes: Word$Footnotes;
    FormattedText: Word$Range;
    Word$FormFields: Word$FormFields;
    Word$Frames: Word$Frames;
    GoTo(What?: any, Which?: any, Count?: any, Name?: any): Word$Range;
    GoToEditableRange(EditorID?: any): Word$Range;
    GoToNext(What: Word$WdGoToItem): Word$Range;
    GoToPrevious(What: Word$WdGoToItem): Word$Range;
    HasChildShapeRange: boolean;
    Word$HeaderFooter: Word$HeaderFooter;
    HomeKey(Unit?: any, Extend?: any): number;
    Word$HTMLDivisions: Word$HTMLDivisions;
    Word$Hyperlinks: Word$Hyperlinks;
    Information(Type: Word$WdInformation): any;
    Word$InlineShapes: Word$InlineShapes;
    InRange(Word$Range: Word$Range): boolean;
    InsertAfter(Text: string): void;
    InsertBefore(Text: string): void;
    InsertBreak(Type?: any): void;
    InsertCaption(
      Label: any,
      Title?: any,
      TitleAutoText?: any,
      Position?: any,
      ExcludeLabel?: any
    ): void;
    InsertCaptionXP(
      Label: any,
      Title?: any,
      TitleAutoText?: any,
      Position?: any
    ): void;
    InsertCells(ShiftCells?: any): void;
    InsertColumns(): void;
    InsertColumnsRight(): void;
    InsertCrossReference(
      ReferenceType: any,
      ReferenceKind: Word$WdReferenceKind,
      ReferenceItem: any,
      InsertAsHyperlink?: any,
      IncludePosition?: any,
      SeparateNumbers?: any,
      SeparatorString?: any
    ): void;
    InsertCrossReference_2002(
      ReferenceType: any,
      ReferenceKind: Word$WdReferenceKind,
      ReferenceItem: any,
      InsertAsHyperlink?: any,
      IncludePosition?: any
    ): void;
    InsertDateTime(
      DateTimeFormat?: any,
      InsertAsField?: any,
      InsertAsFullWidth?: any,
      DateLanguage?: any,
      CalendarType?: any
    ): void;
    InsertDateTimeOld(
      DateTimeFormat?: any,
      InsertAsField?: any,
      InsertAsFullWidth?: any
    ): void;
    InsertFile(
      FileName: string,
      Word$Range?: any,
      ConfirmConversions?: any,
      Link?: any,
      Attachment?: any
    ): void;
    InsertFormula(Formula?: any, NumberFormat?: any): void;
    InsertNewPage(): void;
    InsertParagraph(): void;
    InsertParagraphAfter(): void;
    InsertParagraphBefore(): void;
    InsertRows(NumRows?: any): void;
    InsertRowsAbove(NumRows?: any): void;
    InsertRowsBelow(NumRows?: any): void;
    InsertStyleSeparator(): void;
    InsertSymbol(
      CharacterNumber: number,
      Word$Font?: any,
      Unicode?: any,
      Bias?: any
    ): void;
    InsertXML(XML: string, Transform?: any): void;
    InStory(Word$Range: Word$Range): boolean;
    IPAtEndOfLine: boolean;
    IsEndOfRowMark: boolean;
    IsEqual(Word$Range: Word$Range): boolean;
    ItalicRun(): void;
    LanguageDetected: boolean;
    LanguageID: Word$WdLanguageID;
    LanguageIDFarEast: Word$WdLanguageID;
    LanguageIDOther: Word$WdLanguageID;
    LtrPara(): void;
    LtrRun(): void;
    Move(Unit?: Word$WdUnits, Count?: number): number;
    MoveDown(Unit?: Word$WdUnits, Count?: number): number;
    MoveEnd(Unit?: Word$WdUnits, Count?: number): number;
    MoveEndUntil(Cset: any, Count?: any): number;
    MoveEndWhile(Cset: any, Count?: any): number;
    MoveLeft(Unit?: Word$WdUnits, Count?: number): number;
    MoveRight(Unit?: Word$WdUnits, Count?: number): number;
    MoveStart(Unit?: Word$WdUnits, Count?: number): number;
    MoveStartUntil(Cset: any, Count?: any): number;
    MoveStartWhile(Cset: any, Count?: any): number;
    MoveUntil(Cset: any, Count?: any): number;
    MoveUp(Unit?: Word$WdUnits, Count?: number): number;
    MoveWhile(Cset: any, Count?: any): number;
    Next(Unit?: Word$WdUnits, Count?: number): Word$Range;
    NextField(): Word$Field;
    NextRevision(Wrap?: any): Word$Revision;
    NextSubdocument(): void;
    NoProofing: number;
    Word$OMaths: Word$OMaths;
    Orientation: Word$WdTextOrientation;
    Word$PageSetup: Word$PageSetup;
    Word$ParagraphFormat: Word$ParagraphFormat;
    Word$Paragraphs: Word$Paragraphs;
    Parent: any;
    ParentContentControl: Word$ContentControl;
    Paste(): void;
    PasteAndFormat(Type: Word$WdRecoveryType): void;
    PasteAppendTable(): void;
    PasteAsNestedTable(): void;
    PasteExcelTable(
      LinkedToExcel: boolean,
      WordFormatting: boolean,
      RTF: boolean
    ): void;
    PasteFormat(): void;
    PasteSpecial(
      IconIndex?: any,
      Link?: any,
      Placement?: any,
      DisplayAsIcon?: any,
      DataType?: any,
      IconFileName?: any,
      IconLabel?: any
    ): void;
    Previous(Unit?: any, Count?: any): Word$Range;
    PreviousBookmarkID: number;
    PreviousField(): Word$Field;
    PreviousRevision(Wrap?: any): Word$Revision;
    PreviousSubdocument(): void;
    Word$Range: Word$Range;
    ReadingModeGrowFont(): void;
    ReadingModeShrinkFont(): void;
    Word$Rows: Word$Rows;
    RtlPara(): void;
    RtlRun(): void;
    Word$Sections: Word$Sections;
    Select(): void;
    SelectCell(): void;
    SelectColumn(): void;
    SelectCurrentAlignment(): void;
    SelectCurrentColor(): void;
    SelectCurrentFont(): void;
    SelectCurrentIndent(): void;
    SelectCurrentSpacing(): void;
    SelectCurrentTabs(): void;
    SelectRow(): void;
    Word$Sentences: Word$Sentences;
    SetRange(Start: number, End: number): void;
    Word$Shading: Word$Shading;
    Word$ShapeRange: Word$ShapeRange;
    Shrink(): void;
    ShrinkDiscontiguousSelection(): void;
    Word$SmartTags: Word$SmartTags;
    Sort(
      ExcludeHeader?: any,
      FieldNumber?: any,
      SortFieldType?: any,
      SortOrder?: any,
      FieldNumber2?: any,
      SortFieldType2?: any,
      SortOrder2?: any,
      FieldNumber3?: any,
      SortFieldType3?: any,
      SortOrder3?: any,
      SortColumn?: any,
      Separator?: any,
      CaseSensitive?: any,
      BidiSort?: any,
      IgnoreThe?: any,
      IgnoreKashida?: any,
      IgnoreDiacritics?: any,
      IgnoreHe?: any,
      LanguageID?: any,
      SubFieldNumber?: any,
      SubFieldNumber2?: any,
      SubFieldNumber3?: any
    ): void;
    Sort2000(
      ExcludeHeader?: any,
      FieldNumber?: any,
      SortFieldType?: any,
      SortOrder?: any,
      FieldNumber2?: any,
      SortFieldType2?: any,
      SortOrder2?: any,
      FieldNumber3?: any,
      SortFieldType3?: any,
      SortOrder3?: any,
      SortColumn?: any,
      Separator?: any,
      CaseSensitive?: any,
      BidiSort?: any,
      IgnoreThe?: any,
      IgnoreKashida?: any,
      IgnoreDiacritics?: any,
      IgnoreHe?: any,
      LanguageID?: any
    ): void;
    SortAscending(): void;
    SortDescending(): void;
    SortOld(
      ExcludeHeader?: any,
      FieldNumber?: any,
      SortFieldType?: any,
      SortOrder?: any,
      FieldNumber2?: any,
      SortFieldType2?: any,
      SortOrder2?: any,
      FieldNumber3?: any,
      SortFieldType3?: any,
      SortOrder3?: any,
      SortColumn?: any,
      Separator?: any,
      CaseSensitive?: any,
      LanguageID?: any
    ): void;
    SplitTable(): void;
    Start: number;
    StartIsActive: boolean;
    StartOf(Unit?: any, Extend?: any): number;
    StoryLength: number;
    StoryType: Word$WdStoryType;
    Word$Style: any;
    Word$Tables: Word$Tables;
    Text: string;
    ToggleCharacterCode(): void;
    TopLevelTables: Word$Tables;
    Type: Word$WdSelectionType;
    TypeBackspace(): void;
    TypeParagraph(): void;
    TypeText(Text: string): void;
    WholeStory(): void;
    WordOpenXML: string;
    Word$Words: Word$Words;

    /**
     * @param boolean [DataOnly=false]
     */
    XML(DataOnly?: boolean): string;
    Word$XMLNodes: Word$XMLNodes;
    XMLParentNode: Word$XMLNode;
  }

  declare class Word$Sentences {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    First: Word$Range;
    Item(Word$Index: number): Word$Range;
    Last: Word$Range;
    Parent: any;
  }

  declare class Word$SeriesLines {
    constructor(): this;
    Word$Application: any;
    Word$Border: Word$ChartBorder;
    Creator: number;
    Delete(): any;
    Format: Word$ChartFormat;
    Name: string;
    Parent: any;
    Select(): any;
  }

  declare class Word$Shading {
    constructor(): this;
    Word$Application: Word$Application;
    BackgroundPatternColor: Word$WdColor;
    BackgroundPatternColorIndex: Word$WdColorIndex;
    Creator: number;
    ForegroundPatternColor: Word$WdColor;
    ForegroundPatternColorIndex: Word$WdColorIndex;
    Parent: any;
    Texture: Word$WdTextureIndex;
  }

  declare class Word$ShadowFormat {
    constructor(): this;
    Word$Application: Word$Application;
    Blur: number;
    Creator: number;
    ForeColor: Word$ColorFormat;
    IncrementOffsetX(Increment: number): void;
    IncrementOffsetY(Increment: number): void;
    Obscured: Office.MsoTriState;
    OffsetX: number;
    OffsetY: number;
    Parent: any;
    RotateWithShape: Office.MsoTriState;
    Size: number;
    Word$Style: Office.MsoShadowStyle;
    Transparency: number;
    Type: Office.MsoShadowType;
    Visible: Office.MsoTriState;
  }

  declare class Word$Shape {
    constructor(): this;
    Activate(): void;
    Word$Adjustments: Word$Adjustments;
    AlternativeText: string;
    Anchor: Word$Range;
    AnchorID: number;
    Word$Application: Word$Application;
    Apply(): void;
    AutoShapeType: Office.MsoAutoShapeType;
    BackgroundStyle: Office.MsoBackgroundStyleIndex;
    Callout: Word$CalloutFormat;
    CanvasCropBottom(Increment: number): void;
    CanvasCropLeft(Increment: number): void;
    CanvasCropRight(Increment: number): void;
    CanvasCropTop(Increment: number): void;
    CanvasItems: Word$CanvasShapes;
    Word$Chart: Word$Chart;
    Child: Office.MsoTriState;
    ConnectionSiteCount: number;
    Connector: Office.MsoTriState;
    Word$ConnectorFormat: Word$ConnectorFormat;
    ConvertToFrame(): Word$Frame;
    ConvertToInlineShape(): Word$InlineShape;
    Creator: number;
    Delete(): void;
    Word$Diagram: Office.IMsoDiagram;
    Word$DiagramNode: Word$DiagramNode;
    Duplicate(): Word$Shape;
    EditID: number;
    Fill: Word$FillFormat;
    Flip(FlipCmd: Office.MsoFlipCmd): void;
    Glow: Word$GlowFormat;
    GroupItems: Word$GroupShapes;
    HasChart: Office.MsoTriState;
    HasDiagram: Office.MsoTriState;
    HasDiagramNode: Office.MsoTriState;
    HasSmartArt: Office.MsoTriState;
    Height: number;
    HeightRelative: number;
    HorizontalFlip: Office.MsoTriState;
    Word$Hyperlink: Word$Hyperlink;
    ID: number;
    IncrementLeft(Increment: number): void;
    IncrementRotation(Increment: number): void;
    IncrementTop(Increment: number): void;
    LayoutInCell: number;
    Left: number;
    LeftRelative: number;
    Word$Line: Word$LineFormat;
    Word$LinkFormat: Word$LinkFormat;
    LockAnchor: number;
    LockAspectRatio: Office.MsoTriState;
    Name: string;
    Nodes: Word$ShapeNodes;
    Word$OLEFormat: Word$OLEFormat;
    Parent: any;
    ParentGroup: Word$Shape;
    PickUp(): void;
    Word$PictureFormat: Word$PictureFormat;
    Reflection: Word$ReflectionFormat;
    RelativeHorizontalPosition: Word$WdRelativeHorizontalPosition;
    RelativeHorizontalSize: Word$WdRelativeHorizontalSize;
    RelativeVerticalPosition: Word$WdRelativeVerticalPosition;
    RelativeVerticalSize: Word$WdRelativeVerticalSize;
    RerouteConnections(): void;
    Rotation: number;
    RTF: string;

    /**
     * @param [Scale=0]
     */
    ScaleHeight(
      Factor: number,
      RelativeToOriginalSize: Office.MsoTriState,
      Scale?: Office.MsoScaleFrom
    ): void;

    /**
     * @param [Scale=0]
     */
    ScaleWidth(
      Factor: number,
      RelativeToOriginalSize: Office.MsoTriState,
      Scale?: Office.MsoScaleFrom
    ): void;
    Script: Office.Script;
    Select(Replace?: any): void;
    SetShapesDefaultProperties(): void;
    Shadow: Word$ShadowFormat;
    ShapeStyle: Office.MsoShapeStyleIndex;
    SmartArt: Office.SmartArt;
    SoftEdge: Word$SoftEdgeFormat;
    TextEffect: Word$TextEffectFormat;
    Word$TextFrame: Word$TextFrame;
    TextFrame2: Office.TextFrame2;
    ThreeD: Word$ThreeDFormat;
    Title: string;
    Top: number;
    TopRelative: number;
    Type: Office.MsoShapeType;
    Ungroup(): Word$ShapeRange;
    VerticalFlip: Office.MsoTriState;
    Vertices: any;
    Visible: Office.MsoTriState;
    Width: number;
    WidthRelative: number;
    Word$WrapFormat: Word$WrapFormat;
    ZOrder(ZOrderCmd: Office.MsoZOrderCmd): void;
    ZOrderPosition: number;
  }

  declare class Word$ShapeNode {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    EditingType: Office.MsoEditingType;
    Parent: any;
    Points: any;
    SegmentType: Office.MsoSegmentType;
  }

  declare class Word$ShapeNodes {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Delete(Word$Index: number): void;

    /**
     * @param number [X2=0]
     * @param number [Y2=0]
     * @param number [X3=0]
     * @param number [Y3=0]
     */
    Insert(
      Word$Index: number,
      SegmentType: Office.MsoSegmentType,
      EditingType: Office.MsoEditingType,
      X1: number,
      Y1: number,
      X2?: number,
      Y2?: number,
      X3?: number,
      Y3?: number
    ): void;
    Item(Word$Index: any): Word$ShapeNode;
    Parent: any;
    SetEditingType(
      Word$Index: number,
      EditingType: Office.MsoEditingType
    ): void;
    SetPosition(Word$Index: number, X1: number, Y1: number): void;
    SetSegmentType(
      Word$Index: number,
      SegmentType: Office.MsoSegmentType
    ): void;
  }

  declare class Word$ShapeRange {
    constructor(): this;
    Activate(): void;
    Word$Adjustments: Word$Adjustments;
    Align(Align: Office.MsoAlignCmd, RelativeTo: number): void;
    AlternativeText: string;
    Anchor: Word$Range;
    Word$Application: Word$Application;
    Apply(): void;
    AutoShapeType: Office.MsoAutoShapeType;
    BackgroundStyle: Office.MsoBackgroundStyleIndex;
    Callout: Word$CalloutFormat;
    CanvasCropBottom(Increment: number): void;
    CanvasCropLeft(Increment: number): void;
    CanvasCropRight(Increment: number): void;
    CanvasCropTop(Increment: number): void;
    CanvasItems: Word$CanvasShapes;
    Child: Office.MsoTriState;
    ConnectionSiteCount: number;
    Connector: Office.MsoTriState;
    Word$ConnectorFormat: Word$ConnectorFormat;
    ConvertToFrame(): Word$Frame;
    ConvertToInlineShape(): Word$InlineShape;
    Count: number;
    Creator: number;
    Delete(): void;
    Word$Diagram: Office.IMsoDiagram;
    Word$DiagramNode: Word$DiagramNode;
    Distribute(Distribute: Office.MsoDistributeCmd, RelativeTo: number): void;
    Duplicate(): Word$ShapeRange;
    Fill: Word$FillFormat;
    Flip(FlipCmd: Office.MsoFlipCmd): void;
    Glow: Word$GlowFormat;
    Group(): Word$Shape;
    GroupItems: Word$GroupShapes;
    HasDiagram: Office.MsoTriState;
    HasDiagramNode: Office.MsoTriState;
    Height: number;
    HeightRelative: number;
    HorizontalFlip: Office.MsoTriState;
    Word$Hyperlink: Word$Hyperlink;
    ID: number;
    IncrementLeft(Increment: number): void;
    IncrementRotation(Increment: number): void;
    IncrementTop(Increment: number): void;
    Item(Word$Index: any): Word$Shape;
    LayoutInCell: number;
    Left: number;
    LeftRelative: number;
    Word$Line: Word$LineFormat;
    LockAnchor: number;
    LockAspectRatio: Office.MsoTriState;
    Name: string;
    Nodes: Word$ShapeNodes;
    Parent: any;
    ParentGroup: Word$Shape;
    PickUp(): void;
    Word$PictureFormat: Word$PictureFormat;
    Reflection: Word$ReflectionFormat;
    Regroup(): Word$Shape;
    RelativeHorizontalPosition: Word$WdRelativeHorizontalPosition;
    RelativeHorizontalSize: Word$WdRelativeHorizontalSize;
    RelativeVerticalPosition: Word$WdRelativeVerticalPosition;
    RelativeVerticalSize: Word$WdRelativeVerticalSize;
    RerouteConnections(): void;
    Rotation: number;
    RTF: string;

    /**
     * @param [Scale=0]
     */
    ScaleHeight(
      Factor: number,
      RelativeToOriginalSize: Office.MsoTriState,
      Scale?: Office.MsoScaleFrom
    ): void;

    /**
     * @param [Scale=0]
     */
    ScaleWidth(
      Factor: number,
      RelativeToOriginalSize: Office.MsoTriState,
      Scale?: Office.MsoScaleFrom
    ): void;
    Select(Replace?: any): void;
    SetShapesDefaultProperties(): void;
    Shadow: Word$ShadowFormat;
    ShapeStyle: Office.MsoShapeStyleIndex;
    SoftEdge: Word$SoftEdgeFormat;
    TextEffect: Word$TextEffectFormat;
    Word$TextFrame: Word$TextFrame;
    TextFrame2: Office.TextFrame2;
    ThreeD: Word$ThreeDFormat;
    Title: string;
    Top: number;
    TopRelative: number;
    Type: Office.MsoShapeType;
    Ungroup(): Word$ShapeRange;
    VerticalFlip: Office.MsoTriState;
    Vertices: any;
    Visible: Office.MsoTriState;
    Width: number;
    WidthRelative: number;
    Word$WrapFormat: Word$WrapFormat;
    ZOrder(ZOrderCmd: Office.MsoZOrderCmd): void;
    ZOrderPosition: number;
  }

  declare class Word$Shapes {
    constructor(): this;
    AddCallout(
      Type: Office.MsoCalloutType,
      Left: number,
      Top: number,
      Width: number,
      Height: number,
      Anchor?: any
    ): Word$Shape;
    AddCanvas(
      Left: number,
      Top: number,
      Width: number,
      Height: number,
      Anchor?: any
    ): Word$Shape;

    /**
     * @param [Type=-1]
     */
    AddChart(
      Type?: Office.XlChartType,
      Left?: any,
      Top?: any,
      Width?: any,
      Height?: any,
      Anchor?: any
    ): Word$Shape;
    AddConnector(
      Type: Office.MsoConnectorType,
      BeginX: number,
      BeginY: number,
      EndX: number,
      EndY: number
    ): Word$Shape;
    AddCurve(SafeArrayOfPoints: any, Anchor?: any): Word$Shape;
    AddDiagram(
      Type: Office.MsoDiagramType,
      Left: number,
      Top: number,
      Width: number,
      Height: number,
      Anchor?: any
    ): Word$Shape;
    AddLabel(
      Orientation: Office.MsoTextOrientation,
      Left: number,
      Top: number,
      Width: number,
      Height: number,
      Anchor?: any
    ): Word$Shape;
    AddLine(
      BeginX: number,
      BeginY: number,
      EndX: number,
      EndY: number,
      Anchor?: any
    ): Word$Shape;
    AddOLEControl(
      ClassType?: any,
      Left?: any,
      Top?: any,
      Width?: any,
      Height?: any,
      Anchor?: any
    ): Word$Shape;
    AddOLEObject(
      ClassType?: any,
      FileName?: any,
      LinkToFile?: any,
      DisplayAsIcon?: any,
      IconFileName?: any,
      IconIndex?: any,
      IconLabel?: any,
      Left?: any,
      Top?: any,
      Width?: any,
      Height?: any,
      Anchor?: any
    ): Word$Shape;
    AddPicture(
      FileName: string,
      LinkToFile?: any,
      SaveWithDocument?: any,
      Left?: any,
      Top?: any,
      Width?: any,
      Height?: any,
      Anchor?: any
    ): Word$Shape;
    AddPolyline(SafeArrayOfPoints: any, Anchor?: any): Word$Shape;
    AddShape(
      Type: number,
      Left: number,
      Top: number,
      Width: number,
      Height: number,
      Anchor?: any
    ): Word$Shape;
    AddSmartArt(
      Layout: Office.SmartArtLayout,
      Left?: any,
      Top?: any,
      Width?: any,
      Height?: any,
      Anchor?: any
    ): Word$Shape;
    AddTextbox(
      Orientation: Office.MsoTextOrientation,
      Left: number,
      Top: number,
      Width: number,
      Height: number,
      Anchor?: any
    ): Word$Shape;
    AddTextEffect(
      PresetTextEffect: Office.MsoPresetTextEffect,
      Text: string,
      FontName: string,
      FontSize: number,
      FontBold: Office.MsoTriState,
      FontItalic: Office.MsoTriState,
      Left: number,
      Top: number,
      Anchor?: any
    ): Word$Shape;
    Word$Application: Word$Application;
    BuildFreeform(
      EditingType: Office.MsoEditingType,
      X1: number,
      Y1: number
    ): Word$FreeformBuilder;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$Shape;
    Parent: any;
    Range(Word$Index: any): Word$ShapeRange;
    SelectAll(): void;
  }

  declare class Word$SmartTag {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    DownloadURL: string;
    Name: string;
    Parent: any;
    Properties: Word$CustomProperties;
    Word$Range: Word$Range;
    Select(): void;
    Word$SmartTagActions: Word$SmartTagActions;
    XML: string;
    Word$XMLNode: Word$XMLNode;
  }

  declare class Word$SmartTagAction {
    constructor(): this;
    ActiveXControl: any;
    Word$Application: Word$Application;
    CheckboxState: boolean;
    Creator: number;
    Execute(): void;
    ExpandDocumentFragment: boolean;
    ExpandHelp: boolean;
    ListSelection: number;
    Name: string;
    Parent: any;
    PresentInPane: boolean;
    RadioGroupSelection: number;
    TextboxText: string;
    Type: Word$WdSmartTagControlType;
  }

  declare class Word$SmartTagActions {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$SmartTagAction;
    Parent: any;
    ReloadActions(): void;
  }

  declare class Word$SmartTagRecognizer {
    constructor(): this;
    Word$Application: Word$Application;
    Caption: string;
    Creator: number;
    Enabled: boolean;
    FullName: string;
    Parent: any;
    ProgID: string;
  }

  declare class Word$SmartTagRecognizers {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$SmartTagRecognizer;
    Parent: any;
    ReloadRecognizers(): void;
  }

  declare class Word$SmartTags {
    constructor(): this;
    Add(Name: string, Word$Range?: any, Properties?: any): Word$SmartTag;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$SmartTag;
    Parent: any;
    SmartTagsByType(Name: string): Word$SmartTags;
  }

  declare class Word$SmartTagType {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    FriendlyName: string;
    Name: string;
    Parent: any;
    Word$SmartTagActions: Word$SmartTagActions;
    Word$SmartTagRecognizers: Word$SmartTagRecognizers;
  }

  declare class Word$SmartTagTypes {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$SmartTagType;
    Parent: any;
    ReloadAll(): void;
  }

  declare class Word$SoftEdgeFormat {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Parent: any;
    Radius: number;
    Type: Office.MsoSoftEdgeType;
  }

  declare class Word$Source {
    constructor(): this;
    Word$Application: Word$Application;
    Cited: boolean;
    Creator: number;
    Delete(): void;
    Field(Name: string): string;
    Parent: any;
    Tag: string;
    XML: string;
  }

  declare class Word$Sources {
    constructor(): this;
    Add(Data: string): void;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$Source;
    Parent: any;
  }

  declare class Word$SpellingSuggestion {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Name: string;
    Parent: any;
  }

  declare class Word$SpellingSuggestions {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$SpellingSuggestion;
    Parent: any;
    SpellingErrorType: Word$WdSpellingErrorType;
  }

  declare class Word$StoryRanges {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: Word$WdStoryType): Word$Range;
    Parent: any;
  }

  declare class Word$Style {
    constructor(): this;
    Word$Application: Word$Application;
    AutomaticallyUpdate: boolean;
    BaseStyle: any;
    Word$Borders: Word$Borders;
    BuiltIn: boolean;
    Creator: number;
    Delete(): void;
    Description: string;
    Word$Font: Word$Font;
    Word$Frame: Word$Frame;
    Hidden: boolean;
    InUse: boolean;
    LanguageID: Word$WdLanguageID;
    LanguageIDFarEast: Word$WdLanguageID;
    Linked: boolean;
    LinkStyle: any;
    LinkToListTemplate(
      Word$ListTemplate: Word$ListTemplate,
      ListLevelNumber?: any
    ): void;
    ListLevelNumber: number;
    Word$ListTemplate: Word$ListTemplate;
    Locked: boolean;
    NameLocal: string;
    NextParagraphStyle: any;
    NoProofing: number;
    NoSpaceBetweenParagraphsOfSameStyle: boolean;
    Word$ParagraphFormat: Word$ParagraphFormat;
    Parent: any;
    Priority: number;
    QuickStyle: boolean;
    Word$Shading: Word$Shading;
    Word$Table: Word$TableStyle;
    Type: Word$WdStyleType;
    UnhideWhenUsed: boolean;
    Visibility: boolean;
  }

  declare class Word$Styles {
    constructor(): this;
    Add(Name: string, Type?: any): Word$Style;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$Style;
    Parent: any;
  }

  declare class Word$StyleSheet {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    FullName: string;
    Word$Index: number;
    Move(Precedence: Word$WdStyleSheetPrecedence): void;
    Name: string;
    Parent: any;
    Path: string;
    Title: string;
    Type: Word$WdStyleSheetLinkType;
  }

  declare class Word$StyleSheets {
    constructor(): this;
    Add(
      FileName: string,
      LinkType: Word$WdStyleSheetLinkType,
      Title: string,
      Precedence: Word$WdStyleSheetPrecedence
    ): Word$StyleSheet;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$StyleSheet;
    Parent: any;
  }

  declare class Word$Subdocument {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    HasFile: boolean;
    Level: number;
    Locked: boolean;
    Name: string;
    Open(): Word$Document;
    Parent: any;
    Path: string;
    Word$Range: Word$Range;
    Split(Word$Range: Word$Range): void;
  }

  declare class Word$Subdocuments {
    constructor(): this;
    AddFromFile(
      Name: any,
      ConfirmConversions?: any,
      ReadOnly?: any,
      PasswordDocument?: any,
      PasswordTemplate?: any,
      Revert?: any,
      WritePasswordDocument?: any,
      WritePasswordTemplate?: any
    ): Word$Subdocument;
    AddFromRange(Word$Range: Word$Range): Word$Subdocument;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Delete(): void;
    Expanded: boolean;
    Item(Word$Index: number): Word$Subdocument;
    Merge(FirstSubdocument?: any, LastSubdocument?: any): void;
    Parent: any;
    Select(): void;
  }

  declare class Word$SynonymInfo {
    constructor(): this;
    AntonymList: any;
    Word$Application: Word$Application;
    Creator: number;
    Found: boolean;
    MeaningCount: number;
    MeaningList: any;
    Parent: any;
    PartOfSpeechList: any;
    RelatedExpressionList: any;
    RelatedWordList: any;
    SynonymList(Meaning: any): any;
    Word: string;
  }

  declare class Word$System {
    constructor(): this;
    Word$Application: Word$Application;
    ComputerType: string;
    Connect(Path: string, Drive?: any, Password?: any): void;
    Country: Word$WdCountry;
    CountryRegion: Word$WdCountry;
    Creator: number;
    Cursor: Word$WdCursorType;
    FreeDiskSpace: number;
    HorizontalResolution: number;
    LanguageDesignation: string;
    MacintoshName: string;
    MathCoprocessorInstalled: boolean;
    MSInfo(): void;
    OperatingSystem: string;
    Parent: any;
    PrivateProfileString(
      FileName: string,
      Word$Section: string,
      Key: string
    ): string;
    ProcessorType: string;
    ProfileString(Word$Section: string, Key: string): string;
    QuickDrawInstalled: boolean;
    Word$Version: string;
    VerticalResolution: number;
  }

  declare class Word$Table {
    constructor(): this;
    AllowAutoFit: boolean;
    AllowPageBreaks: boolean;
    Word$Application: Word$Application;
    ApplyStyleColumnBands: boolean;
    ApplyStyleDirectFormatting(StyleName: string): void;
    ApplyStyleFirstColumn: boolean;
    ApplyStyleHeadingRows: boolean;
    ApplyStyleLastColumn: boolean;
    ApplyStyleLastRow: boolean;
    ApplyStyleRowBands: boolean;
    AutoFitBehavior(Behavior: Word$WdAutoFitBehavior): void;
    AutoFormat(
      Format?: any,
      ApplyBorders?: any,
      ApplyShading?: any,
      ApplyFont?: any,
      ApplyColor?: any,
      ApplyHeadingRows?: any,
      ApplyLastRow?: any,
      ApplyFirstColumn?: any,
      ApplyLastColumn?: any,
      AutoFit?: any
    ): void;
    AutoFormatType: number;
    Word$Borders: Word$Borders;
    BottomPadding: number;
    Cell(Word$Row: number, Word$Column: number): Word$Cell;
    Word$Columns: Word$Columns;
    ConvertToText(Separator?: any, NestedTables?: any): Word$Range;
    ConvertToTextOld(Separator?: any): Word$Range;
    Creator: number;
    Delete(): void;
    Descr: string;
    ID: string;
    LeftPadding: number;
    NestingLevel: number;
    Parent: any;
    PreferredWidth: number;
    PreferredWidthType: Word$WdPreferredWidthType;
    Word$Range: Word$Range;
    RightPadding: number;
    Word$Rows: Word$Rows;
    Select(): void;
    Word$Shading: Word$Shading;
    Sort(
      ExcludeHeader?: any,
      FieldNumber?: any,
      SortFieldType?: any,
      SortOrder?: any,
      FieldNumber2?: any,
      SortFieldType2?: any,
      SortOrder2?: any,
      FieldNumber3?: any,
      SortFieldType3?: any,
      SortOrder3?: any,
      CaseSensitive?: any,
      BidiSort?: any,
      IgnoreThe?: any,
      IgnoreKashida?: any,
      IgnoreDiacritics?: any,
      IgnoreHe?: any,
      LanguageID?: any
    ): void;
    SortAscending(): void;
    SortDescending(): void;
    SortOld(
      ExcludeHeader?: any,
      FieldNumber?: any,
      SortFieldType?: any,
      SortOrder?: any,
      FieldNumber2?: any,
      SortFieldType2?: any,
      SortOrder2?: any,
      FieldNumber3?: any,
      SortFieldType3?: any,
      SortOrder3?: any,
      CaseSensitive?: any,
      LanguageID?: any
    ): void;
    Spacing: number;
    Split(BeforeRow: any): Word$Table;
    Word$Style: any;
    TableDirection: Word$WdTableDirection;
    Word$Tables: Word$Tables;
    Title: string;
    TopPadding: number;
    Uniform: boolean;
    UpdateAutoFormat(): void;
  }

  declare class Word$TableOfAuthorities {
    constructor(): this;
    Word$Application: Word$Application;
    Word$Bookmark: string;
    Word$Category: number;
    Creator: number;
    Delete(): void;
    EntrySeparator: string;
    IncludeCategoryHeader: boolean;
    IncludeSequenceName: string;
    KeepEntryFormatting: boolean;
    PageNumberSeparator: string;
    PageRangeSeparator: string;
    Parent: any;
    Passim: boolean;
    Word$Range: Word$Range;
    Separator: string;
    TabLeader: Word$WdTabLeader;
    Update(): void;
  }

  declare class Word$TableOfAuthoritiesCategory {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Word$Index: number;
    Name: string;
    Parent: any;
  }

  declare class Word$TableOfContents {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Word$HeadingStyles: Word$HeadingStyles;
    HidePageNumbersInWeb: boolean;
    IncludePageNumbers: boolean;
    LowerHeadingLevel: number;
    Parent: any;
    Word$Range: Word$Range;
    RightAlignPageNumbers: boolean;
    TabLeader: Word$WdTabLeader;
    TableID: string;
    Update(): void;
    UpdatePageNumbers(): void;
    UpperHeadingLevel: number;
    UseFields: boolean;
    UseHeadingStyles: boolean;
    UseHyperlinks: boolean;
  }

  declare class Word$TableOfFigures {
    constructor(): this;
    Word$Application: Word$Application;
    Caption: string;
    Creator: number;
    Delete(): void;
    Word$HeadingStyles: Word$HeadingStyles;
    HidePageNumbersInWeb: boolean;
    IncludeLabel: boolean;
    IncludePageNumbers: boolean;
    LowerHeadingLevel: number;
    Parent: any;
    Word$Range: Word$Range;
    RightAlignPageNumbers: boolean;
    TabLeader: Word$WdTabLeader;
    TableID: string;
    Update(): void;
    UpdatePageNumbers(): void;
    UpperHeadingLevel: number;
    UseFields: boolean;
    UseHeadingStyles: boolean;
    UseHyperlinks: boolean;
  }

  declare class Word$Tables {
    constructor(): this;
    Add(
      Word$Range: Word$Range,
      NumRows: number,
      NumColumns: number,
      DefaultTableBehavior?: any,
      AutoFitBehavior?: any
    ): Word$Table;
    AddOld(
      Word$Range: Word$Range,
      NumRows: number,
      NumColumns: number
    ): Word$Table;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$Table;
    NestingLevel: number;
    Parent: any;
  }

  declare class Word$TablesOfAuthorities {
    constructor(): this;
    Add(
      Word$Range: Word$Range,
      Word$Category?: any,
      Word$Bookmark?: any,
      Passim?: any,
      KeepEntryFormatting?: any,
      Separator?: any,
      IncludeSequenceName?: any,
      EntrySeparator?: any,
      PageRangeSeparator?: any,
      IncludeCategoryHeader?: any,
      PageNumberSeparator?: any
    ): Word$TableOfAuthorities;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Format: Word$WdToaFormat;
    Item(Word$Index: number): Word$TableOfAuthorities;
    MarkAllCitations(
      ShortCitation: string,
      LongCitation?: any,
      LongCitationAutoText?: any,
      Word$Category?: any
    ): void;
    MarkCitation(
      Word$Range: Word$Range,
      ShortCitation: string,
      LongCitation?: any,
      LongCitationAutoText?: any,
      Word$Category?: any
    ): Word$Field;
    NextCitation(ShortCitation: string): void;
    Parent: any;
  }

  declare class Word$TablesOfAuthoritiesCategories {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$TableOfAuthoritiesCategory;
    Parent: any;
  }

  declare class Word$TablesOfContents {
    constructor(): this;
    Add(
      Word$Range: Word$Range,
      UseHeadingStyles?: any,
      UpperHeadingLevel?: any,
      LowerHeadingLevel?: any,
      UseFields?: any,
      TableID?: any,
      RightAlignPageNumbers?: any,
      IncludePageNumbers?: any,
      AddedStyles?: any,
      UseHyperlinks?: any,
      HidePageNumbersInWeb?: any,
      UseOutlineLevels?: any
    ): Word$TableOfContents;
    Add2000(
      Word$Range: Word$Range,
      UseHeadingStyles?: any,
      UpperHeadingLevel?: any,
      LowerHeadingLevel?: any,
      UseFields?: any,
      TableID?: any,
      RightAlignPageNumbers?: any,
      IncludePageNumbers?: any,
      AddedStyles?: any,
      UseHyperlinks?: any,
      HidePageNumbersInWeb?: any
    ): Word$TableOfContents;
    AddOld(
      Word$Range: Word$Range,
      UseHeadingStyles?: any,
      UpperHeadingLevel?: any,
      LowerHeadingLevel?: any,
      UseFields?: any,
      TableID?: any,
      RightAlignPageNumbers?: any,
      IncludePageNumbers?: any,
      AddedStyles?: any
    ): Word$TableOfContents;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Format: Word$WdTocFormat;
    Item(Word$Index: number): Word$TableOfContents;
    MarkEntry(
      Word$Range: Word$Range,
      Entry?: any,
      EntryAutoText?: any,
      TableID?: any,
      Level?: any
    ): Word$Field;
    Parent: any;
  }

  declare class Word$TablesOfFigures {
    constructor(): this;
    Add(
      Word$Range: Word$Range,
      Caption?: any,
      IncludeLabel?: any,
      UseHeadingStyles?: any,
      UpperHeadingLevel?: any,
      LowerHeadingLevel?: any,
      UseFields?: any,
      TableID?: any,
      RightAlignPageNumbers?: any,
      IncludePageNumbers?: any,
      AddedStyles?: any,
      UseHyperlinks?: any,
      HidePageNumbersInWeb?: any
    ): Word$TableOfFigures;
    AddOld(
      Word$Range: Word$Range,
      Caption?: any,
      IncludeLabel?: any,
      UseHeadingStyles?: any,
      UpperHeadingLevel?: any,
      LowerHeadingLevel?: any,
      UseFields?: any,
      TableID?: any,
      RightAlignPageNumbers?: any,
      IncludePageNumbers?: any,
      AddedStyles?: any
    ): Word$TableOfFigures;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Format: Word$WdTofFormat;
    Item(Word$Index: number): Word$TableOfFigures;
    MarkEntry(
      Word$Range: Word$Range,
      Entry?: any,
      EntryAutoText?: any,
      TableID?: any,
      Level?: any
    ): Word$Field;
    Parent: any;
  }

  declare class Word$TableStyle {
    constructor(): this;
    Alignment: Word$WdRowAlignment;
    AllowBreakAcrossPage: number;
    AllowPageBreaks: boolean;
    Word$Application: Word$Application;
    Word$Borders: Word$Borders;
    BottomPadding: number;
    ColumnStripe: number;
    Condition(ConditionCode: Word$WdConditionCode): Word$ConditionalStyle;
    Creator: number;
    LeftIndent: number;
    LeftPadding: number;
    Parent: any;
    RightPadding: number;
    RowStripe: number;
    Word$Shading: Word$Shading;
    Spacing: number;
    TableDirection: Word$WdTableDirection;
    TopPadding: number;
  }

  declare class Word$TabStop {
    constructor(): this;
    Alignment: Word$WdTabAlignment;
    Word$Application: Word$Application;
    Clear(): void;
    Creator: number;
    CustomTab: boolean;
    Leader: Word$WdTabLeader;
    Next: Word$TabStop;
    Parent: any;
    Position: number;
    Previous: Word$TabStop;
  }

  declare class Word$TabStops {
    constructor(): this;
    Add(Position: number, Alignment?: any, Leader?: any): Word$TabStop;
    After(Position: number): Word$TabStop;
    Word$Application: Word$Application;
    Before(Position: number): Word$TabStop;
    ClearAll(): void;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$TabStop;
    Parent: any;
  }

  declare class Word$Task {
    constructor(): this;
    Activate(Wait?: any): void;
    Word$Application: Word$Application;
    Close(): void;
    Creator: number;
    Height: number;
    Left: number;
    Move(Left: number, Top: number): void;
    Name: string;
    Parent: any;
    Resize(Width: number, Height: number): void;
    SendWindowMessage(Message: number, wParam: number, lParam: number): void;
    Top: number;
    Visible: boolean;
    Width: number;
    WindowState: Word$WdWindowState;
  }

  declare class Word$TaskPane {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Parent: any;
    Visible: boolean;
  }

  declare class Word$TaskPanes {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: Word$WdTaskPanes): Word$TaskPane;
    Parent: any;
  }

  declare class Word$Tasks {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Exists(Name: string): boolean;
    ExitWindows(): void;
    Item(Word$Index: any): Word$Task;
    Parent: any;
  }

  declare class Word$Template {
    constructor(): this;
    Word$Application: Word$Application;
    Word$AutoTextEntries: Word$AutoTextEntries;
    Word$BuildingBlockEntries: Word$BuildingBlockEntries;
    Word$BuildingBlockTypes: Word$BuildingBlockTypes;
    BuiltInDocumentProperties: Office.DocumentProperties<Word$Application>;
    Creator: number;
    CustomDocumentProperties: Office.DocumentProperties<Word$Application>;
    FarEastLineBreakLanguage: Word$WdFarEastLineBreakLanguageID;
    FarEastLineBreakLevel: Word$WdFarEastLineBreakLevel;
    FullName: string;
    JustificationMode: Word$WdJustificationMode;
    KerningByAlgorithm: boolean;
    LanguageID: Word$WdLanguageID;
    LanguageIDFarEast: Word$WdLanguageID;
    Word$ListTemplates: Word$ListTemplates;
    Name: string;
    NoLineBreakAfter: string;
    NoLineBreakBefore: string;
    NoProofing: number;
    OpenAsDocument(): Word$Document;
    Parent: any;
    Path: string;
    Save(): void;
    Saved: boolean;
    Type: Word$WdTemplateType;
    VBProject: VBIDE.VBProject;
  }

  declare class Word$Templates {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$Template;
    LoadBuildingBlocks(): void;
    Parent: any;
  }

  declare class Word$TextColumn {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Parent: any;
    SpaceAfter: number;
    Width: number;
  }

  declare class Word$TextColumns {
    constructor(): this;
    Add(Width?: any, Spacing?: any, EvenlySpaced?: any): Word$TextColumn;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    EvenlySpaced: number;
    FlowDirection: Word$WdFlowDirection;
    Item(Word$Index: number): Word$TextColumn;
    LineBetween: number;
    Parent: any;
    SetCount(NumColumns: number): void;
    Spacing: number;
    Width: number;
  }

  declare class Word$TextEffectFormat {
    constructor(): this;
    Alignment: Office.MsoTextEffectAlignment;
    Word$Application: Word$Application;
    Creator: number;
    FontBold: Office.MsoTriState;
    FontItalic: Office.MsoTriState;
    FontName: string;
    FontSize: number;
    KernedPairs: Office.MsoTriState;
    NormalizedHeight: Office.MsoTriState;
    Parent: any;
    PresetShape: Office.MsoPresetTextEffectShape;
    PresetTextEffect: Office.MsoPresetTextEffect;
    RotatedChars: Office.MsoTriState;
    Text: string;
    ToggleVerticalText(): void;
    Tracking: number;
  }

  declare class Word$TextFrame {
    constructor(): this;
    Word$Application: Word$Application;
    AutoSize: number;
    BreakForwardLink(): void;
    Word$Column: Office.TextColumn2;
    ContainingRange: Word$Range;
    Creator: number;
    DeleteText(): void;
    HasText: number;
    HorizontalAnchor: Office.MsoHorizontalAnchor;
    MarginBottom: number;
    MarginLeft: number;
    MarginRight: number;
    MarginTop: number;
    Next: Word$TextFrame;
    NoTextRotation: Office.MsoTriState;
    Orientation: Office.MsoTextOrientation;
    Overflowing: boolean;
    Parent: Word$Shape;
    PathFormat: Office.MsoPathFormat;
    Previous: Word$TextFrame;
    TextRange: Word$Range;
    ThreeD: Word$ThreeDFormat;
    ValidLinkTarget(TargetTextFrame: Word$TextFrame): boolean;
    VerticalAnchor: Office.MsoVerticalAnchor;
    WarpFormat: Office.MsoWarpFormat;
    WordWrap: number;
  }

  declare class Word$TextInput {
    constructor(): this;
    Word$Application: Word$Application;
    Clear(): void;
    Creator: number;
    Default: string;
    EditType(
      Type: Word$WdTextFormFieldType,
      Default?: any,
      Format?: any,
      Enabled?: any
    ): void;
    Format: string;
    Parent: any;
    Type: Word$WdTextFormFieldType;
    Valid: boolean;
    Width: number;
  }

  declare class Word$TextRetrievalMode {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Duplicate: Word$TextRetrievalMode;
    IncludeFieldCodes: boolean;
    IncludeHiddenText: boolean;
    Parent: any;
    ViewType: Word$WdViewType;
  }

  declare class Word$ThreeDFormat {
    constructor(): this;
    Word$Application: Word$Application;
    BevelBottomDepth: number;
    BevelBottomInset: number;
    BevelBottomType: Office.MsoBevelType;
    BevelTopDepth: number;
    BevelTopInset: number;
    BevelTopType: Office.MsoBevelType;
    ContourColor: Word$ColorFormat;
    ContourWidth: number;
    Creator: number;
    Depth: number;
    ExtrusionColor: Word$ColorFormat;
    ExtrusionColorType: Office.MsoExtrusionColorType;
    FieldOfView: number;
    IncrementRotationHorizontal(Increment: number): void;
    IncrementRotationVertical(Increment: number): void;
    IncrementRotationX(Increment: number): void;
    IncrementRotationY(Increment: number): void;
    IncrementRotationZ(Increment: number): void;
    LightAngle: number;
    Parent: any;
    Perspective: Office.MsoTriState;
    PresetCamera: Office.MsoPresetCamera;
    PresetExtrusionDirection: Office.MsoPresetExtrusionDirection;
    PresetLighting: Office.MsoLightRigType;
    PresetLightingDirection: Office.MsoPresetLightingDirection;
    PresetLightingSoftness: Office.MsoPresetLightingSoftness;
    PresetMaterial: Office.MsoPresetMaterial;
    PresetThreeDFormat: Office.MsoPresetThreeDFormat;
    ProjectText: Office.MsoTriState;
    ResetRotation(): void;
    RotationX: number;
    RotationY: number;
    RotationZ: number;
    SetExtrusionDirection(
      PresetExtrusionDirection: Office.MsoPresetExtrusionDirection
    ): void;
    SetPresetCamera(PresetCamera: Office.MsoPresetCamera): void;
    SetThreeDFormat(PresetThreeDFormat: Office.MsoPresetThreeDFormat): void;
    Visible: Office.MsoTriState;
    Z: number;
  }

  declare class Word$TickLabels {
    constructor(): this;
    Alignment: number;
    Word$Application: any;
    AutoScaleFont: any;
    Creator: number;
    Delete(): any;
    Depth: number;
    Word$Font: Word$ChartFont;
    Format: Word$ChartFormat;
    MultiLevel: boolean;
    Name: string;
    NumberFormat: string;
    NumberFormatLinked: boolean;
    NumberFormatLocal: any;
    Offset: number;
    Orientation: Word$XlTickLabelOrientation;
    Parent: any;
    ReadingOrder: number;
    Select(): any;
  }

  declare class Word$TwoInitialCapsException {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Word$Index: number;
    Name: string;
    Parent: any;
  }

  declare class Word$TwoInitialCapsExceptions {
    constructor(): this;
    Add(Name: string): Word$TwoInitialCapsException;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$TwoInitialCapsException;
    Parent: any;
  }

  declare class Word$UndoRecord {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    CustomRecordLevel: number;
    CustomRecordName: string;
    EndCustomRecord(): void;
    IsRecordingCustomRecord: boolean;
    Parent: any;

    /**
     * @param string [Name='']
     */
    StartCustomRecord(Name?: string): void;
  }

  declare class Word$UpBars {
    constructor(): this;
    Word$Application: any;
    Word$Border: Word$ChartBorder;
    Creator: number;
    Delete(): any;
    Fill: Word$ChartFillFormat;
    Format: Word$ChartFormat;
    Word$Interior: Word$Interior;
    Name: string;
    Parent: any;
    Select(): any;
  }

  declare class Word$Variable {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Word$Index: number;
    Name: string;
    Parent: any;
    Value: string;
  }

  declare class Word$Variables {
    constructor(): this;
    Add(Name: string, Value?: any): Word$Variable;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number | string): Word$Variable;
    Parent: any;
  }

  declare class Word$Version {
    constructor(): this;
    Word$Application: Word$Application;
    Word$Comment: string;
    Creator: number;
    Date: VarDate;
    Delete(): void;
    Word$Index: number;
    Open(): Word$Document;
    OpenOld(): void;
    Parent: any;
    SavedBy: string;
  }

  declare class Word$Versions {
    constructor(): this;
    Word$Application: Word$Application;
    AutoVersion: Word$WdAutoVersions;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$Version;
    Parent: any;
    Save(Word$Comment?: any): void;
  }

  declare class Word$View {
    constructor(): this;
    Word$Application: Word$Application;
    BrowseToWindow: number;
    CollapseOutline(Word$Range?: any): void;
    ConflictMode: boolean;
    Creator: number;
    DisplayBackgrounds: boolean;
    DisplayPageBoundaries: boolean;
    DisplaySmartTags: boolean;
    Draft: boolean;
    EnlargeFontsLessThan: number;
    ExpandOutline(Word$Range?: any): void;
    FieldShading: Word$WdFieldShading;
    FullScreen: boolean;
    Magnifier: boolean;
    MailMergeDataView: boolean;
    MarkupMode: Word$WdRevisionsMode;
    NextHeaderFooter(): void;
    Panning: boolean;
    Parent: any;
    PreviousHeaderFooter(): void;
    ReadingLayout: boolean;
    ReadingLayoutActualView: boolean;
    ReadingLayoutAllowEditing: boolean;
    ReadingLayoutAllowMultiplePages: boolean;
    ReadingLayoutTruncateMargins: Word$WdReadingLayoutMargin;
    Word$Reviewers: Word$Reviewers;
    RevisionsBalloonShowConnectingLines: boolean;
    RevisionsBalloonSide: Word$WdRevisionsBalloonMargin;
    RevisionsBalloonWidth: number;
    RevisionsBalloonWidthType: Word$WdRevisionsBalloonWidthType;
    RevisionsMode: Word$WdRevisionsMode;
    RevisionsView: Word$WdRevisionsView;
    SeekView: Word$WdSeekView;
    ShadeEditableRanges: number;
    ShowAll: boolean;
    ShowAllHeadings(): void;
    ShowAnimation: boolean;
    ShowBookmarks: boolean;
    ShowComments: boolean;
    ShowCropMarks: boolean;
    ShowDrawings: boolean;
    ShowFieldCodes: boolean;
    ShowFirstLineOnly: boolean;
    ShowFormat: boolean;
    ShowFormatChanges: boolean;
    ShowHeading(Level: number): void;
    ShowHiddenText: boolean;
    ShowHighlight: boolean;
    ShowHyphens: boolean;
    ShowInkAnnotations: boolean;
    ShowInsertionsAndDeletions: boolean;
    ShowMainTextLayer: boolean;
    ShowMarkupAreaHighlight: boolean;
    ShowObjectAnchors: boolean;
    ShowOptionalBreaks: boolean;
    ShowOtherAuthors: boolean;
    ShowParagraphs: boolean;
    ShowPicturePlaceHolders: boolean;
    ShowRevisionsAndComments: boolean;
    ShowSpaces: boolean;
    ShowTabs: boolean;
    ShowTextBoundaries: boolean;
    ShowXMLMarkup: number;
    SplitSpecial: Word$WdSpecialPane;
    TableGridlines: boolean;
    Type: Word$WdViewType;
    WrapToWindow: boolean;
    Word$Zoom: Word$Zoom;
  }

  declare class Word$Walls {
    constructor(): this;
    Word$Application: any;
    Word$Border: Word$ChartBorder;
    ClearFormats(): any;
    Creator: number;
    Fill: Word$ChartFillFormat;
    Format: Word$ChartFormat;
    Word$Interior: Word$Interior;
    Name: string;
    Parent: any;
    Paste(): void;
    PictureType: any;
    PictureUnit: any;
    Select(): any;
    Thickness: number;
  }

  declare class Word$WebOptions {
    constructor(): this;
    AllowPNG: boolean;
    Word$Application: Word$Application;
    BrowserLevel: Word$WdBrowserLevel;
    Creator: number;
    Encoding: Office.MsoEncoding;
    FolderSuffix: string;
    OptimizeForBrowser: boolean;
    OrganizeInFolder: boolean;
    Parent: any;
    PixelsPerInch: number;
    RelyOnCSS: boolean;
    RelyOnVML: boolean;
    ScreenSize: Office.MsoScreenSize;
    TargetBrowser: Office.MsoTargetBrowser;
    UseDefaultFolderSuffix(): void;
    UseLongFileNames: boolean;
  }

  declare class Word$Window {
    constructor(): this;
    Activate(): void;
    Active: boolean;
    ActivePane: Word$Pane;
    Word$Application: Word$Application;
    Caption: string;
    Close(SaveChanges?: any, RouteDocument?: any): void;
    Creator: number;
    DisplayHorizontalScrollBar: boolean;
    DisplayLeftScrollBar: boolean;
    DisplayRightRuler: boolean;
    DisplayRulers: boolean;
    DisplayScreenTips: boolean;
    DisplayVerticalRuler: boolean;
    DisplayVerticalScrollBar: boolean;
    Word$Document: Word$Document;
    DocumentMap: boolean;
    DocumentMapPercentWidth: number;
    EnvelopeVisible: boolean;
    GetPoint(
      ScreenPixelsLeft: number,
      ScreenPixelsTop: number,
      ScreenPixelsWidth: number,
      ScreenPixelsHeight: number,
      obj: any
    ): void;
    Height: number;
    HorizontalPercentScrolled: number;
    IMEMode: Word$WdIMEMode;
    Word$Index: number;
    LargeScroll(Down?: any, Up?: any, ToRight?: any, ToLeft?: any): void;
    Left: number;
    NewWindow(): Word$Window;
    Next: Word$Window;
    PageScroll(Down?: any, Up?: any): void;
    Word$Panes: Word$Panes;
    Parent: any;
    Previous: Word$Window;
    PrintOut(
      Background?: any,
      Append?: any,
      Word$Range?: any,
      OutputFileName?: any,
      From?: any,
      To?: any,
      Item?: any,
      Copies?: any,
      Word$Pages?: any,
      PageType?: any,
      PrintToFile?: any,
      Collate?: any,
      ActivePrinterMacGX?: any,
      ManualDuplexPrint?: any,
      PrintZoomColumn?: any,
      PrintZoomRow?: any,
      PrintZoomPaperWidth?: any,
      PrintZoomPaperHeight?: any
    ): void;
    PrintOut2000(
      Background?: any,
      Append?: any,
      Word$Range?: any,
      OutputFileName?: any,
      From?: any,
      To?: any,
      Item?: any,
      Copies?: any,
      Word$Pages?: any,
      PageType?: any,
      PrintToFile?: any,
      Collate?: any,
      ActivePrinterMacGX?: any,
      ManualDuplexPrint?: any,
      PrintZoomColumn?: any,
      PrintZoomRow?: any,
      PrintZoomPaperWidth?: any,
      PrintZoomPaperHeight?: any
    ): void;
    PrintOutOld(
      Background?: any,
      Append?: any,
      Word$Range?: any,
      OutputFileName?: any,
      From?: any,
      To?: any,
      Item?: any,
      Copies?: any,
      Word$Pages?: any,
      PageType?: any,
      PrintToFile?: any,
      Collate?: any,
      ActivePrinterMacGX?: any,
      ManualDuplexPrint?: any
    ): void;
    RangeFromPoint(x: number, y: number): any;
    ScrollIntoView(obj: any, Start?: any): void;
    Word$Selection: Word$Selection;
    SetFocus(): void;
    ShowSourceDocuments: Word$WdShowSourceDocuments;
    SmallScroll(Down?: any, Up?: any, ToRight?: any, ToLeft?: any): void;
    Split: boolean;
    SplitVertical: number;
    StyleAreaWidth: number;
    Thumbnails: boolean;
    ToggleRibbon(): void;
    ToggleShowAllReviewers(): void;
    Top: number;
    Type: Word$WdWindowType;
    UsableHeight: number;
    UsableWidth: number;
    VerticalPercentScrolled: number;
    Word$View: Word$View;
    Visible: boolean;
    Width: number;
    WindowNumber: number;
    WindowState: Word$WdWindowState;
  }

  declare class Word$Windows {
    constructor(): this;
    Add(Word$Window?: any): Word$Window;
    Word$Application: Word$Application;
    Arrange(ArrangeStyle?: any): void;
    BreakSideBySide(): boolean;
    CompareSideBySideWith(Word$Document: any): boolean;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$Window;
    Parent: any;
    ResetPositionsSideBySide(): void;
    SyncScrollingSideBySide: boolean;
  }

  declare class Word$Words {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    First: Word$Range;
    Item(Word$Index: number): Word$Range;
    Last: Word$Range;
    Parent: any;
  }

  declare class Word$WrapFormat {
    constructor(): this;
    AllowOverlap: number;
    Word$Application: Word$Application;
    Creator: number;
    DistanceBottom: number;
    DistanceLeft: number;
    DistanceRight: number;
    DistanceTop: number;
    Parent: any;
    Side: Word$WdWrapSideType;
    Type: Word$WdWrapType;
  }

  declare class Word$XMLChildNodeSuggestion {
    constructor(): this;
    Word$Application: Word$Application;
    BaseName: string;
    Creator: number;
    Insert(Word$Range?: any): Word$XMLNode;
    NamespaceURI: string;
    Parent: any;
    Word$XMLSchemaReference: Word$XMLSchemaReference;
  }

  declare class Word$XMLChildNodeSuggestions {
    constructor(): this;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$XMLChildNodeSuggestion;
    Parent: any;
  }

  declare class Word$XMLMapping {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    CustomXMLNode: Office.CustomXMLNode;
    CustomXMLPart: Office.CustomXMLPart;
    Delete(): void;
    IsMapped: boolean;
    Parent: any;
    PrefixMappings: string;

    /**
     * @param string [PrefixMapping='']
     * @param [Source=0]
     */
    SetMapping(
      XPath: string,
      PrefixMapping?: string,
      Word$Source?: Office.CustomXMLPart
    ): boolean;
    SetMappingByNode(Node: Office.CustomXMLNode): boolean;
    XPath: string;
  }

  declare class Word$XMLNamespace {
    constructor(): this;

    /**
     * @param boolean [AllUsers=false]
     */
    Alias(AllUsers?: boolean): string;
    Word$Application: Word$Application;
    AttachToDocument(Word$Document: any): void;
    Creator: number;

    /**
     * @param boolean [AllUsers=false]
     */
    DefaultTransform(AllUsers?: boolean): Word$XSLTransform;
    Delete(): void;

    /**
     * @param boolean [AllUsers=false]
     */
    Location(AllUsers?: boolean): string;
    Parent: any;
    URI: string;
    Word$XSLTransforms: Word$XSLTransforms;
  }

  declare class Word$XMLNamespaces {
    constructor(): this;

    /**
     * @param boolean [InstallForAllUsers=false]
     */
    Add(
      Path: string,
      NamespaceURI: any,
      Alias: any,
      InstallForAllUsers?: boolean
    ): Word$XMLNamespace;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;

    /**
     * @param boolean [InstallForAllUsers=false]
     */
    InstallManifest(Path: string, InstallForAllUsers?: boolean): void;
    Item(Word$Index: any): Word$XMLNamespace;
    Parent: any;
  }

  declare class Word$XMLNode {
    constructor(): this;
    Word$Application: Word$Application;
    Attributes: Word$XMLNodes;
    BaseName: string;
    ChildNodes: Word$XMLNodes;
    ChildNodeSuggestions: Word$XMLChildNodeSuggestions;
    Copy(): void;
    Creator: number;
    Cut(): void;
    Delete(): void;
    FirstChild: Word$XMLNode;
    HasChildNodes: boolean;
    LastChild: Word$XMLNode;
    Level: Word$WdXMLNodeLevel;
    NamespaceURI: string;
    NextSibling: Word$XMLNode;
    NodeType: Word$WdXMLNodeType;
    NodeValue: string;
    OwnerDocument: Word$Document;
    Parent: any;
    ParentNode: Word$XMLNode;
    PlaceholderText: string;
    PreviousSibling: Word$XMLNode;
    Word$Range: Word$Range;
    RemoveChild(ChildElement: Word$XMLNode): void;

    /**
     * @param string [PrefixMapping='']
     * @param boolean [FastSearchSkippingTextNodes=true]
     */
    SelectNodes(
      XPath: string,
      PrefixMapping?: string,
      FastSearchSkippingTextNodes?: boolean
    ): Word$XMLNodes;

    /**
     * @param string [PrefixMapping='']
     * @param boolean [FastSearchSkippingTextNodes=true]
     */
    SelectSingleNode(
      XPath: string,
      PrefixMapping?: string,
      FastSearchSkippingTextNodes?: boolean
    ): Word$XMLNode;

    /**
     * @param boolean [ClearedAutomatically=true]
     */
    SetValidationError(
      Status: Word$WdXMLValidationStatus,
      ErrorText: any,
      ClearedAutomatically?: boolean
    ): void;
    Word$SmartTag: Word$SmartTag;
    Text: string;
    Validate(): void;

    /**
     * @param boolean [Advanced=false]
     */
    ValidationErrorText(Advanced?: boolean): string;
    ValidationStatus: Word$WdXMLValidationStatus;
    WordOpenXML: string;

    /**
     * @param boolean [DataOnly=false]
     */
    XML(DataOnly?: boolean): string;
  }

  declare class Word$XMLNodes {
    constructor(): this;
    Add(Name: string, Namespace: string, Word$Range?: any): Word$XMLNode;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: number): Word$XMLNode;
    Parent: any;
  }

  declare class Word$XMLSchemaReference {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    Location: string;
    NamespaceURI: string;
    Parent: any;
    Reload(): void;
  }

  declare class Word$XMLSchemaReferences {
    constructor(): this;

    /**
     * @param boolean [InstallForAllUsers=false]
     */
    Add(
      NamespaceURI: any,
      Alias: any,
      FileName: any,
      InstallForAllUsers?: boolean
    ): Word$XMLSchemaReference;
    AllowSaveAsXMLWithoutValidation: boolean;
    Word$Application: Word$Application;
    AutomaticValidation: boolean;
    Count: number;
    Creator: number;
    HideValidationErrors: boolean;
    IgnoreMixedContent: boolean;
    Item(Word$Index: any): Word$XMLSchemaReference;
    Parent: any;
    ShowPlaceholderText: boolean;
    Validate(): void;
  }

  declare class Word$XSLTransform {
    constructor(): this;

    /**
     * @param boolean [AllUsers=false]
     */
    Alias(AllUsers?: boolean): string;
    Word$Application: Word$Application;
    Creator: number;
    Delete(): void;
    ID: string;

    /**
     * @param boolean [AllUsers=false]
     */
    Location(AllUsers?: boolean): string;
    Parent: any;
  }

  declare class Word$XSLTransforms {
    constructor(): this;

    /**
     * @param boolean [InstallForAllUsers=false]
     */
    Add(
      Location: string,
      Alias: any,
      InstallForAllUsers?: boolean
    ): Word$XSLTransform;
    Word$Application: Word$Application;
    Count: number;
    Creator: number;
    Item(Word$Index: any): Word$XSLTransform;
    Parent: any;
  }

  declare class Word$Zoom {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    PageColumns: number;
    PageFit: Word$WdPageFit;
    PageRows: number;
    Parent: any;
    Percentage: number;
  }

  declare class Word$Zooms {
    constructor(): this;
    Word$Application: Word$Application;
    Creator: number;
    Item(Word$Index: Word$WdViewType): Word$Zoom;
    Parent: any;
  }

  declare type EventHelperTypes$Application_EPostageInsertEx_ArgNames = [
    "Doc",
    "cpDeliveryAddrStart",
    "cpDeliveryAddrEnd",
    "cpReturnAddrStart",
    "cpReturnAddrEnd",
    "xaWidth",
    "yaHeight",
    "bstrPrinterName",
    "bstrPaperFeed",
    "fPrint",
    "fCancel"
  ];

  declare type EventHelperTypes$Application_Invoke_ArgNames = [
    "dispidMember",
    "riid",
    "lcid",
    "wFlags",
    "pdispparams",
    "pvarResult",
    "pexcepinfo",
    "puArgErr"
  ];

  declare interface EventHelperTypes$Application_EPostageInsertEx_Parameter {
    +bstrPaperFeed: string;
    +bstrPrinterName: string;
    +cpDeliveryAddrEnd: number;
    +cpDeliveryAddrStart: number;
    +cpReturnAddrEnd: number;
    +cpReturnAddrStart: number;
    +Doc: Word$Document;
    fCancel: boolean;
    +fPrint: boolean;
    +xaWidth: number;
    +yaHeight: number;
  }

  declare interface EventHelperTypes$Application_Invoke_Parameter {
    +dispidMember: number;
    +lcid: number;
    +pdispparams: stdole.DISPPARAMS;
    pexcepinfo: stdole.EXCEPINFO;
    puArgErr: number;
    pvarResult: any;
    +riid: stdole.GUID;
    +wFlags: number;
  }
  declare interface ActiveXObject {
    on(
      obj: Word$Word$Application,
      event:
        | "DocumentBeforeClose"
        | "DocumentBeforePrint"
        | "MailMergeBeforeRecordMerge",
      argNames: ["Doc", "Cancel"],
      handler: (parameter: {
        +Doc: Word$Word$Document,
        Cancel: boolean
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "DocumentBeforeSave",
      argNames: ["Doc", "SaveAsUI", "Cancel"],
      handler: (parameter: {
        +Doc: Word$Word$Document,
        +SaveAsUI: boolean,
        Cancel: boolean
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event:
        | "DocumentOpen"
        | "EPostageInsert"
        | "EPostagePropertyDialog"
        | "MailMergeAfterRecordMerge"
        | "MailMergeDataSourceLoad"
        | "MailMergeWizardSendToCustom"
        | "NewDocument",
      argNames: ["Doc"],
      handler: (parameter: {
        +Doc: Word$Word$Document
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "DocumentSync",
      argNames: ["Doc", "SyncEventType"],
      handler: (parameter: {
        +Doc: Word$Word$Document,
        +SyncEventType: Office.MsoSyncEventType
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "EPostageInsertEx",
      argNames: Word$EventHelperTypes.EventHelperTypes$Application_EPostageInsertEx_ArgNames,
      handler: (
        parameter: Word$EventHelperTypes.EventHelperTypes$Application_EPostageInsertEx_Parameter
      ) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "GetIDsOfNames",
      argNames: ["riid", "rgszNames", "cNames", "lcid", "rgdispid"],
      handler: (parameter: {
        +riid: stdole.GUID,
        +rgszNames: number,
        +cNames: number,
        +lcid: number,
        rgdispid: number
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "GetTypeInfo",
      argNames: ["itinfo", "lcid", "pptinfo"],
      handler: (parameter: {
        +itinfo: number,
        +lcid: number,
        pptinfo: void
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "GetTypeInfoCount",
      argNames: ["pctinfo"],
      handler: (parameter: {
        pctinfo: number
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "Invoke",
      argNames: Word$EventHelperTypes.EventHelperTypes$Application_Invoke_ArgNames,
      handler: (
        parameter: Word$EventHelperTypes.EventHelperTypes$Application_Invoke_Parameter
      ) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "MailMergeAfterMerge",
      argNames: ["Doc", "DocResult"],
      handler: (parameter: {
        +Doc: Word$Word$Document,
        +DocResult: Word$Word$Document
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "MailMergeBeforeMerge",
      argNames: ["Doc", "StartRecord", "EndRecord", "Cancel"],
      handler: (parameter: {
        +Doc: Word$Word$Document,
        +StartRecord: number,
        +EndRecord: number,
        Cancel: boolean
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "MailMergeDataSourceValidate",
      argNames: ["Doc", "Handled"],
      handler: (parameter: {
        +Doc: Word$Word$Document,
        +Handled: boolean
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "MailMergeDataSourceValidate2",
      argNames: ["Doc", "Handled"],
      handler: (parameter: {
        +Doc: Word$Word$Document,
        Handled: boolean
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "MailMergeWizardStateChange",
      argNames: ["Doc", "FromState", "ToState", "Handled"],
      handler: (parameter: {
        +Doc: Word$Word$Document,
        +FromState: number,
        +ToState: number,
        +Handled: boolean
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event:
        | "ProtectedViewWindowActivate"
        | "ProtectedViewWindowDeactivate"
        | "ProtectedViewWindowOpen"
        | "ProtectedViewWindowSize",
      argNames: ["PvWindow"],
      handler: (parameter: {
        +PvWindow: Word$Word$ProtectedViewWindow
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "ProtectedViewWindowBeforeClose",
      argNames: ["PvWindow", "CloseReason", "Cancel"],
      handler: (parameter: {
        +PvWindow: Word$Word$ProtectedViewWindow,
        +CloseReason: number,
        Cancel: boolean
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "ProtectedViewWindowBeforeEdit",
      argNames: ["PvWindow", "Cancel"],
      handler: (parameter: {
        +PvWindow: Word$Word$ProtectedViewWindow,
        Cancel: boolean
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "QueryInterface",
      argNames: ["riid", "ppvObj"],
      handler: (parameter: {
        +riid: stdole.GUID,
        ppvObj: void
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "WindowActivate" | "WindowDeactivate" | "WindowSize",
      argNames: ["Doc", "Wn"],
      handler: (parameter: {
        +Doc: Word$Word$Document,
        +Wn: Word$Word$Window
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "WindowBeforeDoubleClick" | "WindowBeforeRightClick",
      argNames: ["Sel", "Cancel"],
      handler: (parameter: {
        +Sel: Word$Word$Selection,
        Cancel: boolean
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "WindowSelectionChange",
      argNames: ["Sel"],
      handler: (parameter: {
        +Sel: Word$Word$Selection
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "XMLSelectionChange",
      argNames: ["Sel", "OldXMLNode", "NewXMLNode", "Reason"],
      handler: (parameter: {
        +Sel: Word$Word$Selection,
        +OldXMLNode: Word$Word$XMLNode,
        +NewXMLNode: Word$Word$XMLNode,
        +Reason: number
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "XMLValidationError",
      argNames: ["XMLNode"],
      handler: (parameter: {
        +Word$XMLNode: Word$Word$XMLNode
      }) => void
    ): void;
    on(
      obj: Word$Word$Document,
      event: "BuildingBlockInsert",
      argNames: ["Range", "Name", "Category", "BlockType", "Template"],
      handler: (parameter: {
        +Word$Range: Word$Word$Range,
        +Name: string,
        +Word$Category: string,
        +BlockType: string,
        +Word$Template: string
      }) => void
    ): void;
    on(
      obj: Word$Word$Document,
      event: "ContentControlAfterAdd",
      argNames: ["NewContentControl", "InUndoRedo"],
      handler: (parameter: {
        +NewContentControl: Word$Word$ContentControl,
        +InUndoRedo: boolean
      }) => void
    ): void;
    on(
      obj: Word$Word$Document,
      event:
        | "ContentControlBeforeContentUpdate"
        | "ContentControlBeforeStoreUpdate",
      argNames: ["ContentControl", "Content"],
      handler: (parameter: {
        +Word$ContentControl: Word$Word$ContentControl,
        Content: string
      }) => void
    ): void;
    on(
      obj: Word$Word$Document,
      event: "ContentControlBeforeDelete",
      argNames: ["OldContentControl", "InUndoRedo"],
      handler: (parameter: {
        +OldContentControl: Word$Word$ContentControl,
        +InUndoRedo: boolean
      }) => void
    ): void;
    on(
      obj: Word$Word$Document,
      event: "ContentControlOnEnter",
      argNames: ["ContentControl"],
      handler: (parameter: {
        +Word$ContentControl: Word$Word$ContentControl
      }) => void
    ): void;
    on(
      obj: Word$Word$Document,
      event: "ContentControlOnExit",
      argNames: ["ContentControl", "Cancel"],
      handler: (parameter: {
        +Word$ContentControl: Word$Word$ContentControl,
        Cancel: boolean
      }) => void
    ): void;
    on(
      obj: Word$Word$Document,
      event: "Sync",
      argNames: ["SyncEventType"],
      handler: (parameter: {
        +SyncEventType: Office.MsoSyncEventType
      }) => void
    ): void;
    on(
      obj: Word$Word$Document,
      event: "XMLAfterInsert",
      argNames: ["NewXMLNode", "InUndoRedo"],
      handler: (parameter: {
        +NewXMLNode: Word$Word$XMLNode,
        +InUndoRedo: boolean
      }) => void
    ): void;
    on(
      obj: Word$Word$Document,
      event: "XMLBeforeDelete",
      argNames: ["DeletedRange", "OldXMLNode", "InUndoRedo"],
      handler: (parameter: {
        +DeletedRange: Word$Word$Range,
        +OldXMLNode: Word$Word$XMLNode,
        +InUndoRedo: boolean
      }) => void
    ): void;
    on(
      obj: Word$Word$Application,
      event: "AddRef" | "DocumentChange" | "Quit" | "Release" | "Startup",
      handler: (parameter: {}) => void
    ): void;
    on(
      obj: Word$Word$Document,
      event: "Close" | "New" | "Open",
      handler: (parameter: {}) => void
    ): void;
    on(
      obj: Word$Word$OLEControl,
      event: "GotFocus" | "LostFocus",
      handler: (parameter: {}) => void
    ): void;
    set(
      obj: Word$Word$Document,
      propertyName: "ActiveWritingStyle",
      parameterTypes: [any],
      newValue: string
    ): void;
    set(
      obj: Word$Word$Document,
      propertyName: "Compatibility",
      parameterTypes: [Word$Word$WdCompatibility],
      newValue: boolean
    ): void;
    set(
      obj: Word$Word$System,
      propertyName: "PrivateProfileString",
      parameterTypes: [string, string, string],
      newValue: string
    ): void;
  }
  declare interface ActiveXObjectNameMap {
    "Word.Application": Word$Word$Application;
    "Word.Document": Word$Word$Document;
  }
  declare interface EnumeratorConstructor {
    new(col: Word$Word$AddIns): Enumerator<Word$Word$AddIn>;
    new(col: Word$Word$AutoCaptions): Enumerator<Word$Word$AutoCaption>;
    new(
      col: Word$Word$AutoCorrectEntries
    ): Enumerator<Word$Word$AutoCorrectEntry>;
    new(col: Word$Word$AutoTextEntries): Enumerator<Word$Word$AutoTextEntry>;
    new(col: Word$Word$Bookmarks): Enumerator<Word$Word$Bookmark>;
    new(col: Word$Word$Borders): Enumerator<Word$Word$Border>;
    new(col: Word$Word$Breaks): Enumerator<Word$Word$Break>;
    new(
      col:
        | Word$Word$CanvasShapes
        | Word$Word$GroupShapes
        | Word$Word$ShapeRange
        | Word$Word$Shapes
    ): Enumerator<Word$Word$Shape>;
    new(col: Word$Word$CaptionLabels): Enumerator<Word$Word$CaptionLabel>;
    new(col: Word$Word$Cells): Enumerator<Word$Word$Cell>;
    new(
      col:
        | Word$Word$Characters
        | Word$Word$ProofreadingErrors
        | Word$Word$Sentences
        | Word$Word$StoryRanges
        | Word$Word$Words
    ): Enumerator<Word$Word$Range>;
    new(col: Word$Word$CoAuthLocks): Enumerator<Word$Word$CoAuthLock>;
    new(col: Word$Word$CoAuthors): Enumerator<Word$Word$CoAuthor>;
    new(col: Word$Word$CoAuthUpdates): Enumerator<Word$Word$CoAuthUpdate>;
    new(col: Word$Word$Columns): Enumerator<Word$Word$Column>;
    new(col: Word$Word$Comments): Enumerator<Word$Word$Comment>;
    new(col: Word$Word$Conflicts): Enumerator<Word$Word$Conflict>;
    new(
      col: Word$Word$ContentControlListEntries
    ): Enumerator<Word$Word$ContentControlListEntry>;
    new(col: Word$Word$ContentControls): Enumerator<Word$Word$ContentControl>;
    new(col: Word$Word$CustomLabels): Enumerator<Word$Word$CustomLabel>;
    new(col: Word$Word$CustomProperties): Enumerator<Word$Word$CustomProperty>;
    new(
      col: Word$Word$DiagramNodeChildren | Word$Word$DiagramNodes
    ): Enumerator<Word$Word$DiagramNode>;
    new(col: Word$Word$Dialogs): Enumerator<Word$Word$Dialog>;
    new(
      col: Word$Word$Dictionaries | Word$Word$HangulHanjaConversionDictionaries
    ): Enumerator<Word$Word$Dictionary>;
    new(col: Word$Word$Documents): Enumerator<Word$Word$Document>;
    new(
      col: Word$Word$EmailSignatureEntries
    ): Enumerator<Word$Word$EmailSignatureEntry>;
    new(col: Word$Word$Endnotes): Enumerator<Word$Word$Endnote>;
    new(col: Word$Word$Fields): Enumerator<Word$Word$Field>;
    new(col: Word$Word$FileConverters): Enumerator<Word$Word$FileConverter>;
    new(
      col: Word$Word$FirstLetterExceptions
    ): Enumerator<Word$Word$FirstLetterException>;
    new(col: Word$Word$FontNames): Enumerator<string>;
    new(col: Word$Word$Footnotes): Enumerator<Word$Word$Footnote>;
    new(col: Word$Word$FormFields): Enumerator<Word$Word$FormField>;
    new(col: Word$Word$Frames): Enumerator<Word$Word$Frame>;
    new(
      col: Word$Word$HangulAndAlphabetExceptions
    ): Enumerator<Word$Word$HangulAndAlphabetException>;
    new(col: Word$Word$HeadersFooters): Enumerator<Word$Word$HeaderFooter>;
    new(col: Word$Word$HeadingStyles): Enumerator<Word$Word$HeadingStyle>;
    new(col: Word$Word$HTMLDivisions): Enumerator<Word$Word$HTMLDivision>;
    new(col: Word$Word$Hyperlinks): Enumerator<Word$Word$Hyperlink>;
    new(col: Word$Word$Indexes): Enumerator<Word$Word$Index>;
    new(col: Word$Word$InlineShapes): Enumerator<Word$Word$InlineShape>;
    new(
      col: Word$Word$KeyBindings | Word$Word$KeysBoundTo
    ): Enumerator<Word$Word$KeyBinding>;
    new(col: Word$Word$Languages): Enumerator<Word$Word$Language>;
    new(col: Word$Word$Lines): Enumerator<Word$Word$Line>;
    new(col: Word$Word$ListEntries): Enumerator<Word$Word$ListEntry>;
    new(col: Word$Word$ListGalleries): Enumerator<Word$Word$ListGallery>;
    new(col: Word$Word$ListLevels): Enumerator<Word$Word$ListLevel>;
    new(
      col: Word$Word$ListParagraphs | Word$Word$Paragraphs
    ): Enumerator<Word$Word$Paragraph>;
    new(col: Word$Word$Lists): Enumerator<Word$Word$List>;
    new(col: Word$Word$ListTemplates): Enumerator<Word$Word$ListTemplate>;
    new(
      col: Word$Word$MailMergeDataFields
    ): Enumerator<Word$Word$MailMergeDataField>;
    new(
      col: Word$Word$MailMergeFieldNames
    ): Enumerator<Word$Word$MailMergeFieldName>;
    new(col: Word$Word$MailMergeFields): Enumerator<Word$Word$MailMergeField>;
    new(col: Word$Word$MappedDataFields): Enumerator<Word$Word$MappedDataField>;
    new(
      col: Word$Word$OMathAutoCorrectEntries
    ): Enumerator<Word$Word$OMathAutoCorrectEntry>;
    new(col: Word$Word$OMathFunctions): Enumerator<Word$Word$OMathFunction>;
    new(col: Word$Word$OMathMatCols): Enumerator<Word$Word$OMathMatCol>;
    new(col: Word$Word$OMathMatRows): Enumerator<Word$Word$OMathMatRow>;
    new(
      col: Word$Word$OMathRecognizedFunctions
    ): Enumerator<Word$Word$OMathRecognizedFunction>;
    new(col: Word$Word$OMaths): Enumerator<Word$Word$OMath>;
    new(
      col: Word$Word$OtherCorrectionsExceptions
    ): Enumerator<Word$Word$OtherCorrectionsException>;
    new(col: Word$Word$PageNumbers): Enumerator<Word$Word$PageNumber>;
    new(col: Word$Word$Pages): Enumerator<Word$Word$Page>;
    new(col: Word$Word$Panes): Enumerator<Word$Word$Pane>;
    new(
      col: Word$Word$ProtectedViewWindows
    ): Enumerator<Word$Word$ProtectedViewWindow>;
    new(
      col: Word$Word$ReadabilityStatistics
    ): Enumerator<Word$Word$ReadabilityStatistic>;
    new(col: Word$Word$RecentFiles): Enumerator<Word$Word$RecentFile>;
    new(col: Word$Word$Rectangles): Enumerator<Word$Word$Rectangle>;
    new(col: Word$Word$Reviewers): Enumerator<Word$Word$Reviewer>;
    new(col: Word$Word$Revisions): Enumerator<Word$Word$Revision>;
    new(col: Word$Word$Rows): Enumerator<Word$Word$Row>;
    new(col: Word$Word$Sections): Enumerator<Word$Word$Section>;
    new(col: Word$Word$ShapeNodes): Enumerator<Word$Word$ShapeNode>;
    new(col: Word$Word$SmartTagActions): Enumerator<Word$Word$SmartTagAction>;
    new(
      col: Word$Word$SmartTagRecognizers
    ): Enumerator<Word$Word$SmartTagRecognizer>;
    new(col: Word$Word$SmartTags): Enumerator<Word$Word$SmartTag>;
    new(col: Word$Word$SmartTagTypes): Enumerator<Word$Word$SmartTagType>;
    new(col: Word$Word$Sources): Enumerator<Word$Word$Source>;
    new(
      col: Word$Word$SpellingSuggestions
    ): Enumerator<Word$Word$SpellingSuggestion>;
    new(col: Word$Word$Styles): Enumerator<Word$Word$Style>;
    new(col: Word$Word$StyleSheets): Enumerator<Word$Word$StyleSheet>;
    new(col: Word$Word$Subdocuments): Enumerator<Word$Word$Subdocument>;
    new(col: Word$Word$Tables): Enumerator<Word$Word$Table>;
    new(
      col: Word$Word$TablesOfAuthorities
    ): Enumerator<Word$Word$TableOfAuthorities>;
    new(
      col: Word$Word$TablesOfAuthoritiesCategories
    ): Enumerator<Word$Word$TableOfAuthoritiesCategory>;
    new(col: Word$Word$TablesOfContents): Enumerator<Word$Word$TableOfContents>;
    new(col: Word$Word$TablesOfFigures): Enumerator<Word$Word$TableOfFigures>;
    new(col: Word$Word$TabStops): Enumerator<Word$Word$TabStop>;
    new(col: Word$Word$TaskPanes): Enumerator<Word$Word$TaskPane>;
    new(col: Word$Word$Tasks): Enumerator<Word$Word$Task>;
    new(col: Word$Word$Templates): Enumerator<Word$Word$Template>;
    new(col: Word$Word$TextColumns): Enumerator<Word$Word$TextColumn>;
    new(
      col: Word$Word$TwoInitialCapsExceptions
    ): Enumerator<Word$Word$TwoInitialCapsException>;
    new(col: Word$Word$Variables): Enumerator<Word$Word$Variable>;
    new(col: Word$Word$Versions): Enumerator<Word$Word$Version>;
    new(col: Word$Word$Windows): Enumerator<Word$Word$Window>;
    new(
      col: Word$Word$XMLChildNodeSuggestions
    ): Enumerator<Word$Word$XMLChildNodeSuggestion>;
    new(col: Word$Word$XMLNamespaces): Enumerator<Word$Word$XMLNamespace>;
    new(col: Word$Word$XMLNodes): Enumerator<Word$Word$XMLNode>;
    new(
      col: Word$Word$XMLSchemaReferences
    ): Enumerator<Word$Word$XMLSchemaReference>;
    new(col: Word$Word$XSLTransforms): Enumerator<Word$Word$XSLTransform>;
  }
  declare interface SafeArray<T = any> {
    _brand: SafeArray<T>;
  }
}
